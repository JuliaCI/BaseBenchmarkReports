cset: moving following pidspec: 6732
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.363223081 seconds)
loading group "string"... done (took 0.578612765 seconds)
loading group "linalg"... done (took 7.632511712 seconds)
loading group "parallel"... done (took 0.156173983 seconds)
loading group "find"... done (took 1.215372561 seconds)
loading group "tuple"... done (took 1.798949445 seconds)
loading group "dates"... done (took 1.259269115 seconds)
loading group "micro"... done (took 0.216921761 seconds)
loading group "io"... done (took 0.918463087 seconds)
loading group "scalar"... done (took 37.940054974 seconds)
loading group "sparse"... done (took 12.004133971 seconds)
loading group "broadcast"... done (took 0.942085674 seconds)
loading group "union"... done (took 13.0840668 seconds)
loading group "simd"... done (took 4.717922161 seconds)
loading group "random"... done (took 9.23929281 seconds)
loading group "problem"... done (took 1.849598451 seconds)
loading group "array"... done (took 20.107103161 seconds)
loading group "misc"... done (took 1.648992606 seconds)
loading group "sort"... done (took 3.111260594 seconds)
loading group "collection"... done (took 17.184862972 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.547222355 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.133268856 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.141365064 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.127689302 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.158336144 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.124418991 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.130233934 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.090900242 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.854698133 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.157163332 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119204315 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.411211121 seconds)
done (took 5.413705445 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176769381 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08773744 seconds)
    (2/2) benchmarking "String"...
    done (took 0.088816801 seconds)
  done (took 1.260237794 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.071489148 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130808225 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.072839524 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.073212292 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.073902587 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.074577918 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.073763522 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.074349122 seconds)
  done (took 1.656876859 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.078286062 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.074738931 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.071953394 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.073399686 seconds)
  done (took 1.38694799 seconds)
done (took 5.643650815 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.774383088 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.215460783 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190010283 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.39616458 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.136938211 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.178771732 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.643950559 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.317783826 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.190993308 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081062044 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.11289215 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.35146516 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.128764743 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.646617979 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.08385004 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095543351 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.14570535 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.434680629 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.073517041 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088132826 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094748441 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.135937752 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.093631492 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078669341 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.150185402 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.073222093 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.140106162 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.085613559 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.071544667 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.21957901 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17808676 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.657805635 seconds)
  done (took 10.385612385 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104596784 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.104347735 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.075303295 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130789593 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.103492249 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.075648787 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.081098268 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.073218019 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094878638 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.134639344 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.097440482 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110913679 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.071174724 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.074446728 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.088686213 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.214453576 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.087320102 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.087080103 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.075931984 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.084068091 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.115372159 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083518216 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.085230954 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.085259096 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.134234153 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.184871129 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.102029077 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.103137947 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.072700402 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.087342434 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.120961621 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131914132 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.07146818 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.074060692 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.13060285 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.100241239 seconds)
  done (took 4.779136594 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.979743381 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.145769466 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09499192 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.137432339 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.07043984 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112538047 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.071536402 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085802038 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.211851448 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.430227056 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.092483528 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.577943689 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.116081661 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115735094 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.107806451 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072950926 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.07390097 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.073453941 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.497007854 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.105622684 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.113069646 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086434409 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.076634647 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.07486044 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.071794053 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072983775 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.069688894 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074008488 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.118967325 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.082465239 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.309362137 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126110428 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073998334 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.942802977 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.170935346 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071914751 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.245871344 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.178034515 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098108827 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.145798703 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075995451 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.072587114 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.164207816 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.071302555 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.076812279 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.07207823 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.093850334 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109705456 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.125615868 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.072446431 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072610049 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.17321433 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.071503991 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084062743 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.142703755 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.160912235 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.072062304 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.294427731 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095365668 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.076318568 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.071579791 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.172002699 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.125644591 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.0736472 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.073185041 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074598528 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.074850988 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.368487398 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.072020941 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.890418791 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.076974059 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.085957439 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075177992 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075242911 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0784302 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078281332 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.094440349 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.071875447 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079031364 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.07139282 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.07193549 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.072410559 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.088334601 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.370295947 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.176247234 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074662058 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.071295583 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09736288 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101384086 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.075855878 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.073702918 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106948295 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074112026 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.072705465 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.072337413 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.097731267 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08873589 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.076162953 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.119384686 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.07445497 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.07028066 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.08900468 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.103371609 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.075511841 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104083574 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.088746621 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073899732 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.411933647 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.075489516 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073595819 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.071139932 seconds)
    (111/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.071371219 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.072134264 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.074092689 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.083989841 seconds)
  done (took 22.20063124 seconds)
done (took 39.432746837 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.248127883 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075223265 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.07574401 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076076963 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.07596358 seconds)
  done (took 1.71998361 seconds)
done (took 2.873780828 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.125595808 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103400648 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070784364 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101961057 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.073135984 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.105153317 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10469203 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08209599 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103647862 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.070312678 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101753816 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.070718052 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070866588 seconds)
  done (took 2.357810344 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089078364 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.090174732 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076295661 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088795223 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069583995 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090353944 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.089162477 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099978224 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.088980257 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080657761 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070290706 seconds)
  done (took 2.089367166 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088104386 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089176709 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076895625 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087473086 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069182056 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088082595 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.087153587 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091547076 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.087675024 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079673079 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069374911 seconds)
  done (took 2.067297461 seconds)
done (took 7.660820107 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081228048 seconds)
  done (took 1.221670708 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.53939146 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.646584783 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085116995 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.109715297 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.197806733 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118015846 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.252933548 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.091878508 seconds)
  done (took 8.346065568 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.095705007 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087395497 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.075473805 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.078936345 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.079908119 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.077546005 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.080522288 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.076296103 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.078959159 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.079487443 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.079888044 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.077908584 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.075787639 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.076000423 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.077108228 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.075343085 seconds)
  done (took 2.491980995 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097246489 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096227658 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.078717828 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.080146921 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.077864193 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.077402357 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.080159284 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.078868398 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07628749 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.078346631 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.080619998 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.078700043 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.077113482 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.069191852 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.079086329 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.082525822 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.076386895 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.079539095 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.079748487 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.081155312 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.081241708 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.070988225 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.0790062 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.081393421 seconds)
  done (took 3.156704456 seconds)
done (took 16.364759941 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111740302 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.074223373 seconds)
  done (took 1.335859879 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085557874 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086505034 seconds)
  done (took 1.328895434 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085813943 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.071010071 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092931887 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.081762025 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.07116867 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.070809237 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.090365934 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070993292 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.07096227 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.070807129 seconds)
  done (took 1.93338712 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.073189943 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.081088568 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.074194408 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.086352855 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.080670428 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.070853836 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.078628376 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.074853543 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083697036 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.069954859 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.077844155 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.088789899 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07562143 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.089800334 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075967521 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.073231166 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.07478553 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.072332323 seconds)
  done (took 2.559347562 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.070695236 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.071958525 seconds)
  done (took 1.301393799 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.072083953 seconds)
    (2/7) benchmarking "second"...
    done (took 0.069477314 seconds)
    (3/7) benchmarking "month"...
    done (took 0.072753198 seconds)
    (4/7) benchmarking "year"...
    done (took 0.071484772 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.069060995 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.067802261 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.068674033 seconds)
  done (took 1.64645015 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.36912986 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.124776486 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.313552038 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.077705132 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.086558391 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.260089189 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.072419996 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.078005567 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.076785672 seconds)
  done (took 2.651454372 seconds)
done (took 13.921403454 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.086517373 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.091558841 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.101651943 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.383573306 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.097641659 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.073031535 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.119556942 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.184590851 seconds)
done (took 2.309861011 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213224575 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.670142143 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.415087339 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.209746054 seconds)
  done (took 2.460557183 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.336610206 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093741692 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.06665005 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.076204795 seconds)
  done (took 1.746980378 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.073401328 seconds)
    (2/2) benchmarking "read"...
    done (took 0.075533396 seconds)
  done (took 1.3172358 seconds)
done (took 6.909074449 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073224658 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.072943712 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.089804692 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.070028938 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.071927747 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.069231304 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.07033638 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.072504779 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.072949701 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.072531932 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.07192139 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.072358418 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07165707 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.076835127 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069730232 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069489088 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.18752011 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.069723691 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.069453724 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069443286 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069242067 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072788311 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.071147539 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.070954686 seconds)
  done (took 3.044567927 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088667733 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.071909953 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.076014335 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075917058 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.074259781 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.075945342 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075974368 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.071462633 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.076010768 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.073760493 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074052587 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073495318 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.073655714 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.074122722 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073792948 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07350063 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.075881342 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071641095 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074009102 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073976832 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.075918362 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072040378 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073983426 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07594098 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073812504 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073830275 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.073970835 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.071982343 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076352201 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.073952358 seconds)
  done (took 3.416664375 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.075299588 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.069037569 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.069178865 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.076533368 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.069071911 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.069615293 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.068881607 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.068862194 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.069412195 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.068611921 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.070190131 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06886497 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.068660682 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.069658683 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.069866193 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.072928838 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.085679305 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.069092677 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06913325 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068894508 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.07279539 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.071348903 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.0685614 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.068166448 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06878506 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.068396852 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.068821519 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.068757846 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.069585206 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06900193 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.072417396 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.073139786 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.068580828 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.076573872 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.072799488 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.068669909 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.075373231 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.070442107 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.071228848 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.070410216 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.070162329 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.07027523 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.07047993 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.078648687 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.070833671 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.071885206 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.070369292 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.071568 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.071192344 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.07288597 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.070408879 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.070688059 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.072442906 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.071946711 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.073687494 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.069064523 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.069578783 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.068867814 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.069855323 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06886193 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.068721122 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.068551339 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.072347137 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.070147877 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.085403382 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.076654227 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.069079482 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.070946476 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.069575616 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.072253961 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.07064814 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.084482366 seconds)
  done (took 6.320805268 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.094250768 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093415095 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071594639 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.071664272 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067601087 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069299576 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075390087 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069535599 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071782969 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088860902 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069872639 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071529091 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071657975 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073651087 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069703637 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071657007 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077462626 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067023808 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.069458247 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07397963 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06963434 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074604629 seconds)
  done (took 2.832060663 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154724085 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07645885 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110515347 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080916806 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075821103 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080351187 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.075785718 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075648385 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075641554 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073713549 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073179469 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075637689 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07549618 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073360351 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073413945 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073299337 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075336987 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073391739 seconds)
  done (took 2.662131094 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.083019126 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.071965235 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.093987138 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.072472212 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.072618599 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.074328873 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075977043 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.079119195 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.07472078 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.071739249 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.079590884 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074364961 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.074243278 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072572963 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074869751 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072010235 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.074134171 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072049377 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079359314 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075625068 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07602126 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079268138 seconds)
  done (took 2.864286104 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085856998 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07462164 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08685257 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.073774964 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.067167454 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.069844335 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.07559349 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.071887223 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.075550792 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.073553164 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071425199 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.069405703 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073860076 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071392633 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073626838 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07125481 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073760018 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071437825 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0736474 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.067067349 seconds)
  done (took 2.66459997 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090139181 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073547884 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073868593 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079701475 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0729371 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073142512 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079457942 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072932197 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072738651 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.093671185 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072869879 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073070996 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078868663 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079375473 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072878425 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078972359 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079148178 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079033536 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072478629 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072900827 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.093859229 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073237279 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079095013 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072886511 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072737811 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072729597 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072776164 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076604076 seconds)
  done (took 3.349028534 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073676917 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071873308 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.070178901 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.069989203 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.069295653 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.069279699 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.069456205 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.070294374 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071883379 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069625983 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.072063538 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.072556873 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071887644 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.071914997 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071902135 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.072447197 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071851466 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.069653387 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069757136 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06975276 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.072281834 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071594886 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.072245659 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069674158 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069741628 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.072103145 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069880217 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069642683 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072341356 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069555921 seconds)
  done (took 3.324028435 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079636936 seconds)
    (2/2) benchmarking "in"...
    done (took 0.078426614 seconds)
  done (took 1.356737223 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.068017543 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087036142 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.068494555 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07725308 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.075303803 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.074007461 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.080237068 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075082288 seconds)
  done (took 1.797613035 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.087672063 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.081519138 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.071843558 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081242101 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080053751 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087967224 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.128240394 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.071475814 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.078969181 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.070655198 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084669152 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.070782442 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07866588 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072450256 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.077797583 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079120679 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.069128763 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075672382 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072532919 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.069729987 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07137244 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080507817 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07528459 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.066877791 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.073563262 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094597823 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.083242472 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070874283 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075547447 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.079476882 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.079027679 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06727019 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.073105205 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.073386501 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.071285715 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.082748211 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.088212079 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075450596 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.082642887 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072720204 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.081375084 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.067981044 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.078450618 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.081443063 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083494756 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.071414856 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.071598103 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.066848487 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.070646587 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.07448352 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066943282 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072669622 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06631605 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079575386 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.07625527 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082925692 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.070416988 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.074306606 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.07495143 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.075090557 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07885112 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.074005113 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075453121 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.071080226 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08302091 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.077753851 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07942261 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.066855805 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.066024137 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.069730721 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.081615267 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095360129 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.077732021 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.071704217 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073877765 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.071612044 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077198268 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07485522 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079683885 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.081181761 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.073023337 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.078165619 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.082233863 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074964377 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.075492926 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077862327 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.069643704 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.073690579 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.070792894 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086908989 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069828625 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.071359166 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.069868754 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.0812918 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.075404129 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.070574117 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.071461772 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.080646489 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.066640775 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.072328543 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072974733 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074056963 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.082411812 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075701365 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.076212468 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.082234729 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.079152171 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073486704 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.075729769 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.194242392 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073571035 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.073553797 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.080676655 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.067365875 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077295914 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.075230259 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.073333838 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.081868824 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.070422352 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.071967274 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08054331 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.078948646 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.070918616 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.068592886 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.075326933 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.071491607 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074346623 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.080983982 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.070309696 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.067305345 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.067442204 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.07563198 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.071150555 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07633026 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.076049761 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075783427 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06679301 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.069619545 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.076369049 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079977557 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.072991146 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.075694002 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.080441934 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.07598242 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.072236529 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.081305767 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.077087047 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.073250107 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.079666423 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.075643642 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06816748 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075689883 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.076802545 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.072098098 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.078502457 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075366769 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.077056921 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.073525913 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072107098 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.079831702 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.0742191 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.073652623 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07468462 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.072247789 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.0850363 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.076423458 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.068998036 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.07096157 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.080841483 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.07245591 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.072788813 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.073336043 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.076381656 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.073486769 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.071747723 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.072914416 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.076101457 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081394734 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.075922123 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072636566 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07850452 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.086268488 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.073386431 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.076619638 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.073173639 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073666208 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.073258173 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.083701416 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.080835882 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.077310462 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.077168892 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.070616171 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078885183 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082065702 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.073447719 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.071522525 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.073985562 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.077479965 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.080397327 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.077758022 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.073616102 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071274445 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0735654 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072848804 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.074443935 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069863062 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.070915925 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.076398168 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068696293 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075988862 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07042637 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.081803464 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074140562 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06580416 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071939566 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068416304 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.077181543 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065591702 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.069106952 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.070330095 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070163114 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068912698 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.202372472 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.067311133 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.080976822 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.081541515 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.074187443 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.07325459 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.072183479 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081045632 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.075180172 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07720457 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.077159631 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.079992712 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08604498 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.073175912 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.076639048 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.085763869 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070853539 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.066509799 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.077561238 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.07021344 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.07029973 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.071482891 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.070060618 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075138312 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078491463 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.078623787 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.065712835 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.075323871 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069956435 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.07244435 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.067389494 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.076737378 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.074656705 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.073873598 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079009434 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071446969 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.071614885 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076288507 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070527639 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.072575825 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.072176537 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075077012 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.071333763 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.073996077 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.07199333 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.075420389 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.071513533 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.069980604 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.073407454 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070866069 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.072568879 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07678985 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070664386 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0723664 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.07475549 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.07197409 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07279078 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.073295723 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.071973179 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075291817 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073935152 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.072485949 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.074588376 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.067058471 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.080133292 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.070895546 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079845251 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.072854673 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.068495967 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.078158057 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.074631012 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075874791 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071354892 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.07160339 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.073784181 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.071309149 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.075260167 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079290133 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.070334732 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082826595 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.079072568 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073721893 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.075147676 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.073101398 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.074318139 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.071709843 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.073422582 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.072127045 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.073050156 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.07279122 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.078873069 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.076782015 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.07502166 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.075933708 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.074202772 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.074668264 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.074214657 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.066988909 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.07115892 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.071718684 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.0701397 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080150157 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070803876 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.071301336 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069413404 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071321771 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069521155 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067581357 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076215537 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076851523 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.070227625 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077048958 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.070415887 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.07281653 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081405927 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.196551746 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.071222813 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.071089935 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.072812223 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08205895 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.074594853 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.08450812 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.073968092 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.072821174 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.070407016 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.073440674 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.071095687 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.066735155 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.071031833 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076792389 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.072228185 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071140897 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.072768504 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.075645075 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072007574 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081467843 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.071584768 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.074070309 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.07261324 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.069494014 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.072579694 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.072503961 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.075699728 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.072266048 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.070355076 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.069491867 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.071174082 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.073646884 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.073846911 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.071238154 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.074277209 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.080950823 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07333256 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.07770339 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075324631 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.068019279 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.078682714 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.073009134 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.072605464 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.074030122 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.077962724 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.080886076 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073552223 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.083411355 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.072617051 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07546885 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073447715 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.071732319 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.072690265 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.072514618 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.073244957 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.073710185 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.074460391 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081839258 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.071322792 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.077791146 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074718225 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.07494811 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.080858094 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.073901775 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.077364224 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.079365532 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.074917412 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.075808533 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.082902927 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.076796202 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076336681 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07348573 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.074948135 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080402924 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.074168452 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.080770002 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.074650107 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.074058207 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.076446647 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.07246081 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0729307 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.07342061 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072722766 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.08069537 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.073901936 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.074035959 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.073689809 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.071344724 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.073685147 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07424982 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080020227 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.074635215 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075366453 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.067093223 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.069199077 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071349047 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.070566525 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.073285001 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073814927 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0771866 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.073794942 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.071849778 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069756846 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080765268 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077170571 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074756199 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.070102141 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074448992 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070567056 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.0734718 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.072420128 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.07164538 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071168327 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074429987 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072540028 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.201912195 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081189502 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.079467366 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075308376 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.078194045 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.076871079 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.076143151 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.069704033 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.072869923 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.074979539 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078630886 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.075044766 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073922275 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085401939 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.072258306 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.075224009 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07471279 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071562552 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.076978909 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06694952 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.073958929 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073014909 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072431061 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.066812716 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.072248542 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.071214208 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.074874774 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.072640662 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.068051604 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083757667 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.08154139 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.075346684 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070942078 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070524784 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06752033 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.066832866 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.072049873 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07254328 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.073911803 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.082432643 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.073255245 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.073798828 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.068862407 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073207324 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077902038 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.077630688 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.071145544 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.068544225 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.073674192 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.077434667 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.080373872 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071982571 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.072941706 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077923246 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.075294772 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.071210531 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075900803 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.070815918 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.078141969 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086718491 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.073554874 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075594082 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07785016 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.080009626 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071514011 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.066942185 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.071821103 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.075383389 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.072973127 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.072063055 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.07254788 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.087322087 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075574931 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.071259774 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.070184308 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.075248578 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.074627664 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.080521499 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072098725 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071905429 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.076777796 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.074112953 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078177229 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075761209 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.080523077 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.077295955 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.077522378 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.073003801 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074798373 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.071542273 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.073772795 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.074170838 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.073544267 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.077694267 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.079821129 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.073824178 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084666129 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.083220134 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.075744593 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.069856612 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.073888156 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.073300366 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.068170713 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.072759392 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.069337063 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068769419 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068886317 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06919235 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.072052687 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075615938 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071945851 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070318726 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06950805 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.065368705 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074085813 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.07285709 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072598474 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.067538874 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.070028347 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070408083 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.090075118 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072195322 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.069076032 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072189278 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072661289 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072113925 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.065274756 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077467003 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068986039 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.073489014 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.070978845 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070505126 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070438389 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07370018 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073381145 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071586452 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.073102565 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.074838477 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071478963 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.067540604 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.067805347 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075361198 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.068620831 seconds)
  done (took 46.148181891 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.111198903 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071531361 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069446034 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070005411 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081521509 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071505088 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069582883 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070494229 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.073653821 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074343661 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07136971 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071520317 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078654585 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086501174 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081063867 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07518954 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0702724 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071615679 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069968327 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070949933 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077743156 seconds)
  done (took 2.952950745 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07781003 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.084184591 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.081653022 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089755892 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078069499 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.075455571 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.080948544 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075694984 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.083420573 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078025702 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083585544 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075203517 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.077834605 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.077741426 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078228582 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076066079 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08335652 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076434133 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.075462919 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080392938 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075644284 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082221106 seconds)
  done (took 3.038930911 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.072707601 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.07134385 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.074042813 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.067004789 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.071680945 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.066590918 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.07396333 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.069466646 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073946355 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.071497986 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.072079047 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.07182417 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.074133256 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.067123357 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.072577221 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.069841137 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.120403356 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.075635936 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.07329994 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.07459745 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.068704353 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.07448536 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06728345 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.067765198 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.071557537 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073835505 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.071745154 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.069294946 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.070950837 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.071671588 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.071420936 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.069460075 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.074312385 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.072788806 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.071839172 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.073282381 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.072998197 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.077030394 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.068966831 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.071877224 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.075082414 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.069889401 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.073279005 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.076623066 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.071643039 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.071060226 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.075850699 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.073191899 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.068430638 seconds)
  done (took 4.863838362 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.082666689 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.115180088 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.073704525 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.094018064 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.084924869 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.077575782 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.076423693 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09458759 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.068695118 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.069852891 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085627955 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.085143948 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.072811966 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.077176179 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.08036186 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.072965232 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.072572538 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069710622 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073976254 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070212006 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.074214915 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.078026878 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.08479239 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082720412 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074421806 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.070237242 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.070363003 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.07477038 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.08238449 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.074911032 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.075380337 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.075508559 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084770086 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.075575558 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069976745 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.072541789 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08509033 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.070679993 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.073067 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06877523 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.072717883 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.074712711 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.077184981 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08599058 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.07127189 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.075553766 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070585491 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.068120865 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.082486978 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.072619073 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077590557 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.083379217 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074567142 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.070960976 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.075055449 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.084883542 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.071152789 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.069223575 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.073371694 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.08150776 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.068601405 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.074098438 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082530705 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.072573641 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076727764 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.083036415 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.075332037 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.074259 seconds)
  done (took 6.653877896 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080998448 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.101760944 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088475916 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087843423 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081345985 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.08147952 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.081641375 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.08085335 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081018598 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.085046993 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082556471 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.122306201 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085373293 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.083392898 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081517123 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08098483 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.081030618 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081388192 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080978372 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080927085 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.080703767 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.087413125 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.080626315 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.087261531 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083833468 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.077169062 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.080528634 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081078808 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088263441 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080569367 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083843052 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.08069788 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080672195 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.087187287 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083636951 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.080812374 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070591237 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080417065 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.080463187 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.080804643 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.076980143 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087576141 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.080582216 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.076497721 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08130832 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080581337 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.087077309 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083573785 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082965278 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.084833436 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.081444309 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087731093 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080892936 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080933884 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.087420252 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.089888336 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087151825 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087669735 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080598093 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086943599 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.087719888 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08982921 seconds)
  done (took 6.522492195 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086000846 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078044015 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.087669148 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.067085666 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07287507 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077435799 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069815421 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.069591224 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078868194 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077968072 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080443646 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077191397 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079892736 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080674183 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077134298 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080084556 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077086064 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.077375565 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078056999 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.077533523 seconds)
  done (took 2.874425125 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.081320029 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08891672 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.073109473 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.077236453 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.075228643 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.077457573 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.074301441 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075005888 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072877915 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075097817 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.081020012 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080684288 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072760586 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.077073282 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.081175559 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.076869517 seconds)
  done (took 2.551956439 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.087376849 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.077764411 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083811505 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.071334206 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.072232285 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.067876608 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.070918673 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.066613548 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06763623 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083439285 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.071185954 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.082239488 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.070955395 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.070114854 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.067786408 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.077017088 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.067513509 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.068357145 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.070912948 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.08196293 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075051793 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.0691731 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.075139321 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.071414513 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.073524034 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.075266155 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.070096327 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.07215357 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.068378512 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.07125852 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.073857371 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074781569 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.0682528 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.069115143 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.070192867 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06831871 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.070812744 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.071005066 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.076688591 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.070982512 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.069289012 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.073670654 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.071150434 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071906746 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06784003 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.071859354 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.067677747 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.074586373 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.068882229 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.074288081 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.070827526 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.073599098 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.071846537 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.078479067 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.07368207 seconds)
  done (took 5.305567548 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086215647 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075092817 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.067501092 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06911564 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.075210118 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.073729044 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.076037425 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07285567 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073158731 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.069542923 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073295321 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075388421 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073442657 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075392329 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073126133 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075172795 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066809978 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072880968 seconds)
  done (took 2.650475534 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.077576715 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071827543 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.078809945 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07201674 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.071566858 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074906422 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068046396 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.070009654 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069861718 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072419317 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071888397 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.074587372 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069715203 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.074228104 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071744253 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072098679 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.074044836 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070434244 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.072071988 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067276912 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074135411 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069877774 seconds)
  done (took 2.905866894 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.099278335 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.089330497 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.144796193 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.084853388 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.091714105 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07803837 seconds)
  done (took 1.907013385 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098167376 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106051127 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071822389 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074586582 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081137248 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076071405 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075197416 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075667479 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082952372 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080629544 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075842889 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085401302 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082871288 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082510847 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080950498 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081240516 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076058938 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075578166 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072375625 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087617178 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075769129 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083097897 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076283673 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075827895 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076728262 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082149169 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08269526 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080469937 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075347523 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082873219 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080560814 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075730482 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083105284 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080554316 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075482199 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083013446 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076280763 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088953383 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083032912 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084811867 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.077560906 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082990562 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085813048 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082245738 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085267898 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078347472 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082146347 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077934073 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078024246 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089857468 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081615219 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082155636 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081123786 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083507204 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08287303 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089137131 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080689676 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082627825 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080808586 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080909263 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082531141 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080911132 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083974239 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083059852 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083056099 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084945739 seconds)
  done (took 6.690439947 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110058936 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073472927 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076143191 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080834844 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082527322 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07608771 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076373408 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075809533 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076353388 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072796224 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113983009 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076487525 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082727184 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082792678 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076454477 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076092048 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076188063 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08247652 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073568034 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089215012 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075861321 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082455231 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082353527 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082886725 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080640277 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080819626 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075496092 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077201308 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077927748 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077976644 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081756525 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078388426 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084789819 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074574905 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085583506 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07814453 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078179327 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082164246 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078134721 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083254959 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0850379 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089982373 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078033642 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078388882 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083155506 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077833042 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078428942 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075146238 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077802253 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075006635 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081523954 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080599894 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080300144 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082058078 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075938319 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076379856 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075587937 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075901059 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076180878 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080958565 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082200998 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07544265 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091820889 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078219323 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077939423 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085050043 seconds)
  done (took 6.647242427 seconds)
done (took 136.514224406 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.200308625 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.175763962 seconds)
  done (took 1.687052464 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07524787 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.103510734 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.084245053 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.137292174 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.072615508 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.106286817 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.105342669 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082532321 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.07204976 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.073070367 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.075168912 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.076795941 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.140306306 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.072341527 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071640772 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.076164643 seconds)
  done (took 2.751896963 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102996153 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.165232461 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110787667 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.074397237 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106911574 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079608735 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.073030481 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.085932897 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.078491851 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.073459438 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080208059 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078664473 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.07321957 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077945058 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078648368 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079789706 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.073500623 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.080758206 seconds)
  done (took 2.904198162 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102467583 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095523334 seconds)
  done (took 1.531019468 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.167276631 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.141064071 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.210371785 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.343360119 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.158451385 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.152874064 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.149404998 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.147956212 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.121764209 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.142309976 seconds)
  done (took 3.060965374 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104937142 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.155086133 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.277621446 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.121711608 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.079006226 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.096592342 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.123393623 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084408175 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084827848 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083979713 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084786825 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.081214558 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.104207831 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.079420786 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.080689774 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.081121314 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.108565852 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.079424323 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.080496548 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.080666072 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105621703 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.072596617 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078712474 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.079372511 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081898986 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.083726624 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.07436756 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.074327714 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.083626288 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.083202486 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.083966906 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.097746542 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.084254201 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.109123854 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.077507741 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107584217 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081871738 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.078151674 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.080777191 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.078652691 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082610572 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082695178 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.079846745 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.083441227 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.074175035 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.084495548 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.07409421 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.074011728 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.085145492 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.075509256 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.085437913 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.084375556 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.109945109 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072871157 seconds)
  done (took 6.270325377 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.11245226 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.111532929 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07633861 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.117543411 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109899124 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075503784 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.110288322 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.10378471 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.112093095 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075966042 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.074114309 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075869789 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084205539 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085645499 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.121304157 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.112370803 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.078093028 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075430288 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112514844 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.112407716 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074683601 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10683324 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101935715 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111485701 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.073544611 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075744455 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.074246796 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076326835 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080316297 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.082654445 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073682267 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083762428 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087851895 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081420083 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072788874 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073154712 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073974309 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.085489567 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085623707 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.086161653 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.083943641 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075668758 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.076112153 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.077376599 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076976419 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07507933 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.084728226 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.086546582 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.084918192 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076590631 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077636525 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.076726068 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.077761567 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.0857237 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083611302 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.086765241 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.084265717 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074350437 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073673878 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076903144 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083879042 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083176878 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082877675 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074870613 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083473803 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.076612446 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084327421 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087503834 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073986006 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074822811 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073463541 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073785025 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074892655 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080784962 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.081130293 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07553449 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074534481 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074273781 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082875648 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081691968 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073625655 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081909939 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075150614 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075452545 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075855926 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07502649 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.080219188 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082810686 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074460071 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073463068 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073168723 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073190337 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.072483095 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079219476 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082006477 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.08146851 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.080540111 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073749497 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080312065 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.214583321 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076570065 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.083429322 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.075612892 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076365546 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075699761 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.083505749 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.081567789 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08415088 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07462908 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.074584261 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.082340074 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085156773 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.074776753 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.081969537 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083384942 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.082671489 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.07364162 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084582822 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074508571 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.084345384 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074670858 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085434241 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074814838 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083326093 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07401838 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.074128113 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073813611 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.082811756 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075878382 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073930283 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075235651 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073945539 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.083085773 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.085354977 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07549469 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081740128 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.08168037 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075443733 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081724183 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074580878 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.085305195 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076909675 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.077562911 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075094549 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.088423322 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076373761 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.076325285 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076604055 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.086774328 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074026125 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083481318 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081350011 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072890696 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085589218 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08381446 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080705678 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08381055 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074969484 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073966464 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074082066 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07374209 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080756826 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082438729 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075851691 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073957835 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.081393102 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.083191042 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.073305058 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.081196935 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081447009 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.08166598 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073953381 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074052504 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084179515 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08368555 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.081133546 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081821712 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081836015 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07387279 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081541566 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081863291 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07409606 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086769044 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074578449 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.08619667 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081758591 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079641581 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081536095 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.083021731 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082330912 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082974253 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.085205247 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072973714 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.073286905 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.08110649 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073057134 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072708465 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079597548 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073932457 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074366779 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.087017411 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073228741 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.081849477 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.071890807 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.08056699 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071839715 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074511355 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08446769 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073378414 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075049686 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.08320638 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076290429 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079257523 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084102866 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.081377048 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072966726 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074650953 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080791241 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.081179946 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073457427 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072427353 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074261652 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079629266 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078673899 seconds)
  done (took 19.581439971 seconds)
done (took 39.13002812 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.203789133 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154128046 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.164708991 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.1196317 seconds)
  done (took 2.072212295 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.116079761 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104696128 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094700959 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.072388416 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10069541 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.071253931 seconds)
  done (took 1.933687249 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.27935545 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.194129367 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178978186 seconds)
  done (took 2.017157052 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.20347566 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190663206 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.432991773 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.265902546 seconds)
  done (took 2.563369196 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.146160175 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090982106 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.072796668 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.089276359 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.130640317 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.158357941 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100486287 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125940045 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.084754303 seconds)
  done (took 2.418127181 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148539096 seconds)
done (took 12.568423591 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.267909035 seconds)
    (2/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.105670831 seconds)
    (3/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.083998437 seconds)
    (4/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.085169993 seconds)
    (5/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.198962057 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.077636534 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073916497 seconds)
    (8/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.2142523 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.159114993 seconds)
    (10/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.075582163 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.081371595 seconds)
    (12/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.080423283 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.126762035 seconds)
    (14/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.08140733 seconds)
    (15/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.109704841 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.120165012 seconds)
    (17/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.085557769 seconds)
    (18/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.197132874 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.102294499 seconds)
    (20/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.099126213 seconds)
    (21/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.214830327 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.103083718 seconds)
    (23/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.079207872 seconds)
    (24/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.237544581 seconds)
    (25/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.200313553 seconds)
    (26/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.101679879 seconds)
    (27/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.08253781 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.098270581 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.081211871 seconds)
    (30/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.084849539 seconds)
    (31/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.12326346 seconds)
    (32/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.189748587 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.098079259 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.130261937 seconds)
    (35/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.201224435 seconds)
    (36/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.455597131 seconds)
    (37/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.081624312 seconds)
    (38/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.182137726 seconds)
    (39/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.070653531 seconds)
    (40/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.164712462 seconds)
    (41/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.059484465 seconds)
    (42/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.082013771 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.072318352 seconds)
    (44/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.181903598 seconds)
    (45/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.107928776 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.09704326 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 0.15118628 seconds)
    (48/309) benchmarking ("sort", Int64, false)...
    done (took 0.073009797 seconds)
    (49/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.239061785 seconds)
    (50/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.169014629 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.093149831 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.087959984 seconds)
    (53/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.080666744 seconds)
    (54/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.070735566 seconds)
    (55/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.079601725 seconds)
    (56/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.159287508 seconds)
    (57/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.169558637 seconds)
    (58/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.214495012 seconds)
    (59/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.070150666 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.095967725 seconds)
    (61/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.079692483 seconds)
    (62/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.154009125 seconds)
    (63/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.079973212 seconds)
    (64/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.093428981 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.09231777 seconds)
    (66/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.079024616 seconds)
    (67/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.07723878 seconds)
    (68/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.182598448 seconds)
    (69/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.080830363 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.080966325 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.091404488 seconds)
    (72/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.095834999 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.070605825 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.096588729 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.070695602 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.118336843 seconds)
    (77/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.108089784 seconds)
    (78/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.10856608 seconds)
    (79/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.077235669 seconds)
    (80/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.08466091 seconds)
    (81/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.085991049 seconds)
    (82/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.325203338 seconds)
    (83/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.080687045 seconds)
    (84/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.059102194 seconds)
    (85/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.097583143 seconds)
    (86/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.083716752 seconds)
    (87/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.073687763 seconds)
    (88/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.073750569 seconds)
    (89/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.076090162 seconds)
    (90/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.165122759 seconds)
    (91/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.130512974 seconds)
    (92/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.08375819 seconds)
    (93/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.076896317 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.131334385 seconds)
    (95/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.089681444 seconds)
    (96/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.208263233 seconds)
    (97/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.076149513 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.073422041 seconds)
    (99/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.121644758 seconds)
    (100/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077949228 seconds)
    (101/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.198043021 seconds)
    (102/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.057922993 seconds)
    (103/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.059159217 seconds)
    (104/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.11489887 seconds)
    (105/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.076981551 seconds)
    (106/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.20864047 seconds)
    (107/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.095904164 seconds)
    (108/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.083680704 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.095867612 seconds)
    (110/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.073961781 seconds)
    (111/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.125758103 seconds)
    (112/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.081299376 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.101668223 seconds)
    (114/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072701694 seconds)
    (115/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.058173925 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.101013517 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.071519295 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.071683232 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.072837695 seconds)
    (120/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.099951219 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.103481737 seconds)
    (122/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.081682822 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.08118009 seconds)
    (124/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.08222002 seconds)
    (125/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.06048455 seconds)
    (126/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.073822343 seconds)
    (127/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.05976961 seconds)
    (128/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.057578283 seconds)
    (129/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.183347481 seconds)
    (130/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.095172225 seconds)
    (131/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.197574049 seconds)
    (132/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.08254497 seconds)
    (133/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.080251602 seconds)
    (134/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.084573136 seconds)
    (135/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.142873401 seconds)
    (136/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.176146552 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.098282176 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.152246991 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.087904927 seconds)
    (140/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.079596186 seconds)
    (141/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.15371112 seconds)
    (142/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.070207331 seconds)
    (143/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.05889495 seconds)
    (144/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.120304651 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.07097953 seconds)
    (146/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.079096792 seconds)
    (147/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.164550002 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.087606557 seconds)
    (149/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.078826565 seconds)
    (150/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.057389943 seconds)
    (151/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.077461025 seconds)
    (152/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.194159279 seconds)
    (153/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.18321682 seconds)
    (154/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071043202 seconds)
    (155/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.160327788 seconds)
    (156/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.079075878 seconds)
    (157/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071282811 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.144226571 seconds)
    (159/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.057856652 seconds)
    (160/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.057540596 seconds)
    (161/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.083281274 seconds)
    (162/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.081764218 seconds)
    (163/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.05990474 seconds)
    (164/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.107243298 seconds)
    (165/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.070032061 seconds)
    (166/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.079536903 seconds)
    (167/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.079786175 seconds)
    (168/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.06078989 seconds)
    (169/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.182602266 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.071890226 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.119735013 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.082173974 seconds)
    (173/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.058380038 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.072520111 seconds)
    (175/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.07915108 seconds)
    (176/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07980986 seconds)
    (177/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.072566279 seconds)
    (178/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.068556074 seconds)
    (179/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.076123646 seconds)
    (180/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.074244018 seconds)
    (181/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077303848 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.148221535 seconds)
    (183/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.204254159 seconds)
    (184/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.059225527 seconds)
    (185/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070215587 seconds)
    (186/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.077094104 seconds)
    (187/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.057509722 seconds)
    (188/309) benchmarking ("sort", Int8, false)...
    done (took 0.309831573 seconds)
    (189/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.063297963 seconds)
    (190/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.059497395 seconds)
    (191/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.188903938 seconds)
    (192/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.060199017 seconds)
    (193/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.080008534 seconds)
    (194/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.077010663 seconds)
    (195/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.113018577 seconds)
    (196/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.071064754 seconds)
    (197/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.186550039 seconds)
    (198/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.072551783 seconds)
    (199/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.155114345 seconds)
    (200/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.073314125 seconds)
    (201/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.079018986 seconds)
    (202/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.059291439 seconds)
    (203/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.058267632 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.091931538 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.082821849 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.110314932 seconds)
    (207/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.103443865 seconds)
    (208/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.080434713 seconds)
    (209/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.058007027 seconds)
    (210/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.070797717 seconds)
    (211/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.160418778 seconds)
    (212/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.080309045 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.071866287 seconds)
    (214/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.084904708 seconds)
    (215/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.108624306 seconds)
    (216/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.07291215 seconds)
    (217/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.058745405 seconds)
    (218/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.057899589 seconds)
    (219/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.079421892 seconds)
    (220/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.078678558 seconds)
    (221/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.058044935 seconds)
    (222/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071024491 seconds)
    (223/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.086443336 seconds)
    (224/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.166634984 seconds)
    (225/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.058542002 seconds)
    (226/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.078638227 seconds)
    (227/309) benchmarking ("sort", Float32, false)...
    done (took 0.138229647 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.133391768 seconds)
    (229/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.081417728 seconds)
    (230/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078837792 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.095492974 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.145393756 seconds)
    (233/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.058150036 seconds)
    (234/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.058014531 seconds)
    (235/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.078831397 seconds)
    (236/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.073083384 seconds)
    (237/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.05903425 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.07136273 seconds)
    (239/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.060522651 seconds)
    (240/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.177543676 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.121691053 seconds)
    (242/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.057307272 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.100275531 seconds)
    (244/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.057853127 seconds)
    (245/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.059400843 seconds)
    (246/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.075353002 seconds)
    (247/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.070341469 seconds)
    (248/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.122052171 seconds)
    (249/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.088333936 seconds)
    (250/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.07196668 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.071697732 seconds)
    (252/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.069425475 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.09625914 seconds)
    (254/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.071856665 seconds)
    (255/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.057352108 seconds)
    (256/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.059405473 seconds)
    (257/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.069830759 seconds)
    (258/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.070138094 seconds)
    (259/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077853777 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.071330528 seconds)
    (261/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.183150115 seconds)
    (262/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.071214464 seconds)
    (263/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.079978006 seconds)
    (264/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.12191985 seconds)
    (265/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.05797064 seconds)
    (266/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071337031 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.11718557 seconds)
    (268/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.174813022 seconds)
    (269/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.074156938 seconds)
    (270/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.107305152 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07970512 seconds)
    (272/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.05848568 seconds)
    (273/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.073069367 seconds)
    (274/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.095649087 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.077148593 seconds)
    (276/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.058977271 seconds)
    (277/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.070408362 seconds)
    (278/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.058773027 seconds)
    (279/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.0694731 seconds)
    (280/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.069272719 seconds)
    (281/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.060045099 seconds)
    (282/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.057852748 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091485199 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.125681822 seconds)
    (285/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07222342 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.112577593 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.112651472 seconds)
    (288/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.056965064 seconds)
    (289/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070596102 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092163929 seconds)
    (291/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.068500528 seconds)
    (292/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.057865323 seconds)
    (293/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.068496379 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077634468 seconds)
    (295/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.05712063 seconds)
    (296/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.072908238 seconds)
    (297/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.057568284 seconds)
    (298/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.144393279 seconds)
    (299/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083203899 seconds)
    (300/309) benchmarking ("sort", BigInt, false)...
    done (took 0.193514933 seconds)
    (301/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.058006688 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077204103 seconds)
    (303/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.078456519 seconds)
    (304/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.072822935 seconds)
    (305/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.074037521 seconds)
    (306/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.057204781 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.231118755 seconds)
    (308/309) benchmarking ("sort", Float64, false)...
    done (took 0.140278163 seconds)
    (309/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.060750513 seconds)
  done (took 32.911399926 seconds)
done (took 34.296187298 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087412759 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098770624 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.081648689 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097710248 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085964831 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.083422255 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.078940955 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.083663457 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.086396675 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.088112647 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.084529435 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.06164613 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.080660637 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.080665698 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.081143361 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096523072 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.085409058 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.079625175 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07942935 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.070434737 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.079170124 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.071863354 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.073271287 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.06217424 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.085612624 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.078217031 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.080537105 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.080920025 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.071236519 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.071745447 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07570988 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.079883284 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.070998061 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.085806577 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.079840479 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.079184253 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.08087379 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.083017404 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.073167762 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.072332204 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.081523146 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.071304766 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.079149866 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.079643572 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.078165586 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.077335416 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.078994236 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.083184033 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095899908 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073828295 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.081241343 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.082703597 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.082746539 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.078912258 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.076037318 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.079636604 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.076908826 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095861249 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.079987131 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074278744 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.0806483 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.080127208 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.077659258 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.079407911 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.079243937 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.082518914 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.083170736 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.077483803 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.081888813 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.077844425 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.071819604 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.079382646 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.075916937 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.071358942 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.082100058 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.08641129 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.069994094 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.078337249 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.079391818 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.079253098 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.070812454 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073556196 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.073365161 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.078214266 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07334973 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.06166514 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.076250777 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.078261453 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.070537914 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.079588779 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.078734277 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.078804272 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.072768601 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.083345005 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.070755546 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.077261981 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.071609562 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.071265363 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.073224696 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.076064446 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.071170197 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073598152 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.081559027 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.072864952 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.077627993 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083740071 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.070496979 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.077830373 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.069999997 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.070720977 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.084217549 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.080452863 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.070977092 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072741087 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069669296 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.078571432 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.070102023 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.070535727 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.070620648 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.070579818 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.077027025 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.070316708 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072577018 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.217659713 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.087729294 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.072441582 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.076376792 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.074616015 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.072588641 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.078733707 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.07270187 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.071332228 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.073528554 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.069612448 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074262882 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.072110143 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.0788793 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074100456 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.080401221 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.072993398 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.080316317 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.076982783 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.078124622 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07677598 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.071044303 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.067097589 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074210414 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073663581 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.072689306 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.071682219 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.072059354 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.071538254 seconds)
done (took 13.343246763 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.075344512 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.141749657 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.101920538 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.102282293 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.092500907 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.074874939 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.083348093 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103169988 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.075733092 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.106391986 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.095962333 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.090670905 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114062997 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.070551274 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.07194638 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.076029162 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.073442577 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.084881945 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100635023 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091857306 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.11668156 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.070900181 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095907587 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092738433 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.092121947 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.09718121 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.072639367 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.075728692 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.075374848 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.104632737 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.093672969 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.075750991 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.072363153 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.101785109 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09587589 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08645177 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.072482595 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086689088 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.072350944 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.072632907 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.075314237 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.104179826 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.087713565 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.08791636 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.078420211 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.084866309 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.075649239 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.09005622 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.096129826 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.086494069 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.09109993 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102906055 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073933165 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.08794716 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.070575627 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.088914057 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.081044092 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.074204796 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.072695399 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.079221244 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.072121659 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.075670818 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.084511435 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.083935613 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.075350866 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.087754894 seconds)
  done (took 7.144783481 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08959125 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.098731373 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088171386 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.091053602 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.071320005 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.072029447 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.072369841 seconds)
  done (took 2.056409788 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.074422119 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.094969395 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.096161399 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.096461359 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.088177935 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.099223488 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084342698 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.073813477 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.097682136 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.073883105 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092108677 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102133842 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.075416287 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.085431594 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094224417 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.072432206 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094488658 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.072221251 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.075552303 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.09416894 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077984189 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.101859631 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079166877 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.072464198 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085341714 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.072517443 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117557718 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076235006 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07411489 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.0754896 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07340153 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.110952967 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084701221 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079446618 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072209195 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08704973 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.086049183 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.075633262 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083327694 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.0809897 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085598144 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.073169803 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.073068623 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.074016336 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.076481461 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081738193 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.073578416 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.076612365 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.074860222 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.09166342 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071306739 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085121564 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.07531496 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.078189961 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.074241415 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07856813 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082430228 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.073297239 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091221663 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.074179434 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087558299 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08686987 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085964778 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08696237 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074896641 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084604269 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08584459 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.075173372 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07433702 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.075635951 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086889854 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071448621 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.074167959 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.082151186 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074470166 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093989761 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093744095 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073709603 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.085980661 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.07259249 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.072673383 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.072284132 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093569231 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077572404 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072648871 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076555087 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076061407 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.075862551 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.071590314 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.076614253 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070869848 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.078645877 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.076034981 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.076337472 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075957643 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087827202 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.076313772 seconds)
  done (took 9.36468989 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.077445253 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.076790819 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.077913518 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.07707955 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.074163603 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.073507882 seconds)
  done (took 1.95621043 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095028691 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.07412547 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084599921 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.077422308 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.108335397 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.090963603 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091276629 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.082580167 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088121617 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083859523 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.09066082 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092140559 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.095850271 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.077731186 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.09139262 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.076926161 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.091515402 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079457486 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.083445874 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077531501 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089907639 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.077907216 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077907895 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.08631719 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.080636352 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.076901524 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.083391442 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.083728065 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082746324 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.08272881 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077028652 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.080814446 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075495762 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.08229569 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.091220118 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075373134 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076691986 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.081992606 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077519248 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.083689645 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.091746404 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077758234 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.079123016 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.082208968 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.082444141 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075516148 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081875788 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.08430061 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.091110349 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.081992558 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.08260899 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.076852747 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.080506424 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.082160135 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075561537 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081646828 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.082159534 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.091472162 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.077989791 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075435359 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.074124102 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.080544301 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081769939 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.081467224 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.082458389 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.081879729 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075593483 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07775348 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077626216 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.076379575 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.081744158 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073672807 seconds)
  done (took 7.408690496 seconds)
done (took 29.382114317 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.544105978 seconds)
  done (took 2.000244992 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.608553325 seconds)
  done (took 2.093446727 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.5098332 seconds)
  done (took 7.992479295 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.372794301 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.48063624 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.715395143 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.139487961 seconds)
  done (took 3.228148166 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.727972287 seconds)
  done (took 2.215015393 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.244490366 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.231278834 seconds)
  done (took 1.973158775 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.385833143 seconds)
  done (took 1.862284921 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.12219866 seconds)
  done (took 2.602482566 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.245538342 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18159158 seconds)
  done (took 1.912107192 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.447445128 seconds)
  done (took 1.93022982 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.893122836 seconds)
  done (took 6.378294989 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.226435828 seconds)
  done (took 1.750866923 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.245637416 seconds)
  done (took 1.731085632 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.748946955 seconds)
  done (took 3.235588458 seconds)
done (took 42.397493649 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.090184981 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.090925584 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.091019299 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.086258175 seconds)
  done (took 1.816938774 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082699938 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.078000252 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.081759563 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.078096948 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.081465225 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.078829188 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.080239423 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080632755 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.078052044 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.078447495 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.078338032 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.078343995 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.080326023 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079421746 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.077234819 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.08036846 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.081396889 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.078249742 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.080880695 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07835923 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.07689003 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.080242148 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.080418482 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.077177564 seconds)
  done (took 3.387707921 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.085672239 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07869839 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.081660541 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.077121303 seconds)
  done (took 1.811788225 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.0854483 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.096558661 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093393815 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.084917626 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.095300808 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.090730944 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074269646 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.074711032 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.076084556 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.08379786 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.074007364 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.100228502 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.092964513 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.083529196 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.085749744 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070989166 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072688586 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.09202572 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.08498426 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.084320025 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.075949031 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.084160584 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.073993249 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.094838574 seconds)
  done (took 3.509571943 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.092552639 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.106625445 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.086101792 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.095569906 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096907733 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.070816837 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.091521466 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097567772 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.130939394 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.071145857 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.076751466 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.070895158 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.07945042 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.07103868 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085872263 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.11556932 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.116696826 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.074677472 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102935495 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.071624761 seconds)
  done (took 3.300542064 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07910382 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.075307063 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.076150635 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.0715227 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.083339237 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.078198071 seconds)
  done (took 1.959618463 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.074459507 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.073369523 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.073130868 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.072548873 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.077764114 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.073449048 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.071452868 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.073624743 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.072709636 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.07258802 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.072489161 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.071537943 seconds)
  done (took 2.367477799 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.19166231 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.074351283 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.074252533 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.071564437 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.076173981 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.072719281 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.086430928 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.073536337 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.097416809 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.072625094 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.072636371 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.074602578 seconds)
  done (took 2.526535815 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202898848 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081533618 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229695779 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153796383 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111374666 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116130055 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115289189 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114771544 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.139315952 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10238677 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162757578 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163565296 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109324917 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138809383 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093839409 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.10654561 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152564636 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165178792 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109337671 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16377279 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144444304 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128671546 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146327915 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104323554 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107973774 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121272627 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.077272381 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084437763 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167258393 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132767993 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143151763 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119321887 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09439093 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174020111 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164845262 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138991529 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149316675 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088341502 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.106498503 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132922116 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192146841 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092124353 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.302615833 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116169023 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085438562 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135565116 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120888711 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.122670566 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.109339149 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094581653 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147607181 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180960429 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.135546453 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091452001 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126619602 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115123649 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113879409 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117505072 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175880631 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157754143 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13088682 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.077354773 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11470235 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14981802 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133191049 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109909368 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125206345 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097518952 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133314254 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153201785 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123771229 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141638136 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.118176493 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09221446 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122483495 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13787081 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127805258 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159190845 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126460243 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.078385042 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123491857 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102708712 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084875308 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.14766319 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080472018 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171616643 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10305246 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.109269282 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125577068 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10977145 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110084454 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153085364 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.29222536 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109236246 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.073813188 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110210822 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.12097049 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14435838 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092062156 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111400533 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118911517 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082916229 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136444179 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080645993 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125080849 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.083077848 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126012153 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131339273 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082556722 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124542594 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107822181 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.105304776 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137208459 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161818469 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095893529 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088492584 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168016364 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128071295 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.107411695 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14213781 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154504806 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.105916312 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101822886 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146074821 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168692703 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093802224 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161349254 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107839978 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087714669 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.092309012 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124600016 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113474731 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.125923971 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085947037 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119893912 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162839328 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079357287 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098849212 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135132723 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08344077 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084708699 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107815252 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106116498 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100207617 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.10117056 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103676379 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134921643 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123509517 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10879168 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121940526 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099956052 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15816096 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09049691 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.104654251 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104307349 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.074010498 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.127954468 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149008939 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081521079 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151705861 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.116108361 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113734134 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115545966 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085222831 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129860348 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080928079 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073344836 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132035913 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108164352 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106572389 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.14060103 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111850734 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.117059864 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.112608839 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123071574 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121849897 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.124138764 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104821848 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08945265 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109719138 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121890913 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076338129 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089489551 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081261109 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103366572 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092441142 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084490882 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131906731 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11562131 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109481586 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108959718 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094836342 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13709655 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077433505 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119914336 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.11609818 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095064982 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.141697638 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141281549 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125795108 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.359786328 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140773363 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.079414964 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082416051 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.094903286 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128554457 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091507848 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.091280825 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119734555 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148678766 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132268713 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138297746 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12830346 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122541809 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157108892 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.077330102 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.124595248 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144351445 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125528646 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.106946467 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096467712 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.103717317 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143010451 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109034945 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175851244 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117475253 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127522301 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155494655 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.107030212 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084995729 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106786099 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13368494 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106302281 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141755574 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102527014 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092524083 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112216455 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.084641715 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101341732 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12813081 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11986933 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135916438 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.116114345 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134706894 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082180892 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114838871 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123442229 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122019931 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.070635813 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119542133 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155453185 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09872724 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273498326 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150497389 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08476643 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.139194667 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170696123 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144739432 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08984476 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110187812 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122230187 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127255256 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121707941 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138160898 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107757447 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138389624 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113002879 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.090300762 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091577402 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100520515 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107742942 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.09932232 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.105497606 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115194176 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.100214027 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132866411 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10717224 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11354113 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120464387 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.104334139 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.097382666 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10012683 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171842873 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120600441 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167099937 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.104611065 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.140867525 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159247762 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080519503 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084051878 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.083287367 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138353402 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088985019 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131730768 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.11378289 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119719563 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125580207 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139355697 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098736985 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.074071098 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111094372 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132444639 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124382657 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101220812 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104256806 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311280324 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.102990425 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084472841 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115578739 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119348018 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106468709 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166577798 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.068817129 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110646377 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082767493 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084076411 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127080732 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150073287 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084908785 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102153387 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123209659 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114226044 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127263835 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101863282 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115233541 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126689389 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146579663 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128856359 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09380053 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113717631 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128457083 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153198075 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105456605 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.10170159 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170484097 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149507305 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.156965834 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08975003 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11639843 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116528568 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111391169 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137587032 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088243161 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158982218 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086405273 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136170172 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105522226 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091768863 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129391584 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.113725507 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092743613 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143024196 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118305919 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086984879 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082027062 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117451944 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119843334 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258687502 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.080895571 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138816223 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.080024581 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135136962 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159636427 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08597063 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108411981 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099303092 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085517216 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107800712 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104943892 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091516333 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.102655649 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16891681 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089776718 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146572124 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13414821 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114138399 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134497208 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106191273 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.644578787 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082750021 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149903794 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118097198 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168352767 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10331467 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119574188 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112384531 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121612359 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142085896 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105488325 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.181696467 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132541955 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117725414 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083767395 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105019391 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107301278 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.091302739 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111939789 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117558118 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117299921 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.096771967 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117872621 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125554307 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.087470065 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099563214 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15204806 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116441228 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14269324 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13763532 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089747943 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270936828 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138280441 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085269998 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120160734 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149401267 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109532905 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103802762 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.101592035 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.10380876 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158509615 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078949163 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157431694 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125704494 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112357198 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115753392 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.111739672 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133019305 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107369102 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123568431 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095537885 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.11067784 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116543669 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086647879 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.082407472 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108647955 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112583024 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.102527894 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099770478 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.1029912 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1489232 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.078085887 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101654789 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118216059 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142709597 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169103785 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.093390321 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087926802 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121605154 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118068693 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114243435 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123188236 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.084429208 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086640316 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084193083 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.087341311 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110877061 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117075518 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117519915 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112884826 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158303028 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.088537308 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.227925834 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09879953 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107492366 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.07546231 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.082486205 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099505967 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099731367 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106804673 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112723691 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153066073 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.097917373 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.09246393 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092683846 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.079280651 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086795679 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124319118 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10879488 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116755813 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102040648 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.068273394 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105559698 seconds)
  done (took 59.468730049 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.119013055 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.091665183 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.105509273 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.153407705 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.130604823 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.208435323 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.164271039 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19683058 seconds)
  done (took 2.874424862 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.078443527 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.102868083 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.110196083 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.091503882 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.074249733 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.077168297 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.23037531 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.089684977 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.072692521 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.100250251 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.08623538 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.077246392 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.417959129 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.072992129 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.075964564 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.070818703 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.074180735 seconds)
  done (took 3.529318697 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.395838871 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.625857942 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.350201887 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.083435451 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.963158718 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.099542491 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.29013011 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.143381398 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.086205729 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536645087 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.413805656 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.13872544 seconds)
  done (took 18.762909444 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.089214281 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.082155598 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.095322004 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.094922213 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.085425744 seconds)
  done (took 2.087517558 seconds)
done (took 108.907758518 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.089698042 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.426197471 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.061793039 seconds)
  done (took 2.158065293 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.09313201 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.091339802 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.091378237 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.089756121 seconds)
  done (took 2.007569576 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.081473247 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.083443949 seconds)
  done (took 1.80023992 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.233806697 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.174260752 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.10267363 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.088953849 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.086355893 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.086771706 seconds)
  done (took 1.908057406 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.078961103 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.082037818 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.079112375 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.082924612 seconds)
  done (took 1.95946841 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.082709294 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.059040252 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.061200118 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.064821335 seconds)
  done (took 1.906635831 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.09404701 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.088882853 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.085765778 seconds)
  done (took 1.907690704 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106496045 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.093286298 seconds)
  done (took 1.836413526 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08720912 seconds)
  done (took 1.727307445 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098659513 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.105177953 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.134175838 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114563696 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141538604 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.111630237 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.0894321 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.090040283 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.08219633 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.091257202 seconds)
  done (took 2.698243862 seconds)
done (took 22.144399517 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.084933737 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.378505127 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.365365325 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.095445607 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67606732 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.362921104 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.975573404 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098903502 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.146428806 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074067986 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090840206 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.655565975 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.966109369 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.330139908 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.953263507 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.329154866 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.657450446 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075019738 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073975544 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074861212 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.961969374 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.075360131 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.075018337 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075899583 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.656961792 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.379522529 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074926456 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.329902511 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.075570229 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076983736 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.362374761 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093137668 seconds)
  done (took 16.321181228 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077263011 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125540894 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.079575087 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09063564 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.077278143 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.076820517 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.077825597 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.075929204 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12751389 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074674644 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091370196 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.074613706 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.078557114 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.076275441 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094582518 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.075392405 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.076025715 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075717286 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.077700844 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075785152 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093527667 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074957705 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.075435036 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.076155479 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.075329388 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087001939 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075960554 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.075293064 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07542409 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077962051 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07899902 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.076206502 seconds)
  done (took 4.273134727 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123325077 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129823405 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.080881589 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111415472 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118562864 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.076888413 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.150266275 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.099801065 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.133474036 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074788592 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091178825 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.075121525 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.108534225 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075666143 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.095419461 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.07576105 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07671522 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075737165 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.075181928 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075456033 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.094745437 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07500182 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.075499515 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.076337878 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.075576325 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.089943281 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07583131 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.075902137 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.075591208 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077085752 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.078853355 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.076182529 seconds)
  done (took 4.524402166 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.079503478 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.081518864 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08847533 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.089785277 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.075993039 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.079014504 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.079643282 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.075814604 seconds)
  done (took 2.306129363 seconds)
done (took 29.064595565 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.085506484 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.076018412 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.079174278 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.094960421 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.080802273 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.084072809 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.072972804 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.083654774 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.080230696 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.08028774 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.081593275 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.073937769 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.078354732 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.073855179 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.080720983 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.074658261 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.086447305 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.079915535 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.085097761 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.085179257 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.077585353 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079768443 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.082601651 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084875868 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084951584 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084842923 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.08383801 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.079253019 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.07488311 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.077551892 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.08356726 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.090649638 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.074513515 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084231573 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.073949432 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.074310765 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.078593948 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.074300662 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084627033 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.08261812 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.076141966 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.082936389 seconds)
  done (took 5.01786288 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.095177555 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.099370086 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.092162197 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.069174604 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.075755263 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.072529413 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.096997691 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.067474426 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.067683202 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.095938085 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.064029563 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.066399508 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07007217 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.061709177 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.068341604 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.06516173 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.069206115 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.063172017 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.068046795 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.067050482 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.096415359 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.062151978 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.083712391 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.070441077 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.063887986 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.069440656 seconds)
  done (took 3.609285333 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080916483 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.089934112 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.097300456 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.149219903 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.117027673 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.084187316 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.085687279 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.099982082 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.100734635 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.073186338 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.077635015 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.100261545 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094229111 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.08057931 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.074064403 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.090821488 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.092014847 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.075834983 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.079488891 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098232425 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.09280993 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.091873825 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097719422 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.090541962 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.073382958 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076648905 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.077515036 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.087132892 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076267873 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.083231189 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.076461251 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07723004 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.075674821 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.085289452 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.076452669 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.075779197 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.099759602 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084346365 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.084612177 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.075053478 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.0819098 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.075596189 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.097144465 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.130764129 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.073310744 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.079263453 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.077364682 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.084361312 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.073610496 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.100761738 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.085417258 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.074027177 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.077167659 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.073579201 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.073459714 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.076863214 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.075775205 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.076115214 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.082822396 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07961382 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.097976545 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.079033161 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.090206935 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.073801116 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.08252556 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.073320624 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.075270302 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.073479684 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09843827 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075495588 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.114749596 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.074609526 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.074840584 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082892784 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.082385224 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.080758981 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.074261822 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089999765 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.085633361 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.077549815 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.082176415 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07680839 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.076077215 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.102807345 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.077127326 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.075641401 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.07511467 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.079007124 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.076580898 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.075453584 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086477322 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.074240446 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.076531785 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.090110773 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.073827395 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.07519242 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.079013749 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.077928983 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.073711783 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084535318 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.077862851 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.075212011 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.08391836 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.074510336 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.076743088 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08597333 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.080636063 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.072909275 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.077484548 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.079022983 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.07441955 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.075672388 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.076447382 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.075757112 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.082839897 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.081284623 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.078248458 seconds)
  done (took 11.388286035 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.169440222 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.159132321 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.078326887 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.153863348 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.084112028 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.086144428 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.153014298 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.100336457 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.075045871 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.075499157 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.074929686 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114492837 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.109767076 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.120113593 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.08456269 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.074453301 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.096946313 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.118738498 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.155414917 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.149755647 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.097459912 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.082904799 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.076325516 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.0755881 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.076292672 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.084290326 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.091006203 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.082973908 seconds)
  done (took 4.608845607 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.086136663 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.110012949 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.081310323 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.097961229 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.09636428 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.0750306 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.077132951 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.076530511 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.091248609 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083826374 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.074472791 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078964659 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.08101648 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.077411407 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.074914097 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.081258607 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.08114296 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.075989666 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.077916919 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.079043877 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.084380581 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.097527716 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.077590166 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.076356624 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.079213683 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.073471429 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.069403893 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.089219067 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.074778551 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.09903322 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.071751839 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.079286973 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08816674 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.075466632 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.07476495 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.074056318 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.074318623 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.074275621 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.076148765 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.073160726 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.073048062 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.064321208 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.073450941 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084262865 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.087607269 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.063038399 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.079355301 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.079439466 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.080071598 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.071786347 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07776021 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.076914794 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.077452744 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.081677813 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.078426971 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.079715381 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.075694196 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.082764695 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.082587369 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073889384 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.071399608 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.072620084 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.079191869 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.071088918 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.08924432 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07942755 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.073325095 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.074553878 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.076137456 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.087922344 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.074247948 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.079328638 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.071933926 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.076260285 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.079272528 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.076010089 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.075658033 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.072997097 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.074343752 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.074717126 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.062127149 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.074468502 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.059841452 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.0773233 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.072558342 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.073112733 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073982923 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.078824409 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.085389307 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.075558125 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.080192338 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.075232173 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.073828548 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.076815544 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.066618823 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07702317 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084552233 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08809783 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.074412312 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.072250776 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.087726852 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.079603557 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.073408597 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.063622887 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.078883236 seconds)
  done (took 9.884509502 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.09902638 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.076773541 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.088393586 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.096124621 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.09276224 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.081330939 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.084830457 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.076154838 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.091295067 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.080644676 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.084225726 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.074811962 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.085353618 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.084942088 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.076821484 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.085334251 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.078493963 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.089872669 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.089365147 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.074771304 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.08350844 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.087816118 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.096137748 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.087597779 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085948909 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.087274427 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.095634825 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.083960052 seconds)
  done (took 4.106724746 seconds)
done (took 40.261673112 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.765112827 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.906375173 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.73356813 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.042223565 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.912397374 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.747358551 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.826168086 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.72727428 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.955409177 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.76852698 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.067434039 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.824531807 seconds)
done (took 65.064300414 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.826248996 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.87187788 seconds)
    (2/2) benchmarking "String"...
    done (took 1.975368366 seconds)
  done (took 5.509743257 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.000120148 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.37729672 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.974816372 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.730296563 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.736987044 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.040383223 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.555540444 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.244337993 seconds)
  done (took 30.324390513 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.909298529 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.962687278 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.444361902 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.477118518 seconds)
  done (took 15.509263641 seconds)
done (took 63.02047603 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.759503243 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.778482138 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.759384973 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.716222548 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.791722153 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.743447761 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.906701498 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.736625732 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.73008672 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.718974249 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.733160432 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.161231332 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.738897177 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.042349817 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.733550106 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.739761004 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.768842299 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.283401397 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.887314399 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.747815863 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.750230756 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.76532017 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.735333177 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.739561393 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.73035066 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.732071327 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.122675627 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.732990094 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.351727919 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.732463124 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.760759204 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.139263746 seconds)
  done (took 202.434606358 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.731357354 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.862441952 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.891156269 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.772579247 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.44434502 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.911148791 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.812623127 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.460410326 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.734588369 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.744599486 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.069188673 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.731354498 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.099609497 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.678376261 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.760670173 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.843038904 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.025129567 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.076169168 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.7675839 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.900475366 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.749526374 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.866816599 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.823924715 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.024148637 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.732145283 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.741902038 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.901561098 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.75486727 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.926232929 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.991942987 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.752696937 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.740256113 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.952970512 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.603847408 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.748192095 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.748861015 seconds)
  done (took 170.041808694 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.925650914 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.735791295 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.731020924 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.733250247 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.746017583 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.732889122 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.859608141 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.857580021 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.379917858 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.283316838 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.73622532 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.783471482 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.733722456 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.537345147 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.732899561 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.801000652 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.74484156 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.735115178 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.74852804 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.762134939 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.73404632 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.736044146 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.858212272 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.747211382 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.734687326 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.740088861 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.734392802 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.73763843 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.105861122 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.731675136 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.956432098 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.73715903 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.740181162 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.989929659 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.735425979 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.735678902 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.59483356 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.898648329 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.826169144 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.735078614 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.741732711 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.734207887 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.952037093 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.734188964 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.736030242 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.736398605 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.738369586 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.886074969 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.734303577 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.860063748 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.733527685 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.217778926 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.737018376 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.733718223 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.596782067 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.341060601 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.737476579 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.738009708 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.737120905 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.735906149 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.742315144 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.474073688 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.809838685 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.736428228 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.73922109 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.741123896 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.734910477 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.919249932 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.735122638 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.151589236 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.796081744 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.964317907 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.856275034 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.739517674 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.803735143 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.828207909 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.736685788 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.737300742 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.737504386 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.737398369 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.817081869 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.736237329 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.867190374 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.743148406 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.738573736 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.787680746 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.806854532 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.738743843 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.583753934 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.740836191 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.734844616 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.005689406 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.802873916 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.736641029 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.735221266 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.737029554 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.861797373 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.86051381 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.46030092 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.739664717 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.737005427 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.475909859 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.883003953 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.737314974 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.880525458 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.740349021 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.820722535 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.742094954 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.738061301 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.76840823 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.735929167 seconds)
    (111/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.737229346 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.737687377 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.792116109 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.114169646 seconds)
  done (took 398.628917856 seconds)
done (took 774.748892496 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.337922693 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.307793521 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.399886896 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.323227714 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.299819971 seconds)
  done (took 13.339808719 seconds)
done (took 15.005968678 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.827458673 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.838088365 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.766492195 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.831984821 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.762585393 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.832435816 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.814972453 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.766424528 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.796673814 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.76543345 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.801052806 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.764562491 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.751733212 seconds)
  done (took 24.991824161 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.978409226 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.97391139 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.807319764 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.993166931 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.78380278 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.971088988 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.899351138 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.889984235 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.888683081 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.754346658 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.750271535 seconds)
  done (took 22.364365856 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.983432618 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.982951923 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.813349173 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.974227248 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.785100902 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.979010697 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.903222641 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.891721519 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.889660749 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.755891749 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.751899491 seconds)
  done (took 22.382774252 seconds)
done (took 71.404408078 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.748584373 seconds)
  done (took 3.42231094 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.774641026 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.944085009 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.755380342 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.75096232 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.748161314 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.747189019 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.750829865 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.744963593 seconds)
  done (took 15.891653212 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.744204966 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.745986993 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.742770127 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.746696041 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.746540373 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.743712673 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.747472832 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.744838568 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.746008911 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.747269312 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.746006458 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.74393282 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.745017979 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.742532384 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.747043755 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.745976758 seconds)
  done (took 29.59988143 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.744842839 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.74401169 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.743915503 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.743848095 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.743309666 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.743900435 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.74567474 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.744315758 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.74390854 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.745791951 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.744946989 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.743895162 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.745414498 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.743433038 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.745055412 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.745962601 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.744686811 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.744951803 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.748973813 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.747334619 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.745562405 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.746437971 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.745243496 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.745801804 seconds)
  done (took 43.559344293 seconds)
done (took 94.141766171 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.516856272 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.472976082 seconds)
  done (took 9.664768235 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.748338346 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.748753374 seconds)
  done (took 5.17494323 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.746619849 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.74845495 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.750260334 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.749881603 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.748887794 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.749151594 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.750445273 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.751762539 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.749022047 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.750043686 seconds)
  done (took 19.169800799 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.750443532 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.750681203 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.748093904 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.752370419 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.749280893 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.747682529 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.749900803 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.749523279 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.749876189 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.746307341 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.749378134 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.747946187 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.75190899 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.747541274 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.751199067 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.745415322 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.745977265 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.745242873 seconds)
  done (took 33.154850034 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.751694849 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.7506594 seconds)
  done (took 5.178858221 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.747247276 seconds)
    (2/7) benchmarking "second"...
    done (took 1.745405318 seconds)
    (3/7) benchmarking "month"...
    done (took 1.748577057 seconds)
    (4/7) benchmarking "year"...
    done (took 1.746831113 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.747154137 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.746083553 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.746262865 seconds)
  done (took 13.903002927 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.752822255 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.887648723 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.94996925 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.382276732 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.750135281 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.759005433 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.67602139 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.757445063 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.761969571 seconds)
  done (took 19.352322416 seconds)
done (took 107.2680205 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.613077883 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.747378605 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.989451069 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.849663059 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.762592138 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.042868133 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.773365385 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.014608711 seconds)
done (took 42.464313504 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.829642225 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.512650335 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.518101904 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.772440525 seconds)
  done (took 15.480374622 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.728559884 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.051193648 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.750343731 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.581148702 seconds)
  done (took 21.790586495 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.111085154 seconds)
    (2/2) benchmarking "read"...
    done (took 2.091790424 seconds)
  done (took 5.885569192 seconds)
done (took 51.661675414 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.750517002 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.752499332 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.745341749 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.747117026 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.750513094 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.747625729 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.749156882 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.749767093 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.749592481 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.750383744 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.749781411 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.752370059 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.750353261 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.750543418 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.747477331 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.749228753 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.752942533 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.750732752 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.747786437 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.747157892 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.748205242 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.752228349 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.74896941 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.74828481 seconds)
  done (took 43.666974063 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.750815606 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.748238257 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.752163931 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.751575344 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.747431609 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.749811987 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.754091266 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.748305548 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.750803133 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.752197377 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.748267431 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.749729484 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.75110543 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.749223709 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.751962505 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.747092248 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.752896795 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.748630992 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.752083318 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.750796378 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.75265262 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.749490432 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.750143312 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.750503507 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.751651888 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.749755764 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.752197428 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.749887387 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.752267514 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.749767925 seconds)
  done (took 54.195265266 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.756402934 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.76199736 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.753050496 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.752559819 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.754450284 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.750568458 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.753377409 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.755798428 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.75500729 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.754756958 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.756812824 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.753779307 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.754562782 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.755630969 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.75376963 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.75357818 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.752474445 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.753613332 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.754715395 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.754274984 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.75195414 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.753116106 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.752821172 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.753930228 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.754202739 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.755537643 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.75511647 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.755533862 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.754120634 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.753074316 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.753397971 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.753980874 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.75462008 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.755078028 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.753470918 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.755330047 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.760618957 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.764392605 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.756090432 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.752090401 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.75372761 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.756121868 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.752751202 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.755547427 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.755812683 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.7555719 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.751417739 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.755266921 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.75566117 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.755419884 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.75626142 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.757411082 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.756342933 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.757448827 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.754346722 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.757080067 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.757541523 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.757383445 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.757090149 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.757288622 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.755200894 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.758694402 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.757757269 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.756557344 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.75726567 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.756435791 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.757110639 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.75672267 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.757346759 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.7565009 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.757346961 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.758176182 seconds)
  done (took 128.072607331 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.758394819 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.755595385 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.754106826 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.753286286 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.755335719 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.759990653 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.755508461 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.757163594 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.753442064 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.759209481 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.756880514 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.75432149 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.7534313 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.756182779 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.758582457 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.756953494 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.756329206 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.754412909 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.757300693 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.758283374 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.758986701 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.756676594 seconds)
  done (took 40.323938893 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.758266747 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.757370195 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.755388139 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.757010137 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.755221094 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.759079801 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.759504354 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.757834358 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.758312059 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.757402166 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.756333186 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.760123762 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.756129426 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.754955082 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.757003958 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.756489285 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.759086529 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.757290393 seconds)
  done (took 33.318757597 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.757329917 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.756382396 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.758592198 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.757609474 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.756582518 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.759436819 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.757619935 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.760162771 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.759702346 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.758710112 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.759841041 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.75908133 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.759325912 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757256683 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761159234 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.756214555 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.760406943 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.75772844 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.760785839 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.75717855 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.757120346 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.757732977 seconds)
  done (took 40.371743208 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.761000831 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.759247107 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.75798224 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.75590235 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.758140834 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.758714101 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.759228331 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.756497459 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.760135556 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.761127385 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.758252427 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.758762377 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.756723142 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.759411227 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.758052207 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.758570263 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.760997843 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.75728759 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.760597162 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.757729647 seconds)
  done (took 36.86167048 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.762877673 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.762110787 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.760966126 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.762187623 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.763441882 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.763304394 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.763817424 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.762270759 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.762188585 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.763482009 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.761872207 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.763987735 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.760184708 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.763148839 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.762246035 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.762145205 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.762300205 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.76294148 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.76138884 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.76381074 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.764909213 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.76242164 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.764818904 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.762075604 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.762728293 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.763088415 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.762757865 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.7627118 seconds)
  done (took 51.044782088 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.76350105 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.76039991 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.759592576 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.759349495 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.761590861 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.761404208 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.760052557 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.759309671 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.763079586 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.760733983 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.762695036 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.762596484 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.763898765 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.761060808 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.764443307 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.764547587 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.762637903 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.760978643 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.761964473 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.759978082 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.762574892 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.762737609 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.763015099 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.758907892 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.758288706 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.762883381 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.761312559 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.760275927 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.762724335 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.761582532 seconds)
  done (took 54.536980073 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.782202975 seconds)
    (2/2) benchmarking "in"...
    done (took 1.782867485 seconds)
  done (took 5.253467716 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.76331781 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.763788754 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.762695898 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.761875523 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.762304883 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.765566293 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.763582679 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.760677153 seconds)
  done (took 15.792899635 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.764334448 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.762455828 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.763844841 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.761440618 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.767334211 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.765870656 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.770180072 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.765560191 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.767585184 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.767157208 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.772771159 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.777152049 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.766174315 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.7660583 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.765251379 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.768686643 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.767394031 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.76695928 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.766604832 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.764935178 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.765780317 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.767315496 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.766517596 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.762436162 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.766165594 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.776391417 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.768950288 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.76374601 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.767393245 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.767466227 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.765010416 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.76246364 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.767696091 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.76637305 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.763466349 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.768076511 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.774788012 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.764524507 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.772583959 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.765914028 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.766085897 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.763284927 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.767881546 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.767634634 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.766187498 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.768322213 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.764497653 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.762418846 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.767696455 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.770614365 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.772781145 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.766796461 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.766382316 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.771501028 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.769589205 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.775603616 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.767793444 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.770777849 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.779804172 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.778526255 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.782188178 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.777889737 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.769842578 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.767703737 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.779587334 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.791699905 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.773946666 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.763473995 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.765134335 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.769664585 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.775358768 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.782103904 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.779380768 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.766892452 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.766469441 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.767210698 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.767860526 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.767912418 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.775056484 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.771618246 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.768609523 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.769140782 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.777177779 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.792119607 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.767211921 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.770107889 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.770342398 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.768978803 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.771353203 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.781340346 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.769573554 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.769011473 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.768302422 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.768850071 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.770884779 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.770429634 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.767855471 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.769635697 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.767829402 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.766132883 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.771781643 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.769018058 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.782765528 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.770898428 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.770271752 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.776249462 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.769579295 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.771291224 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.777680973 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.771718618 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.76978541 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.770677133 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.776331271 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.766329154 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.773671613 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.780670555 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.770596663 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.769306125 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.769227688 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.768535035 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.782629815 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.799409296 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.77042098 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.769974897 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.776656738 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.784947509 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.772649385 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.770250398 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.770922505 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.768437102 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.768582953 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.773357872 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.77048088 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.772342254 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.77178736 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.773088408 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.77067705 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.770774008 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.774192398 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.773803267 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.770076787 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.772117488 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.772545016 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.773477878 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.774634332 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.771997698 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.776790009 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.772105275 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.773493766 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.773265856 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.768161689 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.770701298 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.773306861 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.773489188 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.773041008 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.771419527 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.771312799 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.772507163 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.77222653 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.769611599 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.772272005 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.773429359 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.775833028 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.773527679 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.776561678 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.771922918 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.76899257 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.770955115 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.771005255 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.771930586 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.772126095 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.774569475 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.77569571 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.782552877 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.772530778 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.774074933 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.773851062 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.774471336 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.772571902 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.774345524 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.77698006 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.783425411 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.775014388 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.782649024 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.776458252 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.774103215 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.771147351 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.775192702 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.772917681 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.775091592 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.775683746 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.783929847 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.785361608 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.786337272 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.776789515 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.776601738 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.775867148 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.77881189 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.779997438 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.773760482 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.773962809 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.773559202 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.766532647 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.76795203 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.7694832 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.76759129 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.768853845 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.76788231 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.766950779 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.771039519 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.76691242 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.770305026 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.770336367 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.764290411 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.767060325 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.767962986 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.766866099 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.766865239 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.768031049 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.769809455 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.768354056 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.767922697 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.774609952 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.765114763 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.770390034 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.769804839 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.770471501 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.76749079 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.769104941 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.77189571 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.770596892 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.773713042 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.769811955 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.771369528 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.777681699 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.769661556 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.769435837 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.772765362 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.768400986 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.764614954 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.772310006 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.779515211 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.769370125 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.76929335 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.770508139 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.768676827 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.770250352 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.776382655 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.766198425 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.770014518 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.76944514 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.771228568 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.765807705 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.773537491 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.770983869 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.771084537 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.771275618 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.770169712 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.770013547 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.773070446 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.773014472 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.772144068 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.769797401 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.772975712 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.782131803 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.775234864 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.772138968 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.773276101 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.770100569 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.776252674 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.772696755 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.772800642 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.772334274 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.78358253 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.781091457 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.778001827 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.772585394 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.771121109 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.776449287 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.774383863 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.776706527 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.772642011 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.772613706 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.773264521 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.774270691 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.768232023 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.774542144 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.772249195 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.774791487 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.775670847 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.77606305 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.774701162 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.772246759 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.774814902 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.773716537 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.771177846 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.774457589 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.773770814 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.778019278 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.775743671 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.771764486 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.774444487 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.779358142 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.773403039 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.775977491 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.772976585 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.774888708 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.772374263 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.775387766 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.772705802 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.776128084 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.783866984 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.778204014 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.785598688 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.774586444 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.784132901 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.774708641 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.778043454 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.784190768 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.770608171 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.773325949 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.775121416 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.77497149 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.782127818 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.77574273 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.774465798 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.778328248 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.774804471 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.774904262 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.77474799 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.775328982 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.774330747 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.774888101 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.781806945 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.776226968 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.778457882 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.774422188 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.771755914 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.775633193 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.773621098 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.775671254 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.778591684 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.775891179 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.777000674 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.774446645 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.77747631 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.774504086 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.778131287 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.774324976 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.771822329 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.776786854 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.783030764 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.777976605 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.78051006 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.774795122 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.781183878 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.774675879 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.785953664 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.776110771 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.775847972 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.777386112 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.776300783 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.776390572 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.774717976 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.777668927 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.77582057 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.77801971 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.781012624 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.776757589 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.778275856 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.776064481 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.777927036 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.774140137 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.786484337 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.803961523 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.778681231 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.78029467 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.772485193 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.77876246 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.779534213 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.776581817 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.775607479 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.779281542 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.788174694 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.78441587 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.775515234 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.777507067 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.776563071 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.777651204 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.776288655 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.77628776 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.780242914 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.778572657 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.7781598 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.778657001 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.781617885 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.775398811 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.779979625 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.777788644 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.777652311 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.787822254 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.779389334 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.778569197 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.778901629 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.777018073 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.781237887 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.776478658 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.776609785 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.783206128 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.775446563 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.780617061 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.786267614 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.78775966 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.780202351 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.779368334 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.777937928 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.780728123 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.780288122 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.779201678 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.780125744 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.77881885 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.779409659 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.778455571 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.779758139 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.775349872 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.78245189 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.780110189 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.778775123 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.78242185 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.78757448 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.778419203 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.776061476 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.778981417 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.776826281 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.778424579 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.780526233 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.786272687 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.784106735 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.793202601 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.789376744 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.785587103 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.781413013 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.78202021 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.786176888 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.77903553 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.780730359 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.781105958 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.780521989 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.781111463 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.782857652 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.779267681 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.786316105 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.780096489 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.78007945 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.788599434 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.783508223 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.781733375 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.782127424 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.784693647 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.781599006 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.776220735 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.781641678 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.779921469 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.786340197 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.782043008 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.783283757 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.784531104 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.781706211 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.782485551 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.787798415 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.779809667 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.783144776 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.778256789 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.78044028 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.780909669 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.7829287 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.77801699 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.782252125 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.780639144 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.784628415 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.789641508 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.778086287 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.784500247 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.78180369 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.782045557 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.781706013 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.780243243 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.77996502 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.77809808 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.781801109 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.779855664 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.781348034 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.785267743 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.781140726 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.783794147 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.78159385 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.783044777 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.78453884 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.79288795 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.789656927 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.778976775 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.781676795 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.782494252 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.784061609 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.782665792 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.78194424 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.783449546 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.784098 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.78217575 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.782129213 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.781251009 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.785551441 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.798630442 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.781897416 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.782984819 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.783301724 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.785042249 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.783205288 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.778286498 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.782102379 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.783132692 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.787660616 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.793863675 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.78312379 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.790274104 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.785205872 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.785703382 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.787369526 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.786060829 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.792588661 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.786990164 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.78546221 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.782501461 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.788383553 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.803974176 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.783460594 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.793502745 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.814219509 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.784394259 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.785217241 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.783968871 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.782150489 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.783766367 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.78493904 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.783714979 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.781841154 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.780489561 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.782395403 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.784720603 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.790211123 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.78436747 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.781357141 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.781675529 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.783263999 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.787260255 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.779843019 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.784721347 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.781523534 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.78401962 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.786349108 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.784682274 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.782625431 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.797383257 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.794657479 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.783509261 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.784818508 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.779348423 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.787007081 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.789089658 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.797561456 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.794528887 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.782594519 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.784146183 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.788918611 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.784394688 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.780015978 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.785787163 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.785603335 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.785392363 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.782389537 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.800229136 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.795779428 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.789788837 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.785750478 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.784403642 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.785457619 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.785328147 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.785224883 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.787902284 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.7871717 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.787288205 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.789520712 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.786498395 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.785298253 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.790720754 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.792892035 seconds)
  done (took 1060.636690126 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.783046049 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.782431213 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.782487131 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.781375272 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.782302765 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.782227464 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.782675961 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.782144564 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.782386203 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.781011982 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.781902263 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.783031928 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.782176249 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.783901508 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.781758524 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.78357588 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.78283883 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.781071643 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.783712276 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.783411604 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.782094124 seconds)
  done (took 39.14268151 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.784587149 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.782264412 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.782912456 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.785344476 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.780158614 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.786644216 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.782666365 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.785455732 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.786360271 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.784362117 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.787181195 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785332597 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.783909397 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.780166534 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782205945 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.784897668 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.787169077 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.78361141 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.786163316 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.780661184 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.785159992 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.783831964 seconds)
  done (took 40.962785812 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.786691318 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.786480743 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.786031675 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.784860875 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.786897191 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.783264246 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.78638563 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.787572042 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.786673119 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.788142829 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.786780038 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.788580456 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.795339109 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.794015729 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.78892428 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.786189747 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.930679833 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.789420882 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.787776892 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.790101485 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.783019773 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.793205652 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.785359957 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.786077479 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.791208033 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.787461171 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.78650571 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.786592 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.786567379 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.788741517 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.795054059 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.786054674 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.786468313 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.79040657 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.7877155 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.788536499 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.79235955 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.789661668 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.783918636 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.785180169 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.79676058 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.810207343 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.790184927 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.794372105 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.786408106 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.787450207 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.792005381 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.797582838 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.784749175 seconds)
  done (took 89.514484524 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.785760752 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.784482596 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.785325152 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.785888147 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.78800059 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.788264574 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.785704562 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.785702912 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.787972396 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.786264608 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.786323887 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.784851478 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.783588972 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.788966935 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.787811675 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.78462183 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.783710503 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.785464868 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.785878541 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.787280176 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.785678312 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.787783011 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.78812642 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.785939873 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.789894495 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.785577472 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.784726973 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.7874551 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.783996633 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.78484744 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.787868823 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.785959353 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.786441544 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.783530721 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.783495455 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.786531696 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.788051739 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.783493505 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.785979013 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.783068709 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.785405693 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.787683892 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.786491953 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.784553052 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.783685501 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.783531759 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.785679602 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.783762775 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.78560984 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.787195897 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.786843246 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.78475242 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.786515062 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.786466094 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.787511054 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.787199156 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.784690441 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.785145758 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.78665168 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.784352294 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.783299563 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.787848571 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.784618525 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.786224434 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.786522648 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.783699176 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.783059464 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.786600566 seconds)
  done (took 123.15264905 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.789425461 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.787038753 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.787254474 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.788351901 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.787800196 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.788195856 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.788788816 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.788086313 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.786908289 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.786260745 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.788215047 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.787387845 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.790086239 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.78677116 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.787453331 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.788460782 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.788635089 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.791629993 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.788385626 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.7886138 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.788924211 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.787692384 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.788493355 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.787060262 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.787963369 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.78983816 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.788500753 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.788470359 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.789389186 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.788556866 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.788238665 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.788401257 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.789684689 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.789098127 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.790224634 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.790223691 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.788122145 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.787514046 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.788684946 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.788548589 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.787087391 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.788118666 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.787844765 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.789533726 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.787646045 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.787474052 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.787459245 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.788254419 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.788007002 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.789149752 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.78859945 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.789761594 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.785533481 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.787399869 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.786385333 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.7859743 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.78649441 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.779834523 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.780053251 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.78033631 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.780001661 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.779896325 seconds)
  done (took 112.542696463 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.777885311 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.777606533 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.775302679 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.77494942 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.779401066 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.776238823 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.777487076 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.77731771 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.777523603 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.777806655 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.778298533 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.774163453 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.775034444 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.776242375 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.774756405 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.774713516 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.775526116 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.774336079 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.777918768 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.773905203 seconds)
  done (took 37.233843724 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.77708453 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.779754284 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.773401279 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.774690669 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.776905877 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.774883724 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.778617089 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.776793357 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.774298402 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.777467761 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.778356585 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.777905263 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776415533 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.775285111 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.777790607 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.775279551 seconds)
  done (took 30.129059842 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.775769557 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.778689581 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.778779764 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.778294556 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.774228656 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.774850131 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.777056688 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.773994753 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.774745154 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.777555935 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.777663915 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.778603054 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.778040979 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.778406594 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.774959636 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.777555608 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.774579136 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.777234313 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.776843889 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.779025272 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.776029843 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.77520819 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.777524721 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.778580147 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.774691044 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.775150656 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.775036851 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.774846444 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.7754595 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.77808474 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.77370532 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.774867733 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.774891948 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.773873057 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.780978862 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.773289447 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.777279937 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.777310837 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.777263986 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.776656924 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.777901612 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.773188947 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.776115938 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.776147731 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.772182563 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.776915378 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.773063063 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.772728905 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.772691824 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.772372725 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.775903186 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.779975312 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.773501149 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.775827212 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.773778932 seconds)
  done (took 99.385616598 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.77375239 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.775869134 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.769913728 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.772035984 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.773516523 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.771514152 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.773462784 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.768912081 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.768873942 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.77160028 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.770057611 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.771579383 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.771430113 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.76940083 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.769585105 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.770136164 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.766847629 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.766700839 seconds)
  done (took 33.575651287 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.766717692 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.767170813 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.770378596 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.766597841 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.76807705 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.769103887 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.76692825 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.76883754 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.769144325 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.768534487 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768070016 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.768862122 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.769372471 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.769649992 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.767662651 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.768985963 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.770503153 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.768503768 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.767255491 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.76627533 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.769384235 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.770297316 seconds)
  done (took 40.604666379 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.769197569 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.769269967 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.784532257 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.789655793 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.793363967 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.804425549 seconds)
  done (took 12.405656445 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766916478 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.770678502 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.76781327 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769998093 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770098728 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767106847 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767766055 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766267559 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.771927751 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76678564 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766108226 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769249521 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769327399 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767643602 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770107724 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769562226 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766844339 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766300712 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766844119 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770659728 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767357948 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768986026 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765667504 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766116429 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765917773 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768296345 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768777424 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765709059 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765952812 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768555769 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76869613 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.769858057 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767227966 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767408069 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767594266 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768569771 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766612993 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769517973 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768210198 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766262776 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.767075833 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769000886 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769610223 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766058048 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766741078 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765044769 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765849409 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765366689 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765332234 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769190766 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767813491 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764745187 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767513152 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768322136 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769298347 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769341169 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764698528 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766230028 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.76856487 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768062464 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767634327 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767959914 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766273991 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765252421 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768176507 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767933811 seconds)
  done (took 118.363976647 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766977131 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.765842785 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766164953 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766379286 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766769782 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76503364 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764986558 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766899615 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765224776 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765311595 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768921128 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765064742 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764093852 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765070913 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765317584 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767456984 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764448773 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765541015 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765068857 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767813626 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765617904 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766497212 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764753555 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764358162 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764780941 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769753703 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767745239 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765386072 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.764412052 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765756177 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764368125 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765001603 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765434793 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.763223319 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764299152 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764408682 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764779037 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764748451 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766787273 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768026252 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.763998423 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767687643 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764069674 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.76690867 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765445409 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765276227 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764243524 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.763517473 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.763896853 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767132476 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.7660951 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765524082 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765109352 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765119884 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765653655 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765715564 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.763619101 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764221041 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.764390352 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767480685 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766538059 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.763040382 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768949015 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765008744 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764889827 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764875285 seconds)
  done (took 118.222364727 seconds)
done (took 2460.98988303 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.814043557 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.755845352 seconds)
  done (took 15.265096037 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.937102349 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.889593297 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.774169516 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.825314912 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.777172402 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.795399197 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.794232868 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.773210356 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.775096598 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.773466511 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.773204802 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.962323654 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.82986104 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.771579479 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.772741521 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.865827446 seconds)
  done (took 50.957761375 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.777754086 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.776727938 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.786840172 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.779456882 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.775430065 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.792411718 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.811816426 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.779390498 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.838643623 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.791881093 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.903136974 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.793277877 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.776896081 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.829153647 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.790705291 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.791978908 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.868226896 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.853201881 seconds)
  done (took 34.21786847 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.855414304 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.777365209 seconds)
  done (took 10.341235965 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.798160238 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.794491013 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.816169509 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.78473871 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.785851241 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.784009415 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.782184395 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.816634498 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.797561092 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.79142128 seconds)
  done (took 69.656080515 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.782614188 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.776768651 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.776935425 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.775968634 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.771348721 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.774648042 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.775868962 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.773369542 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.445716526 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.812264317 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.784027504 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.783365062 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.7774008 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.777265801 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.774372366 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.799482916 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.881982842 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.775740027 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.772348323 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.783506682 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.777421927 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.832317026 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.792054471 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.779231137 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.807683964 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.444058851 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.785650013 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.782681308 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.886671522 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.772996382 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.778048958 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.778745623 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.780532797 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.159833233 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.039105459 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.778259375 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.794601879 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.78631584 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.773965444 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.882337941 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.778577119 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.784373977 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.521779262 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.022568321 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.874831985 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.821198784 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.098211434 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.796354829 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.778612324 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.808342386 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.783026757 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.777847951 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.791954501 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.266620376 seconds)
  done (took 127.199283285 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.773119039 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.137588969 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.944482627 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.774271135 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.0633957 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.986391496 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.776355464 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.823323648 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.777407688 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.009908066 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.03563154 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.883618381 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.776661421 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.775283496 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.776075912 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.773253717 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.933856433 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.849763894 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.776303514 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.772486252 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.806145549 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.018769299 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.899479707 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.774703621 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.805458648 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.990010277 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.89961003 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.881744605 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.574115669 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.774330096 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.840221052 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.776283116 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.774591017 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.773047426 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.932956412 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.872859694 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.86411463 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.776851545 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.774754328 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.775316072 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.539464928 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.97707162 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.874470378 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.919258857 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.925515595 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.984102615 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.561332448 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.774224788 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.521438578 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.940882402 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.006290508 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.01236755 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.900907012 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.777111513 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.109321755 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.773972754 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.774663115 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.026770562 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.920297128 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.87646422 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.779458276 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.778230978 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.774111226 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.075313659 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.777826657 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.873539763 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.778967192 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.775869822 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.875790934 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.87991362 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.915391218 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.988828737 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.808406606 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.505265732 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 3.987830028 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.025211472 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.845743297 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.030052178 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.779848395 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.775625051 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.858787019 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.618748747 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.033161499 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.068402847 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.031274297 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.81333187 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.506440102 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.777017504 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.00542566 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.000042831 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.03828049 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.926394217 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.015723516 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.098066156 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.779439807 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.77565263 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.001779513 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.915942978 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.779524926 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.129982117 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.014116145 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.325561261 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.798147991 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.085423152 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.910305932 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.780128302 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.43731207 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.77857566 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.009885366 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.821800222 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.778868857 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.776668384 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.000110442 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.771666643 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.777718785 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.668909275 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.842638909 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.778885043 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.012635973 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.780610703 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.051452617 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.778900097 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.020005864 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.771326062 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.812228655 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.955775549 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.925430662 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.781960625 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.025091129 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.024948452 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.896782033 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.054213735 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.661822417 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.777941938 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.068981297 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.78032292 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.777806366 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.949697887 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.77993247 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.926826569 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.780670808 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.07317235 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.802140374 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.014300636 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.783116902 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.038723194 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.814836683 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.835440299 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.783327048 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.9070499 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.779819165 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.703377139 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.940775043 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.78294899 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.781257746 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.33579114 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.780273899 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.931058525 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.016783191 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.80525138 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.855925308 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.449831844 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.778227218 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.86577867 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.805943631 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.172238331 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.780342029 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.035666731 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.783122925 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.779747082 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.780003125 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.075652847 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.018421785 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.781720232 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.781425628 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.694095678 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.781697797 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.780384367 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.965868821 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.116604459 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.779439328 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.986516307 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.785339691 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.909976285 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.788291596 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.855727482 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.119611639 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.779137455 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.780807355 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.780199727 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.780099541 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.783434695 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.992584369 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.811044279 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.301149601 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.921193146 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.059440208 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.0955268 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.034187693 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.827353472 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.785924494 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.045655981 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.783721276 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.847058561 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.783899686 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.803997072 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.016420042 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.787222871 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.045583776 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.063869383 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.736261262 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.833417672 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.783431687 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.783389695 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.781641672 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.931008878 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.87377938 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.783655753 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.784108475 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.900338864 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.911468737 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.000861632 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.788890939 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.823678343 seconds)
  done (took 882.716300145 seconds)
done (took 1192.043977449 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.787060281 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.789168433 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.776036446 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 7.230550984 seconds)
  done (took 29.3000323 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.795287905 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.793306002 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.793894924 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.793623391 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.796203996 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.794898661 seconds)
  done (took 12.486300491 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.808687335 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.790557863 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.792712365 seconds)
  done (took 21.110649736 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.862897848 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.180057376 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.899161284 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.220992363 seconds)
  done (took 9.881905005 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.798839276 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.795216226 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.797232841 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.794731626 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.797213191 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.798135592 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.795755387 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.79736847 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.797543497 seconds)
  done (took 17.892310059 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.948515685 seconds)
done (took 96.332479852 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.782450041 seconds)
    (2/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.026992676 seconds)
    (3/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.054130554 seconds)
    (4/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 7.107138931 seconds)
    (5/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.004501083 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.854250966 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.888795765 seconds)
    (8/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.066554842 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.878503085 seconds)
    (10/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.846881553 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.801722383 seconds)
    (12/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.950011258 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.879674228 seconds)
    (14/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.809055765 seconds)
    (15/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.663387438 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.487331311 seconds)
    (17/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.795278132 seconds)
    (18/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.492643758 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.416972166 seconds)
    (20/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.300175325 seconds)
    (21/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.94258843 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.762570382 seconds)
    (23/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.89472004 seconds)
    (24/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.026252149 seconds)
    (25/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.787992228 seconds)
    (26/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.269984642 seconds)
    (27/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.815195018 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.917267259 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.883841062 seconds)
    (30/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.892732835 seconds)
    (31/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.827076213 seconds)
    (32/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.01878789 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.764716221 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.81208724 seconds)
    (35/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.961026622 seconds)
    (36/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.774866895 seconds)
    (37/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.032651798 seconds)
    (38/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.872961257 seconds)
    (39/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.895199308 seconds)
    (40/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.228589116 seconds)
    (41/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.776146585 seconds)
    (42/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.453260443 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.556087175 seconds)
    (44/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.074555809 seconds)
    (45/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.791051662 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.830470267 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 2.011658905 seconds)
    (48/309) benchmarking ("sort", Int64, false)...
    done (took 5.459280423 seconds)
    (49/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.215883213 seconds)
    (50/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.01477928 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.142428896 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.04388367 seconds)
    (53/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.786862877 seconds)
    (54/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 3.534751614 seconds)
    (55/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.807560092 seconds)
    (56/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.886899226 seconds)
    (57/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.257075286 seconds)
    (58/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.203260287 seconds)
    (59/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.882613346 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.585420498 seconds)
    (61/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.893124021 seconds)
    (62/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.786357588 seconds)
    (63/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.816155745 seconds)
    (64/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.793811906 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.707550769 seconds)
    (66/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.816673461 seconds)
    (67/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.053379263 seconds)
    (68/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.789564536 seconds)
    (69/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.809235213 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.049508944 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.19643349 seconds)
    (72/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.902247214 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 3.129911578 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.603835892 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.117313359 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.965410599 seconds)
    (77/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.898992892 seconds)
    (78/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.883247429 seconds)
    (79/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.975369255 seconds)
    (80/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.487837221 seconds)
    (81/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.803119963 seconds)
    (82/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.87882126 seconds)
    (83/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.11551766 seconds)
    (84/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.144692042 seconds)
    (85/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.809168167 seconds)
    (86/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.946614882 seconds)
    (87/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.884026183 seconds)
    (88/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.788185435 seconds)
    (89/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.937129522 seconds)
    (90/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.775874771 seconds)
    (91/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.88974732 seconds)
    (92/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.810305969 seconds)
    (93/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.11616191 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.001573357 seconds)
    (95/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.964870482 seconds)
    (96/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.213748476 seconds)
    (97/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.776366129 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.563934592 seconds)
    (99/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.917917281 seconds)
    (100/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.813364246 seconds)
    (101/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.353212474 seconds)
    (102/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.88737274 seconds)
    (103/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.240445732 seconds)
    (104/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.77966469 seconds)
    (105/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.989795786 seconds)
    (106/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.773915344 seconds)
    (107/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.896876314 seconds)
    (108/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.798808526 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.127204905 seconds)
    (110/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.932395022 seconds)
    (111/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.791942125 seconds)
    (112/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.869076247 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.919211272 seconds)
    (114/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.816346667 seconds)
    (115/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 3.583509644 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.796757186 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.090382648 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.154198636 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.140930655 seconds)
    (120/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.820662201 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.907250994 seconds)
    (122/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.814532572 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.009771406 seconds)
    (124/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.814889025 seconds)
    (125/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.062157394 seconds)
    (126/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.79493876 seconds)
    (127/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.875068477 seconds)
    (128/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.044240381 seconds)
    (129/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.108334443 seconds)
    (130/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.796601279 seconds)
    (131/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.04669729 seconds)
    (132/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.049403762 seconds)
    (133/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.823269222 seconds)
    (134/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.472945964 seconds)
    (135/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.796771318 seconds)
    (136/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.706237037 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.444102963 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.799525039 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.05191463 seconds)
    (140/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.942499242 seconds)
    (141/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.924656229 seconds)
    (142/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.080583395 seconds)
    (143/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.241533445 seconds)
    (144/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.019433729 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.197086719 seconds)
    (146/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.818174637 seconds)
    (147/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.991328961 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.04622458 seconds)
    (149/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.815554238 seconds)
    (150/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.211203894 seconds)
    (151/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.033273987 seconds)
    (152/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.153336365 seconds)
    (153/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.888482525 seconds)
    (154/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.125503614 seconds)
    (155/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.868085431 seconds)
    (156/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.827841074 seconds)
    (157/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.045330147 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.796008347 seconds)
    (159/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.97421905 seconds)
    (160/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.97943579 seconds)
    (161/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.314317681 seconds)
    (162/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.885232649 seconds)
    (163/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.148858253 seconds)
    (164/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.984486924 seconds)
    (165/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.815590582 seconds)
    (166/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.801080401 seconds)
    (167/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.808944286 seconds)
    (168/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.778341196 seconds)
    (169/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.441650463 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.797675773 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.899018947 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.198059614 seconds)
    (173/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.073452651 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.013571981 seconds)
    (175/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.978242169 seconds)
    (176/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.887770107 seconds)
    (177/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.822927088 seconds)
    (178/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.561325156 seconds)
    (179/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.812887736 seconds)
    (180/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.810557147 seconds)
    (181/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.886962023 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.795236064 seconds)
    (183/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.210926182 seconds)
    (184/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.782674611 seconds)
    (185/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.105268941 seconds)
    (186/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.18736148 seconds)
    (187/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.860786537 seconds)
    (188/309) benchmarking ("sort", Int8, false)...
    done (took 4.679122109 seconds)
    (189/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.181533084 seconds)
    (190/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.959748298 seconds)
    (191/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.798868958 seconds)
    (192/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.910494554 seconds)
    (193/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.882431301 seconds)
    (194/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.896872318 seconds)
    (195/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.860331136 seconds)
    (196/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.885940162 seconds)
    (197/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.795465011 seconds)
    (198/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.79729578 seconds)
    (199/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.961419094 seconds)
    (200/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.936560495 seconds)
    (201/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.953230057 seconds)
    (202/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.782472373 seconds)
    (203/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 3.34352813 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.732938511 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.112034469 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.91034506 seconds)
    (207/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.787404447 seconds)
    (208/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.819499886 seconds)
    (209/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.092746807 seconds)
    (210/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.089651552 seconds)
    (211/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.898950233 seconds)
    (212/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.825787391 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.200327972 seconds)
    (214/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.932482943 seconds)
    (215/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.859715727 seconds)
    (216/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.881129622 seconds)
    (217/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.894219431 seconds)
    (218/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.902642712 seconds)
    (219/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.865095613 seconds)
    (220/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.815327666 seconds)
    (221/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.925840424 seconds)
    (222/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.891477958 seconds)
    (223/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.653620731 seconds)
    (224/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.005574203 seconds)
    (225/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.032176818 seconds)
    (226/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.038677304 seconds)
    (227/309) benchmarking ("sort", Float32, false)...
    done (took 5.505694954 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.934612009 seconds)
    (229/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.647745981 seconds)
    (230/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.002727394 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.737651273 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.800622339 seconds)
    (233/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.70934959 seconds)
    (234/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.161536006 seconds)
    (235/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.827215231 seconds)
    (236/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.801764742 seconds)
    (237/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.757507095 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.145148255 seconds)
    (239/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.038791919 seconds)
    (240/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.802334096 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.910666113 seconds)
    (242/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.041061276 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.921600076 seconds)
    (244/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.98088556 seconds)
    (245/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.206367101 seconds)
    (246/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.861227641 seconds)
    (247/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.916481886 seconds)
    (248/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.781642017 seconds)
    (249/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.977416815 seconds)
    (250/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.798733146 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.136579211 seconds)
    (252/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.939489976 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.450126926 seconds)
    (254/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.799290996 seconds)
    (255/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 5.33969866 seconds)
    (256/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.204935965 seconds)
    (257/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.053461218 seconds)
    (258/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.903453521 seconds)
    (259/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.926858236 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.097768676 seconds)
    (261/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.797703614 seconds)
    (262/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.765017149 seconds)
    (263/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.808748696 seconds)
    (264/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.976197304 seconds)
    (265/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.378997164 seconds)
    (266/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.18665751 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.783003015 seconds)
    (268/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.991519889 seconds)
    (269/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.897905842 seconds)
    (270/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.858393474 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.129951005 seconds)
    (272/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.779467625 seconds)
    (273/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.972873454 seconds)
    (274/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.661100361 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.874435868 seconds)
    (276/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.066211978 seconds)
    (277/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.885961209 seconds)
    (278/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.318646174 seconds)
    (279/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.991920957 seconds)
    (280/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.349610162 seconds)
    (281/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.083516415 seconds)
    (282/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.06912967 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.964984179 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.928112529 seconds)
    (285/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.796094455 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.822855026 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.864372687 seconds)
    (288/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 3.538938469 seconds)
    (289/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.94263706 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.852016187 seconds)
    (291/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.941276952 seconds)
    (292/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.880526255 seconds)
    (293/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.933359275 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.606356599 seconds)
    (295/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.107571254 seconds)
    (296/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.948845458 seconds)
    (297/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.088559538 seconds)
    (298/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.798410996 seconds)
    (299/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.382812959 seconds)
    (300/309) benchmarking ("sort", BigInt, false)...
    done (took 6.805248686 seconds)
    (301/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.785316329 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.95397063 seconds)
    (303/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.820622308 seconds)
    (304/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.159748029 seconds)
    (305/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.958293416 seconds)
    (306/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.137010988 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.018860995 seconds)
    (308/309) benchmarking ("sort", Float64, false)...
    done (took 5.534583562 seconds)
    (309/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.126670037 seconds)
  done (took 985.434287853 seconds)
done (took 987.212644433 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.829350512 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.82220486 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.805198199 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.826414756 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.917675223 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.833056077 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.816305229 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.807733462 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.853571648 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.854260054 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.801274651 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.831727207 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.807331877 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.805162994 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.806191881 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.819099548 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.113930207 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.832391893 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.822719412 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.815633407 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.822946568 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.801562298 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.854958173 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.832211912 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.809535841 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.808571344 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.8085585 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.825727302 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.915786354 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.808698793 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.808968508 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.816468941 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.113146931 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.831767579 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.802754799 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.825010448 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.818701156 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.814401274 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.810085882 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.83817531 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.196944015 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.840563655 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.808969658 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.806407784 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.807260842 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.811343402 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.808917785 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.814917979 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.818733188 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.820653307 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.190046748 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.858323242 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.810036681 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.809804375 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.817921945 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.80681404 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.81207464 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.822643589 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.827679257 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.822823194 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.096750544 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.838515677 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.811563386 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.823609329 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.815657177 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.22605458 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.841477847 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.812416678 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.196754354 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.85157561 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.22697953 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.851380198 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.809237256 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.821826079 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.839907448 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.11467108 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.828639584 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.807941145 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.815945272 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.804988446 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.819502485 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.820092093 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.813999412 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.809531982 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.822080541 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.836802445 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.818815604 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.808310705 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.817714625 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.827837662 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.815676138 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.820600484 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.81206028 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.804637821 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.818312676 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.813048037 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.810892727 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.810606695 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.81387507 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.820191035 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.197181832 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.863774624 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.806631781 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.806435977 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.810137637 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.824128218 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.196655065 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.84554048 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.833041552 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.858115434 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.811503175 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.096599654 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.836662046 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.824707569 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.820452322 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.813184448 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.806377886 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.100487496 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.218248262 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.860679008 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.813052512 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.806602154 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.826693044 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.813214636 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.808996623 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.120161707 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.838509167 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.82509777 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.93179165 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.8214997 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.842565453 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.807559347 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.81485085 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.845068478 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.82665259 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.842738539 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.814118859 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.825688167 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.82907366 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.808342037 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.821339907 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.823762799 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.814491578 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.817994735 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.806527156 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.843062004 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.823921621 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.823085584 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.832512933 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.933934636 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.810883132 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.099755393 seconds)
done (took 284.345471542 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.881217253 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.807365988 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.908893782 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.808768687 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.889353112 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.893724348 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.805850846 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.806723993 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.807146598 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.182861561 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.807670736 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.808724348 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.809376475 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.807533917 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.891651763 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.809688927 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.80735508 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.144455848 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.811141756 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.881816108 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.812452077 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.807067729 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.809837509 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.182527155 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.807352788 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.812751285 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.882623352 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.811286054 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.148663675 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.81235403 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.811541415 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.147636931 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.902018105 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.829206518 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.821248132 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.818221438 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.890894677 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.813825328 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.892269433 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.892071803 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.910500672 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.853641134 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.806694845 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.805781795 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.813768957 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.812011649 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.808575418 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.839248339 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.803914397 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.819260788 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.146790666 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.812020656 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.818917356 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.808843034 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.809153744 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.84300177 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.808971565 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.812378861 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.904184315 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.813271249 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.873553423 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.184479021 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.1828437 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.811812176 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.814087265 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.809635781 seconds)
  done (took 180.339032862 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.879579184 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.889238229 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.878049222 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.817138284 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.862775274 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.877497922 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.818191006 seconds)
  done (took 14.758129399 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.817761297 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.813376209 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.86331285 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.865187652 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.812875009 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.966191598 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.811738389 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.823012605 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.810342029 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.864804841 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.811484022 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.813701117 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.820515258 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.814535085 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.864456485 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.823908404 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.929666181 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.815794535 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.814672638 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.963419029 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.811425403 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.819509373 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.84588612 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.824618655 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.814149147 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.820838453 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.396124466 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.813815977 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.810686977 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.812482037 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.812480794 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.854299117 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.814158345 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.814835191 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.810773145 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.928068854 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.814702763 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.810228456 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.814595609 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.812184689 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.813578974 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.814414371 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.81281684 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.810579595 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.814695462 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.837161584 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.813198422 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.815107669 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.813639052 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.813905479 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.84687446 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.814627337 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.811337297 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.811877927 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.869066953 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.821082981 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.815979843 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.811682937 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.815709241 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.811757457 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.967411506 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.866641087 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.814065168 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.866577644 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.815425846 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.815428925 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.813921384 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.814212308 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.911564774 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.81564358 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.866134595 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.812477884 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.973225923 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.83727478 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.817683908 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.817712723 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.818284924 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.817436111 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.813096487 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.8222624 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.812878916 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.816848584 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.823589853 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.814181029 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.812813134 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.928043465 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.923838291 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.812891458 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.828751362 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.822883002 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.813615289 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.850842197 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.815295698 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.816364189 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.872459635 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.93271359 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.878744478 seconds)
  done (took 200.376946476 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.821825631 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.825082806 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.817230589 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.833656003 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.817102051 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.817944871 seconds)
  done (took 12.672634029 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.819693071 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.817724867 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.818245755 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.816726254 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.819280533 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.819752628 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.818976546 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.819838331 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.82250895 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.817634429 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.819622265 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.818046453 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.81924752 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.81796216 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.819482187 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.819489636 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.820655998 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.81555353 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.817309833 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.818532906 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.963812635 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.821488098 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.818905779 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.820569881 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.823882067 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.819169682 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.827937385 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.818232066 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.819415987 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.827585688 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.820937648 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.819111817 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.820139601 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.825053813 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.824016651 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.820720659 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.822154474 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.820585412 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.815970739 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.819817984 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.819209923 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.819400694 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.81991201 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.819685229 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.821826583 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.825699105 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.823850134 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.82776965 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.821574456 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.821067969 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.821088743 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.821231049 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.819075342 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.822488476 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.821723956 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.825352829 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.824996522 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.821469875 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.820192002 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.823602435 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.82203499 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.821188366 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.822887838 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.82620953 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.829883782 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.822266477 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.824047187 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.825733206 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.825181747 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.82167417 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.824100821 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.81764144 seconds)
  done (took 134.014729801 seconds)
done (took 543.903478148 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.012723418 seconds)
  done (took 8.757020822 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.854460511 seconds)
  done (took 8.642232753 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.120621426 seconds)
  done (took 9.867590162 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.832836166 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.848286211 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.825398113 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.81634673 seconds)
  done (took 29.085768339 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.942640656 seconds)
  done (took 8.686526904 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.838215626 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.815015637 seconds)
  done (took 15.432861683 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.953689749 seconds)
  done (took 8.699961571 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.881404159 seconds)
  done (took 8.645611527 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.842633467 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.852853942 seconds)
  done (took 15.453898153 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.802497953 seconds)
  done (took 8.547541615 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.61577196 seconds)
  done (took 11.456942937 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.828420648 seconds)
  done (took 8.677464503 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.838254571 seconds)
  done (took 8.582454528 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.910500365 seconds)
  done (took 9.655553894 seconds)
done (took 161.931194563 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.834327189 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.818282351 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.81742052 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.816578851 seconds)
  done (took 29.031299282 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.85579256 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.856040251 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.856631579 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.866258576 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.858639471 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.854447467 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.848359908 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.84782025 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.864719583 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.85746833 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.857236634 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.85724087 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.856465673 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.847838121 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.857764816 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.856223282 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.86618125 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.858803863 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.847949962 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.857745681 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.823155953 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.865957924 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.864023539 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.821957207 seconds)
  done (took 46.250975389 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.015818566 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.894498294 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.975639437 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.875974331 seconds)
  done (took 9.507916484 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.873637317 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.876088986 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.887367132 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.927389658 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.949635407 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.887136328 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.850739857 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.843302555 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.830123612 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.876712931 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.950463362 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.871128016 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.969632857 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.823459793 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.01077323 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.822770877 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.823767708 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.875776002 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.92668418 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.945108074 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.824443073 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.875905262 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.879877528 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.871735765 seconds)
  done (took 47.020444016 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.822851089 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.830690014 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.830069935 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.821742244 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.823185941 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.823325766 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.829567741 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.825184122 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.844842041 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.82439787 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.82323648 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.822696893 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.822635075 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.824037094 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.824802052 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.836074501 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.83693683 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.823797385 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.830766786 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.829584514 seconds)
  done (took 38.298787744 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.819114043 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.67268868 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.169371003 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.074762552 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.818306231 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.817900465 seconds)
  done (took 31.119614485 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.836315472 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.831822129 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.82466659 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.880372088 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.961082853 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.831432384 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.824882418 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.836409497 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.869689697 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.890697206 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.845300144 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.852685414 seconds)
  done (took 24.033884602 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.821646577 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.833888684 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.823634838 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.84863567 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.835156813 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.833007345 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.83382606 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.819462807 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.840891013 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.842359678 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.831435982 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.836832048 seconds)
  done (took 43.752582916 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90840974 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.704679821 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.471679904 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.539996554 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.353161006 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.029498497 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.349967203 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.992510785 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.823822493 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.092892212 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.479106093 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071461041 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.074082011 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.823607485 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.88856282 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.308735197 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.124462005 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.053360977 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.849864631 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.589596393 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947599871 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.266495997 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.578979735 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.951967247 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.031596786 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.953685675 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.082032788 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.778300533 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963128531 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.859909697 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831729094 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.821804608 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.094862714 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041240384 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952790925 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832198316 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.476547077 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.539393711 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.813576674 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.55022957 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.586785216 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.962703704 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831075717 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.825529857 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.757827384 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.256387166 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002546988 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.82742019 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.524735486 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.823745656 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.832668836 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913957301 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.825737293 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.638289057 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.775981611 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.100912018 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.823187945 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82889162 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.394183552 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.950664531 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366781027 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.761911841 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.916171012 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.619718125 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.31151823 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.981614907 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.826384076 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.82695307 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.756982454 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.553970673 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.954106928 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.968441796 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.842166632 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.471838796 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.152345635 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.53214947 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.91511268 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.12185039 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.529016252 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.762728958 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.050737053 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.7732934 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.756837885 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.663273863 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.757882937 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.096568901 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860090803 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.480702857 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.866013763 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.994987701 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.834499188 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846974734 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831162155 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.046686457 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.707630725 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.825667873 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.407832817 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.116388917 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848468832 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.000992154 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.759578243 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.829134986 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080071599 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.035906419 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.965885982 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.320842683 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990455722 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.826743288 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.913866719 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.64751792 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.838408147 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.111079483 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.894013229 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.953006294 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962194435 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.783221702 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131746854 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854691043 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.002386385 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.483744868 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.0946453 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.152862394 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.077978101 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909484226 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.829409369 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.828075573 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.623298059 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.454825264 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.050107368 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.827019369 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.238615317 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.840318079 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.83030972 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.761061604 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.455361148 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.476192182 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.956984329 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.050420591 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.69210232 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.105557353 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.759915134 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.971604388 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.94207832 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.048384537 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.488884878 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.914563702 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.08901139 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.221913524 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.961601079 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.840221745 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846772873 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946037254 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848818878 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.147711654 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.083618822 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.830826575 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.83140241 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.619276991 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.910125035 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.836271164 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.832625993 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.625368775 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.124354904 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.866326276 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.832012719 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.761145158 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.842564813 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912950945 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.833300838 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.838316525 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.356474821 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.576052142 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.83918839 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.51358162 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05925393 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.836861086 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.559963843 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.022768919 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.911009648 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.114266297 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.896982942 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.763642459 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.530999908 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.53213733 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.82933781 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.764347173 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.830736209 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839096797 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.839910226 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.025866258 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.118835502 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882698771 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.612033907 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.951746031 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.840732865 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.834900093 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.831415336 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.353426232 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.967271489 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37175525 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.840491575 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966804366 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.844060695 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.764781759 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.833283958 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.83536795 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.830804169 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.785035681 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883954481 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.611573459 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.169248304 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.092856025 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.596855871 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.846608749 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.584884214 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.967732302 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.855458811 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.430036499 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.725734929 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.94393453 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893660783 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.843215658 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.55725367 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.620822342 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.40358561 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150628487 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.171252037 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.301458438 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.120288901 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.146436802 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.004760456 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.065015894 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.359454612 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.889908131 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.007219424 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.77489985 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916524642 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.496519507 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.195968546 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.848053651 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.062151407 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.238807215 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.506870213 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.000169871 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.04302851 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867509743 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.562592574 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.852300544 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.356634247 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.988314835 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.505147781 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.069805464 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002144897 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.443285445 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.952373593 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.835072138 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.305963953 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916962632 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.543949481 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.194067698 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.323341829 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.493764971 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.213040316 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.838787533 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.280747427 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.203134342 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.070418591 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.924161421 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.768456387 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.844481874 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.84415233 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.833984112 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.81142519 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.759224713 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.112878468 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.845402394 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068214127 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.014629262 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.115842786 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.747367772 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.839996407 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.83661659 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137782361 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.429456554 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068355702 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.077082711 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.39581473 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846722422 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.768308266 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.768632293 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.539452011 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.837184962 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.809195599 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.067378321 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.940765808 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.792697178 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.136129055 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.138605115 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.092457309 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.849587433 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.125545349 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.1189612 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.572760444 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863075981 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.936340531 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.439213336 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.575758283 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.060880315 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.069520379 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.633210947 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.065130602 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.497113523 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.8127187 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.836652693 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.048474734 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.058797754 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.491144718 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095015195 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.561876435 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.852412485 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.205385327 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904025561 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.493834193 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.05842646 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.929860347 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.84751266 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919455405 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.848589179 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.847400169 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.847955856 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883202912 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.511445597 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.979978609 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.852898785 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930146336 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.970028134 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.422302742 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.847365999 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131598642 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.212370635 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.190566391 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.906042869 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.83916217 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842432502 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.771764983 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97783904 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.284553992 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.112179162 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.96635756 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.980483474 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863148457 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.440929946 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.024601617 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140205569 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.113154055 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.73770348 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.840481842 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.930048516 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.063463301 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849813897 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.048070415 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073456257 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161523675 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308887674 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.880350447 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.106937503 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.114108555 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.209172759 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.842337285 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.432638714 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.854460807 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.365783121 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.879566874 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.503431757 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133034025 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.84976067 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062670854 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.863646955 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.04125114 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.294049388 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.616658067 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.20831271 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.841269868 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.902184105 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.131989775 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.257122678 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.161271686 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923156564 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.851109016 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.545335058 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978223899 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.800838659 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.105336215 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.8427145 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.050846994 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.553053891 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.85183604 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.133703047 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158023066 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.83902423 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.833085888 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90207952 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.851084893 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.062931348 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.11499917 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.092827235 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.850491101 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.847695816 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.659440066 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.134022434 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.906640643 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.774709696 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.84642635 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94179287 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.087965637 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.862028642 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.358582673 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.545960338 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1475287 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.761873895 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863596936 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.16883568 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.286512888 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.190709506 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.368246347 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.077069774 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.399015741 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.604331499 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.206137578 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.847343165 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.158909947 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.209724818 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.846803678 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.262771723 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94278136 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.131325118 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.173404745 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.861160735 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.667528779 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.891951757 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.064794258 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.435843699 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.782896009 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.849205451 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.904761803 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.844500946 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.972541555 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.855202401 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.855188349 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.620187862 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.67495279 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335328958 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.849490961 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.869108674 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.393295441 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.188166747 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97462087 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.004698749 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858092865 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.573493173 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.142048306 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.105407305 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.428308925 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.93490561 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.854266361 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851543529 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.776835715 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.047695874 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.048316494 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149011619 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.283809703 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.979182205 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.854250037 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.067272143 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.060408194 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.431789907 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.014228549 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32352545 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9799293 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.778816388 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.563612834 seconds)
  done (took 1660.984571944 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.876339462 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.869223829 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.862562881 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.900724548 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.87665121 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.871205887 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.91286701 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.945268921 seconds)
  done (took 56.892505399 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.852164791 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.038236447 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.861677218 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.854196488 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.879961559 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.853180075 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.049017145 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.865638201 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.872456262 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.863279558 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.856174324 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.868855951 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.122458556 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.878720559 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.854357757 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.868271272 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.881488495 seconds)
  done (took 74.108649111 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.859191405 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.197407604 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.876050618 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.874078375 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.767944214 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.8765955 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.862138258 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.864917565 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.861253824 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.037894572 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.197422499 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.872929152 seconds)
  done (took 89.933607866 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.873693812 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.861139029 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.862945969 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.861801676 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.862090051 seconds)
  done (took 11.113474237 seconds)
done (took 2163.877537487 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.102804713 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.039682292 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.086939689 seconds)
  done (took 5.910951608 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.007734386 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.056445236 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.173435867 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.179520294 seconds)
  done (took 10.209153143 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.15598403 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.23978575 seconds)
  done (took 6.182657549 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.186927737 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.899341548 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.277383241 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.860416515 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.862398955 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.866715788 seconds)
  done (took 22.382120956 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.862910292 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.865658592 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.863675016 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.865120176 seconds)
  done (took 9.245535658 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.846528165 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.562063308 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.845857728 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.863033911 seconds)
  done (took 20.90492692 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.613585647 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.988202176 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.607246637 seconds)
  done (took 8.99772358 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.627360663 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.518528559 seconds)
  done (took 9.934592214 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.020322504 seconds)
  done (took 3.808771 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.891969459 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.134320313 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.413071613 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.456906396 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.520492221 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.120947693 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.218199324 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.106104671 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.31398358 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.354473872 seconds)
  done (took 25.318610099 seconds)
done (took 138.140996414 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.442818173 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.899680105 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.067872416 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.24340141 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.099718928 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.069738378 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.089480017 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.239263496 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.926640816 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.918222176 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.255598821 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.102135913 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.031204685 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.883804542 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.038847053 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.883058028 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.09382577 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.269559843 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.03194406 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.181027107 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.099610308 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.881397268 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.081522892 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.893740956 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.096832739 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.017744568 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.428456839 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.889773778 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.054763317 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.435291476 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.024600816 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.292496157 seconds)
  done (took 168.754592613 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.867132742 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.863308696 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.864230916 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.862800597 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.408974219 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.863967982 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.864868913 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.861506883 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.304705289 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.292409762 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.864004538 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.395643449 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.861548375 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.859851056 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.864717612 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.858822847 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.450895991 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.86067205 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.858354996 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.857415193 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.857314623 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.239751135 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.858324329 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.255943206 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.447115953 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.857440457 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.858210686 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.856001356 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.85672393 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.854696878 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.857014462 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.856898637 seconds)
  done (took 209.234038792 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.854801468 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.855976556 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.857348551 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.855541565 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.855275607 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.855937452 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.855886273 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.85411568 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.486985734 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.492152888 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.854162915 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.855663763 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.8587415 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.853035678 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.85337515 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.852166735 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.853696965 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.853792575 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.854330085 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.854388372 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.855321333 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.620490326 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.855047765 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.852929848 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.853663322 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.859670633 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.853008627 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.853509907 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.852555794 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.852798416 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.853471533 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.856356616 seconds)
  done (took 220.168142305 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.107362184 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.857774535 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.85807357 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.847509702 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.859083882 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.857643115 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.849426003 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.104582924 seconds)
  done (took 19.12321003 seconds)
done (took 619.072391475 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.309786586 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.161727401 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.040914015 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.881557798 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.128658481 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.918476887 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.876641057 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.945449739 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.523538467 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.95376848 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.524625271 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.901550772 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.61531385 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.910455247 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.00296178 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.936408226 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.464974809 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.5590447 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.058578173 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.947102797 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.053148723 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.811704294 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.968928499 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.55292356 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.637544364 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.883483738 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.946971318 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.476281374 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.891807534 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.040578908 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.626708559 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.199891807 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.895970175 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.877203509 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.93504739 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.91249287 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.153101746 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.893965886 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.003605326 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.610889219 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.950474976 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.422928303 seconds)
  done (took 102.189405663 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.848243038 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.84724153 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.846514346 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.84724273 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.846233129 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.848803061 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.845555046 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.846301034 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.847312732 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.847212377 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.84928765 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.846689833 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.845325655 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.846689871 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.847532123 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.846961086 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.849295267 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.848265303 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.847241596 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.846143308 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.848861017 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.847181902 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.862493284 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.847628997 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.847581465 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.848797783 seconds)
  done (took 49.839895776 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.859951709 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.02423605 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.101760985 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.886216974 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.861045738 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.864107326 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.878871009 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.866818205 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.862783914 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.86407365 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.952054847 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.867806429 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.880653511 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.098229327 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.881543454 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.86323538 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.862583705 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.863588259 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.033411976 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.878116523 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.882718547 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.867713221 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.881248648 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.875766263 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.862702388 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.862343615 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.866968056 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.293254296 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.87343507 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.955259843 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.922286362 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.889836389 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.242442114 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.110480325 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.922189128 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.873074314 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.862262767 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.957054025 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.869274975 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.861757447 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.881223499 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.868131499 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.102231725 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.36148095 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.878199503 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.863536488 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.301714228 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.96507598 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.905103572 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.875836242 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.104430775 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.886468903 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.864283861 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.865104852 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.900683225 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.869977527 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.863066578 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.15802027 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.87669301 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.882174104 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.869245518 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.865868386 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.034728224 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.873731748 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.025245089 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.873358854 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.870679277 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.864647488 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.102759318 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.887561935 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.357634216 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.875500394 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.858144564 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.951793077 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.026131542 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.324330276 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.874196881 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.034087091 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.253057566 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.885428785 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.866922607 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.273347761 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.889686889 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.867103028 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.8616198 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.862661214 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.859860637 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.905355288 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.875024508 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.285866107 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.358984306 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.178040392 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.88801968 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.873624825 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.861528031 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.158055241 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.871403751 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.86004441 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.091679555 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.371175797 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.875515161 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.86939892 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.344147685 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.877267004 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.87936945 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.870379462 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.1053787 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.878903142 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.905275357 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.860858969 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.866948344 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.863535872 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.879836576 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.869054148 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.860069738 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.33646857 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.971520687 seconds)
  done (took 230.926963122 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.857117847 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.859866431 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.855690832 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.860387127 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.855403456 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.860378417 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.856118153 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.85598997 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.860808533 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.855769907 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.856826553 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.856034157 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.858003806 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.858089934 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.883519467 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.876854852 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.482167038 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.870404513 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.872228679 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.87168398 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.527905433 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.87703652 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.872368051 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.872677304 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.872075112 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.873799817 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.879354712 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.87621219 seconds)
  done (took 167.301172855 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.87700634 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.994252393 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.898106165 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.905905473 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.885884851 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.875436254 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.900080595 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.895374277 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.883223686 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.875539329 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.874596198 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.938142758 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.894882554 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.976000806 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.911232586 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.908769139 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.980904332 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.886145678 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.876238482 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.877178188 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.905994426 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.871864743 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.938742334 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.011714027 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.898193204 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.994839433 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.8824333 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.880419842 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.877078184 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.993881921 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.895610371 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.938432979 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.909083985 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.896889943 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.000324955 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.996706855 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.986474204 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.90848801 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.883878018 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.877225946 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.876708996 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.86416412 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.997204137 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.899991655 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.879646189 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.984364858 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.898667935 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.880120255 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.888393762 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.878357689 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.893050802 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.897984006 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.947108259 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.014161784 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.916796868 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.904089871 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.904109235 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.166162256 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.889832375 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.978776477 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.872781873 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.996903055 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.902096906 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.86476243 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.879409637 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.884214008 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.909217822 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.91064801 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.985593204 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.888087573 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.980420288 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.915271537 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.887725758 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.880533083 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.883140934 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.996157851 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.999451955 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.914904256 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.91950474 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.912712888 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.875058405 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.879976073 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.867383629 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.897760639 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.883941452 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.995755097 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.000092004 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.888914728 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.881127911 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.88342836 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.881173084 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.908681125 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.007728521 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.918470795 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.974549315 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.950304529 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.958166719 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.897044878 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.893982711 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.884656804 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.944769565 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.896771472 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.89254949 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.21391099 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.953474629 seconds)
  done (took 203.639115011 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.363066064 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.935131768 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.937887119 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.189671277 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.240320353 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.904238946 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.930282677 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.932554763 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.954773201 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.117707769 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.992688192 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.948953797 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.917669693 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.906056552 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.9286226 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.95279756 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.939049959 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.26289167 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.032054356 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.07973443 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.912816419 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.209825695 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.212360072 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.32744286 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.965816904 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.268239895 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.592222347 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.077773722 seconds)
  done (took 61.844193237 seconds)
done (took 817.517074828 seconds)
SAVING RESULT...
DONE!
