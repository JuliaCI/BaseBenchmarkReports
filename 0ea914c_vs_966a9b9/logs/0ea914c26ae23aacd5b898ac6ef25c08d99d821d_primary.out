cset: moving following pidspec: 23948
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.393266713 seconds)
loading group "string"... done (took 0.601501572 seconds)
loading group "linalg"... done (took 7.794616289 seconds)
loading group "parallel"... done (took 0.166281221 seconds)
loading group "find"... done (took 1.1730905 seconds)
loading group "tuple"... done (took 1.907833909 seconds)
loading group "dates"... done (took 1.310513682 seconds)
loading group "micro"... done (took 0.230198798 seconds)
loading group "io"... done (took 0.956295414 seconds)
loading group "scalar"... done (took 39.474716618 seconds)
loading group "sparse"... done (took 12.48014762 seconds)
loading group "broadcast"... done (took 1.040086995 seconds)
loading group "union"... done (took 13.255114822 seconds)
loading group "simd"... done (took 4.592404446 seconds)
loading group "random"... done (took 9.3667763 seconds)
loading group "problem"... done (took 1.889547292 seconds)
loading group "array"... done (took 21.402579931 seconds)
loading group "misc"... done (took 1.844705867 seconds)
loading group "sort"... done (took 3.38848493 seconds)
loading group "collection"... done (took 18.51117694 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.542421684 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.133760382 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.136779737 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.127557556 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.15484667 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.12346385 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.133521857 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.091855129 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.888504019 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.154387342 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119668861 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.427870187 seconds)
done (took 5.529249659 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177507623 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087688183 seconds)
    (2/2) benchmarking "String"...
    done (took 0.089602151 seconds)
  done (took 1.324131664 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.072687634 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129125608 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.073892754 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.074534364 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.074716442 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.074447087 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.073871888 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.073420571 seconds)
  done (took 1.722057462 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.078004866 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.073487559 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.075074346 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.074782231 seconds)
  done (took 1.451400383 seconds)
done (took 5.906453745 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.785839959 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.217139028 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190573967 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.40809106 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.139258351 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.183224929 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.658293369 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.320217636 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.192085157 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081910897 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113704539 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.350106493 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131001508 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.658676605 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.082796488 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095251199 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.142863103 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.440281171 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072713573 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088075145 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093734551 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.133447885 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.093763748 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079022008 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.15094975 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.073038063 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.139470132 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.085344091 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.071380971 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.223737131 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.180060009 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.668925475 seconds)
  done (took 10.53094655 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104274027 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.104550742 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.073591272 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130482312 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.104213454 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.074563159 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.079840764 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.074234145 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09835472 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.139526727 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.096659906 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110863265 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.070408818 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.074470028 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.091422106 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213749454 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.085426622 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086732929 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.075150443 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083635201 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112733335 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083733348 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.086169227 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.085981187 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.133446812 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.185288043 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.104434851 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.104557293 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.074015877 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.090020102 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.120587738 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.136204083 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073790152 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.072629479 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.132638939 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.099581535 seconds)
  done (took 4.85615156 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.983301045 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.146577422 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09440296 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.137003949 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.070149867 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112722158 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.071468878 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.087943969 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.212696303 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.422788791 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.620125769 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115638967 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.109666604 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073001895 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.074309799 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.117528349 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.071361534 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.508223236 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108674469 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.114065087 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087122556 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.076106598 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.074459947 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.371811159 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072217544 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.069598225 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073369234 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.062127962 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.127303812 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073778683 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.95521163 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.169832288 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070991961 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104486394 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.294641044 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099763836 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.147916149 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074437997 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.071415652 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.070111895 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.159809144 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074981127 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.071504575 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089131843 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10918672 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124032644 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.071597602 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071602529 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.170070146 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.070852893 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.085127292 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.123616784 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.161693833 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.085259574 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.071754234 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.276327461 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.094641617 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075174326 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.07060126 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.173385704 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133139749 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.074251607 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.071852639 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073876162 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.074046094 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.365499787 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.070696797 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.897782953 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.076159563 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.084700447 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075116388 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074934579 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077519787 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078133831 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.09330575 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.071349754 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079817095 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.071099015 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.07105103 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071798277 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087603825 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.392752337 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.073929193 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074718606 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.072084532 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.096421051 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.207367768 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072252723 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.07143221 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10553375 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074025448 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.072264128 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.116314787 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.072122407 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.069930366 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.088220794 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.074672235 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.118019402 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.073701358 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06975796 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.094569785 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.073260289 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.102908908 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074338825 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108104183 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.087707142 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073277944 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.437698011 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.073356977 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.072502176 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07350852 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.071020366 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.073250083 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.071291909 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.084487645 seconds)
  done (took 22.302756233 seconds)
done (took 39.823118234 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.257788957 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.085358384 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082734384 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.081617556 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.07848258 seconds)
  done (took 1.828095089 seconds)
done (took 3.054475948 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.127183234 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104491803 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06970735 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10142656 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069623848 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106704369 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104729519 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081878694 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10462205 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.070180631 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101958474 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.069679083 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06983876 seconds)
  done (took 2.422873963 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089099226 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089049795 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075154833 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08911155 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068549497 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088417544 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.087100395 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09416166 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.087150158 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077294912 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068945134 seconds)
  done (took 2.131371386 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087427438 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089138021 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.074983218 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087052173 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068576373 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08742303 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.089265457 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090902647 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.087333512 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078819098 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069246481 seconds)
  done (took 2.121252432 seconds)
done (took 7.887389429 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.08208486 seconds)
  done (took 1.287383851 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.57298952 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.96396544 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.086891814 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.114161681 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.194613386 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.120767282 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.263836572 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.091190864 seconds)
  done (took 8.790223499 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.108567016 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.075383946 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.074899346 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.073829451 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.076093432 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.074099225 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.075648484 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.077320257 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.073185145 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.077081607 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.074650494 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.077376261 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.074726672 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.076732208 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.073371626 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.075577446 seconds)
  done (took 2.513953179 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097636894 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.097274696 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07831501 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07973547 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.077110379 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.076320992 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.078763357 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.078611387 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.075703379 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.076760069 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.08008081 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.078082392 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.076113743 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.069716254 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.078219394 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.080696692 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.075321914 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077952001 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.079484226 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079606722 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.079551099 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.069214858 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075927389 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.079168646 seconds)
  done (took 3.20403871 seconds)
done (took 17.010707385 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109721042 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073461782 seconds)
  done (took 1.395098069 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.086319514 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086976945 seconds)
  done (took 1.393000323 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086037866 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.070390352 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093430745 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.082065718 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.071871623 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.070430384 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.090935034 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.0706076 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.070945713 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.071318816 seconds)
  done (took 1.998663652 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.073027302 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.082100283 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.075162372 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.085795279 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.078211092 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.069967064 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07669459 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.074122551 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082555166 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.067878211 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07580891 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086936886 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.075686469 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088408866 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.077257968 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.073539284 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.075486337 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.072035271 seconds)
  done (took 2.611961141 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.070621581 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.071785314 seconds)
  done (took 1.370064842 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.072500746 seconds)
    (2/7) benchmarking "second"...
    done (took 0.068740598 seconds)
    (3/7) benchmarking "month"...
    done (took 0.072050902 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070641584 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.068107161 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.067700515 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.068279299 seconds)
  done (took 1.712025987 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.381629944 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.121638653 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.321607258 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07858278 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08627315 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.260495526 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.071060275 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.075828011 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.076177715 seconds)
  done (took 2.739861278 seconds)
done (took 14.448277206 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.084799331 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.091630384 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100862674 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.38154353 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095992608 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.071205699 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.118218714 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189027508 seconds)
done (took 2.369657268 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.215191208 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.677238951 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.436720228 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.218147031 seconds)
  done (took 2.559342865 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344187979 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.095707132 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.06686993 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.074699221 seconds)
  done (took 1.823197576 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.072028702 seconds)
    (2/2) benchmarking "read"...
    done (took 0.073656968 seconds)
  done (took 1.382885844 seconds)
done (took 7.216357631 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071569187 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.091225609 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.071277098 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.068860722 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.071036489 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.068606955 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.068971041 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.071579083 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.070742299 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.070930494 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.071445945 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070761425 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.071812867 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068188452 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068555587 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07078481 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.068847518 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068242758 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.069381265 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.183671384 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070839029 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.069223985 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.068193405 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.068490544 seconds)
  done (took 3.082371301 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08952233 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.071450742 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.076398329 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.076379287 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.074557722 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.076091828 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07588134 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.070857639 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.076315054 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.07322976 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074505532 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.074807424 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.072956616 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07497314 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072773127 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07445923 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.075833911 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070797015 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073527669 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.074917991 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.075886094 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070949628 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.074591102 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076125088 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073991039 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074490676 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.072867429 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.070727283 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075457447 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.074035563 seconds)
  done (took 3.484085726 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.07441764 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.067864053 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.069293857 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.075002183 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.069291453 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.068936889 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067947701 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.069315097 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.069300579 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.068073977 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06943813 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.068082446 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.068266313 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.069148175 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068597949 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.072166572 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.08396873 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.069254829 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.068457038 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068891395 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.071232363 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.071064233 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.068427078 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06834985 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.068119005 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.067961626 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.068710849 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06811634 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.069348641 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.068110051 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.071999129 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.072083358 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.068352319 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.075098865 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.07242578 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.068690428 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.072069929 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.067662565 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06882693 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.068387027 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.068133764 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.068387787 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.068012248 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.076053208 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.068145256 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.069757256 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.069171112 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.069331068 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.068847161 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.071233481 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.06805046 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.068344167 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.070860904 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.069586093 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.072412676 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.067875938 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.069039887 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06795176 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.068782059 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.068154913 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.0677389 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.068164739 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.071146558 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.069107661 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.083813053 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.075209692 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.069057013 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.0704112 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.069759911 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.071066189 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.070135973 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.082051661 seconds)
  done (took 6.303400928 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092960804 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091711832 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070372891 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070467692 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067002574 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068533775 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074973066 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069313788 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070337869 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086035011 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069267036 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069978274 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069898691 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072636538 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069468071 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.07036185 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077066159 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066726071 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.068776315 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07181851 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069147466 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074697422 seconds)
  done (took 2.869828909 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154219474 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074828614 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110274131 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079177703 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074860471 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079350712 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074694017 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074542521 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074006434 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071905572 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072273215 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074540312 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074426387 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072136943 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072167486 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072218927 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0748406 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072372205 seconds)
  done (took 2.705959072 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081707947 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.070727995 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.091547839 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.071398251 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.07070172 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07367532 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074714295 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078794625 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.07307671 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.071112619 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.078175036 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073084759 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.073114212 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070379467 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073255827 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070840775 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.072561395 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070727726 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078286448 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074632011 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074783564 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078047995 seconds)
  done (took 2.899110786 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08591265 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072622133 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085944409 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.07241266 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.0670949 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068655987 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.074758061 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.071479524 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.074449699 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.072894022 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071084091 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068848133 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073024954 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071284917 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073117851 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070528568 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072944695 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071172339 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073434209 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066482944 seconds)
  done (took 2.7131463 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089978764 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07312595 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072736557 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079427377 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072442991 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072152663 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079365623 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072518711 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071857632 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092374558 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072844787 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07254891 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078777853 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076208565 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075412102 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079405492 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078940645 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079135597 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072760666 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072212193 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092682493 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072313234 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079169254 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0719931 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072720668 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072356506 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072652875 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07620149 seconds)
  done (took 3.399990911 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071664008 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071788138 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06932762 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.069616272 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06916073 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.068368224 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.068108619 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.068346747 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070937442 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068823918 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.070796766 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.070694732 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071752148 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.071063552 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071089784 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.070816446 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070988694 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.068816209 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06887231 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068380358 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.071153076 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071792299 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.071044748 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068721569 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068822465 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.070958392 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068401916 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068326151 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071061902 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068599912 seconds)
  done (took 3.358208633 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.080159444 seconds)
    (2/2) benchmarking "in"...
    done (took 0.077098541 seconds)
  done (took 1.417767332 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067754147 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08593174 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.068554443 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.075559519 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074054181 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07162222 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078101069 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074315081 seconds)
  done (took 1.852320579 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086945207 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.082682216 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.072200584 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.083581841 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.081671567 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.088547752 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.139673027 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.071387858 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.077411904 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.069681388 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.085120847 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.070411417 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.077717601 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072058361 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.077376787 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078175877 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.068716885 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.076098785 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.073054174 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.070115805 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072390914 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08045417 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074493222 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.066633921 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.072578514 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093748239 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.08263637 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070860962 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074859571 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.079196703 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.077453699 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.065583479 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.07166415 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.071387393 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068992874 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.080692985 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085469731 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074159511 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079869966 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071600121 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.080425629 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06613607 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.075553119 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.078405749 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081753472 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.0711966 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.072334902 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.066169118 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.069369714 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.075640737 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066593248 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071355149 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.065669173 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078602335 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074839898 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081851892 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069967311 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072945109 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.073951439 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.075283604 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077749124 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.073556095 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074104967 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.070829569 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081703043 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.076089508 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079735154 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.066519391 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.065327309 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.069111874 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.081437849 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094242558 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.077379453 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.072048493 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071733729 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.069453804 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075090749 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072031042 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076986761 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.078248323 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.071341089 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.076353215 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07860269 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072242823 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.07405017 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.078349989 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.069628183 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072878511 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.069509879 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086122049 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069551473 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068900618 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06961548 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.084074286 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073952344 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069899848 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.069352272 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077660976 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064618357 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.070016398 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070488521 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071102967 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079582822 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073649596 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074126195 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079098363 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.077330011 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070557495 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.073190658 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06727573 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.195090842 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.07181173 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.079110544 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.066470992 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074554481 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.073367504 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.072222285 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.079801885 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069822956 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.071504623 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08014365 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.077058479 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.07016443 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.068886222 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.074675898 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.071992238 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073828831 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079922463 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069974814 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.066670595 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.066997812 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.075755566 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.071012278 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07480662 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075811941 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074736633 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.066888567 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.069494557 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.076518102 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.080334979 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.07143918 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072287867 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.077616496 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.073210107 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.070013412 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078568227 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073825645 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.07104601 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07732214 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.07236543 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.066388317 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073373603 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073744437 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069653857 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.075251672 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074183736 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073600283 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.072021285 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070578205 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.077449561 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07184354 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.070494409 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072120125 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069823138 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081026406 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.073653952 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.066083258 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.068982092 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.079298275 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.069781032 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.071041548 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.071336035 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.073479939 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.071897144 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.070126551 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.07115364 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.073412009 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081001678 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07550959 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072329027 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.076130029 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.08323052 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.071466766 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073767209 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.070740659 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071418964 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.071930717 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.079640532 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076731639 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.076185706 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.074098753 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.068235033 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076897477 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079228669 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.071014488 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.069417739 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.07101149 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074805855 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077154009 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.07470249 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.071437863 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069501242 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071588084 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0732946 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.074059517 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070284236 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.07019977 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.076285733 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06931331 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.076481073 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070631615 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.081187282 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073825394 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065276889 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072241843 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068236045 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076374154 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065093158 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.068256333 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.069772197 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070578082 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068746405 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072789122 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064318572 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.204891836 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.080139731 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.073541754 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.071553088 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.071910742 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079419585 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.073872323 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076234079 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.075608401 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.078375501 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082561521 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.072239231 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.076279833 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.082570979 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.071639206 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.066515281 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.080118683 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.070831939 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.070683088 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.070366358 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.07016625 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074886838 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078976842 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.078155684 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.065837291 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.075793009 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06970848 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.070964905 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.067057939 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.076239672 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.074673632 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.073226582 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078074547 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072085765 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.071983944 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075758992 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070325687 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071137774 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.072730027 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074111194 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.072295128 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.073483283 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.07174717 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.075021628 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.071297187 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068977084 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.073976842 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.07203749 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.071811299 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076976682 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.071340284 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072013972 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073695006 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.071764728 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071636031 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.072829202 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.071057608 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07542281 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072149076 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.072372091 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073708747 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.066212359 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078382234 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.071148598 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078063436 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.072043532 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.068331609 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.077375886 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.074151656 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.076114543 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.07219237 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.072290626 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.072406068 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.07072067 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.074268936 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077721614 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.069813105 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081723 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078544483 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072068674 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.074890223 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.072125305 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.073581837 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.070691247 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.072459279 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071391358 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.072924992 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070983609 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.076341842 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.07458188 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.072382283 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073440846 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.07155232 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071828537 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071484785 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06538797 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.070182952 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.071121016 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070516084 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079907436 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.071072052 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.071459462 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.0701766 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071663363 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.070606749 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067820205 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076597712 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077112278 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.070215631 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076914315 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069410737 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071919029 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080033829 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064754363 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06806359 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067920046 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.198857165 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080513045 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.072207599 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.082062825 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.072664008 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.07273434 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06945708 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.07226381 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.070774338 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.06555014 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.0697751 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076247775 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.071228261 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070949701 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.07202574 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.07454037 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07195658 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081341523 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070625484 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.073140171 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.072130335 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.068343005 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.072466762 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.071937564 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.075289069 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071948114 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.069974327 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.069168405 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.071034615 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.073076409 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072476307 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.071661322 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.073666939 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078071 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072110938 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.07582148 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074404926 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065994313 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.074852239 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.071214 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.0705681 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.070622865 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.075792381 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075014453 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072388398 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080494276 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070878234 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074810222 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071144982 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.069063774 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.070850083 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.071283351 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.0708669 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.071419229 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.072966739 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079409155 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.069645132 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.075044193 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071294552 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.072188687 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.078527952 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.072902801 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.074315138 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076431249 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.071455973 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.073038532 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.079119937 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074311374 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073908785 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071760562 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.073209922 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077312811 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.070779256 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.077420359 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.072270469 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071925819 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.072734384 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.069506914 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07115799 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.071740743 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070322329 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.078617984 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071423328 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.070794564 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.070565901 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.069341545 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.07243489 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073901952 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079198421 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.074632391 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07470125 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.066866097 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.068745622 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072099866 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.070137428 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.073153541 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.07324188 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076712515 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.073373231 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.072107913 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069991371 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079570283 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077042033 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.075039293 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.069082781 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074720361 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.071488543 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.073741267 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.072008412 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.0716467 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071244368 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074265767 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072105091 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.070128602 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076356299 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073208392 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070414797 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.201901285 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.073878893 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.073023175 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.067258328 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.073037088 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.073785361 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077147769 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.074146781 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072500361 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082479973 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.069978722 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.07301221 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074168123 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071130069 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07677254 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.067136434 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.073626897 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072344915 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072317759 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.067189937 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.072260733 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.069951859 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.075047542 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.071347204 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.066673833 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081598773 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.081729145 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074519899 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070435577 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070712404 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06682749 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.066328706 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.071471812 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072284702 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.073943209 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.082039016 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.071498067 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.071122646 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.067418753 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071875742 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075013496 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074239092 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.068220081 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.066232445 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.071191486 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.074848764 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077242945 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070089481 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070769773 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074941667 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.074655978 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06940639 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074005205 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.068481398 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074671225 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084416959 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.071203008 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073250327 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.078394956 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078924062 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071700774 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.0667316 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.071301882 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.07556842 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.07199288 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.072696252 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071817231 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08638053 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07414363 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.070636699 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.070542164 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.074066547 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.070821139 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079587122 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07232943 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071918362 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.075989699 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.076145877 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.079787666 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075298954 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078867499 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.074650169 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.075125341 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.070266825 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072819058 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.069889721 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.07134004 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.072892783 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.071947753 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075978725 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.079207409 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.072051349 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082437939 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.081408676 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.073514571 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.0681991 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.070820222 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.07052855 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.066086033 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.07168784 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068994457 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.069467936 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068863373 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069946058 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.072176763 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076029526 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.073042147 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070996181 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.070088786 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.065009656 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073176392 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072681336 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07164728 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06710967 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06976108 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070837455 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07486507 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.204825794 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.070620052 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.075628911 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.074983532 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073060986 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.067382937 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.079096632 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070692472 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.073743287 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.072544096 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072270777 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.072381495 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07548966 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075726663 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.07277247 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.074910347 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075627672 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072873066 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.069625502 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.069509516 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.076683274 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.069987256 seconds)
  done (took 45.682893161 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104287711 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067552583 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067281759 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067053092 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077571299 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06795637 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067168355 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067887561 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068146014 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069865375 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066842718 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067432295 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074484764 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081702911 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077219366 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071437532 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066749569 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067783211 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067461291 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068176366 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07472841 seconds)
  done (took 2.854981935 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077691454 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.082060434 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080387912 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086082622 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07576039 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.075691931 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.080703701 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074648373 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082643554 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077328277 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08202789 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074885127 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.077290388 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.077208245 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077469841 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075071245 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08254487 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07546559 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.07560448 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080245287 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07479691 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.080083679 seconds)
  done (took 3.062933671 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071590945 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070862395 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.073334495 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.067225522 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.070685485 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.066507495 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.075018963 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.068630719 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.074453812 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.070283273 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.070373148 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.070412385 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.073203323 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.066447275 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.071437713 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.068997082 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.112545162 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073834787 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.070598123 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.07183444 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.066378757 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072755268 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.067041929 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.066859943 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.070320696 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073735095 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.072153216 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.069294052 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.07112652 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.070563937 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070844843 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.069173781 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.07257715 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.072033691 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06992539 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.070372538 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.071617599 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.070865636 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.067447893 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.069059069 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.072597956 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.069513645 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.071418483 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072028422 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.068731108 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.069203115 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.073174303 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070434413 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.066163301 seconds)
  done (took 4.835616627 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.082248866 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.114555325 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.072653852 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093457149 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.084549189 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076846354 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.074558808 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094564463 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067972838 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.069008058 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08625691 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.083727632 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.070411282 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07426008 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.078257003 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070445923 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.071273198 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069454986 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.0740108 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069961034 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073699375 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07758593 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083931644 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.083021301 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.0739127 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069337478 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.070399098 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074010843 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.082245331 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.074252199 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074545219 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074793962 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.085074959 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.076398194 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069658602 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.072365777 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085921588 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.070031173 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.07275489 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.068027169 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.072250706 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.074433256 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076843322 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085820642 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070132339 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.075993393 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070225846 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06773463 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.082781085 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.072346037 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077783308 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.083731995 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074223192 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.070103476 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074882726 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.084295369 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.070639558 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068702762 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072968682 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.081952438 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.068206934 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073647273 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.083115307 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071913369 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076380844 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.083833799 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.075800908 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.074197014 seconds)
  done (took 6.681725595 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080394512 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.100234998 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087319454 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086271688 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079961999 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.080063723 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080193521 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.079642917 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.088058106 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.083882275 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08004365 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119184571 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.075842929 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081918208 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080750363 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080200053 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.080585524 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0801535 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080503234 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07989523 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079685101 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086581631 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.079858194 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.087070969 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083743145 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.075446408 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.079821427 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079832246 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08691393 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079849129 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083753264 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.079833466 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080614846 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086301936 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083647761 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.079787796 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070613381 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079813096 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.079958165 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.08011987 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.075475499 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086640421 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07962175 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.075587142 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079740072 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079546452 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08636164 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083291203 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082299404 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083633949 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.080658505 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086741461 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079614573 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080006906 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.086645088 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.089427107 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086227873 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086980768 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080370789 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.085955699 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086329065 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089000412 seconds)
  done (took 6.501147184 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086809627 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077847969 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.086186064 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.066680554 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069694798 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07605216 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068955597 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.069215126 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078291182 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.080475532 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079937741 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076326078 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078772365 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080505694 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076417375 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079170421 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076357115 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075984639 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077739812 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076239138 seconds)
  done (took 2.902626882 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.079765941 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088117226 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.072657397 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.076697927 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.074097519 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075885267 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.073693642 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074469238 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071887121 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074040123 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.079893328 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080791611 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072086083 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075992387 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.080981847 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07669673 seconds)
  done (took 2.585339798 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.088881901 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.07784075 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084967511 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.071215093 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.071819231 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.066965668 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.070506926 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.066473532 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.067805239 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082479096 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.070833217 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.080907273 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.070832204 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.069514888 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.068127308 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.075318193 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.067039932 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.068146887 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.071130037 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.083500096 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.074205163 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.069191746 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.0745956 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.071581081 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.073575124 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.075419563 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069336125 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.071063903 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.068085939 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070703022 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.073625156 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074394634 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.068161042 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068269063 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.069617161 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.068000801 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.070081022 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070874589 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07580409 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.0705584 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.069555354 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.073108125 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070465623 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071604939 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.067401451 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.071571293 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.067384939 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.073198037 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06863255 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.073287819 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.070654097 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072878109 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070961646 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077506499 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073272816 seconds)
  done (took 5.331281516 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084150204 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074267931 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066643614 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.069071269 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.073753631 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071829382 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074252087 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072674171 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072215977 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.069079804 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072266368 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073424044 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072214202 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07410278 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071962849 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07395074 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.067188697 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072499487 seconds)
  done (took 2.676416089 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075790526 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071528108 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.077579562 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071039807 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.071595016 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073556043 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067208076 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.069167476 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069522506 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070574273 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071431058 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.072951121 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069512893 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.073142037 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070579048 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071648752 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.072739963 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069193802 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071081125 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066535599 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074040019 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069763988 seconds)
  done (took 2.933318552 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.097991023 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.087133587 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.144975739 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.08381856 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089706978 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.076993557 seconds)
  done (took 1.945670509 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095793422 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105719999 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071260415 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073698692 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080110944 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075189013 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074642206 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075016096 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08224191 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080199224 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075120003 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082925316 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081976715 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081341006 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079813615 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079816944 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074553201 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077366524 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071870996 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087775412 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074688382 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082060276 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075082713 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074277253 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074778702 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081128765 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082164969 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079653275 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0752115 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082021954 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080049493 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074418387 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082473985 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07992552 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07377472 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082664967 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07538628 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087067303 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079509308 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081370533 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074111724 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080410998 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082504768 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078883083 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082011573 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074814287 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078724056 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074721607 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075536993 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088778362 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079477364 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081441363 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079991775 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08223631 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082841798 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088469005 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080311004 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081414523 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080031339 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080184769 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081122903 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079774457 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081942576 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080148713 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079722574 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081732682 seconds)
  done (took 6.641308153 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10732329 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072144912 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075120278 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080135211 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081199547 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07455815 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07519136 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074855081 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074454509 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072002457 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111552963 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07464972 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081653055 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081673109 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074824392 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074594723 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074828188 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080934484 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071538113 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089167904 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074984355 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081111702 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081427758 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081361346 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079592889 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080000115 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074502234 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074592598 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074359544 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074296847 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078744853 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074662564 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081109053 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071510066 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081906059 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074765081 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074496347 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078524719 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074549922 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07965817 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081180252 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087495959 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074562862 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074630261 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080249863 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074915981 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074571947 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071827137 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075355761 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071504223 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079932527 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079625234 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079580964 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081073065 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074669655 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074432841 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074775426 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07475686 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074975906 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080304403 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081626664 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07507887 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08899472 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075206404 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075065967 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08221139 seconds)
  done (took 6.548838183 seconds)
done (took 136.50989771 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.194813548 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.174436706 seconds)
  done (took 1.728704252 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.0739358 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.101895092 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081370988 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133599972 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.072100118 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105477546 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103990668 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083562179 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071902127 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071451932 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070957588 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.074063335 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135851556 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.072130796 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071652852 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073569243 seconds)
  done (took 2.770079419 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102502889 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.163247557 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105955697 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069831683 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102588227 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07725537 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069944368 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079803668 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075833023 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.070760968 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077153963 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074840281 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070150531 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075067746 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.077901983 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07719427 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070037648 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07669791 seconds)
  done (took 2.891475323 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10460311 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095614183 seconds)
  done (took 1.577539314 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158541469 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.137377442 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.205619289 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.343203878 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.163313334 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.15664003 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.146962038 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.146406614 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116680004 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.142188754 seconds)
  done (took 3.089470883 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103588749 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.155371882 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.272130882 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.1206121 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078052807 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097687941 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122397212 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.083314732 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084728307 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.084378622 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.08431271 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.08142335 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103147756 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078016306 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078436358 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.081126644 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106260888 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077739814 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.079558901 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.081092575 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105030249 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071457527 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.0782303 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077755732 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.08225316 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.082295855 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070918675 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070851759 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.08029727 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.079425811 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.08089395 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.096679538 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.082055515 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108450033 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.076071777 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.109926889 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081623389 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.078215439 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079275551 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.078028463 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082967716 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082287244 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077565478 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.082099542 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071247919 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.08109609 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070955969 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071075685 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081750312 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071799325 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081819497 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081530647 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.108559196 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072183838 seconds)
  done (took 6.237083101 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111589501 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110186059 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07465902 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.116167871 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107264073 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074075497 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.107423257 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.101552783 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.109857085 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074912729 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073476745 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075099483 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084805865 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08521374 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.119184774 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.111073403 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077148387 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073497824 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111301873 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.1104026 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.0732707 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102582637 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099528259 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109936605 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.072123784 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075219922 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072969662 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074278009 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081171441 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081915497 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072692981 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.084158178 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08750599 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082265009 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071965658 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072508043 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073497314 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.08292506 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083385526 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083454149 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081403346 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072051049 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072680547 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074036781 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074009694 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072369722 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.082163658 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.083534036 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.082336167 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073490371 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074386235 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.073365474 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074581643 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083445238 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.081001194 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.084773667 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083239461 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073045823 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.0723492 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076209453 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083476035 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082731801 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083216549 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074382671 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083717095 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073572445 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083999194 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.0878727 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07321626 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074019648 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073411786 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073925454 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.076301649 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081800532 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.081918348 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074261593 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073236433 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07299744 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084000434 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082369387 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073354851 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080214669 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071918044 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072155665 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074549227 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074169904 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.080674544 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.083107206 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074755504 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073027956 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072493636 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072049107 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.071171786 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078809843 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081459036 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080887245 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.080607761 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073249053 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080223229 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.210155159 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075837795 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.083874517 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.073614262 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074812378 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074613944 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.083445793 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.082560439 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08336302 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0731143 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.073871627 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.081567486 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085423555 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.074270859 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.082777828 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084128765 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.082368336 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.072941801 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086166373 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074272718 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083549252 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073774849 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085336997 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073413862 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083669009 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073241406 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072535561 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073477505 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.083311266 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07439833 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072811518 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074327 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07429576 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.085388062 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.085715411 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074791169 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082244026 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.082399552 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075383386 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082381078 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073421467 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082981948 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073885851 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074219103 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071729692 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085044226 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073572965 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.073214275 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073048193 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.084036895 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073297835 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082691074 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081361446 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072003432 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085585273 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083937678 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.081150877 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.084252406 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074662427 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072539319 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072928291 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072924495 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081906388 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08257949 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074202376 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072254339 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080936385 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.083387179 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.072116362 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.081554455 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081558313 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.082510216 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073464686 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073455791 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08418631 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083683112 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.082543234 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081445865 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081948108 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073462224 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08116128 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081549151 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072880984 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087125365 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073188096 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.085755668 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.082046952 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080146214 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081372887 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.083445193 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082607058 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.08388666 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.085649643 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071558701 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072214933 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080953868 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071934115 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072123624 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079326238 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072735709 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072857089 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.084095957 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.204864237 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.084970042 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.07422712 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.083143531 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073290706 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075984127 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087973697 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073151865 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075084716 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083533612 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074270486 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.082429099 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084374699 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.082547037 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073777041 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075291264 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082991044 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.083535584 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.075942122 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07302634 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075271466 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.082685575 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.082416371 seconds)
  done (took 19.607753827 seconds)
done (took 39.288118361 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.206481813 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153492646 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.172776902 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119483449 seconds)
  done (took 2.124787882 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119252091 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103295069 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095745759 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.070015549 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102312862 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.070376897 seconds)
  done (took 1.973085558 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.297064685 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.203206662 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.183763457 seconds)
  done (took 2.094355684 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.205785632 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190667159 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.433014827 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.270345359 seconds)
  done (took 2.618577593 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.146263156 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090964605 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.072679272 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.089595666 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134110406 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161360003 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102139284 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.127950918 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.084680184 seconds)
  done (took 2.473862722 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147249325 seconds)
done (took 12.847212362 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.192440696 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.17262827 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.130529938 seconds)
    (4/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.103929719 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.123484712 seconds)
    (6/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.221486192 seconds)
    (7/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.238631517 seconds)
    (8/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.21922733 seconds)
    (9/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.186080417 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.088315262 seconds)
    (11/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.059159916 seconds)
    (12/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.207484224 seconds)
    (13/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.078678567 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.083781218 seconds)
    (15/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.081475231 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.101381976 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078949301 seconds)
    (18/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.188790012 seconds)
    (19/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.095234625 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.141777537 seconds)
    (21/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.082099081 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.206026652 seconds)
    (23/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.095832407 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.130698607 seconds)
    (25/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.175955205 seconds)
    (26/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.171697069 seconds)
    (27/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.057387412 seconds)
    (28/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.080702557 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.12771969 seconds)
    (30/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078748498 seconds)
    (31/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.20882919 seconds)
    (32/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.192550439 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.071139897 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.094722947 seconds)
    (35/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.155958282 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.326534718 seconds)
    (37/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.074252204 seconds)
    (38/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.190177638 seconds)
    (39/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.147470476 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076390448 seconds)
    (41/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.085404843 seconds)
    (42/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.082439153 seconds)
    (43/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.146379588 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.096316205 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.095468369 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.130251075 seconds)
    (47/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.074182885 seconds)
    (48/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.187566492 seconds)
    (49/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.056171869 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.129521707 seconds)
    (51/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.081447326 seconds)
    (52/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.157793809 seconds)
    (53/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.08769116 seconds)
    (54/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.161162747 seconds)
    (55/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.175645587 seconds)
    (56/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.144725234 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.078172533 seconds)
    (58/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.068916545 seconds)
    (59/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.059814081 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.08925836 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.082107422 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.094073572 seconds)
    (63/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.07710373 seconds)
    (64/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.165839405 seconds)
    (65/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.056162322 seconds)
    (66/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.19741812 seconds)
    (67/309) benchmarking ("sort", Float32, false)...
    done (took 0.133444833 seconds)
    (68/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.21478491 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071921951 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.097779111 seconds)
    (71/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.156220471 seconds)
    (72/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.114599435 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.098941935 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.077105343 seconds)
    (75/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074826624 seconds)
    (76/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.189230674 seconds)
    (77/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.077819075 seconds)
    (78/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.077799362 seconds)
    (79/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.154454939 seconds)
    (80/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.340216607 seconds)
    (81/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.058734555 seconds)
    (82/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.079169447 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.093814753 seconds)
    (84/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.056641067 seconds)
    (85/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.099066947 seconds)
    (86/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.078656094 seconds)
    (87/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.117976571 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.096812449 seconds)
    (89/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.079476747 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 0.072119816 seconds)
    (91/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.104064334 seconds)
    (92/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.077228768 seconds)
    (93/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.082079968 seconds)
    (94/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.109127527 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.0950814 seconds)
    (96/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.072358771 seconds)
    (97/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.149299844 seconds)
    (98/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.096599508 seconds)
    (99/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.080923535 seconds)
    (100/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.071577954 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.105487824 seconds)
    (102/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.083906338 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.097592032 seconds)
    (104/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.056072375 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.149693417 seconds)
    (106/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.166565138 seconds)
    (107/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.071494434 seconds)
    (108/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.079054329 seconds)
    (109/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.072343039 seconds)
    (110/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.079804452 seconds)
    (111/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.070376793 seconds)
    (112/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.078073056 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.071328474 seconds)
    (114/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.058368153 seconds)
    (115/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.088103067 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.078301568 seconds)
    (117/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.055983781 seconds)
    (118/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.084812353 seconds)
    (119/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.113832171 seconds)
    (120/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.16825786 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.072617763 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.147309664 seconds)
    (123/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.078504114 seconds)
    (124/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.056139594 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.097000743 seconds)
    (126/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.077568278 seconds)
    (127/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.080910556 seconds)
    (128/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.056397987 seconds)
    (129/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.056522371 seconds)
    (130/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082846014 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.070782479 seconds)
    (132/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.080941149 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.070788789 seconds)
    (134/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.114011652 seconds)
    (135/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.073027877 seconds)
    (136/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.057049438 seconds)
    (137/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.176228641 seconds)
    (138/309) benchmarking ("sort", Bool, false)...
    done (took 0.14822979 seconds)
    (139/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.078855509 seconds)
    (140/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.056571216 seconds)
    (141/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.079068815 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077439649 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.070668021 seconds)
    (144/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.159852482 seconds)
    (145/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070379395 seconds)
    (146/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.14936427 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07696073 seconds)
    (148/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.158268834 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.077266388 seconds)
    (150/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.07532952 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.097167855 seconds)
    (152/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.07375734 seconds)
    (153/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076687065 seconds)
    (154/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.057478255 seconds)
    (155/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.119643849 seconds)
    (156/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.057689836 seconds)
    (157/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.11577956 seconds)
    (158/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.078447285 seconds)
    (159/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.077002082 seconds)
    (160/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.073320345 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.071374775 seconds)
    (162/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.139588204 seconds)
    (163/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.067671165 seconds)
    (164/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.05765492 seconds)
    (165/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.155557678 seconds)
    (166/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.070521826 seconds)
    (167/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.078545781 seconds)
    (168/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.167305134 seconds)
    (169/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.056941148 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.128188655 seconds)
    (171/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.084179484 seconds)
    (172/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.079598317 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.139544639 seconds)
    (174/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.129989778 seconds)
    (175/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.186995216 seconds)
    (176/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078357314 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.104269823 seconds)
    (178/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.078858339 seconds)
    (179/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.078854353 seconds)
    (180/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.155212378 seconds)
    (181/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.071320009 seconds)
    (182/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.057216451 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095502964 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.07218436 seconds)
    (185/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.148507481 seconds)
    (186/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.18129906 seconds)
    (187/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.232827243 seconds)
    (188/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.089217098 seconds)
    (189/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.080052724 seconds)
    (190/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.08665616 seconds)
    (191/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.177631562 seconds)
    (192/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.079097161 seconds)
    (193/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.118957917 seconds)
    (194/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.078664056 seconds)
    (195/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.079200599 seconds)
    (196/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071700474 seconds)
    (197/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.09308624 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.072177881 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.095048387 seconds)
    (200/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.056769037 seconds)
    (201/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.080596363 seconds)
    (202/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.056570535 seconds)
    (203/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.059229435 seconds)
    (204/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.070886747 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.116600024 seconds)
    (206/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.068928303 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.092898662 seconds)
    (208/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.079046149 seconds)
    (209/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.056581439 seconds)
    (210/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.057979429 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.092519689 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095811199 seconds)
    (213/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.057064879 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.070695603 seconds)
    (215/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.114133865 seconds)
    (216/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.057786429 seconds)
    (217/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.057946581 seconds)
    (218/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.077853638 seconds)
    (219/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.056507433 seconds)
    (220/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.05615045 seconds)
    (221/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.099890085 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.107130728 seconds)
    (223/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.078705756 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.071137171 seconds)
    (225/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.074361996 seconds)
    (226/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.179147901 seconds)
    (227/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.058034501 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.100538865 seconds)
    (229/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079816944 seconds)
    (230/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078668064 seconds)
    (231/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.071444555 seconds)
    (232/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.056798714 seconds)
    (233/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.057475382 seconds)
    (234/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.116145887 seconds)
    (235/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.056251476 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.070753082 seconds)
    (237/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.057437793 seconds)
    (238/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076240689 seconds)
    (239/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.080627303 seconds)
    (240/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.070519829 seconds)
    (241/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.067924887 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.143504817 seconds)
    (243/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.073854626 seconds)
    (244/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.059791042 seconds)
    (245/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.056086336 seconds)
    (246/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.056712922 seconds)
    (247/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.057717398 seconds)
    (248/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072416138 seconds)
    (249/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.084236576 seconds)
    (250/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.072768587 seconds)
    (251/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.070488105 seconds)
    (252/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.056166941 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173709213 seconds)
    (254/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.123844132 seconds)
    (255/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.057368923 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.070524609 seconds)
    (257/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076901417 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094439896 seconds)
    (259/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.073733441 seconds)
    (260/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.056991331 seconds)
    (261/309) benchmarking ("sort", Int8, false)...
    done (took 0.150393129 seconds)
    (262/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.055952065 seconds)
    (263/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.057378247 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.078141338 seconds)
    (265/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.056888424 seconds)
    (266/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.056851478 seconds)
    (267/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.071574732 seconds)
    (268/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.056252907 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.07049609 seconds)
    (270/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.181568242 seconds)
    (271/309) benchmarking ("sort", BigInt, false)...
    done (took 0.195814502 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078803036 seconds)
    (273/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.094230078 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.070443445 seconds)
    (275/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.07169158 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.070606942 seconds)
    (277/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.071144804 seconds)
    (278/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094733568 seconds)
    (279/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.056640598 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.095644171 seconds)
    (281/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.057286905 seconds)
    (282/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.056205527 seconds)
    (283/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072861763 seconds)
    (284/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.070941368 seconds)
    (285/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.071444385 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077670646 seconds)
    (287/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.076130847 seconds)
    (288/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.055749998 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068851713 seconds)
    (290/309) benchmarking ("sort", Float64, false)...
    done (took 0.132051615 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.069116818 seconds)
    (292/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.057132489 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077021906 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.100013521 seconds)
    (295/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.069834725 seconds)
    (296/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.057477915 seconds)
    (297/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07557092 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075943273 seconds)
    (299/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.138855695 seconds)
    (300/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.183134643 seconds)
    (301/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070676976 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091127506 seconds)
    (303/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.067288181 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.075809817 seconds)
    (305/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.181049501 seconds)
    (306/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.070992485 seconds)
    (307/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.055602961 seconds)
    (308/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.056159876 seconds)
    (309/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.23681851 seconds)
  done (took 32.460237287 seconds)
done (took 33.8849285 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086213948 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098698813 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.081300112 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097408302 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085047359 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.080679345 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.078028548 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.08282432 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084568385 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.086663142 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.08405896 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.060521786 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.079469186 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07991833 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.080257462 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096457864 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.085303209 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.078351447 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07872706 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.069933447 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.078177246 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.071077388 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.072438689 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.059804718 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.08340649 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076485637 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07969513 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.079163971 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.07063807 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.070586128 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.074430091 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.078514338 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.070608619 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.085278829 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.078117845 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.078959522 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.080534734 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.081672943 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.072318646 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.071228541 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.079741887 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.070421732 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.078583286 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.078769121 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.077429152 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.076056222 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.078576589 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.082657505 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095781003 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073252772 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.08129713 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.081440378 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.082277847 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.077781939 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.074641282 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.078746254 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075715375 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096658839 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.078665949 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07310292 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.079788105 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.079745512 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075861658 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.078173737 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.079009256 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.08095654 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.082547735 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.076987265 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.080411399 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.076897467 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.070947589 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.078757005 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.074990296 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.070309856 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.081153208 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.083494207 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.069136134 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.076725501 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.078374003 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.078257707 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.070264043 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072790053 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.072182568 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07748588 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072696102 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.061896427 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.074490663 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.077815928 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.069304007 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.078518034 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.077426139 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.078148529 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.072170728 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.082236521 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.070342567 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.075722879 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.071131513 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.070718885 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.071995866 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.074568162 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.070452592 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072226433 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.080585759 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071779252 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.077712704 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082818347 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.070036491 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.077488292 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.069388454 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06951873 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083657376 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.079889114 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069951092 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07218803 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069403704 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.077097036 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068581283 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068925163 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.069290992 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.0694192 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075766118 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.069465886 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07171186 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.077349226 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.220162233 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.072123858 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.075749022 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073091269 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.071257225 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.078117395 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.070493608 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.070426569 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.073477628 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.067036793 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072866533 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.070835838 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.079305991 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072039642 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.078993707 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.073342815 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.079532052 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.076157719 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.0772304 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07626594 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.069542168 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.064457266 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072544793 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073397478 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.072441604 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.071716251 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.073265957 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.069841389 seconds)
done (took 13.249428043 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.07115613 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.140240488 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100280544 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099366933 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.089454009 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.071844231 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079951882 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102706564 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.073067172 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103790625 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092336785 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.089954722 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.116981104 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.069529599 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.070524956 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.07483053 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071767245 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.08596936 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.103246757 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091184627 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116673247 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.070170588 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.096047815 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092693402 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.092487246 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.096609008 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.072410613 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.07493852 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.0742828 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.10579516 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092804008 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.074694645 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.071481568 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.101122873 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.096175799 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087480491 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.071401868 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087212111 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.071739214 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.070535083 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.07238857 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.102067941 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084690454 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084766692 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.074799848 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.081026606 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.072451018 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087240559 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.093622054 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.08312203 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.089580542 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103711037 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073567699 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.088039235 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.069752622 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.089906798 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.081384014 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.0729331 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.071504105 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.078799603 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.071740774 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.074957042 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.085201606 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.084221805 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074919962 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.08825692 seconds)
  done (took 7.139862133 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088474539 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.096302921 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088473303 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.088006895 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.070852621 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070935407 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.07176925 seconds)
  done (took 2.099456609 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071305347 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092797711 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.094616716 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093811393 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086550777 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.093016434 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083217591 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.071526589 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092404952 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.073027961 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092632667 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.105050665 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.074814025 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078598459 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094886641 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.071322373 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09556604 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.071395014 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07408971 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.095280707 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073719913 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.100500598 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.075721282 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.071966884 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.086114077 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.072453434 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117725319 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075583138 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.0732326 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.074692885 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069514611 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.111732542 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084866889 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079214 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071482566 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08716113 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08659707 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069925422 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.088277908 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.080233839 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085502349 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.07271131 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.072366748 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069661429 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07545373 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.082036861 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.072630693 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.072125746 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.074390266 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090810551 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.072397381 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085314934 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.074125613 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.076766623 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073330892 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078245747 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08160552 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.072726986 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091823939 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073101744 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088460819 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088027771 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085540637 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087685612 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073935614 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.085287776 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085124448 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073958407 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073411937 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.075348671 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08823594 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.07064592 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.073721088 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.082376496 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073186728 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094830156 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094187536 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073416425 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.085170119 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.072236451 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.071873692 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.07239104 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094203047 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07687724 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07199352 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075468162 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076089197 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070645586 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.071166539 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.075752738 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069865698 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073961705 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.074954101 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.075492915 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075296401 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.088558423 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.074571011 seconds)
  done (took 9.331528195 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.07403377 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.0736711 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.074157742 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.072898655 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.072999073 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.073435349 seconds)
  done (took 1.98683879 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096212893 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.073818018 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084547536 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07668128 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107731932 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.091372755 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091603502 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.082302799 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08701899 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083172491 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.091131012 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.09282813 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.096734091 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.077099398 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.091441563 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.076692602 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.091905438 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.0790683 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082788785 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077145063 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090262401 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.077496772 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076732719 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086849177 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.080121465 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.076739087 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.083154612 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.083741224 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082814286 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.08333916 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076934262 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.08004356 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07579276 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.08302337 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.091854658 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075147359 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075819411 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.081510517 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076661268 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.080127487 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.092138461 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077438823 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078093414 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.082280108 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.082712424 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075807142 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081545319 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.083739789 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.092176377 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.082568099 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.08383502 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.076432106 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.080343021 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.082311743 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075629749 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.082270431 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.081108843 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.091574051 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076336124 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075290075 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073518177 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.08061611 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081986579 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.080678543 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.0822266 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.082256423 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07610716 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077173875 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076969607 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.076290177 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.08177284 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073288439 seconds)
  done (took 7.449191042 seconds)
done (took 29.519752659 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.538363893 seconds)
  done (took 2.04881001 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.621401272 seconds)
  done (took 2.156637304 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.552893326 seconds)
  done (took 8.087411747 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.400681351 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.502271746 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.734052973 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.138788212 seconds)
  done (took 3.356626259 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.722984386 seconds)
  done (took 2.264558786 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.231103305 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.22081085 seconds)
  done (took 2.001681193 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.386499411 seconds)
  done (took 1.919540623 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.135171616 seconds)
  done (took 2.669413 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.251643221 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.180719302 seconds)
  done (took 1.969565048 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.47844836 seconds)
  done (took 2.014348489 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.87836704 seconds)
  done (took 6.415782611 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.20755987 seconds)
  done (took 1.79391079 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.244373311 seconds)
  done (took 1.784095141 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.75794305 seconds)
  done (took 3.297949871 seconds)
done (took 43.321915526 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.087559477 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.089464542 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.09005412 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.086902248 seconds)
  done (took 1.882138377 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081585625 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.078478488 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.081721647 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.078453868 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.081347669 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077991092 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.079373542 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080981442 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.077230315 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.078533282 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.077293187 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.077425841 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.080094893 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.078826406 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.076227932 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.080158425 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.080745037 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.077967579 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.080763322 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077254819 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.076320365 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.080012197 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.079775771 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076531083 seconds)
  done (took 3.440832347 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082791318 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.078009583 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.08008723 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.076095216 seconds)
  done (took 1.866472312 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082877975 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.096637535 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093087911 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.082643762 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.097350264 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.090950275 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074247812 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.074188547 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.075558005 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.082030992 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.073770115 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099842483 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.0930206 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.082282673 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.084761885 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070937039 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.073813111 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092470093 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.083229797 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.083739094 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.075578827 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.083036561 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072865791 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092387425 seconds)
  done (took 3.557244101 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.091913455 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105324376 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085901169 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094654675 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096868598 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.070141374 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.092805604 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096857327 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.128529212 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.071024942 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.075800825 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.070657915 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.078700242 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.07037265 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.08694436 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.112001944 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.114192788 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.074191953 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.103148003 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070333388 seconds)
  done (took 3.346491896 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077593671 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074840134 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.075322874 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070365951 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081561964 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.077558191 seconds)
  done (took 2.015493777 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073767295 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.075651483 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.072444312 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.072958568 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076831932 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.073197334 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.07136653 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.073172077 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.072685549 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.072766737 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.07216315 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.070860965 seconds)
  done (took 2.430370278 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.20057214 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073995101 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.074216489 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.071595332 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.076402549 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.071899541 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.086392064 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.073543143 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.098212739 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.071767349 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.072348714 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.074142656 seconds)
  done (took 2.600219816 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210456701 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080468851 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238699973 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155369216 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117190258 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120335294 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116880346 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11755291 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.147147498 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105603522 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16973965 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168772587 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11766655 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140895879 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094316123 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.103581874 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160256392 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168602275 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108152709 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167727607 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150707915 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130062157 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150004269 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106170731 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11031822 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126140447 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.076296633 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08541673 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173163908 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137497458 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148170426 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11517974 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098234131 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179119383 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170882507 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144274274 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151010805 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089413964 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.107067368 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135011391 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198524297 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093291721 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162864774 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251760107 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086052709 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13800883 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121593522 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.124695287 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.110562836 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094357882 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150576103 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184102569 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.142153359 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092793513 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128338287 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119802872 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.120168512 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117383512 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182799444 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162558229 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131363626 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.076307944 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110859341 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15385593 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135709911 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.112479222 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.128997854 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096654681 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140234754 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156277862 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127068963 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148666255 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.120748643 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093119505 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122380635 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144182455 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131617992 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162575815 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12819827 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07734758 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127629197 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107862166 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084581331 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.148098714 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079766518 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175292301 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103205741 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108955056 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127863991 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112065271 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113221995 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161918919 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.288837758 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108322592 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.071577504 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10863022 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.123528808 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153027144 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092717201 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112238483 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121149623 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.086253931 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142538861 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.081071465 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12745582 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.080666727 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128031523 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132638461 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.083147549 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127122305 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108192039 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.103795358 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138107395 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16184871 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091812148 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088050067 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165656088 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125625914 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.106409564 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145610508 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157758414 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.103418432 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106256072 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152525732 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174626001 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093551211 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164169054 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110766817 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088477242 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.091972476 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126345726 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115638545 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.128298707 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086070072 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.121552651 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169199975 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07952555 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099166888 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136276004 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0830609 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084667119 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108497747 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108648743 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100132341 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.104525362 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.106209526 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140480268 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125253415 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.253625473 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12886985 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104236654 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169760331 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091850936 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.106284289 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108660095 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.075517362 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.139078906 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160222339 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08530264 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165173439 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.127110712 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119737379 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121667768 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088681659 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142608587 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083776269 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.074839562 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146205446 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114032451 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114395137 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152628367 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118602822 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.129753648 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.12346505 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137931931 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134119203 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130900713 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110164743 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.09249733 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114636452 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131516254 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077728489 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09457601 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084938815 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107197986 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100065354 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087616527 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144833446 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128025886 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111968598 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114910599 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098716549 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148230133 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.08100483 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130812676 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.121819452 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096746553 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152592991 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151224546 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13375963 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101825217 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136273293 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.219276078 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079618318 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.09839673 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128244477 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087333226 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090032432 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121968737 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149067664 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133055556 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141858573 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126804906 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125078919 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15686944 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074146327 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.122496198 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148935327 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125984973 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.109241963 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094813787 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.103699091 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144053699 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111562191 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181266657 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116835822 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126582344 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155883369 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.105726962 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084724706 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106935145 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13865369 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108747605 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145756573 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103114379 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0920327 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1117633 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.079162946 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103384919 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130053246 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12363936 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137698292 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.117609946 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136509112 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081689022 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120379383 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126863393 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125858485 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.068181398 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121309034 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161163906 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097657486 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12009636 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152405466 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083894691 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.28441105 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177886329 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148143747 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090718643 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115323926 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123575161 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131072145 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122820697 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142527609 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112813725 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138674955 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113341691 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089784696 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092311358 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101250838 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110021549 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.099008357 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109475274 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.118559638 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.101531944 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136543473 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108020336 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113707916 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120016849 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.102730702 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.097264798 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09974202 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174555301 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121856446 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17138314 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.103941637 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.14435747 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163476708 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079131191 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083874757 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.082340558 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142048361 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088505145 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133645799 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.110937954 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120605364 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127055675 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145740948 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100243586 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073466466 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111183014 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136387868 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126655891 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101415753 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107632895 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163500899 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.10333995 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08344165 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116870667 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117639216 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.250668218 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175125104 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.067375309 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111747044 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081653661 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085435315 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131420714 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153926521 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.086449694 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104262648 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122486145 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116371018 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129584439 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109463734 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111533725 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129320053 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152329635 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132996381 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.093555292 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116992435 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130596693 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157634647 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105638903 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.102068845 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173967937 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152422863 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.161429111 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.093239114 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116731622 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116526066 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114406539 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139913935 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087829874 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164096513 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086357231 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137220421 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108380558 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093739419 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134143927 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.112548148 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092408685 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148920044 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119971126 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086810814 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0811245 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121637214 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121211591 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109668682 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.080027417 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142221787 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.077469311 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134076061 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.307782357 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086068145 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10951457 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100794712 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083763321 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112730766 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106685031 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092367834 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.103226419 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173501784 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.091960668 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151013837 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135567985 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116461705 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138784337 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105927525 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.645027249 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082212765 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153033451 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121351738 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175514709 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103785124 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1197047 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112358907 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126673607 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147382737 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107375635 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.18105404 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133594646 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.119350012 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085020682 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105531556 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107695622 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.092873226 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112002327 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116096676 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119596434 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.097130322 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.120363542 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127500534 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086168424 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100094786 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157476418 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120860905 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146298757 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142139646 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089616334 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119924008 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138547606 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084882433 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.12355681 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.299863667 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110708996 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103742125 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084926273 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.106106637 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160153291 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078682836 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165425476 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12390434 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112837971 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11562494 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115139822 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137265131 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112574414 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126079598 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097349226 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.112125202 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117107742 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08567688 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081429139 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109357429 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116035858 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101329356 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103122235 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.103196683 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151845215 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.076140486 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103888297 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11838565 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150546821 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175431172 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.092273402 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087471111 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123882389 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120530943 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.116578544 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12408668 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083404159 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085498445 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084810866 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.082935965 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111007123 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117057938 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118014111 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114442908 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164632359 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087674609 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.230096124 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100031757 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107948942 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074632131 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.086113186 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097564174 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101435903 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109534483 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110981937 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15774323 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.244637867 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.094981702 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097736095 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.079896368 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087909607 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131124193 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113545045 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121482869 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105903361 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.067368809 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113086495 seconds)
  done (took 60.783667217 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.111844581 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.087193412 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.101419314 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148754464 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.126990951 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204317582 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.160017913 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19375511 seconds)
  done (took 2.798252942 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073362897 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.100482006 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105785641 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.087763558 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.071240346 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.07404064 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.229005254 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.086246244 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.071610782 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.102868846 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.083934354 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.074100945 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.433924697 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.071140946 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.073273611 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.067207415 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.072554494 seconds)
  done (took 3.534854496 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.393821665 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.619578109 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.347707187 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.080967357 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.91561295 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.097929132 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.14313228 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.140941264 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082056422 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.542918611 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.416630011 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.135333419 seconds)
  done (took 18.582060916 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.086289983 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.079916569 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.09444119 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.093799514 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.082810877 seconds)
  done (took 2.100393422 seconds)
done (took 110.517714461 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.086548048 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.617209022 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.058622666 seconds)
  done (took 2.365953848 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.092108321 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090272441 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090465163 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088435084 seconds)
  done (took 2.031421094 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.079115257 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.080537049 seconds)
  done (took 1.823581762 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.237296483 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.167943577 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100197782 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087302569 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.083618053 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.084128446 seconds)
  done (took 1.924282007 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077278719 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.080352615 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.076970457 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.081610849 seconds)
  done (took 1.980264472 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081558225 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.057561065 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.059561752 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.062822898 seconds)
  done (took 1.926880152 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.092166632 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.086360883 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083661931 seconds)
  done (took 1.928411074 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104913402 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090509745 seconds)
  done (took 1.860606352 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08659652 seconds)
  done (took 1.752918107 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.100229242 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.103897065 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.136062125 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114941074 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.143079834 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.113466342 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088915538 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.090198106 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.081183918 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090458968 seconds)
  done (took 2.727546966 seconds)
done (took 22.576269021 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083697537 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.378783314 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.365247563 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.095191292 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.676929887 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.36139148 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.978304733 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096976927 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119268882 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072803278 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090013677 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652867758 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.968902331 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.335188276 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.957098621 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.328820598 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.654919831 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073539053 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072326501 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072579018 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.965442449 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072736692 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073308109 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073408043 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.655191504 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.376466471 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073512576 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.351066254 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073466618 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074933155 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.361118991 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073731967 seconds)
  done (took 16.311305341 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075447426 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123758574 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07852617 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089889116 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.075154883 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074830062 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.076094057 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073915957 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125177886 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072971972 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089561372 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072382881 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.076727569 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074179494 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092433669 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072956393 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07370772 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073617848 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073693774 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074297475 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091955393 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073064913 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073411507 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073728818 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072914772 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085601255 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074111075 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073427986 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073210632 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075367507 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077093968 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074271227 seconds)
  done (took 4.237332877 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119161072 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.132478316 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078824603 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107651166 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116273973 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075825923 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14583554 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097945195 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.132531506 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073526242 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089872481 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073338245 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106301262 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073937158 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092917156 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.074057442 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074104586 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074043685 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073420123 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073811331 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092899489 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073279578 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073568805 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074013726 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073913361 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086722745 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074348039 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073375261 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073082664 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076102582 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076972692 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074102669 seconds)
  done (took 4.491238221 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076797168 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.080463963 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.087750484 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.089342543 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.074258325 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076513429 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.078163099 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.074706891 seconds)
  done (took 2.32358661 seconds)
done (took 29.035362665 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083551459 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.073955203 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.077103844 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.092288453 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.078385231 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082759075 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.071746357 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.081107294 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.077720969 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.077417845 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.079258692 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.072918967 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.076063087 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.071669753 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.078564756 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.072825419 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.085178171 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.076873966 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.08440003 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084126783 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.075156461 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078194605 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.08007113 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084027948 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.085145537 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084217044 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.081971602 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.078225144 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073433283 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.075743881 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.082989989 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.089295669 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.074296227 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084352907 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.072701642 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.072971633 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.077202428 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072673063 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084811312 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.081105303 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074501189 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.082041735 seconds)
  done (took 4.984722767 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092861271 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096313585 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.089321956 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.066531278 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.07036542 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.069468127 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.093866053 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064431559 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.064768819 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.093066615 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.060891818 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.064388659 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066981173 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.059265849 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.064550932 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.061962826 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.066159966 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.061063235 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.064539343 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.064015161 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.093923555 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.059260569 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081974037 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.067248011 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.06099108 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.066596231 seconds)
  done (took 3.558265971 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079681422 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087909775 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093969917 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.146310788 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.116448082 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082237523 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.083241147 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.097746887 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.098175376 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.07128606 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076314304 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09659462 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092500204 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.0786636 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.072577609 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.089317455 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.088085372 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.075160051 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078337256 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096117383 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090310856 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088951689 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095489188 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086202192 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.071711121 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075252214 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076335939 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.086897366 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076326043 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082281692 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.076154257 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07641143 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.076175692 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.084066509 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.075927163 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.07494412 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09672032 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083398528 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.085180535 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.072889852 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.08126568 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.07471085 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096324741 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127923044 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.072161908 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078739695 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076554646 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082673301 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.072396767 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098697715 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08415131 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.072288432 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.075490412 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.071646983 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.072031676 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075512313 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.075482938 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.075343201 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081921589 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.078442546 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.094571984 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.077390667 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088722765 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.07305747 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080441374 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.07143626 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.073388878 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.071445488 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.098191655 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074064233 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113321095 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.073517882 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.073434466 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081437931 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080061662 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.078687725 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.07248291 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089452856 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.08453744 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.076328982 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.081387486 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.076931869 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075516179 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.100242794 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.074943251 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.074042363 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.073572207 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077744966 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.075480671 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.07369636 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085576698 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.072030839 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.076030189 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089490791 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.072539245 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.074464281 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.078292896 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076778485 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.072537136 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084645423 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076435222 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.073531194 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.08179856 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.072514865 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074920224 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.083585724 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078710419 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.071272449 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.087758149 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077917303 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.073419605 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.074155999 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074839172 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.074358733 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.079939809 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.079043542 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076640606 seconds)
  done (took 11.254026409 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166206683 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.159047562 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.075889149 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.14943149 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.081797508 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083918584 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152258632 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099313731 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.07284904 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.074222293 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.074146982 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.115229965 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.111135121 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121155574 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083942363 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.072908512 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.094848939 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.120624736 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154112951 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147282507 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.095156104 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.082717199 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074826703 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074390194 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.076120815 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083560106 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.09121419 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.082066403 seconds)
  done (took 4.597527419 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085149083 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106328408 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.079059244 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094469858 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.095075531 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072636888 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07598608 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.074773019 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.089824671 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082487663 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072553016 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078392968 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.079698664 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.076283281 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.074393486 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.080102599 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079610181 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.074230224 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.076464038 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077359741 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.083197949 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096825716 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076773578 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072520946 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.078593883 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.07332469 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068397605 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.088724278 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.074289198 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.097811239 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.071065631 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.078890854 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.086865874 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.074322165 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.072856845 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072522115 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.073187348 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.073017785 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.074950011 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.073724892 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.071089738 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.062676359 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.07256016 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.08351118 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.086468864 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.061883092 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077230663 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07897683 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.077536043 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.070204401 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.076122994 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.075735785 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.076054661 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.080329907 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07669621 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.077834514 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07411688 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.079194857 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.081680711 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073146107 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070464353 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.071161719 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.077259079 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.070181669 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.087480733 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.077161176 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.07173465 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072631434 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.075459464 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.08612085 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072395062 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.077809474 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.070516295 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07531363 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077164597 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075292148 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074973325 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.071061894 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.073097193 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.073895249 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.060569434 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.073289723 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.058401775 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.076411818 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070912728 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.072459495 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073137754 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.077599886 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084118109 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.073632687 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078397887 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.073902066 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.071520557 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.076240046 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.066062459 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075497235 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083770144 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.086970049 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.073061783 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.070526321 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086564939 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.078388822 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071939095 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.061029436 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.078161184 seconds)
  done (took 9.771177567 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.095332383 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074181017 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087857644 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09407103 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.091857809 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.079949474 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082724463 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.073827726 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.088174665 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.078991478 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.081591375 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.073490965 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.082479773 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.081829207 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.075198168 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.08236758 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.076759493 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087684142 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.0871959 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.073062868 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080989291 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084755566 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.095013866 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084893816 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083987628 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084967385 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.094789133 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082359618 seconds)
  done (took 4.071638816 seconds)
done (took 39.915958999 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.800304915 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.942435976 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.766789457 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.105708562 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.987578823 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.887631896 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.854303254 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.765885477 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.115046007 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.802994278 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.060983575 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.836761419 seconds)
done (took 65.753629198 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.784068329 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.914383606 seconds)
    (2/2) benchmarking "String"...
    done (took 1.999246415 seconds)
  done (took 5.613668545 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.02796717 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.359642524 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.012765971 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.767553892 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.774099439 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.064765976 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.573046795 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.287749424 seconds)
  done (took 30.53979596 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.927093125 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.990879872 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.479185937 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.51035431 seconds)
  done (took 15.659707219 seconds)
done (took 63.415949529 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.77687998 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.770691299 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.814087038 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.757028862 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.828478076 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.780243493 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.247222384 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.827535305 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.772121147 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.762776385 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.770444734 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.224251677 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.770668508 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.275179307 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.769748889 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.771895079 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.785525955 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.272893212 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.930832642 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.781664739 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.78957338 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.927809519 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.773199892 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.787066502 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.795222955 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.774815278 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.187562766 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.782345004 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.40230275 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.774200492 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.802396876 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.853365068 seconds)
  done (took 204.040350727 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.77174699 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.819225945 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.918452064 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.780012225 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.086401833 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.955048043 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.89018987 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.279702603 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.778043552 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.791120143 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.84554591 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.771626808 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.901615661 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.757597885 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.800999947 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.870830778 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.023585154 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.938922817 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.808841172 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.924765794 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.783801735 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.691998874 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.66077373 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.845094489 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.822498471 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.872854506 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.79293098 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.796210255 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.967882544 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.959129405 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.785438378 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.802209618 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.978771591 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.64749216 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.786933858 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.797552753 seconds)
  done (took 169.409569038 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.944277887 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.775039127 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.772266598 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.772116006 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.778772366 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.773174664 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.896208411 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.902207689 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.402018587 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.357049717 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.827505559 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.579152656 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.774451621 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.840496298 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.78708072 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.772789052 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.774206223 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.789655604 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.79991888 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.778443465 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.77391692 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.903529196 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.788174157 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.782437515 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.784370302 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.773900397 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.780275819 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.150730861 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.774490985 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.779730564 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.015527319 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.77530427 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.774415254 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.634634541 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.352974969 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.866770488 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.776709069 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.780315949 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.775137035 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.775032213 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.991122205 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.775711353 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.77529721 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.777333543 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.930788243 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.774033882 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.899538819 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.77476826 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.265287548 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.774902594 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.775072697 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.590908127 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.380914237 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.774661313 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.775106661 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.777591518 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.775075369 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.775721272 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.781831772 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.640038922 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.854897606 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.77804899 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.77922467 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.781405325 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.776660625 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.855431792 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.779365652 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.8844869 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.827340661 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.00449907 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.901528666 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.778116361 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.842272151 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.869100713 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.776677224 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.776890536 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.775608655 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.775815496 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.85727925 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.777408612 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.907185188 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.784205598 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.777817675 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.827663502 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.845031324 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.777798932 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.636385717 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.780771008 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.776589576 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.070413247 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.845079873 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.777169664 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.777450171 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.776800996 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.777085652 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.908296508 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.900224965 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.496966456 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.782571293 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.778041929 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.75679592 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.786095682 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.913008552 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.779497458 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.936174217 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.77913398 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.859883071 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.782563673 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.779216065 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.777183878 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.810346786 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.780127128 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.837908686 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.778893586 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.1523129 seconds)
  done (took 403.440804757 seconds)
done (took 780.591159362 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.428063164 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.390682113 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.493430021 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.415948895 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.392363149 seconds)
  done (took 13.830801595 seconds)
done (took 15.542330133 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.866646387 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.874247177 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.80375734 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.869774181 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.800585497 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.869408563 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.85328668 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.804938796 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.83688265 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.804026839 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.838699897 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.804812538 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.791510082 seconds)
  done (took 25.528656716 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.026370859 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.033108152 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.851285554 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.022319794 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.826412277 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.023985048 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.947419835 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.937854358 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.938334071 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.798226481 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.794038073 seconds)
  done (took 22.910626296 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.027906188 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.037817894 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.857745212 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.025328241 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.830548682 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.034229084 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.949773626 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.938935113 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.942318306 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.798072691 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.794310187 seconds)
  done (took 22.947983563 seconds)
done (took 73.098283034 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.788795108 seconds)
  done (took 3.500243691 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.818146232 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.98734938 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.798052189 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.794690593 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.789423008 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.79040924 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.792435713 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.791098629 seconds)
  done (took 16.274565131 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.789316526 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.791161762 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.787422434 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.788386935 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.790894724 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.787484837 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.790442714 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.790047542 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.787479567 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.790718776 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.78774713 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.790246063 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.787673494 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.789716707 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.786959905 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.787348395 seconds)
  done (took 30.33658354 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.789810408 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.788100153 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.787411642 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.788188604 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.787951541 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.788711547 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.789432137 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.787623611 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.787800536 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.788054945 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.788560994 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.787991355 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.788023005 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.787461086 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.788856644 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.788747134 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.788610255 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.788405507 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.793443019 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.788877153 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.789378917 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.789001853 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.789298044 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.78940213 seconds)
  done (took 44.644906254 seconds)
done (took 96.469399111 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.531606202 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.421088549 seconds)
  done (took 9.66682061 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.793786465 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.792561058 seconds)
  done (took 5.355569664 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.791510686 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.791877467 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.792686251 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.792563661 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.792719825 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.792620144 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.792907329 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.79251311 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.791848696 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.794004916 seconds)
  done (took 19.640559515 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.792189359 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.792781608 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.789280402 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.791515592 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.792452352 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.79025071 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.792870035 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.792576958 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.791850833 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.790266955 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.792259148 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.791244891 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.791908168 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.79076704 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.793299098 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.790467221 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.790918996 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.790683981 seconds)
  done (took 33.963335465 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.792732785 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.793923453 seconds)
  done (took 5.302139326 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.790692782 seconds)
    (2/7) benchmarking "second"...
    done (took 1.791437671 seconds)
    (3/7) benchmarking "month"...
    done (took 1.790403208 seconds)
    (4/7) benchmarking "year"...
    done (took 1.791485477 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.791585015 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.790735674 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.791503236 seconds)
  done (took 14.254538322 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.794838889 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.954268319 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.021564323 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.454484811 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.794652868 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.797484583 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.722940631 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.79741796 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.798855747 seconds)
  done (took 19.853287135 seconds)
done (took 109.751644979 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.609628781 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.786937692 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.015745128 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.838155848 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.849472552 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.083291978 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.827294012 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.102499928 seconds)
done (took 42.831295765 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.788429722 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.998089642 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.235886128 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.819655603 seconds)
  done (took 16.770926847 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.78064495 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.338213926 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.838619761 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.451964646 seconds)
  done (took 20.167467195 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.162541194 seconds)
    (2/2) benchmarking "read"...
    done (took 2.146359084 seconds)
  done (took 6.032258411 seconds)
done (took 51.478259014 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.795310272 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.795745264 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.796159487 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.793720032 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.795291997 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.793692004 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.793331299 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.796047908 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.796781638 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.795406947 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.797119185 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797184027 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.797140364 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.794643463 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.794020265 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.796083871 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.794456339 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.794142293 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.795530282 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.794784223 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.797369936 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.793897597 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.79402312 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.7947657 seconds)
  done (took 44.806036046 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.797437335 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.795035122 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.797505832 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.797978898 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.794569124 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.797623113 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.797579669 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.795495334 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.796564645 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.798540681 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.794499014 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.795393531 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.797828036 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.795890741 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.798279818 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.794368581 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.797559876 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.795336187 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.797821304 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.794731938 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.798159092 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.795652769 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.79631869 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.798214503 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.794653631 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.795253966 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.798416267 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.79565068 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.797968283 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.795472168 seconds)
  done (took 55.615817776 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.803640108 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.806704858 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.797795118 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.799303021 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.799214312 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.799682697 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.798728357 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.79922114 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.799165283 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.79939086 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.79830351 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.800239992 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.799378423 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.799052265 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.798973648 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.798750871 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.798878086 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.799363857 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.799052967 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.799011081 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.799506569 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.798615019 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.799648018 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.800424054 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.799818504 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.799978457 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.799993257 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.799505151 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.800227943 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.799706206 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.799897206 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.79955012 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.800540641 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.800328676 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.801038582 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.799754598 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.805348742 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.807463605 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.800329818 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.801347567 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.801194417 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.800088183 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.801187793 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.800224795 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.800692825 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.800833266 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.801102245 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.800604223 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.799901536 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.804191097 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.801740725 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.800767193 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.800991152 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.801202783 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.800841004 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.801344171 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.801783088 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.800995284 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.801635965 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.801426406 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.801268563 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.802989313 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.802224156 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.802162694 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.800875297 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.802396378 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.802495196 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.802273457 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.802277584 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.802392674 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.803008434 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.80342298 seconds)
  done (took 131.381151865 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.80334548 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.800548104 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.7997437 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.799855319 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.799419409 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.802326485 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.799537548 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802894337 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.79991584 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.802789245 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.802335222 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.800798238 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.800855254 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.803400285 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.802350522 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.800471479 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.802574452 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.800278504 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.802688611 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.80485027 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.803192202 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.800838049 seconds)
  done (took 41.360406445 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.803389978 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.803170497 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.800376043 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.804015856 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.800249692 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.802887468 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.804016218 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.803306175 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.803959861 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.801381363 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.800917129 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.803749253 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.801542128 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801065512 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.801417433 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.801358155 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.804507727 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.801187212 seconds)
  done (took 34.168984345 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.802018025 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.802378282 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.80484553 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.802426078 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.802226494 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.805095267 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.802596824 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.805023908 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.804896981 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.802737187 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.805709785 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.805439379 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.80529333 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802143665 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.804816515 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.802351015 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.80528947 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.802647411 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.804629851 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.803012861 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.802585265 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.804950598 seconds)
  done (took 41.410596686 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.805272881 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.805009484 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.80327813 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.802404955 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.802050879 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.805805709 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.805308499 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.803150629 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.805425872 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.805833184 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.802523596 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.805262742 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.803223643 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.802994456 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.802771782 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.803481113 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.806880707 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.804206336 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.806122355 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.803988257 seconds)
  done (took 37.812906008 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.804918258 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.805447752 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.805622085 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.806159096 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.80574509 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.80581593 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.805848377 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.806060723 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.806374036 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.806597274 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.806799965 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.806055542 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.807219455 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.806314524 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.806821008 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.80662777 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.806870228 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.807065967 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.806209305 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.806885382 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.807008035 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.807866202 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.806720149 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.807164108 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.807901699 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.807973218 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.808121909 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.807899975 seconds)
  done (took 52.315801699 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.80807178 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.808409639 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.806204909 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.80619481 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.805083712 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.804803674 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.805448498 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.806018618 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.807132459 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.80530244 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.808203841 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.808019313 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.808178312 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.808085841 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.808822761 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.808251952 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.807600955 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.806476701 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.806051544 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.805567683 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.808820126 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.809419752 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.809429518 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.806035656 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.804877355 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.809251335 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.80649607 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.80597881 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.809540064 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.806278858 seconds)
  done (took 55.945145551 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.827737125 seconds)
    (2/2) benchmarking "in"...
    done (took 1.826464797 seconds)
  done (took 5.384780604 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.805922203 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.809670781 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.809707291 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.807131792 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.807029846 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.810684032 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.810100303 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.80695894 seconds)
  done (took 16.199031061 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.808581615 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.810094013 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.809642766 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.810528493 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.809014676 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.809852427 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.816240352 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.810421079 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.810605207 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.810663996 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.816789724 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.817890858 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.813178965 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.810662242 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.808619276 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.811183879 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.81108361 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.809897681 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.809575049 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.81137219 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.80951317 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.811508851 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.811660174 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.80818896 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.811895507 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.820303686 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.814611379 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.812722443 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.810631166 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.813777264 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.811093401 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.80905684 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.809991506 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.810693647 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.812378652 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.811131549 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.818231072 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.81187104 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.815534386 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.810879324 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.812211411 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.808761312 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.811736627 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.812364692 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.812205023 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.81042179 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.813223605 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.809006921 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.811459302 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.816099357 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.818887356 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.811153475 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.810118935 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.815501118 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.812770776 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.818574919 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.812671192 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.814742701 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.821398022 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.821864357 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.825840618 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.819609625 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.814359071 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.813340607 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.821055455 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.836900857 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.818456136 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.810942505 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.811120767 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.814431397 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.819542904 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.82572685 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.822065104 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.812960831 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.812458059 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.814644025 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.812576379 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.814436309 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.820183516 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.815870961 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.812852504 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.81338811 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.822938637 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.835860721 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.81292209 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.812807897 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.812626091 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.813546924 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.814727174 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.824074358 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.813511685 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.81492269 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.813004441 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.813557614 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.814903242 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.81495679 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.81292651 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.814462127 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.812387259 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.81523381 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.814340661 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.818209196 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.823716295 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.814166627 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.81413941 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.820587875 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.815732551 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.815040512 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.821724882 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.815069988 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.814492058 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.815147179 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.821747463 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.815323073 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.818704476 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.824491423 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.814638374 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.81611801 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.815771367 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.817124585 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.825920149 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.841150289 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.816105129 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.816526292 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.821452217 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.827038079 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.815494911 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.818564777 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.816400263 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.814156184 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.813317735 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.81679903 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.816641973 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.816958417 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.815488804 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.816900085 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.815008044 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.81711733 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.816508629 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.817331855 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.817320955 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.816977938 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.817958308 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.818898904 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.816047568 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.817377406 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.822701757 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.816338185 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.817948887 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.817276155 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.815486157 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.817700728 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.817795865 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.817602707 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.817935771 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.81691356 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.816699519 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.816738379 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.817563145 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.819217005 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.817379142 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.81883576 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.821830039 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.818448453 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.821603765 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.817389803 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.816242993 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.818797343 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.819461505 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.819039308 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.818353876 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.816902438 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.821468131 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.825705414 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.819378266 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.817405732 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.821160097 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.818171182 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.818083202 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.818685417 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.824004968 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.826094864 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.817989553 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.825403722 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.817409762 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.818776412 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.819884205 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.818373889 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.817752267 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.818759512 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.822532736 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.827439625 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.832277986 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.827212143 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.8197684 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.824202468 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.820203749 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.823263656 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.823122261 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.820024682 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.821302478 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.819470681 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.818343843 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.820191946 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.821436961 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.819888485 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.819776539 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.821235715 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.820960259 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.819374798 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.821231986 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.820960608 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.822423132 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.818224948 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.821587387 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.82003027 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.819936415 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.819220375 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.819039651 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.819149807 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.821348177 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.819876648 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.827877764 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.819843107 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.82261326 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.821869906 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.820038974 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.820294667 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.823239958 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.823125218 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.820667657 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.828253518 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.82145998 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.821658814 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.828381599 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.821134107 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.820535843 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.823237487 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.822349406 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.819500318 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.824104793 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.829837759 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.822859161 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.821757224 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.822463159 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.822761175 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.822981853 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.828364602 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.819756831 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.821766454 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.823341005 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.824205426 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.820564979 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.823829796 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.822436483 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.822020986 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.823700711 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.823333248 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.823867653 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.823833283 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.822546635 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.823247082 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.822946436 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.826211558 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.830245431 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.827880075 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.823226517 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.826122251 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.824203272 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.829112995 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.823609871 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.82413841 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.823853314 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.836588869 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.83206082 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.829363001 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.82495819 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.824942077 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.828626034 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.825146385 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.828521047 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.823858314 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.82434151 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.823944295 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.823982491 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.822066686 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.825529266 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.824752336 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.825751253 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.826329732 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.829213641 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.826271763 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.823992514 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.825503513 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.824818256 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.826104034 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.824249226 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.825340234 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.826182333 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.826685227 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.823324023 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.824554107 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.831911809 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.824531325 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.82661367 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.825182374 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.825283185 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.825483514 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.826102557 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.825569284 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.828193367 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.833201789 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.828830603 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.834820876 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.826757598 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.835767204 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.824912351 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.828845033 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.833470086 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.82423522 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.824776815 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.825605489 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.825553957 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.832186045 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.826172448 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.827466559 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.83183658 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.827755623 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.826804106 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.827835309 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.826216751 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.827795046 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.826438523 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.834490743 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.827747581 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.831164235 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.827900414 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.82521218 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.826261459 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.82859463 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.826590922 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.830699782 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.826319053 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.82889862 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.827776359 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.828501451 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.827933811 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.827357113 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.829222846 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.825785553 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.827581047 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.833275765 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.828734965 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.832360552 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.82909945 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.834343712 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.827984131 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.834328589 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.827675233 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.829123747 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.828041641 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.82851171 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.829353004 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.827879871 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.829990552 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.82813314 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.829421037 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.832940795 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.828408068 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.831144616 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.829779337 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.829665878 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.827336087 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.838628867 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.852650163 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.830443714 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.834359812 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.826654939 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.831888109 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.832839638 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.82917311 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.828939976 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.832429509 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.84047819 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.838764019 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.828826757 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.830145859 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.829807468 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.829115917 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.83075972 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.830799843 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.829581185 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.831411182 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.830537693 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.830007106 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.833501955 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.830698503 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.831730879 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.830940466 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.831184586 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.840025565 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.82991697 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.83190076 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.830186824 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.830919658 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.830601154 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.830341066 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.829839933 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.831050187 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.833183936 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.831732541 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.838071094 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.836990255 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.832960693 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.831159945 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.830641719 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.83049091 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.83051942 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.830517861 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.831180125 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.830717891 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.831776573 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.831241462 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.83199278 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.829986143 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.832168511 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.830737964 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.832513816 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.834362977 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.838962878 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.831283454 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.829359451 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.832835979 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.833112336 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.830911783 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.831917026 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.838185549 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.835357471 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.842466542 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.841973941 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.836151364 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.832236187 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.835690038 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.841026441 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.832193804 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.833706859 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.834033077 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.834588696 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.833339605 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.836959717 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.833255732 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.838973864 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.832419087 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.832563401 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.840527911 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.834505961 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.833148225 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.834888305 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.837896564 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.833803921 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.831364142 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.834633711 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.832873385 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.840216619 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.834729654 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.833637908 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.835378784 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.831544777 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.835772867 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.837945108 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.834747622 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.834385957 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.831965969 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.834677667 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.833902313 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.834271077 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.832529022 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.833714702 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.833238769 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.838313226 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.840920984 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.832502918 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.835890413 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.834941663 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.83478074 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.834958646 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.835343641 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.83274708 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.832450981 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.83437107 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.834461427 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.834457869 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.836676152 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.834590553 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.836540254 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.837819155 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.835034162 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.83810145 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.845658823 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.84453437 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.833942595 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.834764732 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.83506773 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.838930599 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.835187494 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.83533435 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.836202118 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.838021378 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.836646924 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.836560679 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.836945023 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.838552881 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.851170899 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.837088363 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.836189629 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.836570873 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.840439666 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.837904552 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.834238363 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.836685035 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.839293069 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.838895059 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.844173571 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.836970691 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.842804009 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.837956261 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.838105708 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.842251974 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.840672194 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.844554197 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.839198216 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.837408171 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.836766114 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.844319908 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.853501741 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.838030556 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.847531698 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.866863473 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.838355533 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.838870966 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.837029078 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.837030029 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.83696262 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.8393281 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.839221812 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.840022274 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.839523771 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.838613669 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.83958764 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.844462172 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.84013983 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.839162427 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.838740791 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.838782695 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.839794068 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.836717297 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.838413152 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.839557775 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.839213611 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.838325085 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.839240533 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.839548543 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.851532892 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.848801117 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.84030198 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.838854211 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.837108818 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.841287529 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.842132806 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.849442554 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.847112954 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.838960349 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.83885732 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.841392162 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.841604727 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.838904986 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.842674067 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.841157042 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.84194675 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.839868502 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.854773408 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.84947613 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.84575741 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.841285683 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.840719882 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.842057882 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.842065443 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.841317542 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.841046953 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.842486203 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.843124597 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.845540553 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.842276434 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.843081777 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.845713071 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.851514625 seconds)
  done (took 1090.547957242 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.840942281 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.839664052 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.839905285 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.840945846 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.840232715 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.840542661 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.840599591 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.840896321 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.840552373 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.840668752 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.841007767 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.840558643 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.841580691 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.841520218 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.841154814 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.840676018 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.841142034 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.84149944 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.842185912 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.840131283 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.839916744 seconds)
  done (took 40.421581034 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.843936621 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.841113379 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.841953401 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.841703455 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.839062251 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.841818198 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.839915627 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.843407862 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.842165077 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.839909913 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.842226616 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.842652127 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.840158102 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.840703885 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.838256289 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.841371756 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.841115735 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.838149809 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.841293649 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.838922918 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.840492006 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.839023482 seconds)
  done (took 42.264549272 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.840952068 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.841451564 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.839909608 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.838860823 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.842378152 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.838741936 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.840404997 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.839814611 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.841024461 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.839826241 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.839071252 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.840830828 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.846084567 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.845309147 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.841674222 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.840794392 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.983780174 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.837743016 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.833134851 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.833789236 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.83166307 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.840508899 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.832573183 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.82891985 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.83075928 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.831548246 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.831671606 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.832661157 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.831824432 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.830380678 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.831986934 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.828951738 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.827937034 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.830423227 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.827811517 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.828923735 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.834641224 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.828895189 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.82619669 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.829548577 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.838325223 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.84992914 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.828398432 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.834874173 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.830134098 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.829536613 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.831117051 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.836111041 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.82663474 seconds)
  done (took 91.832224859 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.829900003 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.82975452 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.826626955 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.829995437 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.829840093 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.83059543 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.831080912 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.830265364 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.827028278 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.827088737 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.82948291 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.827996708 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.827181641 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.831105138 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.830412011 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.828545996 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.828673217 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.827267817 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.827494587 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.828439424 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.827442136 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.831466214 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.83130401 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.827940893 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.830961712 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.828038399 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.827712974 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.832136807 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.828033047 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.828923793 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.830733687 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.831407425 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.832524759 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.828716862 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.827976192 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.831396416 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.830271119 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.828467517 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.832311507 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.82783391 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.831200346 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.83044898 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.830163222 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.832613989 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.828528435 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.828144912 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.828542385 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.82785271 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.828500831 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.831722323 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.830525097 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.828226132 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.830203569 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.828485312 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.832310921 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.83071297 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.828434635 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.827671231 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.830361864 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.828591396 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.828232262 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.830743767 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.829620444 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.831006011 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.831991883 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.829509652 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.828674585 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.830606441 seconds)
  done (took 126.16149715 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.830432415 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.830274358 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.830905336 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.829317488 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.82889269 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.828788262 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.828213922 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.830754962 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.829103075 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.828985876 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.829481846 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.830774191 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.830891398 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.831317243 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.829524806 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.829783709 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.829835922 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.829630157 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.831034693 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.830405316 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.829278344 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.830021244 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.829507355 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.830709274 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.830840771 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.830293331 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.829526287 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.829614618 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.829620327 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.830972187 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.831272717 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.830287907 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.83036017 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.829872029 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.832486616 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.83024176 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.831593848 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.830674842 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.829071506 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.831243697 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.831381191 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.829793221 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.83026751 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.829597131 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.830755639 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.831285335 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.830335319 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.831256626 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.831790479 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.830901813 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.830581362 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.829925414 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.829763259 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.830436145 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.829940614 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.831336558 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.830321248 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.831251179 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.830536425 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.830350728 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.831466943 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.832515979 seconds)
  done (took 115.235893005 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.831042416 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.831431707 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.829012265 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.829547251 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.832796719 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.830133564 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.831210527 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.831333414 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.830913363 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.831845836 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.832852495 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.828871325 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.83175092 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.831474615 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.830360819 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.830192161 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.828178894 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.828645059 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.830117191 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.828040292 seconds)
  done (took 38.36944948 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.825717149 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.826420361 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.824383975 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.824082626 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.827813926 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.825801509 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.82621885 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.826671345 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.824320539 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.826721048 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.82758277 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.827108554 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.823916719 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.82351559 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.826201469 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.82415167 seconds)
  done (took 30.962353429 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.822387249 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.826393012 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.825602852 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.825012777 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.823682291 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.821818436 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.822604098 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.819715661 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.819630398 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.823565706 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.823655642 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.822686062 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.82257032 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.82103613 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.819687062 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.822400625 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.819798767 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.819342918 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.821978708 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.822012278 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.819756319 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.820991564 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.823017863 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.823698047 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.820096432 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.82044044 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.820765242 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.820975169 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.818977436 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.82256589 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.819891702 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.820166653 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.822987977 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.820429667 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.822759095 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.82002919 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.822095125 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.82199169 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.822900688 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.822226009 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.822551336 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.819855371 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.822438772 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.823933613 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.820039078 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.822654374 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.81984273 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.820424221 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.819595332 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.820873896 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.822051941 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.821408854 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.823039064 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.823736989 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.822860409 seconds)
  done (took 101.947182718 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.821755852 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.822053243 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.818720456 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.822447115 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.823755629 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.819300286 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.82180938 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.818748582 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.820189042 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.822791598 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.820691298 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.82115109 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.820451637 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.821922507 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.821044204 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.824097644 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.81981337 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.820172297 seconds)
  done (took 34.525270658 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.82083105 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.820951115 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.822120314 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.819976215 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.819454032 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.821884555 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.819489336 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.823311112 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.820985833 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.820724946 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.818623506 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.822499786 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.822726092 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.821849228 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.819928859 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.818520009 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.822148229 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.822523112 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.819822497 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.818612393 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.821872308 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.820619385 seconds)
  done (took 41.803861508 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.821768514 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.819316952 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.83588845 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.840255953 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.841255436 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.852944734 seconds)
  done (took 12.754483136 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818673795 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821852445 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.817947855 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821816549 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823157835 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818918652 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818442008 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818373854 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821871144 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819173056 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819023131 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822113903 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82044355 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819339814 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821497287 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822185181 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8198178 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819866809 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820010721 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823672325 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81914622 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822455331 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820332571 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819622859 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819899509 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.81952398 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823109597 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81933124 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819849223 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821526682 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82159881 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819483549 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822865408 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819174889 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822327359 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821368148 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819382101 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82341735 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821808469 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819956644 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.821374484 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821853009 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821155579 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820191096 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822994775 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81971034 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820002876 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.818649548 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820255276 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821319447 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821677705 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818983386 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822157356 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822344133 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823038125 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821948075 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819219665 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819096206 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821812684 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820711768 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818703582 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821860826 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818802862 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819837229 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821490552 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819775895 seconds)
  done (took 121.909144008 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819459085 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.818781161 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818899164 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820452413 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820280775 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.818419751 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819313517 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819939516 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820329196 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821171041 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823061998 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819876609 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820337981 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819632493 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820961931 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820299872 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820776281 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82126235 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820821163 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822801444 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820758992 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820010082 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819717835 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.81974509 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820366306 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824362758 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819627256 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820722709 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820288699 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8194121 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819882798 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822093527 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819934216 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.81987801 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819894077 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820730401 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8213254 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820382526 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820553203 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822431334 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82121923 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823413779 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821588345 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820239632 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819993958 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820381861 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820626956 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820980052 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820514769 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820824401 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.820512809 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820078457 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820764659 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821288085 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820817633 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822416695 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821447043 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821691075 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822158103 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823719596 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820425826 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821471958 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824221187 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821819709 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821684628 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822682034 seconds)
  done (took 121.921907203 seconds)
done (took 2528.782360182 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.855416028 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.821849362 seconds)
  done (took 15.4232409 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.985168715 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.93725408 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.822602037 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.867363816 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.822574404 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.844855689 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.841897111 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.822214898 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.822567063 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.82334271 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.822206999 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.008365876 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.822073216 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.82302601 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.823839308 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.915709261 seconds)
  done (took 51.556070348 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.82537027 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.827564006 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.837851398 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.829292913 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.825597256 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.838906454 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.859844908 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.829777048 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.868728116 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.842745142 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.901331942 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.836964397 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.825778745 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.879299139 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.841654107 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.841894042 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.91784891 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.902330828 seconds)
  done (took 35.079745213 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.904014311 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.833100158 seconds)
  done (took 10.491458949 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.837116412 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.872213002 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.906001795 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.845775387 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.853984723 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.85710086 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.864999569 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.863277315 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.830464107 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.850308323 seconds)
  done (took 70.335697259 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.831703078 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.827941178 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.827003953 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.826258197 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.81887887 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.823223351 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.826829993 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.820693426 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.490763325 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.863137416 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.83680629 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.832281989 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.827019583 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.830272357 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.826194855 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.849958391 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.919933169 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.825237446 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.827110102 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.832101469 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.826596434 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.876372956 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.840388538 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.829010133 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.858467111 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.487137755 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.834667494 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.833219787 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.918717979 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.826673057 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.825902442 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.827388776 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.829061147 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.19670336 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.10609451 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.82630657 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.842053773 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.836643298 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.825659845 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.921061239 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.8290339 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.833736334 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.496998995 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.085975002 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.917490561 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.872159966 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.147152541 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.844633145 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.830015179 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.858876578 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.830847244 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.829446166 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.841494965 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.310794423 seconds)
  done (took 129.816486931 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.823919613 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.175787012 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.994917179 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.822621923 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.114488508 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.03461946 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.82527435 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.874730874 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.825917002 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.061657312 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.080982502 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.932628405 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.825345207 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.824444012 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.824810108 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.821617438 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.984590646 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.899367882 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.826394874 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.822040123 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.857377646 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.070001003 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.94973137 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.82670046 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.855570145 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.039834872 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.949154536 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.932734229 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.607089452 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.823555457 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.891464373 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.826031394 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.826263462 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.822586432 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.984129196 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.922609351 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.910478474 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.827424147 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.824270073 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.823673905 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.589401288 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.027198599 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.924215579 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.967597107 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.976270333 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.03333166 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.611759529 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.823841773 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.581279913 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.990321853 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.058641889 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.064874083 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.951048787 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.827467338 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.172512827 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.824317842 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.823861916 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.07773767 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.971623644 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.925656899 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.826600639 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.823562866 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.826006638 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.126805526 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.827470815 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.92608015 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.827981135 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.826551695 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.925206601 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.928814804 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.966556385 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.041029279 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.86009406 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.550733556 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.039668752 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.07680489 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.896278091 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.080052921 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.829575351 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.825495932 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.909867781 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.677072174 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.082153647 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.118114649 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.081983449 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.865973656 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.548814386 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.826744923 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.056521842 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.050780891 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.089246749 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.976777645 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.066961284 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.162097549 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.826222743 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.826380575 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.038440795 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.965060707 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.82840509 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.181051135 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.062543645 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.374607959 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.84969906 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.13579034 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.961812273 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.829867983 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.481571265 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.826848514 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.062379883 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.871013163 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.829477817 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.828045272 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.050144081 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.823769914 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.826733879 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.702650876 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.893026615 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.829988993 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.063000449 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.832432259 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.10032511 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.829995312 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.070727394 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.32023305 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.863481756 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.006188485 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.975354222 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.831191456 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.075906138 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.07654073 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.949225327 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.101719257 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.718819326 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.82926495 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.120652644 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.831412347 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.828796478 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.001614643 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.829051193 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.977017262 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.832041206 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.127940118 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.856073756 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.064647382 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.83222172 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.092345417 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.867226959 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.883740383 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.83209038 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.959685792 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.83313702 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.660685876 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.990550531 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.832465588 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.829339584 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.400443515 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.831967277 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.982657015 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.065233427 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.857418995 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.906500679 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.503474736 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.829974274 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.913309457 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.857208994 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.219694053 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.831517724 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.084108403 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.832331968 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.829916681 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.829720235 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.126122681 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.067819678 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.83169316 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.832364635 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.745705236 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.832375236 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.832482958 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.016839122 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.161313819 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.832417514 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.036825796 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.835328156 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.962037363 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.834794293 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.918751931 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.168767223 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.830625014 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.83143209 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.831654934 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.832011852 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.834242249 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.043980369 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.860513471 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.351834182 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.973008436 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.110186166 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.147148038 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.083882762 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.879714378 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.833943929 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.091900696 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.835044426 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.900247237 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.834599722 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.85659967 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.065630225 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.835949977 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.04689551 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.115856043 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.686296506 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.884164057 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.834176964 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.833904885 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.832462259 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.981122564 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.919125428 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.83524004 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.833257968 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.950367255 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.957499478 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.047687994 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.834361094 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.871259353 seconds)
  done (took 893.268224136 seconds)
done (took 1207.719643184 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.833012625 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.838249915 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.83168531 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.838069497 seconds)
  done (took 29.103359351 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.841182273 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.837364473 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.839186641 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.838379308 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.84093135 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.838662652 seconds)
  done (took 12.795141141 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.847205935 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.836157278 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.835953281 seconds)
  done (took 21.281229789 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.90813112 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.636099128 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.9489055 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.260260104 seconds)
  done (took 10.513962815 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.841369471 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.839738222 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.840143133 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.843043879 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.841872505 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.843073415 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.84237103 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.843562157 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.844147312 seconds)
  done (took 18.341403947 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.102564034 seconds)
done (took 97.901530839 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.119810137 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.052655391 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.212994804 seconds)
    (4/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.855208746 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.740796449 seconds)
    (6/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.829019723 seconds)
    (7/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.600455695 seconds)
    (8/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.83029275 seconds)
    (9/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.980817859 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.964864541 seconds)
    (11/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.13682021 seconds)
    (12/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.262251233 seconds)
    (13/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.866515828 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.888412423 seconds)
    (15/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.919901407 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.890634038 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.861000426 seconds)
    (18/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.976151634 seconds)
    (19/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.850144717 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.928935101 seconds)
    (21/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.855154586 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 7.68165456 seconds)
    (23/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.828020101 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.035120066 seconds)
    (25/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.933551001 seconds)
    (26/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.939536356 seconds)
    (27/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.248189613 seconds)
    (28/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.841104262 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.317993387 seconds)
    (30/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.866642557 seconds)
    (31/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.826964086 seconds)
    (32/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.270613617 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.221969866 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.11002156 seconds)
    (35/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.909749063 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.808158706 seconds)
    (37/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.910554019 seconds)
    (38/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.827274166 seconds)
    (39/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.204612744 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.952688048 seconds)
    (41/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.846829807 seconds)
    (42/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.95327682 seconds)
    (43/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.919017296 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.892204898 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.187017394 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.838723016 seconds)
    (47/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 3.31084934 seconds)
    (48/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.149792863 seconds)
    (49/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.205678429 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.874145778 seconds)
    (51/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.846862729 seconds)
    (52/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.937229273 seconds)
    (53/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.956236666 seconds)
    (54/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.985908471 seconds)
    (55/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.05550137 seconds)
    (56/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.848857302 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.025968335 seconds)
    (58/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.836653243 seconds)
    (59/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 8.458200925 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.184727998 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.085392595 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.91351565 seconds)
    (63/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.951541532 seconds)
    (64/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.922303867 seconds)
    (65/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.902639477 seconds)
    (66/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.169240268 seconds)
    (67/309) benchmarking ("sort", Float32, false)...
    done (took 5.603715601 seconds)
    (68/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.100610739 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.905996613 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.970642888 seconds)
    (71/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.111459458 seconds)
    (72/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.870785977 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.846280885 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.098478946 seconds)
    (75/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.956093962 seconds)
    (76/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.430781379 seconds)
    (77/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.870131453 seconds)
    (78/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.874497354 seconds)
    (79/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.953566458 seconds)
    (80/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.291556703 seconds)
    (81/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.84330691 seconds)
    (82/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.188040817 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.824090554 seconds)
    (84/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.062579473 seconds)
    (85/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.133429809 seconds)
    (86/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.95308506 seconds)
    (87/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.018487783 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.244703702 seconds)
    (89/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.882806636 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 5.544299473 seconds)
    (91/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.927747756 seconds)
    (92/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.948628831 seconds)
    (93/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.8586394 seconds)
    (94/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.675970099 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.107919453 seconds)
    (96/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.85228248 seconds)
    (97/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.222499083 seconds)
    (98/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.880748176 seconds)
    (99/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.849533982 seconds)
    (100/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.966224635 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.063619596 seconds)
    (102/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 3.348431057 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.488883624 seconds)
    (104/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.90501153 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.852557326 seconds)
    (106/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.957483059 seconds)
    (107/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.859495722 seconds)
    (108/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.965328109 seconds)
    (109/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.848301884 seconds)
    (110/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.948911869 seconds)
    (111/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.174779377 seconds)
    (112/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.881774021 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.53617361 seconds)
    (114/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.843188031 seconds)
    (115/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.771207659 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.051993261 seconds)
    (117/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.096620082 seconds)
    (118/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.989805484 seconds)
    (119/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.988982151 seconds)
    (120/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.289243602 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.857816903 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.097686215 seconds)
    (123/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.996000252 seconds)
    (124/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.141968593 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.689147628 seconds)
    (126/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.078002454 seconds)
    (127/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.948320183 seconds)
    (128/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.05117351 seconds)
    (129/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.443073375 seconds)
    (130/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.558927624 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.14491845 seconds)
    (132/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.970971967 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.154367495 seconds)
    (134/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.312610108 seconds)
    (135/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.943654241 seconds)
    (136/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.84253779 seconds)
    (137/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.568752389 seconds)
    (138/309) benchmarking ("sort", Bool, false)...
    done (took 2.077202919 seconds)
    (139/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.875640758 seconds)
    (140/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.161434135 seconds)
    (141/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.945557409 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.085398412 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.172548348 seconds)
    (144/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.391042444 seconds)
    (145/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.074532427 seconds)
    (146/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.959327088 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.077452268 seconds)
    (148/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.964525146 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.087295307 seconds)
    (150/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.272173024 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.983521936 seconds)
    (152/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.915972894 seconds)
    (153/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.009748952 seconds)
    (154/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.207998079 seconds)
    (155/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.845301607 seconds)
    (156/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.141645485 seconds)
    (157/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.063416317 seconds)
    (158/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.863098911 seconds)
    (159/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 3.489420136 seconds)
    (160/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.967851278 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.833008213 seconds)
    (162/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.857505557 seconds)
    (163/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.98858167 seconds)
    (164/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.337926529 seconds)
    (165/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.958643689 seconds)
    (166/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.086073341 seconds)
    (167/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.884200946 seconds)
    (168/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.370397559 seconds)
    (169/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.157596828 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.84822654 seconds)
    (171/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.088498601 seconds)
    (172/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.955069484 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.947292238 seconds)
    (174/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.093890739 seconds)
    (175/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.850833822 seconds)
    (176/309) benchmarking ("perf_sum", Int64, true)...
    done (took 3.077693834 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.947970334 seconds)
    (178/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.035906239 seconds)
    (179/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.944753958 seconds)
    (180/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 3.004546209 seconds)
    (181/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.95243751 seconds)
    (182/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 4.881310441 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.571467888 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.14113402 seconds)
    (185/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.258312807 seconds)
    (186/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.839844507 seconds)
    (187/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.183694098 seconds)
    (188/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.372485073 seconds)
    (189/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.967757912 seconds)
    (190/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.568426029 seconds)
    (191/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.773347555 seconds)
    (192/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.883024331 seconds)
    (193/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.08566682 seconds)
    (194/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.327919985 seconds)
    (195/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.888711054 seconds)
    (196/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.240101039 seconds)
    (197/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.875167867 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.179654847 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.004967657 seconds)
    (200/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.039706423 seconds)
    (201/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.892268537 seconds)
    (202/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.096373365 seconds)
    (203/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.851569623 seconds)
    (204/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.94033757 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.935245368 seconds)
    (206/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.109062552 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.802645775 seconds)
    (208/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.889558895 seconds)
    (209/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.051236265 seconds)
    (210/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.972545129 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.003966919 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.521327752 seconds)
    (213/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.051596014 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.930293934 seconds)
    (215/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.311959082 seconds)
    (216/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.858219545 seconds)
    (217/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.950933353 seconds)
    (218/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.889434912 seconds)
    (219/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.957221098 seconds)
    (220/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.29124004 seconds)
    (221/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.903167216 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.936743405 seconds)
    (223/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.882949352 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.151999921 seconds)
    (225/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.881598483 seconds)
    (226/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.857029454 seconds)
    (227/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.990127729 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.933624185 seconds)
    (229/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.700080951 seconds)
    (230/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.080858846 seconds)
    (231/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.858864795 seconds)
    (232/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.155356911 seconds)
    (233/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.339835855 seconds)
    (234/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.271010992 seconds)
    (235/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.174117487 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.251072394 seconds)
    (237/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.362819076 seconds)
    (238/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.885031565 seconds)
    (239/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.942413572 seconds)
    (240/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.911200231 seconds)
    (241/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.989999342 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.735257067 seconds)
    (243/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.933441593 seconds)
    (244/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.847870902 seconds)
    (245/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.343313122 seconds)
    (246/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.971247559 seconds)
    (247/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.154001838 seconds)
    (248/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.947288644 seconds)
    (249/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.444861194 seconds)
    (250/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.932740625 seconds)
    (251/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.115884597 seconds)
    (252/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.034802074 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.860987301 seconds)
    (254/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.863994214 seconds)
    (255/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.267004213 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.96371269 seconds)
    (257/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.965915409 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.684417636 seconds)
    (259/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.028229998 seconds)
    (260/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.780388253 seconds)
    (261/309) benchmarking ("sort", Int8, false)...
    done (took 4.769855368 seconds)
    (262/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.048202683 seconds)
    (263/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.988625747 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.893044185 seconds)
    (265/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.977868594 seconds)
    (266/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.948477523 seconds)
    (267/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.973454191 seconds)
    (268/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.012576233 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.206302538 seconds)
    (270/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.872696835 seconds)
    (271/309) benchmarking ("sort", BigInt, false)...
    done (took 6.861035625 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.219528911 seconds)
    (273/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.128308656 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 3.11702417 seconds)
    (275/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.862451283 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 3.697253816 seconds)
    (277/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.865913698 seconds)
    (278/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 8.010477894 seconds)
    (279/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.298535749 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.526105836 seconds)
    (281/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.961729759 seconds)
    (282/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.229097938 seconds)
    (283/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.950903666 seconds)
    (284/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.861457241 seconds)
    (285/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.106459158 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.968381176 seconds)
    (287/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.953585839 seconds)
    (288/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.163006676 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.970674034 seconds)
    (290/309) benchmarking ("sort", Float64, false)...
    done (took 5.647614776 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.005814339 seconds)
    (292/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.182913962 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.602832474 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.854167018 seconds)
    (295/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.091713101 seconds)
    (296/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.345867704 seconds)
    (297/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.893926616 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.895064704 seconds)
    (299/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.861046247 seconds)
    (300/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.864237971 seconds)
    (301/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.009112961 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.803566505 seconds)
    (303/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.045745112 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.892222597 seconds)
    (305/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.862622219 seconds)
    (306/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.030793189 seconds)
    (307/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.054596354 seconds)
    (308/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.944156238 seconds)
    (309/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.786728036 seconds)
  done (took 1004.637357205 seconds)
done (took 1006.471151937 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.894350279 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.885262476 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.86843326 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.890522201 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.980488061 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.897817345 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.880081439 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.871802776 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.91714084 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.919301618 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.867184266 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.897373692 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.871617487 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.869816237 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.869647865 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.884428278 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.184961238 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.904434069 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.887481941 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.877678218 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.886544116 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.867958945 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.919682851 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.897438794 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.874546417 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.873561731 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.873308218 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.890971174 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.981640952 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.874580912 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.873585783 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.881416222 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.186161536 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.902346122 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.865342908 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.89038732 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.881787782 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.88040745 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.876201626 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.905057237 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.279009575 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.912691249 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.873423245 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.872361509 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.872929942 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.875410605 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.873685765 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.877140974 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.885510111 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.885807093 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.270377893 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.930021135 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.874702127 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.873611359 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.883916594 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.872183788 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.876364413 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.889274608 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.893482054 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.888064495 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.173891422 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.910065951 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.876575073 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.891085556 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.880662677 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.306521299 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.910476551 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.875601304 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.282843071 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.919578143 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.30668823 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.923500938 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.875337166 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.887328368 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.904606641 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.188541381 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.901645663 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.872842808 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.880816757 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.871236605 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.883207421 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.887315673 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.877617084 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.874698999 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.888418387 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.90287654 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.883996163 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.875303771 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.883799047 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.894576319 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.882091986 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.8858242 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.877164131 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.870057513 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.883650094 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.877235261 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.876763347 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.877027143 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.879149225 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.884939741 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.277854121 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.932887181 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.871816477 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.871519292 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.874581042 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.891037719 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.280804637 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.920269932 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.896300625 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.924095903 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.877002972 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.174364589 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.910151522 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.891371854 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.884843781 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.879494897 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.870294284 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.175030618 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.307218377 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.934560191 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.878716074 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.873411738 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.892410038 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.877610088 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.873449197 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.195872002 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.908918023 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.891493148 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.99769359 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.886641664 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.910519734 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.875114308 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.879738181 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.905963307 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.893250231 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.90931982 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.880573927 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.892442855 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.894652249 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.87408697 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.888297483 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.889091146 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.879836749 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.883118073 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.871302536 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.906127423 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.891189086 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.891077271 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.898961476 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.000311189 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.875795895 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.177102845 seconds)
done (took 294.638106117 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.951977925 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.869001599 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.976470791 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.879375369 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.959925456 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.966529351 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.876736594 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.876626844 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.876412337 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.252675606 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.877687245 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.886547566 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.872075812 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.877652927 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.962415724 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.879832305 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.876997708 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.217323089 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.87920772 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.950472583 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.870836238 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.877410516 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.880290779 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.2855116 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.877886207 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.874190224 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.952784917 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.87935213 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.218825996 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.873318627 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.871888197 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.219987662 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.971171689 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.897566222 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.89117879 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.888101466 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.963060556 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.885308237 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.962330694 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.963288288 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.978451557 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.921684661 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.877492711 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.875417937 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.885926608 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.880920323 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.879406985 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.90791402 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.877661725 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.87896959 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.21872765 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.891110021 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.880801575 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.8780926 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.879577162 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.911580866 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.879160981 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.881977239 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.971485154 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.882188822 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.942144368 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.256645712 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.255748627 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.882538695 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.873239957 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.879244847 seconds)
  done (took 184.998742372 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.946794734 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.957976078 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.946793734 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.884119334 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.931590763 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.949116462 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.884927549 seconds)
  done (took 15.30278181 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.88771884 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.885195534 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.934334728 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.935481387 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.881710692 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.032247407 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.883230985 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.894305392 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.891294381 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.935811174 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.884804812 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.88356864 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.890089238 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.877650142 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.933965799 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.893852724 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.003431706 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.883928123 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.88420554 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.032002273 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.882718979 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.892132817 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.935585184 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.894934322 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.886511167 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.889138653 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.483024934 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.882360292 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.881810441 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.883019865 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.881042257 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.926620583 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.883826589 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.881981255 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.882447475 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.999682069 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.883197045 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.881871745 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.884903828 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.878659827 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.884937015 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.885490727 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.886992364 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.882627928 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.885542449 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.907056607 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.885396445 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.888940032 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.886108745 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.886742602 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.935313152 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.886992612 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.883480602 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.884902834 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.940812559 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.8926575 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.886129535 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.884388584 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.887509203 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.883296905 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.033807683 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.936027174 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.886717808 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.93674914 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.887353026 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.887000511 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.886430314 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.886166538 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.986948329 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.885902391 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.936480579 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.883338063 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.044792789 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.909846255 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.886706948 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.887413301 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.887381402 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.885660363 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.887315642 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.893129168 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.8828888 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.887013355 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.89111468 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.884437848 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.88400214 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.999075969 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.995489527 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.884895324 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.898751508 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.893552824 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.885031625 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.939295923 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.887557346 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.884830973 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.944192499 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.004289324 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.94223153 seconds)
  done (took 207.376626685 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.89097575 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.894210362 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.887412563 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.903686749 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.888173738 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.887569203 seconds)
  done (took 13.160643712 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.889597175 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.889339325 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.888214942 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.887303701 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.886617019 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.890738473 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.887664348 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.889187644 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.89126741 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.887935048 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.889739975 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.88932663 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.89145144 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.888815968 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.888224621 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.888803245 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.888358431 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.885804029 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.890817142 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.88796847 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.036286475 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.887995866 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.887711889 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.890680894 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.894182993 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.888575142 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.896072227 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.888863323 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.889329622 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.897599401 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.892276631 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.890603287 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.888361852 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.895884805 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.892707898 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.888340315 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.892111737 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.890728875 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.886384597 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.892266528 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.890691201 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.888639924 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.888924532 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.891261136 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.892585765 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.893659679 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.89458591 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.897256764 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.888890981 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.893300358 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.891937231 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.890667755 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.892860134 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.893465715 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.891068662 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.897677817 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.896102816 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.889833763 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.88984928 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.889541807 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.894533841 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.891941618 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.891430476 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.894240864 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.896092801 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.893899322 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.890747976 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.894046498 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.890944893 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.891473383 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.89268433 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.887628343 seconds)
  done (took 139.10480452 seconds)
done (took 561.76045475 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.109510101 seconds)
  done (took 8.917331623 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.97087466 seconds)
  done (took 8.821915635 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.38118373 seconds)
  done (took 10.19265495 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.911151483 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.918448905 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.892539825 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.884242822 seconds)
  done (took 29.437765014 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.01792992 seconds)
  done (took 8.825952845 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.907711717 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.885501731 seconds)
  done (took 15.640343932 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.040113048 seconds)
  done (took 8.848317391 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.993403711 seconds)
  done (took 8.825663901 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.896555166 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.914055052 seconds)
  done (took 15.632332853 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.872688473 seconds)
  done (took 8.681142679 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.571536758 seconds)
  done (took 11.479719022 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.901049575 seconds)
  done (took 8.819920377 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.913573651 seconds)
  done (took 8.72340881 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.97346358 seconds)
  done (took 8.783424772 seconds)
done (took 163.44001772 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.887213312 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.890268536 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.889870094 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.888997326 seconds)
  done (took 29.36712303 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.925415191 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.925225695 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.92687039 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.937777516 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.928915192 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.937025256 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.918510475 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.917831339 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.935811965 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.928910961 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.927285279 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.928445012 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.925998613 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.918328294 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.92784467 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.927733055 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.937577662 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.926906331 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.918848576 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.928467028 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.892782256 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.936375176 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.929210661 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.892874568 seconds)
  done (took 48.01071165 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.085540965 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.965739687 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.045926579 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.949254493 seconds)
  done (took 9.85774072 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.944455478 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.948482769 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.959536993 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.998748982 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.027079992 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.958529238 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.922173283 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.915182258 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.90065352 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.948156719 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.023156771 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.942833621 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.032457903 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.894210414 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.11986728 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.893663456 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.895394595 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.945720128 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.99699889 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.011783293 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.894834113 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.944837489 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.953282822 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.941474822 seconds)
  done (took 48.825154412 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.892093325 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.90074479 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.900146514 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.894325738 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.89318451 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.89307344 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.899644307 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.895368477 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.914545036 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.895117767 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.892832434 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.893310737 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.891922599 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.895211021 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.893516253 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.905768191 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.906632313 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.894530669 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.899368076 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.898805142 seconds)
  done (took 39.762864566 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.887631668 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.448603422 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.240319697 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.1443796 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.887131857 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.888336951 seconds)
  done (took 32.310714198 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.907758291 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.9005765 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.894250677 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.951893589 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.03571428 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.900733288 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.896450923 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.906314993 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.943436818 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.958175651 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.920401117 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.92477005 seconds)
  done (took 24.954107465 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.891037824 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.898842324 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.892339253 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.917987841 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.910754111 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.906521688 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.905984037 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.887805172 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.914426491 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.917364686 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.906986798 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.910006244 seconds)
  done (took 44.677226999 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978874886 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.826588612 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.967956479 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.61595336 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.430320215 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.102405889 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.413173038 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.239723762 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.894426592 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.164965105 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.959431303 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.142282449 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.147168797 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891951273 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.964432373 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.355824244 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.193825238 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.126187408 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922493352 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.673276359 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017523366 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.427397783 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.647062958 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.023224326 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.106315154 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.025504128 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.152582607 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.860155708 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032800116 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933633567 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90280036 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.893966198 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.167821015 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.275201701 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0095171 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905239416 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.5560758 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.612945913 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.889094573 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.647582801 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.893879248 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.030434949 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90308933 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896084789 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.828794243 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420001436 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240593798 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.899867773 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.597018062 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.895751111 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904382117 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985661098 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.899159933 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.713421698 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.847754642 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.174172888 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.892838468 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901284143 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.464089194 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.036148246 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.421957489 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.953353331 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.092765726 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.695319025 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.371939081 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.048554842 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.898141416 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.90034829 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830843929 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.623361709 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.023274775 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.041187081 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.91660842 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.545821437 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.210061748 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.037561601 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.987641368 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.19368149 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.588844855 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.937103003 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.126877604 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.853716976 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831462011 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.753006653 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.830593819 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.180281819 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938256154 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.574127217 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939607248 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.241181428 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.90760536 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915921759 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904846233 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.122442567 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.787041821 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896699229 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.748961598 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.186071429 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918918376 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.238174624 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831568887 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.234006764 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153449857 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.10883466 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.033044565 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.467876699 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064353155 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896327511 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.98386121 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.708891114 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.011768586 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.183442519 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96002473 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.026711449 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.033210963 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.865300479 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211178764 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929788095 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.072141699 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.002901834 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16811494 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.227212601 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.154683636 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983199786 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.906872574 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.899060664 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.683763542 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.528958468 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.124681256 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.906501782 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.289301492 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.014157692 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.899031534 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835114789 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.520733803 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.990553252 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.012666015 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.123752495 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.73511159 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.278216969 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834048401 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.045257463 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.013080366 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.123687376 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.561397711 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.985872421 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.162411383 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.285737186 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.132122308 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015997667 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919436032 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00839118 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923751419 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.222083641 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.260164086 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.905989755 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.905423118 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.712458616 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.975541475 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901253166 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.906520236 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.775968479 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.191682247 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.932135781 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.902309483 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.837175066 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.915462067 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969258356 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.907124993 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.911505065 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.430680579 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.65700828 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.912893389 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.565369638 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.138469578 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911113559 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.686962209 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.095176863 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.98752455 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.191781426 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.968324061 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.837385023 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.606210281 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.605484208 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90182096 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.837355961 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.901537088 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912443091 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913828847 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.297603537 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.196275746 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.955955023 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.690890528 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.023438056 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.914062892 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.909874569 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902731838 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.405083919 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.058562635 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.425644776 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.017892502 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038896488 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.917563881 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.839022968 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.240260988 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.908898277 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.903739136 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.869686504 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95721259 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.684964454 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366898421 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.165148611 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.559469809 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922622008 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.70596867 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.040375448 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.931407769 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.770320879 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883380283 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.995913847 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972256802 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.916479157 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.687838216 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.691812981 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.47208714 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.22690815 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.228535962 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353210211 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.292401567 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.232676531 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.247684049 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140771343 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.434535514 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.967654524 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.257294803 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.854774234 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995131536 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.565191382 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.268699931 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921791815 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.133784097 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.304164045 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.830749338 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.073387456 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.116775236 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940124367 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.743086649 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.937782426 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.433006485 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062184406 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.808160126 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.138805684 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254857436 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.772017551 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.022148997 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.905652187 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.618778625 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997839794 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.62023345 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.270564604 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.329580359 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.105941128 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408590641 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.909589061 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.354117701 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.265025927 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.118562563 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.10255874 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843442463 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.918809434 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.91868098 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.914152622 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.889813619 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.813772809 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.191322537 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918947746 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142681845 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.073314249 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.280081702 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.817288455 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.913241717 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907845998 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217903811 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.605881278 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149028524 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.248914876 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.487221633 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.924683664 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.843088761 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843857426 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.612476371 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.911139259 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.885785247 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.14232543 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.04140258 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.860990599 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.293742291 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.221431515 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.165173413 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.923892343 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.195441939 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.19020546 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.669338884 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938812779 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.010064356 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.761943564 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.622425412 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.132349671 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.145974339 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.781983346 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.141789591 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.982677697 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.879362356 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.908431129 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.125990351 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.132431829 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.001648798 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167907563 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.63605283 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.921896337 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.280823179 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973309949 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.01268066 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.129494186 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.106246198 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920349271 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992448137 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920547573 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.922395214 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.921844753 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961507344 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.013155005 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.05296055 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.924931945 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003260293 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.063873354 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.503695301 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.92590727 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.199418142 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289801035 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.253759414 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.978290005 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.912371329 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91885993 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.846322256 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046909001 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.357657545 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186117391 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.044157644 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.0555074 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939419689 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.760859581 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.199116597 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.225096533 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186479997 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.809299944 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.912263755 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.997930487 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.135546613 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924979584 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.124463143 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.148713592 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.244853857 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.389436457 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.058180335 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.353722839 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.188564749 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.282990251 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.913772761 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.503683496 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.928273976 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.689830525 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.958988997 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.015369403 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20691281 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925992045 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.299658055 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.939825521 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.114255536 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.366148471 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.724698595 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.283329009 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.921914384 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.980416072 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.201069443 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.325948476 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231937395 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982791399 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927530415 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.614965587 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053513581 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.853688818 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.183423398 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.914812692 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.127959613 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.628541082 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.925013052 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.212333083 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233746573 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.91361742 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.889146409 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980334975 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.927035839 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.140015996 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.193810215 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.1730428 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924790515 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.918977453 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.735465729 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.2067082 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.983340805 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851110799 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.920754491 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018312489 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.164863328 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936547093 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.433200618 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.619405682 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221280243 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.840194355 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937401419 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.317893642 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.369033302 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264676491 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.44952333 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.15706616 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.477562543 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.765935509 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.28966011 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.922778588 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.331365763 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.293049799 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.921841958 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.422850516 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02940251 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.200158087 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.24258709 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.927224825 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.762553018 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.969287927 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.14325326 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.522699879 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861638586 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.92532153 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.9864659 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.918993924 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.050182815 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.929973221 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.92199962 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.804053716 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.757126663 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.410982983 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.92261482 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.913952429 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.791225095 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.474919526 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023313618 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072716327 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.9250212 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.620816014 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.21210186 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.172803416 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.437875235 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.993664713 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.256925913 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.919428519 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.845442235 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.116081154 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.312275754 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.225838617 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.271928561 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.027683356 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.925247765 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.135689431 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129634972 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.990065454 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.082416921 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.293629714 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.029954624 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.842925663 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.633874976 seconds)
  done (took 1709.582115403 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.922816299 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.950688713 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.929055586 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.948047522 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.941775496 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.935217685 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.924510532 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.920268478 seconds)
  done (took 57.31596577 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.914538325 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.134712375 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.924793019 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.915891808 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.944766194 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.915479774 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.125252418 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.926759942 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.935846815 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.9248871 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.916290994 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.929970662 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.268861837 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.941102535 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.915670747 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.946350875 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.932669944 seconds)
  done (took 75.361665811 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.916140209 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.082010049 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.939860367 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.944083374 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.783058867 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.923439478 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.834306484 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.924312233 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.918384578 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.083646859 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.257421116 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.967138383 seconds)
  done (took 90.414612825 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.931069405 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.922015723 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.922796734 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.922543747 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.922318872 seconds)
  done (took 11.469179697 seconds)
done (took 2223.735409246 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.204987604 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.148682683 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.158040387 seconds)
  done (took 6.147427396 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.065958878 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.11349781 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.232464042 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.241010497 seconds)
  done (took 10.496536404 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.220774064 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.290712398 seconds)
  done (took 6.35122285 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.24432101 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.942853861 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.303507081 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.918826776 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.919267154 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.922341742 seconds)
  done (took 22.606935294 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.920609708 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.924009849 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.921403303 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.923734298 seconds)
  done (took 9.5303768 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.908614796 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.676152498 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.910886955 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.925870241 seconds)
  done (took 21.262663544 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.668083551 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.046650201 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.666114616 seconds)
  done (took 9.222868794 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.430282232 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.527584197 seconds)
  done (took 9.799629005 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.16388213 seconds)
  done (took 4.006821399 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.951878368 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.196055424 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.47573229 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.490456149 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.572031564 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.171190755 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.277088194 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.163093247 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.374554853 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.414023621 seconds)
  done (took 25.929500652 seconds)
done (took 140.892211521 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.472478101 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.948991088 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.124224414 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.291475805 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.161885882 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.124419787 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.148439321 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.285888638 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.826943116 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.807720089 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.288729469 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.160153033 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.092049932 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.94128309 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.096950097 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.939646752 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.154343611 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.298036025 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.969544448 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.187574376 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.153223946 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.933621501 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.124013138 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.949046741 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.160198769 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.072096087 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.479135592 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.944898846 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.118157523 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.492389246 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.076741877 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.332620369 seconds)
  done (took 170.002384412 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.923066875 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.922602223 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.924511868 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.922575526 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.44537802 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.924087565 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.924813939 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.922213243 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.152102344 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.138357749 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.923485439 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.430739132 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.923172903 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.922544155 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.92141681 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.923295302 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.315060101 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.918240228 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.913166866 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.917560397 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.916627397 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.269152476 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.913747589 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.29859723 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.305841774 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.922191221 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.907684171 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.922928458 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.924158438 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.924086048 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.927167343 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.903336525 seconds)
  done (took 210.292369986 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.902586408 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.89805944 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.901120042 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.895508068 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.899144754 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.906122818 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.89807196 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.895972495 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.411717347 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.4169074 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.91297829 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.906723722 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.905845183 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.897220616 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.908924016 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.897872225 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.928588285 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.906637403 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.906747523 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.901322167 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.91290661 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.564801558 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.93529394 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.599747428 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.912056215 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.900063805 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.892573307 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.904975464 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.906988075 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.906884076 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.911689132 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.897569445 seconds)
  done (took 221.192940697 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.08518823 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.902845491 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.902016056 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.900119977 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.901489513 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.903130646 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.899396712 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.084551177 seconds)
  done (took 19.420386798 seconds)
done (took 622.7627382 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.37552106 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.22787725 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.085571556 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.926384417 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.176626857 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.961350036 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.920028808 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.989229814 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.652328361 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.007385949 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.616206578 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.945691996 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.704086399 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.956380801 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.046806435 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.978319387 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.508163851 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.602581289 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.102082168 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.995771586 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.097145843 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.853703314 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.008360265 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.687133067 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.725771508 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.912298751 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.104046373 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.516359591 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.932271766 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.083705775 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.695524174 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.323885962 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.941055915 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.917289073 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.980862277 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.960474622 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.264252934 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.937169381 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.049552182 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.652414872 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.00910055 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.533770446 seconds)
  done (took 104.781817241 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.898590224 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.899097401 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.896103947 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.897559737 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.897789154 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.897295275 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.894201625 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.895766049 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.895052746 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.899532299 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.896401003 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.898610554 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.895527249 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.895538728 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.897500445 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.895359511 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.895289507 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.903447128 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.894222957 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.894104345 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.898603611 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.898974646 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.902720827 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.895903706 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.895702073 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.898134897 seconds)
  done (took 51.16086026 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.901289122 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.075550782 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.148963316 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.926977745 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.903527159 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.907758617 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.919856995 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.91314408 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.907139884 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.907534962 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.998970085 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.911858002 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.924743462 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.143729005 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.921664053 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.903240157 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.904544266 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.905978306 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.082374166 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.917964773 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.926331445 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.909940655 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.924046024 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.916332142 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.906171511 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.906896843 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.906445024 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.343002557 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.912573498 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.996906416 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.962062415 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.934479967 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.272146904 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.158237217 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.962824503 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.920838815 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.906487018 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.999478008 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.909966096 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.904908481 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.921364531 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.914890294 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.147567906 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.403159067 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.920321721 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.90525599 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.352552853 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.013357565 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.946734346 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.916971384 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.148485523 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.924834831 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.904310749 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.906817116 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.938352092 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.9157543 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.90843715 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.206821089 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.912419686 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.922323332 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.911168444 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.903069358 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.079259304 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.916693044 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.070265281 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.916032337 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.910543322 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.906847694 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.14204187 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.919999346 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.40420625 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.927164679 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.912317476 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.004379417 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.081305338 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.390081324 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.924217866 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.085896707 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.296022481 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.934997667 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.916785032 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.33714141 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.938610132 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.916402846 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.910940546 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.910339737 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.908513385 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.953419285 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.925855932 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.335946765 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.407284374 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.219370525 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.932658933 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.921887356 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.904718066 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.203221316 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.915417048 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.903330558 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.140971252 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.407698472 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.912355735 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.908036984 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.384157456 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.916901578 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.917296165 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.906597218 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.142907114 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.917823996 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.953522187 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.896042399 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.898987067 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.897761626 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.913440274 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.901583843 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.895780647 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.374537499 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.010551322 seconds)
  done (took 236.059220594 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.890448244 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.909591939 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.889959941 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.893626539 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.890119532 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.89565042 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.887945349 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.889869932 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.895833154 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.889823635 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.886845879 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.890591759 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.88744566 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.896563434 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.004299572 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.899046993 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.495521058 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.891495419 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.888730709 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.901131687 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.550776493 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.896550567 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.890337037 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.902085653 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.890084018 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.893298907 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.894775868 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.994053837 seconds)
  done (took 168.301381898 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.896815217 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.015594802 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.91745887 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.924952591 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.905292235 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.89571016 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.919944528 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.913836037 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.900840124 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.89741584 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.898820436 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.963743431 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.908199619 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.999587345 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.928072655 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.930295334 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.00277848 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.906274738 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.897405852 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.897918766 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.925135381 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.897258361 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.963321488 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.025767738 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.921147366 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.013354531 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.911975466 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.899663969 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.897071945 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.018738626 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.916788627 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.961196849 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.930424604 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.914706183 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.02008801 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.015956465 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.006288208 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.929572488 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.905202856 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.897277986 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.898081474 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.891398331 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.016582587 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.924780311 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.899926715 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.015124365 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.922801417 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.901836533 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.908586558 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.897918042 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.911674294 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.915393684 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.966933969 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.038628031 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.934568778 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.927129323 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.924435007 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.199854798 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.907689977 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.99838605 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.89847674 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.020407873 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.922164812 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.895351359 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.900118767 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.907941229 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.930846977 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.931977125 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.00504991 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.907813378 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.997959296 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.935330374 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.906879446 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.899475861 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.905192279 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.018569818 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.02046635 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.93550434 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.936317902 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.929766688 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.901688056 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.897764984 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.893957703 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.918895267 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.904881539 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.020568645 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.020063503 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.90807726 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.904598805 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.90549413 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.903628331 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.925702535 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.024836097 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.939812687 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.004312632 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.968739819 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.983545956 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.917377731 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.916576418 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.906896191 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.965794665 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.917263133 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.91511795 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.251188853 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.971956706 seconds)
  done (took 205.907162341 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.379462189 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.953886929 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.957114131 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.233149416 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.323632608 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.781310208 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.953112755 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.950355234 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.973123258 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.140653853 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.025291166 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.974266227 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.93705162 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.922375326 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.952238404 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.9702439 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.968398047 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.290120234 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.088254566 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.046116134 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.940524249 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.221217388 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.276470107 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.490206613 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.986586125 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.316958566 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.622349701 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.092158297 seconds)
  done (took 62.59191192 seconds)
done (took 830.618050773 seconds)
SAVING RESULT...
DONE!
