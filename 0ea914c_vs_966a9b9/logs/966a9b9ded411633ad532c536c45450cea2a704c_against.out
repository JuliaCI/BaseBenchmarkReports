cset: moving following pidspec: 16030
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.412390405 seconds)
loading group "string"... done (took 0.605614424 seconds)
loading group "linalg"... done (took 7.852368586 seconds)
loading group "parallel"... done (took 0.16685161 seconds)
loading group "find"... done (took 1.192212102 seconds)
loading group "tuple"... done (took 1.852044039 seconds)
loading group "dates"... done (took 1.320108361 seconds)
loading group "micro"... done (took 0.230459867 seconds)
loading group "io"... done (took 1.041360212 seconds)
loading group "scalar"... done (took 39.02280631 seconds)
loading group "sparse"... done (took 12.316203836 seconds)
loading group "broadcast"... done (took 0.994827011 seconds)
loading group "union"... done (took 12.729263961 seconds)
loading group "simd"... done (took 4.693093761 seconds)
loading group "random"... done (took 9.420645289 seconds)
loading group "problem"... done (took 1.855917523 seconds)
loading group "array"... done (took 21.72696875 seconds)
loading group "misc"... done (took 1.772208341 seconds)
loading group "sort"... done (took 3.436100036 seconds)
loading group "collection"... done (took 18.039441487 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.565194671 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.134439377 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.136447285 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.128743904 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.15606787 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.123067836 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.134421126 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.094415595 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.881847034 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.159186185 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.125935781 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.430677025 seconds)
done (took 5.577020757 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.183080759 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090400381 seconds)
    (2/2) benchmarking "String"...
    done (took 0.091471565 seconds)
  done (took 1.331233358 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.074352545 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.133902318 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.07461489 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.075189539 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.074725967 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.074779869 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.074077167 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.074728895 seconds)
  done (took 1.732819194 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.080698551 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.076401903 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.074235524 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.07583629 seconds)
  done (took 1.458479766 seconds)
done (took 5.941476729 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.810414484 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.219177897 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.196117169 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.417890502 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.138058575 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.182440095 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.647048057 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.326897762 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.197975185 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.083847336 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.117946601 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.352154419 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131726604 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.650270318 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.082401201 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.09838867 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.145100897 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.439245764 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.075150668 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.09010496 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.097162458 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.136380056 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.09552752 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.082093998 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.153057479 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.075842125 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.144292047 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.087964211 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.074172529 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.226163637 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.180231307 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.67208067 seconds)
  done (took 10.615819797 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.108399671 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.108233799 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076088291 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.133280993 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.107721177 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.077463417 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083115085 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.075026775 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.098043347 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.140881732 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.100004057 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.112230103 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.073242453 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.077062316 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.093001838 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213869729 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.089530526 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.089479027 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.078846037 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086458086 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.1157783 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.085843389 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.087883679 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.088417667 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.136846985 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.188255289 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.106605752 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.105262732 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.076395664 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.090351562 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.121722924 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.1364668 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073337904 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.073462784 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.13597262 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.10197403 seconds)
  done (took 4.939838126 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.019342077 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.150880616 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.097749703 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.141804119 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.07323518 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.115282992 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.073574999 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.090924826 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.219418737 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.356696703 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.632153668 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119764538 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113485634 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075783998 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.075909917 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075043254 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.552903476 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.105491153 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.115958208 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089711577 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.0784601 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.07676226 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.362807442 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075840018 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.07145718 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076659518 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06463419 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.1298765 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075899095 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.980300523 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.170020466 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.074642658 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10860247 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169625419 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.222809848 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098437434 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.149631978 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077210179 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.073223303 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162602257 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.078613695 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.07441152 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.092654438 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111571837 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.125693779 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.074067287 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074662878 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172703169 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.07237669 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.087376486 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.113410026 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.160062078 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.088730878 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.073160647 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.288099288 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097335531 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.078104668 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.072745802 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.073209578 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.194156536 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132123721 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.100684134 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.075280538 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.074774171 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076317503 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077214967 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.372080933 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.073693584 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.216345905 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.075536354 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.084575998 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.077307877 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.077148858 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080637961 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080194062 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.096663338 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.074353137 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082197003 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.073969976 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.074095978 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.074336329 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.09284225 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.400027043 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.07392165 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074327621 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.071797603 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.202897859 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10404265 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.076025356 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.074264618 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108053577 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075916667 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.074263342 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.11971524 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.074402048 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.07261087 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.090706086 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.077434202 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.120918736 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.075959301 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.102911966 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.073966092 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.103535872 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.077124376 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110577766 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.087125154 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075904605 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.451408851 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.073208228 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.073808265 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.075045226 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.073802816 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.075844398 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.074090891 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.087128542 seconds)
  done (took 22.934940356 seconds)
done (took 40.659893003 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.262579145 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083673023 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080714488 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.080690074 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.08129951 seconds)
  done (took 1.838344242 seconds)
done (took 3.069508438 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.132314248 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107926502 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073194741 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.105613937 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072081921 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110301133 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.110278656 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08514285 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108720685 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.072537735 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10626487 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072191959 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072162657 seconds)
  done (took 2.477934623 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092347951 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.092399586 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077658712 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.092581659 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072007495 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091574332 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.090577165 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097968506 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090633185 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081655477 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071182133 seconds)
  done (took 2.173982689 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09078861 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.092342049 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077986262 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090469739 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071179983 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090625981 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092975651 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.094882472 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090600284 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0823739 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071805449 seconds)
  done (took 2.165546685 seconds)
done (took 8.032910392 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.085945023 seconds)
  done (took 1.298514989 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.579630246 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.969072733 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.089236191 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.117807149 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.203511348 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.124499031 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.267728877 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.094415015 seconds)
  done (took 8.839523811 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.096731069 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07737378 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.090704101 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.076295978 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.076178137 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.077389011 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07731711 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.079316645 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.077313997 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07889505 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.079988062 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.078516811 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.08005029 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.076410146 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07950587 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.078295329 seconds)
  done (took 2.566196071 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.100706317 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.099343436 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.081686055 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.082195466 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.080180069 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079923468 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.08166024 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.081429393 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.0781388 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.079759916 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.082159467 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.080914541 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.078602728 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.07211009 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.081362619 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.082997097 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.078512607 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.081391872 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.082214114 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.082718851 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.082268105 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.071409576 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.078871917 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.081686942 seconds)
  done (took 3.282376454 seconds)
done (took 17.207019607 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113800655 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.074763043 seconds)
  done (took 1.405104779 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.088791839 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.089704835 seconds)
  done (took 1.406686535 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.089041186 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.073787041 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.096964115 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.085114991 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.074242639 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.073427205 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.094074342 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.073683763 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.073618573 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.073679181 seconds)
  done (took 2.035931419 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.075360635 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.083981768 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.07742226 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.088933948 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.08055477 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.071983303 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.079648693 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.07490467 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.085106813 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.070417224 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.078033242 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.090344204 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.079012936 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.092103148 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.079085951 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.075875726 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.078015429 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.074290739 seconds)
  done (took 2.663371867 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.073137454 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.074082264 seconds)
  done (took 1.379345718 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.074836544 seconds)
    (2/7) benchmarking "second"...
    done (took 0.070983476 seconds)
    (3/7) benchmarking "month"...
    done (took 0.073776805 seconds)
    (4/7) benchmarking "year"...
    done (took 0.073113495 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.071213539 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.069937705 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.070951911 seconds)
  done (took 1.734072051 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.395674641 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.12723124 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.328327061 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.079594285 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.089363271 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.272336708 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.073490805 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.079621472 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.078969084 seconds)
  done (took 2.79715011 seconds)
done (took 14.65564313 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.088341141 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.094787241 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.104975212 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.387884281 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.099340973 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.073889394 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.121828887 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.194880654 seconds)
done (took 2.408097607 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.222693943 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.705589594 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.448618273 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.221150726 seconds)
  done (took 2.610220336 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.36016157 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.097309699 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067500415 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.074877013 seconds)
  done (took 1.844797514 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.073798588 seconds)
    (2/2) benchmarking "read"...
    done (took 0.077087362 seconds)
  done (took 1.392856555 seconds)
done (took 7.3117699 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074869772 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.074196221 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.071556849 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.073845445 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.071410174 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.071810471 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.07345423 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.074074841 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.094342783 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.073389946 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.073884876 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073793047 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07140592 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071240777 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.073370396 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073436552 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.071323252 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.071509315 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.072137224 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.185350101 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070585497 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073620903 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.070965873 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.071574931 seconds)
  done (took 3.150729313 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.093571485 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.074741122 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.080064468 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.078662363 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.077897703 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.078742827 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.078711874 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.073676027 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.078227766 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.075482452 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07726698 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.077467171 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.075197525 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07717925 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07575739 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.077251445 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.078969659 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07358954 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075894419 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.077406133 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.078425931 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073288337 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.076935643 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07966177 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.077008554 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077318163 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.075730364 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.073746284 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078466006 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.076957571 seconds)
  done (took 3.57088989 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.077784365 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.07109698 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.072912009 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.078803979 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.071530745 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.07164869 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.070636097 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.071714405 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.072672321 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.071043621 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.072897169 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.070387428 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.071099898 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.072325839 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.071887278 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.075736699 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.087607846 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.071539273 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.071404062 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.071740647 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.074613333 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.073934492 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.071069919 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.071374568 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.071420244 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.071028168 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.071590682 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.070861952 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.071113481 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.07087593 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.073729153 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.074569578 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.070607461 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.078348827 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.075017603 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.070923503 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.074877484 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.071366522 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.072184309 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.070255309 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.070516031 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.070890431 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.070992779 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.077927172 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.071416493 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.072352949 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.07151192 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.071673557 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.071538971 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.073705804 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.070651742 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.071073309 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.072887296 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.072328837 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.075697993 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.070879725 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.072078178 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.070811068 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.071818885 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.070911484 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.070882998 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.070993364 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.073936436 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.071244944 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.087295777 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.078965785 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.071319766 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.07311073 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.071863899 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.073956484 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.072875122 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.085774242 seconds)
  done (took 6.5101488 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.095436787 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094461245 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.072565071 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.072754463 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069869035 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071574324 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07741858 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072046034 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073082253 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090069309 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071669087 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072939577 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072415267 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075345268 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071493981 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.072371202 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079702429 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069179879 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.071677336 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074608514 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071621018 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077253937 seconds)
  done (took 2.931289493 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.16177785 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077472715 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.112390465 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082716829 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077231614 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082007972 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.0770322 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077467968 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077171193 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075199539 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075475916 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077216321 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077431125 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074712176 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074948737 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074776502 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076988064 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.0746043 seconds)
  done (took 2.760113493 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.084177614 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.073595655 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.094649774 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.073645216 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.073096351 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.076387972 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077072022 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.080702391 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.075326045 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.073062637 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.080811379 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075980183 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.075652647 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073902347 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075877064 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073067626 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.075874372 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073318585 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080709345 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07736098 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.076928336 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081592222 seconds)
  done (took 2.956594339 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08667177 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075336216 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.088456167 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.075253414 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.069571409 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.071998931 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.077483929 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.07351249 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.077273098 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.074646009 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073751643 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.071912844 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.075919045 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073474317 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.076194006 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073040443 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074853321 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073623334 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075231479 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.069003347 seconds)
  done (took 2.7615073 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093914334 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075511438 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075431286 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081925779 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075038423 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074902886 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081610657 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074969087 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075332867 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096085017 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075465443 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075485149 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08252552 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.0797627 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078175499 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082211897 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081851216 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081967537 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074862079 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076202323 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.096521849 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075826588 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082414412 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075157299 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075670608 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075655836 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075302949 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079311786 seconds)
  done (took 3.487632069 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073404447 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074799345 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.071200222 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.070728279 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.071184602 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.071644693 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.071239924 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.072428654 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074292784 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071235216 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.073715294 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.074074888 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073424862 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.073627431 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074028316 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.073973462 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073966233 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.071161497 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071432521 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071650543 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.074062682 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073843168 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.074863475 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07204302 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071344093 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.073934079 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071713398 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07108796 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074303221 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071252477 seconds)
  done (took 3.442511343 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.082935505 seconds)
    (2/2) benchmarking "in"...
    done (took 0.080809689 seconds)
  done (took 1.424611643 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.070889739 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087519387 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.07088558 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079166006 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07719809 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.074338218 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.080440264 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077154962 seconds)
  done (took 1.875430468 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.091109686 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.084903918 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.074464741 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.085214506 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.084841039 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.09155273 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.145709524 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.074717438 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.080931163 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.072552349 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.088196578 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.07371898 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.080647294 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074732168 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.080275895 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.081443479 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.072127541 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.079713349 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.076697377 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.072499411 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075319025 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.083366572 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.077391741 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.069222462 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.075432743 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097099679 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.085281658 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.073640473 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078012262 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.08191688 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07980895 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.068283162 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.074368439 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.074336115 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.071857412 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.084751962 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089045078 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077180225 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.083640389 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075324981 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083194122 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.069110098 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.080471558 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.081573026 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084970135 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.075330872 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.074351373 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.069131616 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.072292165 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.079944634 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.069315248 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.075489055 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.068906624 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.081403 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.077657818 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.084906493 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.073694769 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.075957858 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.077603269 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.078036283 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.080744421 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.076678051 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077067393 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.074142281 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084716509 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.079118702 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083089499 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.069241477 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.068130976 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.072106813 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.083646602 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098018272 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.079715084 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.075372373 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075039463 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.072247007 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077353127 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075030565 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079742101 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.081151776 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.073868999 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.079729289 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081792543 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074693153 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.076799486 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.08117992 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.072235524 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.076950465 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.072105762 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089737136 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.073093133 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.071946393 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.071647888 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.086946141 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.077323017 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.073489636 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.071402916 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.080444733 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.067026337 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.073045052 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073661004 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073798095 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.083444869 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.077338613 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.077469452 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.082255102 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.081197736 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073977401 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.075788061 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.069554855 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073510985 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.071963613 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.079675542 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.06751044 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075537429 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.073304962 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.072646686 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.08069609 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.070833194 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.072013416 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08014939 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.078534675 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.071002791 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.069576615 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.075289506 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.072597232 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07486961 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.080367125 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.07086531 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.067824894 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.067757186 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.075773421 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.072064172 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.076515168 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.076825817 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075566496 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.067178882 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.070803255 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.076587787 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.081142615 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.072795833 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.073394219 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.078386059 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.074302061 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.071844905 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.079053358 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.076354882 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.072359863 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.078652663 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.073292924 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.066763069 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073834495 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.074667157 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.070942522 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.075495598 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073775837 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073985712 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071993733 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070011334 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07718722 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071605105 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.071550561 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072067942 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.070870166 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081097559 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.074355864 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.066918771 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.069761357 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.079201925 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.07018277 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.070801695 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.071336709 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.073715993 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.072472802 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.070992587 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.072188336 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.074775761 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079276557 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074815413 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072954347 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.077829489 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083136515 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.072172265 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.074660815 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.071697065 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072486047 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.071942389 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080463985 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.077737982 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.075067266 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.074661695 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.068608863 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07690516 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078967921 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.071888917 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.069930211 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.071028527 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074793835 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076921349 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.074623496 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.071552908 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070772041 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072513147 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073564596 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072989126 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.071625632 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.070390605 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.076302188 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.069682305 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.07706697 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071814503 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080953813 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074880506 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.066454221 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073887602 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070200798 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.077929199 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.066654122 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.069918085 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.071433328 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.071778473 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.071780532 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.074271655 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06609133 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.311884697 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084257402 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.07650733 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.075480322 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.075791044 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.083704197 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.078393997 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.080965366 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.080808862 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.082741852 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.087538587 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.075386393 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.080400499 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.086480623 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.076333284 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.069956439 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.084149236 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.074417565 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.074879476 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.074703224 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.073818165 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078362507 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084216732 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.081630675 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.069054402 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.078150969 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.073498027 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.074727924 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.070465589 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.080228388 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.078891381 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.076163114 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.083122803 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075794631 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.074637607 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078794182 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.075237452 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.076555036 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.07597706 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078712011 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.076176532 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.077936381 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.076061487 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.078419842 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.074909391 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.073066406 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.076974669 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.075113152 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.075760482 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08059582 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.07435707 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075486156 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.077249421 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.075365733 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076131439 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.075687878 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.074688176 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078024313 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076011278 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.075520293 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.078057142 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.069506243 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.082302587 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.07367976 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0818448 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.075047916 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.071560849 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.08031844 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07673372 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.079806945 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.074912908 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.074853566 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.075999024 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.073979107 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.077321125 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081023403 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.072445793 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.085385782 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.081796552 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076146157 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.076848987 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.075550032 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.076185096 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.073619809 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.075539037 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.074773256 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.074810678 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.074755738 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.078645518 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.077097125 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.074903706 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.076183304 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.075427123 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.07497005 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.076495954 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.068810543 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.073614962 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.073604762 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.074147613 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.083126633 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.073662557 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.073741226 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.072693796 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074537369 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.072809795 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.071091393 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.080611172 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.080979812 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.073836387 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080529205 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.07350322 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.075357765 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084381261 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.068379478 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.071990057 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.071314339 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.205420767 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082711548 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.075298733 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.084106421 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.075875765 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.074527084 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.071840399 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.074995712 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.073322264 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.070167695 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.07187653 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078441061 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.073657351 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073982714 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.07399737 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.077129016 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074730083 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083671021 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.073944185 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.075576961 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.074319885 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.071999983 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.07439351 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.074255163 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.077569422 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.075429043 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.072264395 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.07198749 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.073776119 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.075569217 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.075765651 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.074157278 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.075964019 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.081169847 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073789082 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.077191285 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076672239 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06954592 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07719233 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.074302455 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.07359154 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.073563075 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.077967018 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077630052 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075536517 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.083356518 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.075095777 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077754834 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074423664 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.072280572 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.074075796 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.073886884 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.073777642 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.07332209 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.075443973 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081628769 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.07181454 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.077390647 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074854564 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.074820905 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.080859741 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.074660541 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.077484863 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.079486013 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.074847166 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.075915253 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.082227122 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.077713044 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07778634 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075362829 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.0753557 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080192647 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.073415907 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.080140587 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.074602327 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.074571096 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.075944506 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.072322278 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074538001 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.074280588 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073464366 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.080670438 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.07479356 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.074480374 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.074218364 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.072271616 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.075395889 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.0769961 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081929806 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.077407298 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077436367 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06920491 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.071369966 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075916163 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.072528917 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.075635028 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.076455129 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079879558 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.076368772 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.075324822 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.073730007 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.083185496 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.080572011 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.076854067 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.072074229 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.077059263 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.074039514 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.07587606 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.075290455 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.074052443 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074813175 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.078012161 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.074996931 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.073113647 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080218499 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07694948 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074329446 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.211049078 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.077368405 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.075011028 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.069714741 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.075156335 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.076587413 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.080000537 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.077352033 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074457331 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084858057 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.072774264 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.074892201 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.077399861 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073363502 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.079904171 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.070071685 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.076806338 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075647299 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075101758 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.069063348 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.073561739 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.072926015 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.076792645 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.074441036 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.069229132 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084964865 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.083815319 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.078224842 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073448208 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072702079 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.069173644 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.069150399 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.073732772 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075779615 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.076088504 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.084429143 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.073711604 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.073646492 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.069822091 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074869346 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077609312 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.077212569 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.071448157 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.069399514 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.073748899 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.077306957 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.079755428 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.073529847 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.073765 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077227992 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.076526336 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.071954625 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.076645812 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.07115562 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.077790201 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086723007 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.074191659 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075042962 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.080608962 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.082413324 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.074439124 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.069334924 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.074380454 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.078439836 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.075819788 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.075408427 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.074977089 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.089460911 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077729031 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.07367916 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.073069845 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.077876033 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.073904717 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.083044103 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075069652 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.074817418 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.078831171 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.079168369 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.081644611 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.077400432 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.082084766 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.077517973 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.077959172 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.074589596 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074710174 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.072866633 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.07335041 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.075883268 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.074547492 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.078719273 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.081523894 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.073501655 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084713986 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.08332142 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.076402062 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.070966555 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.073102703 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.073699959 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.069466345 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.074511554 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.073063897 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.071849016 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.07178598 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.072546624 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.076304602 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079127644 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.07708337 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.073870765 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.073717611 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.068522963 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.076173343 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.076723563 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075448404 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.070614523 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.074273141 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.074862141 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.078229245 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.210178306 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.07375227 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.076897293 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.076418414 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076014172 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06983324 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.08167098 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074464843 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.0760193 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.074003949 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074052362 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.075532682 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078904781 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.078577793 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.075451734 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.077701623 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.077976815 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.075359037 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.071185491 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.071376733 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.081175776 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.072662498 seconds)
  done (took 47.221450197 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108651121 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071437616 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070563703 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070181372 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081021857 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070783349 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070753904 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07123109 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070979805 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072909835 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069881079 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069986568 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077697072 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085226494 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080244515 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074388182 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069856123 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07104283 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069938684 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071618712 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077743889 seconds)
  done (took 2.968533606 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.081103888 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.085991747 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.082983853 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089524692 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07849758 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.078129335 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.083070774 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078069632 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.085640381 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079887412 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085267527 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077709073 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.080091532 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.080263969 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08047657 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077997247 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086122047 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.078365448 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.078033039 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083092585 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07845823 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082948887 seconds)
  done (took 3.165370334 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.075518124 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.074250851 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.076659923 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.068862858 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.074193187 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.068993877 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.076845716 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.072006086 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.077080247 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.073881076 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.073373708 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.074028573 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.075812776 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.069055088 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.074692583 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.072034109 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.115422515 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.078110391 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.074116907 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.074885181 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.069770799 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.076398076 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.069318782 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.0701381 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.073421184 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.077358753 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.074724835 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.072753078 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.075159783 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.073287531 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.074212867 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.071997936 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.075858129 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.074341099 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.073342511 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.073025142 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.07365959 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.073933676 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.069543598 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.072195312 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.074153459 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.071999879 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.074713181 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.075050757 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.071985253 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.071512732 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.075655394 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.073888978 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.068650089 seconds)
  done (took 5.021639894 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.085335226 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.118802662 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.075822313 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.097116457 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.087272904 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.079850611 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.078583375 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.098275752 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.070996755 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.072308244 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.088395154 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.086950662 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.073124606 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.077832143 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.080765491 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.072783053 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.07380569 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.072128315 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.076850912 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.073137395 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.077276335 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.080374588 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.086934178 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.086329244 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.077267337 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.07198076 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.072881359 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.077546237 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.085624541 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.076866557 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.078175785 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.078160546 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.087879086 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.079659321 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.072504428 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.075821678 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.088767472 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.073539137 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.075394262 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.07114484 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.075312185 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.077895894 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.080157757 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.089007496 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.073522135 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.079329875 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.073247681 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.0703663 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.085517 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.075704576 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.080887078 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.087114174 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076776901 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.073698593 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.077532527 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.088031266 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.073444018 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.071836213 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.075944695 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.086660752 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.07206795 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.077320773 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.086274402 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.074841189 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.079397335 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.087717357 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.078697871 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.076691055 seconds)
  done (took 6.931772123 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.083643714 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.104425773 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091730873 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08991913 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083537415 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.083641961 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.08342256 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.083318212 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.091956074 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.087251473 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08339876 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.123880173 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.079098641 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.085157315 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083340141 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083865604 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.083944305 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083107684 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083058764 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083487603 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.083711472 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090494574 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082834965 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.089730394 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086577582 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.07926018 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082954073 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.083295245 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090466111 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083275509 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086454374 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.083135082 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083234402 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.090042853 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.086971139 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.082739423 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073908022 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082822011 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.083794324 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.082685284 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07931179 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089878885 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082889931 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.078589345 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083293106 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083370661 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08960751 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.087308937 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.085171873 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08739511 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.082873229 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089365469 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082846862 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083298187 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.089978378 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.092023357 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089761258 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089731183 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083551741 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089748798 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089614604 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.092604832 seconds)
  done (took 6.744337667 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089465609 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.081602119 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.089259009 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.069344304 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072212366 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.079395407 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072839674 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.072296725 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080883441 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.083876129 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083417702 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079950068 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081980233 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083154129 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079034467 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082576424 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079426437 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079289716 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080779524 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.079050644 seconds)
  done (took 2.998392947 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.083066605 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090503342 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.07550814 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.078989721 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.076935086 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.079198327 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.076280311 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077206176 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074572258 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077205327 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.082894777 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.083198644 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074795518 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.078835645 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.082992673 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.078517021 seconds)
  done (took 2.65916528 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.093370417 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.081237261 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.088687078 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.075090094 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.074551748 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.070315383 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.073213987 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.069409163 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.069893922 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.085944271 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.073273653 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.084029463 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.07334829 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.072429362 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.07034088 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.078510407 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.070481699 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.070681627 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.073405486 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.086389882 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077877745 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.072036426 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.076372085 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.07362431 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.076123176 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.078403445 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.07197799 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.07357232 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.071175687 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.073577816 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.077139691 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076958547 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.070975177 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.071361164 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.072894872 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.07074078 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.073856831 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.073820908 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.079413852 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.074105086 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.072174105 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.075826566 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.073509284 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.075224066 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.069782185 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.074309491 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.069586438 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.07609732 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.070992127 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.076162918 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.073369397 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.07614997 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.074380481 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.080429912 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.077131525 seconds)
  done (took 5.526852963 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087988045 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077543796 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.069814069 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.072361522 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.077222482 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.074770793 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07738433 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075035988 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075188504 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.072106562 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07557932 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076778179 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075126238 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076965683 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075174726 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07828496 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.069243031 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075354666 seconds)
  done (took 2.765824379 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.078923277 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07418611 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.081651454 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.073410241 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.07398279 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076214842 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069431853 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.072322586 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072803226 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.074211341 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073695267 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.076943816 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0724446 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.075638045 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073678914 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073769561 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.076280844 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072357065 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.073948327 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069535794 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07581607 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072321905 seconds)
  done (took 3.029253596 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.102194298 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.090028214 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.150770595 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.086782119 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.093558456 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.079608004 seconds)
  done (took 1.999209739 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099634149 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109276533 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073845797 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076195979 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082648552 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077219675 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077794157 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077193017 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085261602 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083191878 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077576602 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085413398 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085349832 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084591619 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083078911 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08289434 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077758832 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079937039 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074144309 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090649642 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077597134 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085516905 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078011054 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077515193 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077437909 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084141125 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086778681 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082601682 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077737781 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085268352 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083138004 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077696415 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085890697 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083046442 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077137644 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085355919 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077966505 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090342363 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083270813 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084869948 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.076758715 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083860299 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085425973 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082202086 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085672215 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078641771 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081895306 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077525949 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078086868 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092176832 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083492473 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08548525 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08339547 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085780633 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085499869 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092725222 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083086776 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084406323 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083127492 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083130609 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084958694 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083424266 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084891519 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083404637 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083343386 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084642313 seconds)
  done (took 6.890140186 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112348242 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074862618 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078334283 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08324859 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084809982 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077648337 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077921892 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078322946 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078373073 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07472661 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115924548 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078137019 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084602277 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084430229 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077893892 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077611653 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077771457 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084697445 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074744896 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092120624 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077596792 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085003552 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084649359 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084423278 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083339041 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08299058 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078248187 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077632768 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077673204 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077644299 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081793967 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078329373 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084541112 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074798421 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085143875 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078077071 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077684897 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082047783 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077734794 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083847914 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08470908 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090619129 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077793322 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077554767 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083212285 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07833542 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078313108 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075126216 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077589229 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074914754 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082884407 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08369708 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083450777 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084399225 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077752236 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077645414 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077781216 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07812757 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078221315 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084205499 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08461434 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077997375 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093127255 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07760969 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078369384 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085177205 seconds)
  done (took 6.809851174 seconds)
done (took 140.843137751 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.196570795 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.177248889 seconds)
  done (took 1.775240342 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.075719747 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.107371425 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.085962726 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.13678928 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.074586888 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.1085153 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.106848731 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.086547635 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.07393752 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.073831084 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.074231696 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.076462589 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.139059271 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.074280791 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.074348462 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.076585566 seconds)
  done (took 2.856397528 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.107675144 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.172442801 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110583792 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.073714875 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.107865951 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.081282527 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.072578117 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.083806248 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.078751332 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.072874336 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080789734 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078270535 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.073048529 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.0782892 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.080750947 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.0802491 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.073785546 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.080147034 seconds)
  done (took 3.00022836 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.106033033 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.098470631 seconds)
  done (took 1.618014366 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.167305214 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.143975464 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.216532829 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.356525149 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.16543408 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.15607113 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.152279823 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.15020352 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.125332118 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.145262064 seconds)
  done (took 3.190566995 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.107921829 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.163813188 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.280531176 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.127279379 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.080802398 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.100801188 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.128487178 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.086643077 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.088882394 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.088637713 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.087475715 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.085454105 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.108329369 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.080801857 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.082857478 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.085233198 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.112238118 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.080959748 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.083430225 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.083916313 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.109756003 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.074035889 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.080795769 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.081449831 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.084633804 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.084401152 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.073956641 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.074473789 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.083387712 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.083404306 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.083798897 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.099601659 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.084450394 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.112194469 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.079101205 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.11372023 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.08508899 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.081511804 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.08289351 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.080948587 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.086320734 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.085935511 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.082320455 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.084691827 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.07435692 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.085339742 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.074917959 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.074468061 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.085665399 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.075540232 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.085945814 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.084411568 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.112823874 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.075221447 seconds)
  done (took 6.481039933 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.113797379 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.11415495 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0792215 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.120300799 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111772851 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077274596 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.111815852 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104520084 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.112783769 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.078078907 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076381415 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.078440891 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.087299715 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.089021918 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.12289222 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.115052232 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.080736296 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.076920688 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.115096899 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.114727932 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076245714 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10812926 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101495683 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.112647013 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.075523225 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07825269 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.076345436 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07735676 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.084035943 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085457813 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076168649 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.087228036 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.092303668 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.084798079 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074921197 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.075637328 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077008556 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.086536963 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086805689 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.086401856 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.084967164 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07530679 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.076795808 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.077137604 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076445485 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.0754509 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.08520068 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.086922977 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.085699146 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075589068 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077743556 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.076191835 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.077039965 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.086559464 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.084095638 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08804167 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.086467388 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075940883 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075947452 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.079267354 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.087015208 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086406706 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086163012 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077599824 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.087235357 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.076407391 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087576419 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.09077453 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.076585378 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07713204 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.075753068 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075872961 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.079652474 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.084602357 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.084564933 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.077689321 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.076477896 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076668494 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.087387395 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085110151 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076096963 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.08476216 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075560419 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076165788 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.077228652 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.077519161 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.084230916 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.087101873 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.077224538 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07598634 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075498419 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076154117 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.074609134 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.083598981 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.085571751 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.086073666 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.084499426 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.076432388 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.084629103 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.21384979 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077830437 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.086787465 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.076984557 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078234642 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.078704907 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.085299062 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.085807755 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087458691 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07679714 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.076576303 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.086750786 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08791926 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.07749122 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.085272196 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.087411367 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.085847771 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.075002588 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087895362 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077164378 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.086817034 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076954939 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086531092 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075888958 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.087550703 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076049588 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.07605666 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.077057154 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.086931633 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077749468 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.076633375 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.077315526 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076032031 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.087598526 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.089324393 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078115938 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.084452378 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.085647509 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077662684 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.085439489 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075798115 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.086546653 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077190569 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.077582216 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07532656 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087642709 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07640051 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.077346711 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076106964 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.087801598 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07615788 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087335298 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085209824 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075485571 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087969261 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087750662 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.084318063 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086609159 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077024955 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.075888413 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.075312696 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075711478 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.083925151 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085609534 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077086364 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075768015 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.083940385 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.086563196 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.075454947 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.085425695 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08500957 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.085171654 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.076142756 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075567204 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086782562 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.086728563 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.084455674 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.084906805 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.084984059 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.076918296 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.084452787 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08511528 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076206449 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.091436464 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076656444 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.089560344 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.085627054 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.084256277 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.085494599 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.086610135 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.086838033 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.086596947 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.089337381 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.075600978 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.075530394 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.08514871 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.075334607 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075811378 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.084147979 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.077071816 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.076480638 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.088394445 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.209509841 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.088057777 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.076170169 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.08628253 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076191096 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077457472 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.09014938 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07682087 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077835107 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.086401624 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076480624 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.085392819 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087493216 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.086365035 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076690422 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077603139 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.086884136 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.085776457 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.079116005 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.076904722 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077738515 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.085666945 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.083973096 seconds)
  done (took 20.373883742 seconds)
done (took 40.717709728 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.213065338 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.159457473 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.178306237 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.123715886 seconds)
  done (took 2.18590401 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.123660615 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.107969851 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.100754269 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.073173542 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.106552475 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.072874595 seconds)
  done (took 2.030947453 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.304897444 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.209344357 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.188299669 seconds)
  done (took 2.160509074 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.212372499 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.198086792 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.463754105 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.282711419 seconds)
  done (took 2.712204955 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.150111136 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.094572444 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.075375035 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.092460981 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.137174621 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.165410817 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.106755957 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.130691362 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.087360191 seconds)
  done (took 2.538895423 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.152754609 seconds)
done (took 13.230917647 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.224438671 seconds)
    (2/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.168197213 seconds)
    (3/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.21301448 seconds)
    (4/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.265676854 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.131247906 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.113700375 seconds)
    (7/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.109198346 seconds)
    (8/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.219363584 seconds)
    (9/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.091955156 seconds)
    (10/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.233650109 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.080938953 seconds)
    (12/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.082441137 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.087288083 seconds)
    (14/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.083775558 seconds)
    (15/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.184573521 seconds)
    (16/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.237965685 seconds)
    (17/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.059649433 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.083137445 seconds)
    (19/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.085761168 seconds)
    (20/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.085843276 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.105940989 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.15950334 seconds)
    (23/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.223241679 seconds)
    (24/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.207444291 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.110518653 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.114266137 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.10351139 seconds)
    (28/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.191690839 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.138246057 seconds)
    (30/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.121434362 seconds)
    (31/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.253233205 seconds)
    (32/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.211261856 seconds)
    (33/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.337298538 seconds)
    (34/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.172964497 seconds)
    (35/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.082100551 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.136942956 seconds)
    (37/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.230590407 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.100192623 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.184935267 seconds)
    (40/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.138948411 seconds)
    (41/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.126571303 seconds)
    (42/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.19194234 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.079731819 seconds)
    (44/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.206343867 seconds)
    (45/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.082357063 seconds)
    (46/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.084117828 seconds)
    (47/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.059900299 seconds)
    (48/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.210175626 seconds)
    (49/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.081526242 seconds)
    (50/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.084848147 seconds)
    (51/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.175836615 seconds)
    (52/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.10301269 seconds)
    (53/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.110627261 seconds)
    (54/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.082477593 seconds)
    (55/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.159104134 seconds)
    (56/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074824532 seconds)
    (57/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.073783421 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.081120333 seconds)
    (59/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.080784662 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.144230508 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.09308368 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.097552277 seconds)
    (63/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.095371068 seconds)
    (64/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.100932137 seconds)
    (65/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.160283391 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.075435629 seconds)
    (67/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.150146752 seconds)
    (68/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.163020278 seconds)
    (69/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.084095988 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.074950519 seconds)
    (71/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.123132329 seconds)
    (72/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.058160241 seconds)
    (73/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.078160704 seconds)
    (74/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.109148226 seconds)
    (75/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.084005429 seconds)
    (76/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.080129805 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.09983508 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.305401709 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.079284749 seconds)
    (80/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.099772901 seconds)
    (81/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.217646718 seconds)
    (82/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.081793446 seconds)
    (83/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.131848378 seconds)
    (84/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.059133 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 0.075339068 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.080950026 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.102825545 seconds)
    (88/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.077967694 seconds)
    (89/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.082681024 seconds)
    (90/309) benchmarking ("sort", Float64, false)...
    done (took 0.141971222 seconds)
    (91/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.073278733 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.073849554 seconds)
    (93/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.19427167 seconds)
    (94/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.20585319 seconds)
    (95/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.082114218 seconds)
    (96/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.088524226 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.100839126 seconds)
    (98/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.111424679 seconds)
    (99/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076656621 seconds)
    (100/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.121785839 seconds)
    (101/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.063137307 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.096562706 seconds)
    (103/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.081571784 seconds)
    (104/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.1241162 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.093322406 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.085938597 seconds)
    (107/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.077041475 seconds)
    (108/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.071811409 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.157443343 seconds)
    (110/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.062153845 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.100533567 seconds)
    (112/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.059501158 seconds)
    (113/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.128453155 seconds)
    (114/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.079455069 seconds)
    (115/309) benchmarking ("sort", BigInt, false)...
    done (took 0.205262626 seconds)
    (116/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.079086197 seconds)
    (117/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.196394278 seconds)
    (118/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.212800946 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.144465736 seconds)
    (120/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.216382282 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.108481992 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.096750534 seconds)
    (123/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.085353184 seconds)
    (124/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.120410847 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 0.14837818 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.081917125 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.094796612 seconds)
    (128/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.08450608 seconds)
    (129/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.071516053 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.08107766 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.079672013 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.080217822 seconds)
    (133/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.214232936 seconds)
    (134/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.058032033 seconds)
    (135/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.124235631 seconds)
    (136/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.060307156 seconds)
    (137/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.080563501 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.150624579 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.080348568 seconds)
    (140/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.121640961 seconds)
    (141/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.162685966 seconds)
    (142/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.059015251 seconds)
    (143/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.193353985 seconds)
    (144/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.123085406 seconds)
    (145/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.058167441 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.073214369 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.08160881 seconds)
    (148/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.205231246 seconds)
    (149/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.090493764 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.098910096 seconds)
    (151/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07935689 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.097899314 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.133056894 seconds)
    (154/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.104939798 seconds)
    (155/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.089275427 seconds)
    (156/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.198355669 seconds)
    (157/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.073425463 seconds)
    (158/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.085883186 seconds)
    (159/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.080884613 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.082141804 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.074539954 seconds)
    (162/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.084041627 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.198297579 seconds)
    (164/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.058678546 seconds)
    (165/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.163282409 seconds)
    (166/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.07461128 seconds)
    (167/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.059650468 seconds)
    (168/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.060201572 seconds)
    (169/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.080982499 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.085114165 seconds)
    (171/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.084779886 seconds)
    (172/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.163930387 seconds)
    (173/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.071164492 seconds)
    (174/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.089616005 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.073156731 seconds)
    (176/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.079453505 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.095481695 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.073746225 seconds)
    (179/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.080519259 seconds)
    (180/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.058814102 seconds)
    (181/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.075966171 seconds)
    (182/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.213564099 seconds)
    (183/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.076185109 seconds)
    (184/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.085729009 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.102480192 seconds)
    (186/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.074662958 seconds)
    (187/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.090844977 seconds)
    (188/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.059082935 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.081043588 seconds)
    (190/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073774772 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.104255612 seconds)
    (192/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.059353706 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.151232076 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.083094292 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.100595268 seconds)
    (196/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.087519265 seconds)
    (197/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.080728258 seconds)
    (198/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075607026 seconds)
    (199/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.058777323 seconds)
    (200/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.058318662 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072401729 seconds)
    (202/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.061097047 seconds)
    (203/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.158412158 seconds)
    (204/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.060063419 seconds)
    (205/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.060846829 seconds)
    (206/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.058450879 seconds)
    (207/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.071138487 seconds)
    (208/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072916151 seconds)
    (209/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.059146341 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.073617067 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.074270084 seconds)
    (212/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.08955166 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.137420835 seconds)
    (214/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.058329098 seconds)
    (215/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.098131714 seconds)
    (216/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.061426813 seconds)
    (217/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.075752699 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.082295648 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.081262546 seconds)
    (220/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.192963847 seconds)
    (221/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073741474 seconds)
    (222/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.058195898 seconds)
    (223/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.097665897 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.073429323 seconds)
    (225/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.058843162 seconds)
    (226/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.111125351 seconds)
    (227/309) benchmarking ("sort", Float32, false)...
    done (took 0.141973675 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.152242806 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.079485391 seconds)
    (230/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075557963 seconds)
    (231/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.058583746 seconds)
    (232/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.05820101 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.072503836 seconds)
    (234/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.162615171 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.150895873 seconds)
    (236/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.081765497 seconds)
    (237/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.09786553 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.07297021 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.0733696 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.147818449 seconds)
    (241/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.074602584 seconds)
    (242/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.080841786 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.07315926 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073154106 seconds)
    (245/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.060017393 seconds)
    (246/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.071904101 seconds)
    (247/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.082672192 seconds)
    (248/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.083014106 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.105291218 seconds)
    (250/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.073179615 seconds)
    (251/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.069400832 seconds)
    (252/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.071584324 seconds)
    (253/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.071241463 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.072996813 seconds)
    (255/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074927927 seconds)
    (256/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.073422245 seconds)
    (257/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.061775251 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.07496921 seconds)
    (259/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.058627033 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.080131053 seconds)
    (261/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.188737453 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.074106945 seconds)
    (263/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.058719766 seconds)
    (264/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.058275557 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.082004761 seconds)
    (266/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.087095797 seconds)
    (267/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.058507915 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.094995318 seconds)
    (269/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.059779256 seconds)
    (270/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.074715633 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.111925575 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.097014063 seconds)
    (273/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.059093216 seconds)
    (274/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.059772785 seconds)
    (275/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.058263876 seconds)
    (276/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.058686306 seconds)
    (277/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.05982649 seconds)
    (278/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.058260735 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.081352371 seconds)
    (280/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.081548178 seconds)
    (281/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072042557 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.072165106 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.109913977 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.071887663 seconds)
    (285/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.085254126 seconds)
    (286/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.079652334 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.080875407 seconds)
    (288/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.07237524 seconds)
    (289/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.070001441 seconds)
    (290/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.058294345 seconds)
    (291/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.058790048 seconds)
    (292/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.05876436 seconds)
    (293/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.074751152 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.079381981 seconds)
    (295/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.058266078 seconds)
    (296/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.077136027 seconds)
    (297/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.060317148 seconds)
    (298/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.076059703 seconds)
    (299/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.059556978 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.072772786 seconds)
    (301/309) benchmarking ("sort", Int8, false)...
    done (took 0.150204119 seconds)
    (302/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093900277 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.078431487 seconds)
    (304/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076139233 seconds)
    (305/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072980098 seconds)
    (306/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.081580908 seconds)
    (307/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.059016727 seconds)
    (308/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.058851392 seconds)
    (309/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.231165293 seconds)
  done (took 33.916605595 seconds)
done (took 35.377808447 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.090814959 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103042606 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.083762323 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.10275821 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.089664673 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.084468388 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.081548909 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.086986681 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.088677946 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.090314012 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.086553549 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.062366188 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.083177282 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.082899355 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.083531602 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100045979 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.087445755 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.081386307 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.081499434 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.07271376 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.081925882 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.073355005 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.075048082 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.061658202 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.086652951 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.079733398 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.079741153 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.082061023 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.073334309 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.073530089 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.077226757 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.08160481 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.073390789 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.086506373 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.080578716 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.081310808 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.08288281 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.085010179 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.076199915 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.073443875 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.082398369 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.073303062 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.081194603 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.081907741 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.080831733 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.079248346 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.081228577 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.085734009 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099725325 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.075901397 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.082926253 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.083722196 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.083691313 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.0816701 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.077843694 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.081722961 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.078505677 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099093148 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.081406674 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07571513 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.082769099 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.082494925 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07916447 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.082037551 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.081011279 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.08345036 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.084559521 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.079505279 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.083068969 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.079646326 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.07336914 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.081106216 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.077164353 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.07335554 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.084116218 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.086072987 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.071946449 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.079325638 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.081204474 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.078841943 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.072734478 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.075270272 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.075267065 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.08012461 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075704818 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.064535832 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.078266297 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.080829364 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.072441629 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.081786276 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.080020239 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.08133933 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.075225223 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.083756422 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.072413786 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.078243452 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.073713836 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.073468109 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.074983943 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.078464406 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.073292413 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.075549197 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.083379387 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.074585714 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.080275715 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.086139671 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.073493446 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.081062291 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.072046906 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.072383153 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.086438786 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.083122161 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.074036248 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074940279 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.0730452 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.080988583 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.072546614 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.072864786 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.072974721 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.073547798 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.0792482 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.073411097 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.075126377 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.079533444 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.222711052 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.074425195 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.078385087 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.077091982 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.074484544 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.080296626 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.074264028 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.074028239 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.076016137 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.069911421 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.076348318 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.074324095 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.081119655 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.076214964 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.081631776 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.075343724 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.083176577 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.078351143 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.079549515 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.078795513 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.072800671 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.067043303 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07605785 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.076034775 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.074925613 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.073209757 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.07573708 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.073445268 seconds)
done (took 13.726132125 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.074266023 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.144968212 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.103669286 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.102778774 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.092287364 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.074500566 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.08312783 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.105760362 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.075323447 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.107243944 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.095512808 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.093525716 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.120751931 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.072558453 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.073536192 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.077863994 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.075709 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.088755213 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.106637808 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.094136166 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.121257476 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.072687993 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.099884426 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.096364748 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.095106906 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.100476912 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.074902789 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.077651205 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.07723134 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.108653842 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.096873741 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.077607249 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.07443485 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.104708782 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.100381584 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.090162808 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.074015991 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.089974709 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.074472181 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.073627467 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.075047006 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.10735206 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.088067228 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.08835589 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.077979308 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.084520115 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.074926821 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.090197702 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09703432 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.086967685 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.092323676 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.107852548 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.076418735 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.091484132 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.07251438 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.09256717 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.083968887 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.076403299 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.074637735 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.08184729 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.07393499 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.077656523 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.088296658 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.088139484 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.078723694 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.091797625 seconds)
  done (took 7.382127661 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.091983213 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.10008563 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.091642449 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.092026374 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.073900004 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.074269331 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.074889822 seconds)
  done (took 2.151417529 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.073810358 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.095903238 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.098129536 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.097837171 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.09023892 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.09655071 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086187943 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.074529922 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096092921 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.075956367 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.095679555 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.108366748 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.077985341 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.081800302 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.099265056 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.074805061 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.098895448 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.075152018 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.077828024 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.098912825 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076871237 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.10457919 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.077965345 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.07503413 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088788083 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.074680778 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123868203 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07894392 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.076463059 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.077415713 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072916192 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.114907301 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089127838 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.083037832 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.074817234 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08980423 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.089662176 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073461787 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.091635894 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.083655072 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08909096 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.074763031 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.075703743 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.072466812 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.078935351 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.085743088 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.07547827 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.075717077 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.077124942 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.095009167 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.075943621 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.087865696 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.077174731 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.080345933 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.075809407 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.081295188 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085226334 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.075478835 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.09507155 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.076467218 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091643925 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090954246 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08875463 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091408218 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076789611 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08817998 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.089093662 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.076969552 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076531865 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.078497662 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.09061741 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.072874946 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.07661804 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.085689927 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076334971 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.098214607 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.097521741 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076507489 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.088086156 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.074702271 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.07521735 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.07473446 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.098112033 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.080246605 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.074601974 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.079253953 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.078254142 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.072991779 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.073578668 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.079399635 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.072922781 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.076364028 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.078113802 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.078693908 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077656949 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.091868547 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.077535998 seconds)
  done (took 9.669794552 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.076938534 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.076573372 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.076932033 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.075496347 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.075702756 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.0755727 seconds)
  done (took 2.035197507 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.100161654 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.076208916 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.087603866 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.079124413 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.112592994 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.095340536 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.095029664 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.085910123 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.091295574 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.086482617 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.094516016 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.0956272 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.100309246 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.079728091 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.094854809 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.078886461 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.096038375 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.08169816 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.086062299 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080066075 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.093297685 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.079803374 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079911139 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.089841758 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.083756914 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.079189638 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.086440986 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.086900819 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.086856537 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.085745439 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.079900184 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.083371004 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07804313 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.085897548 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.095367745 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.078366943 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079119465 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.085570775 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080024715 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.083570385 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.095623073 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080026738 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.081674683 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.085258944 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.085076253 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.078361528 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.085008066 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.086779541 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.09500138 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.084701288 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.087294588 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.079137066 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.083604726 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.085176115 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.078666545 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.085847632 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.084704799 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.095322487 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.079619867 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.078572052 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.076089596 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.084020142 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.084901723 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.083754448 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.085269749 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.085512162 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.078519161 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07993653 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080244999 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.079698657 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.084873116 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.07634044 seconds)
  done (took 7.709326401 seconds)
done (took 30.490689283 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.545484299 seconds)
  done (took 2.092768623 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.636867486 seconds)
  done (took 2.211258007 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.542927328 seconds)
  done (took 8.115940223 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.396610373 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.501320521 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.743847941 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.141146552 seconds)
  done (took 3.389678927 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.73163618 seconds)
  done (took 2.308572456 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.232120151 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.220799971 seconds)
  done (took 2.041140363 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.386963883 seconds)
  done (took 1.956838694 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.167029271 seconds)
  done (took 2.74515833 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.256797506 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185833179 seconds)
  done (took 2.015965437 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.4932297 seconds)
  done (took 2.066877882 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.932778207 seconds)
  done (took 6.507960509 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.225462118 seconds)
  done (took 1.847625165 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.246931619 seconds)
  done (took 1.821705447 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.763743073 seconds)
  done (took 3.334840926 seconds)
done (took 44.034660827 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.091819763 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.093051864 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.092918578 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.090344544 seconds)
  done (took 1.928469483 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.084471993 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.080754185 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.08437853 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.081500263 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.084523996 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.079723996 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.081638009 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.083229128 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.080234667 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.08054914 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.080548526 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.080777436 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.082678701 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.081865298 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.079550344 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.083203939 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.083908206 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.080593847 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.083913329 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.080332977 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.078463193 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.083646786 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.082731957 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.079549013 seconds)
  done (took 3.543402519 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.086137638 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.081139123 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.08303638 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.080645159 seconds)
  done (took 1.909988767 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.08627727 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.100687086 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.097402014 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.086310236 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.100909409 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.094396092 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.07736948 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.077311328 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.0791652 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.08625207 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.075861476 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.103436719 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.096465083 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.085411975 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.087650129 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.073523469 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.075957795 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.0957674 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.086657493 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.086816717 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07886629 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.085629974 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.075865926 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.096870001 seconds)
  done (took 3.666374364 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.094399984 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.110712069 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.088774848 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.097215488 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.099301843 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.073253219 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.095313863 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.098980954 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.135179605 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.072896687 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.079361082 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.072901198 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.081355085 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.073401522 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.089918742 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.116744009 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.120592879 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.076523632 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.104978136 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.073495688 seconds)
  done (took 3.444096785 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07978641 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.077272355 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.075439627 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.073054598 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.08541475 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.081204873 seconds)
  done (took 2.066627543 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.075686627 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.078768896 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.074660784 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.074922599 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.08063303 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.075196351 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.073574004 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.075690551 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.075326316 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.075135736 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.074840565 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.074235901 seconds)
  done (took 2.499416588 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.20945708 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.076579446 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.076391711 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.072934248 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.078232319 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.073936775 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.089336919 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.076331171 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.100241955 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.074316945 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.074441172 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.076882662 seconds)
  done (took 2.66758248 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216403911 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084756453 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245644584 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159761317 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119732272 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124048041 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120680801 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121190204 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.150185845 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109249819 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173697087 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175063209 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11544353 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144677553 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102486763 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.106912901 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164192104 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171500974 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1147735 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172738664 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154476314 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134195575 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154133064 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110208159 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114069359 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130994365 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.078675085 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088190196 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177188183 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140860304 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151614403 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119057626 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100926654 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184136195 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180349842 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148120029 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155754793 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093457713 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.110243017 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.141081046 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206157862 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096810764 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168459944 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259005895 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090136347 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141498887 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126751136 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.127212924 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.113159407 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098055691 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154280883 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193487368 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.146541836 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095925109 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132248441 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122155414 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.122609938 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121597957 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189982857 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167513999 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134220609 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.07913244 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117128518 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158326112 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140971392 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.118072769 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.133041318 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099343998 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143642522 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161489227 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132888933 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152157571 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.125433969 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096914696 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126835189 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148926477 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1354404 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167639587 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130922037 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.080368728 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131434461 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109928158 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088442341 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.155157422 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082694757 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180850128 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106707702 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.112689968 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133461294 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115699285 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115826014 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167305119 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.296434511 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111664081 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.075045025 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113405091 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.126885617 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155260443 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094772762 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116056517 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12515835 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.08558934 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145646581 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.082630761 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130657904 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.082873381 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133514401 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136523675 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.086733306 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129420299 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111385196 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.107983104 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139207381 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166631652 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09573713 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090662068 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175382299 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129393341 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.110590255 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15122695 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163055858 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.10641042 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109772594 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158560571 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178880929 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096825147 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169749038 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115056653 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091749032 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.095545369 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131150085 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118720944 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.132335812 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088562499 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.124698629 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173482762 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.08271377 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103123672 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14078604 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08617633 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088189666 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112684415 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113019356 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.103490613 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.107636101 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.109873641 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144462959 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129966772 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112588999 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278374349 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107018237 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179860006 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095278687 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.110419617 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113054925 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.077561341 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.144403683 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165768279 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088490932 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16957867 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.128809375 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124277389 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125661284 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091291151 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147922696 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087231955 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.0782493 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153867095 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117098393 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117040285 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.156983232 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124034674 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.132975653 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.125996095 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141514628 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13802216 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.136051881 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11431724 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.095028794 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118855007 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135575101 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.08128409 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.098429252 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.087119695 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112769105 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103750179 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091401192 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148867899 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131013946 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117287848 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118965406 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104154679 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154182291 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.083254079 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134181652 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.125791299 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10297157 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.15784861 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15760955 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138460767 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105896246 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14324184 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.078089764 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.226797618 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.098246135 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130103868 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09143254 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.091711592 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126507784 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153368677 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136353944 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147809023 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132426489 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127764694 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16203435 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.077526831 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.127340248 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15377564 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128661022 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.114382448 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098203483 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.1069026 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148200599 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115786585 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18868139 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120387298 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130970882 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160537854 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.108668029 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087034631 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110013796 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142583415 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111973636 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149367836 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106618024 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095813775 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115818837 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.08236992 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106080887 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135406399 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126734808 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141196047 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.122508844 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140546606 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085030387 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12431668 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130678406 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129158144 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.071628176 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125623173 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165853922 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102185224 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124143224 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157869738 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086556089 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.28889738 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182533491 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153628094 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093763534 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117703998 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127472201 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133846619 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127504981 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148116998 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115686186 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145284383 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117347341 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.092550348 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095649863 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104450544 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11237335 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.103131525 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.111609426 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.121503762 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.103936762 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140390419 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111328191 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117691109 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124294813 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.106559726 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.099032583 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10469691 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18269407 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12556674 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17823797 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.106594235 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.149005582 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169419964 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082486804 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086808797 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.085567094 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14788614 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092424933 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137806439 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.115025249 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12542048 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130788244 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149358626 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102885484 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.07649076 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115978331 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14108217 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132274793 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105777216 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.111258158 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168484685 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.108893772 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086902145 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121021981 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123393783 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109680345 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321812712 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.07013662 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113781832 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084865432 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088621208 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135259658 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160869192 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.088739608 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.107711834 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126973281 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120791211 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134152888 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112032766 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116968194 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135221642 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158927941 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134872824 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.0980613 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119404791 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135126805 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161836876 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109949703 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.104892694 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18123108 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158345875 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.164889104 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.09605937 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12058956 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119877018 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11801849 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144283651 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091588125 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168338829 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089278233 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143492291 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111653862 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096450946 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138218362 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.116971872 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095991113 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153873849 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124025235 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090738327 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085288472 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125589525 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125048793 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113572465 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.08289597 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145292655 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.080732328 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138408485 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313152999 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089304023 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112363163 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104240231 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088160968 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115143842 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110500271 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09498213 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.1068781 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177822199 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.094927974 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155559109 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14106197 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120848607 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142528153 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110221937 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.648939824 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.086227626 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157627749 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124716396 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179970485 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107784565 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124814786 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116442624 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130708553 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153575001 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110318838 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.192416765 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139231053 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.123073518 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08784901 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109632851 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111255201 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.095371991 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114518492 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120011127 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122998397 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.100847989 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.122794065 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131085178 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.090021897 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103876029 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16332388 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124903944 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150804663 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146106615 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092954501 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124175714 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14307689 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087444153 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.126719448 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1583082 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.260488495 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109557462 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.089159891 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.109236908 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165669669 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.081541254 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168909389 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128486889 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116779074 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119982521 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.118314175 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140961726 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115367049 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127808577 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100242858 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.115731928 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12064199 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088617087 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.084444792 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112121571 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119309109 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.104645706 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104545809 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.107125123 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156900037 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.080223528 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107874669 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1227475 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152601688 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180403949 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.095941728 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090482046 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12710936 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122992062 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.120456649 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128079345 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.086056828 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088908682 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.087177383 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.085915769 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.11550107 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120172143 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12191807 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117460104 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170466987 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.091816995 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.244687517 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103539834 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111892184 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.077708076 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.085239987 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103783153 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105751888 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114908385 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116649341 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164090371 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.101732181 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.242979056 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100137218 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.082398077 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09147265 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134240841 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117253126 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125423801 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10977723 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.070783639 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116736852 seconds)
  done (took 62.750469744 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.115265713 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.090126552 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.104393304 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.151246787 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.130345017 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.209329257 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.159861734 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.197100429 seconds)
  done (took 2.858008922 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07551633 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.103267491 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.111311054 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.091476523 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.074704464 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.077185371 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.239459957 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.089798631 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.074783124 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.103797306 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.086545992 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.077123433 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.444550924 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.074948506 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.076073953 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.069737397 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.0754947 seconds)
  done (took 3.634418492 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.409069682 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.624028509 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.359985414 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.08456749 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.993960615 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.096707122 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.191063693 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.141046939 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.086248993 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.546574768 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.416044145 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.136910226 seconds)
  done (took 18.789118217 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.088775385 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.082245507 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.09781837 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.096674205 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.085109655 seconds)
  done (took 2.157546109 seconds)
done (took 113.526384739 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.09086424 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.633204301 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.060973679 seconds)
  done (took 2.4292526 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.092365012 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.093659336 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.094050566 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.091173644 seconds)
  done (took 2.090054039 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.082078623 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.083612396 seconds)
  done (took 1.877413665 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.243729184 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.175633591 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.103830694 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.090474192 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08709403 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.087531196 seconds)
  done (took 1.974753563 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.080513264 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.083536109 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.079944527 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.083729163 seconds)
  done (took 2.033556446 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.084520314 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.059305173 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.061677648 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.064778526 seconds)
  done (took 1.977419243 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.095182501 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.086723435 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.08671741 seconds)
  done (took 1.973739854 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108802768 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.093798119 seconds)
  done (took 1.906782805 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.089700552 seconds)
  done (took 1.794543819 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.102586372 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.108980501 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.140014119 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.118413118 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.147646334 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.117147822 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.09252357 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.09288736 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.083781737 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.093636658 seconds)
  done (took 2.804182471 seconds)
done (took 23.179323156 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.086816217 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.383017619 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.367833125 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.098317182 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.674200344 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.364034734 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.978077454 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.100781835 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123918428 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07544636 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.092349816 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.656052681 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.966779667 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.337621952 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.955112931 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.33635846 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.6572142 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075677586 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.075231986 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075576304 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.959764388 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07549939 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.075194438 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.076185416 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.656269338 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.380223017 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075774377 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.354135742 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.075356072 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07747762 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.363811819 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.076116736 seconds)
  done (took 16.4203928 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078364826 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128728951 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.081017958 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092570505 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.077881923 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.077232872 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.078882124 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.076886403 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129343205 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.075561845 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.092812559 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.075009667 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.078975007 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075951552 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.095212609 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.07593194 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.076726373 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.076520397 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.076588283 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.076394253 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.09548649 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.075546523 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.075946453 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.076409419 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.075603856 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.089072098 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.076866908 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.076574465 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.076274712 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078002601 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.079063136 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.076368933 seconds)
  done (took 4.369115076 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123815582 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.135542823 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.081729738 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112389261 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11995322 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.078139613 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.152339279 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.101560837 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.135285102 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.076624783 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.093519666 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.075714609 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.110510432 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.078149729 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.096897416 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.075976789 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.077139755 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.076662121 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.076324766 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.076224281 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.095892873 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07582995 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.076157181 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.076629299 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.076621216 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.090400747 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.076593564 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.076193346 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.076195892 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07814302 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.079510548 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.076472995 seconds)
  done (took 4.631117628 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.081703123 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.082917589 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.090772149 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.092251891 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.077549596 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07918212 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.081358289 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.076858333 seconds)
  done (took 2.386037882 seconds)
done (took 29.520011455 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.086982402 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.077212491 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.080808624 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.090749218 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.081783397 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.086069682 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.07443081 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.083167785 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.08001622 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.080730776 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.082486011 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.07510206 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.079383971 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.074178573 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.082613475 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.075595454 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.087758986 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.080451581 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.087895339 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.087779921 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.077735826 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.080973372 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.083479633 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.087053954 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.087756214 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.087538969 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.085391823 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.081027753 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.076768948 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.079139905 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.085257099 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.09223093 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.076389366 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.087196566 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.075873323 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.075392362 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07968584 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.075481629 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.087891815 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.084443262 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.077116889 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.084167487 seconds)
  done (took 5.143087676 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.095990959 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.101614617 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.092979955 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.069198045 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.074923605 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.07334835 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.097147301 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.067419598 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.066914228 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.096425113 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.063158835 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.067929844 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.070956919 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.061253403 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.067808335 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.064479462 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.069589699 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.063267845 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.067925015 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.067441401 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.097778063 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.061341532 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.08568954 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07083713 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.063491284 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06904645 seconds)
  done (took 3.685216913 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.082946096 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.093587853 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.098633777 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138830147 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.113269004 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.087002727 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.087706083 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.104649617 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096733904 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.074660684 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07900812 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.101490178 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097958061 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.081679611 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.075470355 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.093954398 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.092358401 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.0770428 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.081231958 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102524812 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.095109488 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.094208771 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.104713336 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.091297284 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.074376684 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078544158 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.079561938 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.089767333 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.078325888 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.084456315 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.078324915 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.078925973 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.077764524 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.087026963 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.089211502 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.076768109 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.10364183 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.085899466 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.089424887 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.075998148 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.083966542 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.076551184 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.101411341 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.135729821 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.07479755 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.081666385 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.079413313 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.08558044 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.07484491 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095535769 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.087325972 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.075395812 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.078877951 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.074463193 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.074805888 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078897398 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.077208006 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.077895964 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.084232778 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.08142386 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.100726976 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.080626121 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.091786314 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.075671761 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.085769351 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.074683239 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.076099245 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.073771305 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.103538552 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076792794 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.119570295 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.075879935 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.076239321 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.084470748 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.083622198 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.081804727 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.076001428 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.091570512 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.086541993 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.079115636 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.08359996 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.079346309 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.078378681 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099284169 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.077781714 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.076987143 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.076404543 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.080802834 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07894086 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.076304298 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088814499 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.074873719 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.079254822 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.092559893 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.07569891 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.076816654 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.081258263 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.080158011 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.074971775 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087060625 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.079625754 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.075849087 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.084956732 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.075146197 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.078387005 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.088266549 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.081913929 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.074582162 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.080046814 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.080686384 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.075792668 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.076684305 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.078079125 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.077276923 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.083906924 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.082674077 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.079365953 seconds)
  done (took 11.660261794 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.173782865 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.167322649 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.078306116 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.157989247 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.084513309 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.086970816 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.159586933 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.103113396 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.075645153 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.076974825 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.076356518 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.118763007 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.114438144 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.124509646 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.086556046 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.07594073 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093000124 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.125646872 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.161411174 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.155636527 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092471102 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.085075393 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.078147015 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.076584856 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.078123756 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.086479524 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.093657109 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.085228336 seconds)
  done (took 4.731361411 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.088281146 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.114669164 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.082841735 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.099552051 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.098372222 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.075920104 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.078063635 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.077813346 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.089592663 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.085699239 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.075765991 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.081320289 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.082243086 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.079234126 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.076620306 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.083106047 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.083233448 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.076506437 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.079436556 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.081397355 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.08681567 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.099677649 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.080442574 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.075224977 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.080156732 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.074785606 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.07040977 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.091201473 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.076093801 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.103779816 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.073492406 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.080907987 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.090559563 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.076668624 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.075619105 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07576713 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.075484599 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.075452439 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.077934249 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.076423656 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.074117676 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.064870251 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.074882521 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.087008459 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082738308 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.063893833 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.080823762 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.081080944 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.081592421 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.07301768 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.078586768 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.078375253 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.079220396 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.084102432 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.080363068 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.081388364 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07731252 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.081841675 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.085240768 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.076015941 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.072766126 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.073484982 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.079927569 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.072556634 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084463566 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.080525045 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.074248394 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.075091297 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.077467081 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082407219 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.075604122 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.080101712 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.072810346 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.077976006 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.080081351 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.077415742 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.076970959 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.074228536 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.0751889 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.076517404 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.062595304 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.075312909 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.060917675 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.078423686 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.07382064 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.074248115 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.074976235 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.080287423 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.087158489 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.07697849 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.081933612 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.076349938 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.074488672 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.079371157 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.068033204 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.078677837 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08683964 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.089903587 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.075704549 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.073741403 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.089592128 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.081226322 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.07541683 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.063763621 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.080632752 seconds)
  done (took 10.08619135 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.098811628 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.078292188 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.092727843 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.098919543 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095386356 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.082504119 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.08646939 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.077329767 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.092436006 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.082084015 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.085742549 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.075844965 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08623485 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.085424294 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.077937193 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.085600647 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.080087154 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.093025919 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.09109415 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.075970308 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.084223503 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.088789739 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.099119829 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.089785356 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.088948816 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.090042333 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099593745 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.085824333 seconds)
  done (took 4.22046463 seconds)
done (took 41.239560136 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.829818042 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.979752235 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.803812777 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.138525549 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.077050171 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.821021368 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.997161611 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.804580494 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.155501145 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.839374269 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.149214218 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.032167447 seconds)
done (took 66.499619447 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.827841701 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.933823855 seconds)
    (2/2) benchmarking "String"...
    done (took 2.038481333 seconds)
  done (took 5.706572526 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.066300505 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.375892502 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.048712577 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.797790461 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.804615035 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.117127489 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.60651313 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.312914585 seconds)
  done (took 30.798728893 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.013913716 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.024462849 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.518192967 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.551063418 seconds)
  done (took 15.895168204 seconds)
done (took 64.115061104 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.805850233 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.811939141 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.803475547 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.782740722 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.859853952 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.819453387 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.23127001 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.991696705 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.797887211 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.78577601 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.801427764 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.279961794 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.800674491 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.169400987 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.798630741 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.803219596 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.800686827 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.328474931 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.959966164 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.819857223 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.82393267 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.849622693 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.803080809 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.959741435 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.851382376 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.803525588 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.225933843 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.816146364 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.431481833 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.801167605 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.832196566 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.956321663 seconds)
  done (took 205.141154889 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.800169189 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.779406998 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.870670411 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.804840006 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.250995618 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.981450767 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.90386036 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.287509617 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.804886909 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.809666165 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.115087404 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.801365011 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.132687232 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.789674203 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.82941666 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.805733372 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.03134259 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.111004608 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.83488681 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.967856426 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.821729449 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.011691515 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.953157988 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.057892256 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.846292213 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.820872263 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.814611036 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.808625877 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.996078489 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.994259152 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.848136775 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.817374884 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.999803252 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.674430633 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.816029238 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.808697834 seconds)
  done (took 171.539260424 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.972092954 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.803463152 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.80097209 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.802058392 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.808465685 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.802328802 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.932584832 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.928744417 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.430257126 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.179915182 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.855801317 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.629191729 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.80149463 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.870548819 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.814517083 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.806494287 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.817374043 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.831325829 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.802600831 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.80340958 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.929313488 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.812970051 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.953171468 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.810274202 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.803086712 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.808328789 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.172504988 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.803395303 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.8089176 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.04393189 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.803065017 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.802610414 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.668908467 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.326504748 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.811145448 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.884582689 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.804196683 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.80938918 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.803144594 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.01958268 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.80367518 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.80444769 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.806178394 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.966463795 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.804222312 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.937269793 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.805047301 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.28745493 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.805084549 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.804663739 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.687654616 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.40796333 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.805465042 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.803690562 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.806988548 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.803474722 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.803633537 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.810665623 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.802801161 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.686093881 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.881582905 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.806508673 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.804807597 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.807978032 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.810476849 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.805324989 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.826993289 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.807175729 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.695457359 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.856786763 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.928122044 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.926186999 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.807234366 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.87116588 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.898496603 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.805517621 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.805191875 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.804706934 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.805489064 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.88618312 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.806308174 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.933667818 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.813459995 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.807063252 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.857972106 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.874142047 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.806315868 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.664720799 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.808591092 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.806409782 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.080041547 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.873158336 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.806977746 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.805240851 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.806726128 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.806415505 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.931743243 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.928469256 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.525845308 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.808368635 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.716229926 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.813817795 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.941076997 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.807556699 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.965507273 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.809451956 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.88861742 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.8120991 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.808414812 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.806548991 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.839086547 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.808296805 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.864108626 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.808036395 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.17930743 seconds)
  done (took 406.255521296 seconds)
done (took 786.697919618 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.471806321 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.437311331 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.536132712 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.458919752 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.434417244 seconds)
  done (took 14.079747611 seconds)
done (took 15.821952053 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.898088876 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.902948351 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.83203841 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.89900301 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.829626863 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.900761073 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.882620003 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.833061631 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.867435608 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.832918969 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.869204769 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.832774278 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.819948155 seconds)
  done (took 25.94282249 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.041055017 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.038109021 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.879669206 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.065747588 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.855879255 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.035978938 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.969955395 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.962780668 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.960734731 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.825633592 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.822804234 seconds)
  done (took 23.203252163 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.03850521 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.043352143 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.884643641 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.046066222 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.857834524 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.037194899 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.968010746 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.967599704 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.965537347 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.824334984 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.82134162 seconds)
  done (took 23.197633645 seconds)
done (took 74.085075738 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.816904318 seconds)
  done (took 3.559103813 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.843308076 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.017457904 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.823482053 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.819048779 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.815933518 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.81779145 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.820167105 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.816829909 seconds)
  done (took 16.517937633 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.812395364 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.812864396 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.815526051 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.812897921 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.811560938 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.813182859 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.812665282 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.814321606 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.813780504 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.815608031 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.815507675 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.815292386 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.8160837 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.812522562 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.8156523 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.815248944 seconds)
  done (took 30.768183718 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.814682115 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.805328423 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.805974384 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.805961268 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.805116244 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.805418625 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.806676152 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.804466251 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.804003403 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.804260542 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.805131248 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.804130166 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.803281157 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.803798325 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.802930443 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.803860981 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.804477866 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.804587064 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.807621407 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.803067151 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.803473118 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.803554616 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.804490038 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.804806286 seconds)
  done (took 45.066877672 seconds)
done (took 97.653958031 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.588282842 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.701714442 seconds)
  done (took 10.023515248 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.80865608 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.80684668 seconds)
  done (took 5.417905273 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.808623798 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.806664292 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.807292266 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.806193544 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.807392587 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.807871438 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.806891955 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.80694984 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.80755478 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.807353276 seconds)
  done (took 19.807608614 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.807777233 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.80706046 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.80423357 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.808047658 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.807595202 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.804674471 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.807820686 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.808605664 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.807734071 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.80480753 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.808309946 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.805674226 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.808113204 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.806195078 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.807923896 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.808376611 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.806744707 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.80633482 seconds)
  done (took 34.261757382 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.807720481 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.808020065 seconds)
  done (took 5.35068822 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.806155212 seconds)
    (2/7) benchmarking "second"...
    done (took 1.806262336 seconds)
    (3/7) benchmarking "month"...
    done (took 1.805835284 seconds)
    (4/7) benchmarking "year"...
    done (took 1.807261168 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.806451708 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.806328082 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.805015705 seconds)
  done (took 14.378944742 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.808634946 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.963266632 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.037563062 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.4472071 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.810751915 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.81148259 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.733420066 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.813458311 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.812080272 seconds)
  done (took 19.972412287 seconds)
done (took 110.945851685 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.65440977 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.805870473 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.054527634 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.874201973 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.852080024 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.099221051 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.823636966 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.101887296 seconds)
done (took 43.000335627 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.855217134 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 4.093599678 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.118557093 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.826836542 seconds)
  done (took 16.769058181 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.781009463 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.31940453 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.838741194 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.389875895 seconds)
  done (took 20.087832655 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.169386462 seconds)
    (2/2) benchmarking "read"...
    done (took 2.147918186 seconds)
  done (took 6.051950038 seconds)
done (took 51.494198068 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.800199155 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.800615015 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.799593985 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.802111967 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.798866925 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.798607887 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.801742186 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.799256951 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.799095404 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.801381665 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.801468194 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.8023807 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.7973119 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.797457509 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.799294306 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.800602053 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.799251867 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.799895182 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.798555488 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.799749304 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.798943122 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.801471798 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.798120228 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.798385261 seconds)
  done (took 44.923914235 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.802160045 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.799742624 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.80163032 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.803976405 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.797760098 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.801699545 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.801454751 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.800163507 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.802335957 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.802257313 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.799731824 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.801893532 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.802644525 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.802541865 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.80305243 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.798257907 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.800922955 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.800276731 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.804893454 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.798414679 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.800346562 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.797453136 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.80004336 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.804353396 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.800798363 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.796499722 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.801392168 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.80089114 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.801709728 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.796816326 seconds)
  done (took 55.753913119 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.805548173 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.807701285 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.796443648 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.797585999 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.800450098 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.797622448 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.795778438 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.796721183 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.798491316 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.799235947 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.797418303 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.797725189 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.797746002 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.796535523 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.795517659 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.797840099 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.795306343 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.793808463 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.79460872 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.793907013 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.794850658 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.795199595 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.795405656 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.794207889 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.79494986 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.795220265 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.796529591 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.796942085 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.795603005 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.795047626 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.794635587 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.795786947 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.793729143 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.794107296 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.795331398 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.796157891 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.799355217 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.803229058 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.795665958 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.794891805 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.795389376 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.794577812 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.794337036 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.795454419 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.794108959 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.794680976 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.794284396 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.795012803 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.795695274 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.79792702 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.793961316 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.793907456 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.793909216 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.793679057 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.795414071 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.793884479 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.794910808 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.794690707 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.794825839 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.796006657 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.795274332 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.794044218 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.794265152 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.794766488 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.79517356 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.795411442 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.795633593 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.793887639 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.79557251 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.794124551 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.79380538 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.795080886 seconds)
  done (took 131.038181983 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.794316204 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.792678018 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.791829712 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.793156426 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.791903655 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.793707286 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.792992314 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.794723237 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.791497261 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.795708818 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.793874972 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.791052533 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79092707 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.794666399 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.793651177 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.79176565 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.792641061 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.790250032 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.792243934 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.793482781 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.794328753 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.790006844 seconds)
  done (took 41.162853092 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.792383166 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.792977339 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.789417841 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.793870479 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.788983191 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.79163199 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.791381978 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.791565148 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.791584999 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.788323488 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.789318532 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.791760675 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.788959523 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.788966542 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.790239488 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.788381362 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.791420006 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.7893652 seconds)
  done (took 33.949768157 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.789515147 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.788923653 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.79050698 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.788939811 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.788239489 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.790534117 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.789930805 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.791115891 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.791418122 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.788824899 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.792630357 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.791436188 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.792726148 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.78844765 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.791718127 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.788594519 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.79202815 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.788543234 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.791283446 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.789258769 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.78882515 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.792637028 seconds)
  done (took 41.104610587 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.792958274 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.79152522 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.788102719 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.789296413 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.788435946 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.792087191 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.793769212 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.787469772 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.792679859 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.78907655 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.788346517 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.793113408 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.793600522 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.79365093 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.794886938 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.791331139 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.791372918 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.792473767 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.793693581 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.789934015 seconds)
  done (took 37.546806248 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.797999115 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.794163429 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.798081117 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.796927804 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.795287655 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.798825642 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.799738272 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.795891554 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.797807007 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.799193761 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.793952454 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.798316335 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.798260035 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.797912395 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.799106552 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.79893354 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.800916592 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.796322259 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.796745785 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.795008033 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.799049483 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.798471664 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.798081178 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.797450925 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.800167313 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.798665958 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.79857516 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.792960017 seconds)
  done (took 52.05514339 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.792261832 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.795608126 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.789575318 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.7931009 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.790184435 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.788753241 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.794258446 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.787402749 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.79685431 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.795229475 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.795954829 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.795122087 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.796419897 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.796733029 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.795868571 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.792754945 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.79443626 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.792132632 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.795195865 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.790106884 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.792515319 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.791105485 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.795226745 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.793688527 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793167242 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.796369808 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.790161532 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.794329516 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.79810095 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.788834783 seconds)
  done (took 55.524966033 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.814824158 seconds)
    (2/2) benchmarking "in"...
    done (took 1.813365265 seconds)
  done (took 5.35143946 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.794806982 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.794404738 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.796802586 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.795473959 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.789679319 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.796506588 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.795862773 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.791282748 seconds)
  done (took 16.080808752 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.795110969 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.798558411 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.798605315 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.79535223 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.797815507 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.798096921 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.803166911 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.795677279 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.797245175 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.798031995 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.802683954 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.804499977 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.80348224 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.796624463 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.798310851 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.80115579 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.798134879 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.798332974 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.800846233 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.798004125 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.798325853 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.800889839 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.797231336 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.795280423 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.796382478 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.803273015 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.801431028 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.800319557 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.794809024 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.799828612 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.798298554 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.796370351 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.79972243 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.800621657 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.800720656 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.801990918 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.804636545 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.797371052 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.804053011 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.801957395 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.80037032 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.794384111 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.796458773 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.800898853 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.797407475 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.800297593 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.794664745 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.793710761 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.796530645 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.802322212 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.799827181 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.795865945 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.795128304 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.798192028 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.798578114 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.803810686 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.797709707 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.80316234 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.801685957 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.809480686 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.812529541 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.803919993 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.801469078 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.804426925 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.805470909 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.820418161 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.802766407 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.795206408 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.794072049 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.79737736 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.807346451 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.810029293 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.80532958 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.799762414 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.799339709 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.801834184 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.798723798 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.798293335 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.807353428 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.804023113 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.801143313 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.801628957 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.807569101 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.822840135 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.79839465 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.803144579 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.806547041 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.803783469 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.803229078 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.808919732 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.802268388 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.802258264 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.798978859 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.802515848 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.802416738 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.804109117 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.805045864 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.801396937 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.801441685 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.800743854 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.805279094 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.803581082 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.808362555 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.804936332 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.803067485 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.8059498 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.802797593 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.802757179 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.806736432 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.802637591 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.804896942 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.801276822 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.805044535 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.798967981 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.80287356 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.8085157 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.80453202 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.805170225 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.805523355 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.801979316 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.810940509 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.824565818 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.80318481 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.803057193 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.805979749 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.812520274 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.805063166 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.804657074 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.803203982 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.799293223 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.802091871 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.806633645 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.80665245 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.804267262 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.808244583 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.802805492 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.802202806 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.807314823 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.80728207 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.805615613 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.805181132 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.804533973 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.806490376 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.808606827 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.803304625 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.807270798 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.811173457 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.804031504 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.805447652 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.807444985 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.801795393 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.805024223 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.806213809 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.809475781 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.804777888 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.806196993 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.80432151 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.809148983 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.80482836 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.807100636 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.806742343 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.807801938 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.80867663 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.81017295 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.808372895 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.803966033 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.805214616 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.80248369 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.804797979 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.804280808 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.806119612 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.805949114 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.808695109 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.814567987 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.80652988 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.808216821 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.808817587 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.809665181 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.809977185 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.808478315 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.813157209 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.80930706 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.807117808 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.812583442 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.808784516 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.808420601 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.807224596 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.807457286 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.807139816 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.80802017 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.809090892 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.813254453 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.816855023 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.812031313 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.80966496 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.812650014 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.807177156 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.813283412 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.812155627 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.811654534 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.809521494 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.8115841 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.805641178 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.812009271 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.806539876 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.81065534 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.804463955 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.802206171 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.808686002 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.809529718 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.810271065 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.81053325 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.806596606 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.804791433 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.80729323 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.809800242 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.808446224 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.802080709 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.805515113 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.80778338 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.808675317 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.812822074 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.812484389 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.807267399 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.810365753 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.807372542 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.811087997 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.811248913 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.808718995 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.810194127 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.808454253 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.817439998 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.807699192 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.80856598 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.815288779 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.807975253 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.81027593 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.813366034 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.812790495 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.807948351 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.80996053 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.815785152 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.810873916 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.813105529 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.813232123 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.809053228 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.810318229 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.811321851 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.810092861 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.808400245 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.810919334 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.808578694 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.807603516 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.812844766 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.813292981 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.812138338 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.810563361 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.811798045 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.810311722 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.811378935 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.812117526 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.815053213 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.812823435 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.813525177 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.819291128 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.818601151 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.811324374 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.81602752 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.813565747 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.813696575 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.810967996 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.81254683 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.810858102 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.820528173 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.820833467 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.818766048 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.814303357 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.810592754 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.815851271 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.815103171 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.816540768 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.81224233 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.811681352 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.812301864 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.81271867 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.810723498 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.811568144 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.812158425 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.811260807 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.812366447 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.816048712 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.811929782 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.812963427 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.815492438 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.814205008 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.813170853 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.816079593 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.811748409 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.814851197 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.814902032 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.812138785 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.813231131 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.818133466 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.815451023 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.81609661 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.814625508 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.814465124 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.814961118 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.811832876 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.813997926 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.815802534 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.81992589 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.816956551 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.823151894 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.81518372 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.821316296 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.813023823 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.817118545 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.824662023 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.811392566 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.812202509 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.815270765 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.815692547 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.822701739 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.814004697 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.812554394 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.819891985 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.816255635 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.817749026 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.815369706 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.816491916 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.812019768 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.8164473 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.823143243 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.817848192 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.81864135 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.817093975 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.811118767 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.818376805 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.817206897 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.813932555 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.818960329 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.817876535 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.816842113 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.813058967 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.81331411 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.81415638 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.81721613 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.816729114 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.813608338 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.818265834 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.821542417 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.814127609 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.822398081 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.814424391 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.822380001 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.818066919 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.821353632 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.818413967 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.817696976 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.81913839 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.817213427 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.819363501 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.816012861 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.817018432 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.818895838 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.819020178 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.818832958 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.8170905 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.819164613 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.818793813 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.819553195 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.817824009 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.827303886 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.837560896 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.817770728 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.821321351 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.816956307 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.817749062 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.822108098 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.818586906 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.816212274 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.820709247 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.825782729 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.82572994 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.816683688 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.818106683 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.818289275 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.821158676 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.819592715 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.818145291 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.819829151 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.820205506 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.81553054 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.818619568 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.822302344 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.817687584 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.819275096 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.819337779 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.817769459 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.824727876 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.819083568 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.819937764 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.818836933 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.819381131 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.820224073 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.819674332 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.821368943 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.818267911 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.82052388 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.81845961 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.825021333 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.822601035 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.822521542 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.81885625 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.822256567 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.820793929 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.820531369 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.822479288 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.821018329 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.824531132 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.820600694 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.82591318 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.819511032 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.818505924 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.822125104 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.821622806 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.820878384 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.825239218 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.824564424 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.819224597 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.818546294 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.819956015 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.820596611 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.816714923 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.821131191 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.827804405 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.824050062 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.827542356 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.828975357 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.827054405 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.819857548 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.823252532 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.82426213 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.820816139 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.820900798 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.825464774 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.824327398 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.821143026 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.822428263 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.824036362 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.828147874 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.822410486 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.819089943 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.830105537 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.821690211 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.82332333 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.823942109 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.824899026 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.823233176 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.818738015 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.820682855 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.819421671 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.829891232 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.820848068 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.825415614 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.825209873 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.82157908 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.822600537 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.824627457 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.825230463 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.822907031 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.82140387 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.822839742 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.823656819 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.822137566 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.822289013 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.821317816 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.822808908 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.824235548 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.828921691 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.820572979 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.822738098 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.822266761 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.82120431 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.825544482 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.823612799 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.821590378 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.820525343 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.823004752 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.824498154 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.823649543 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.826434439 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.822486922 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.823244155 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.823130239 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.824692752 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.823561454 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.829681717 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.827416605 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.823260162 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.823320448 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.82209799 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.824377636 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.824011741 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.826426773 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.823740529 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.824219388 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.823337917 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.826948923 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.82586239 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.827780333 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.839160062 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.825032541 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.825349158 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.82559439 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.827375515 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.823752179 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.821510046 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.824852538 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.826444457 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.827924505 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.83141029 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.824789474 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.831307554 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.82384264 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.827021098 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.828282168 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.826418307 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.831228374 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.82923625 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.827817443 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.827390725 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.829875912 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.840437195 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.825322663 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.832816137 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.854201003 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.827824744 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.82627634 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.828205064 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.825578918 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.83022425 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.829621853 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.82680207 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.827032689 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.826925429 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.829379428 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.827966869 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.83210784 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.827787348 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.826848209 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.827728353 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.826562666 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.8293628 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.823377113 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.829305594 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.826777735 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.829763708 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.829254818 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.828763967 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.828561274 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.83986802 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.836447318 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.828714326 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.829945428 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.825127241 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.830088738 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.829758764 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.837425406 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.831600025 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.828835673 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.828157401 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.829477113 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.831111702 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.823766881 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.82927314 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.827938781 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.828691545 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.827000055 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.839907406 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.839629269 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.832840104 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.827043206 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.829377033 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.829153568 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.829333228 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.832048719 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.829638547 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.828987683 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.828126389 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.83575937 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.828857219 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.829483185 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.830846293 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.83493742 seconds)
  done (took 1083.320012843 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.828500541 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.82445949 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.826728337 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.82776145 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.826218022 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.827674169 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.823715038 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.826762627 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.826142173 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.82342946 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.823952272 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.825844644 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.824101788 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.8292433 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.825275576 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.825244157 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.828247658 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.825902151 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.826168184 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.825791453 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.825564987 seconds)
  done (took 40.0979671 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.828924245 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.825834795 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.824806188 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.828848454 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.827265391 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.830090601 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.827922361 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.830986833 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.830051444 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.825923394 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.830399028 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.831420105 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.825612769 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.827715766 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.82751293 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.829172828 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.830314552 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.826583126 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.830738572 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.828582062 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.830311732 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.82638723 seconds)
  done (took 41.977432674 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.833349456 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.834986755 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.828317295 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.82545353 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.829306449 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.825350103 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.8318898 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.830782498 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.831621723 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.830857064 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.828450657 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.830406123 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.835645612 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.832396715 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.830658575 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.827625466 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.976542851 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.833288749 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.832492459 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.83281988 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.828229501 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.836107752 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.827087824 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.828180249 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.829550145 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.83018193 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.830829014 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.830317302 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.831616747 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.831119928 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.834183085 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.830004263 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.832643622 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.834941989 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.832312361 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.82996173 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.834874144 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.835502687 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.82817583 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.829463731 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.839644892 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.847265909 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.833907742 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.838942451 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.831498223 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.831980777 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.834506581 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.839489833 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.829987893 seconds)
  done (took 91.66952544 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.82964641 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.831712092 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.829191684 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.83297684 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.834953359 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.832298001 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.834562191 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.833031025 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.830247604 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.831390408 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.831236104 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.831829642 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.831932321 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.835123064 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.833860567 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.831057985 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.830701129 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.827470197 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.831074889 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.829105942 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.829379401 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.833812821 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.832448077 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.831296088 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.835566266 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.830854518 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.830174194 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.830413019 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.832141687 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.830145744 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.835165085 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.831885385 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.832917384 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.828785726 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.832090568 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.832081815 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.832744324 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.830705231 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.833686412 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.831408143 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.832952038 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.833217326 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.835722456 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.836382483 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.83282723 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.831695191 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.832082373 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.831140026 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.833391113 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.83636122 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.833136242 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.832441505 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.837165275 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.831587697 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.834672555 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.834884472 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.831219213 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.833292294 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.839473046 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.834819601 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.834632163 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.836746412 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.83310462 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.838537025 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.838219427 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.835127635 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.83478026 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.838038211 seconds)
  done (took 126.398057954 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.836403049 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.836225007 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.83514231 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.836322477 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.837252805 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.838134638 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.83789812 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.835532959 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.836635438 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.836828846 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.83540882 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.838026936 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.836077033 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.838575001 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.83613591 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.836148197 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.835952832 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.837119061 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.837644384 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.839117545 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.835871117 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.836120177 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.836289621 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.838195993 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.838179188 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.837681319 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.836749297 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.838188507 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.838158062 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.837661863 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.836921653 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.838572381 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.83766965 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.838649985 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.836222988 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.837898586 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.837870335 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.837731194 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.834662003 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.840081698 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.838884367 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.839951002 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.841989465 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.836863888 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.837979043 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.840295675 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.838279602 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.83887732 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.838255767 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.841989394 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.838042753 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.838972802 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.838330048 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.837711929 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.840683234 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.839714964 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.838963948 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.83928187 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.836642006 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.840446396 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.8401626 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.84112279 seconds)
  done (took 115.708523584 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.839435134 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.838620813 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.83754456 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.837481202 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.83696583 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.837507168 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.841972145 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.840802154 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.839233541 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.840002794 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.839810664 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.835607776 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.839067079 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.840354076 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.835950266 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.837210457 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.838215203 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.838190637 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.840784065 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.840752987 seconds)
  done (took 38.53660052 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.838676697 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.842457887 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.836795888 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.836567165 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.838416099 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.837574706 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.840334736 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.838377105 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.840257256 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.843187147 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.842606524 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.841281611 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.837837525 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.83780574 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.842341579 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.837943316 seconds)
  done (took 31.194072229 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.837105198 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.841211821 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.841581458 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.841832322 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.83816517 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.839741614 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.840453033 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.8382527 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.839200424 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.841522991 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.838723971 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.841767669 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.84230046 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.838261722 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.837885359 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.841732489 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.838246903 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.837846482 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.83961322 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.840390157 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.839659997 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.841307769 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.839699385 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.841019296 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.838248527 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.838843623 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.838594936 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.841577569 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.839378686 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.842296062 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.841678274 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.841806369 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.841821679 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.83862389 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.83964171 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.843325292 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.84127572 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.843602411 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.843138912 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.84174512 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.842617536 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.840194919 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.844767817 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.845368332 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.842176529 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.842461315 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.841580532 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.838929968 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.842771799 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.842236754 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.845829998 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.843325808 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.846466923 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.844747757 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.845499555 seconds)
  done (took 103.026120614 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.843891966 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.847411631 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.842083763 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.841723986 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.847431907 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.840552631 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.843710557 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.840564963 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.841389396 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.843747149 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.841655236 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.845056826 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.842481515 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.843819741 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.843000784 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.846095826 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.844611912 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.843446575 seconds)
  done (took 34.948178156 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.844705722 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.84462272 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.845559217 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.843548005 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.842073616 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.847770276 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.842777181 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.843711796 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.844354968 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.844743537 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.843794387 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.845196356 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.846177165 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.847402579 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.846094934 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.843716589 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.846566005 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.845634066 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.843939028 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.841917278 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.849851988 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.84360988 seconds)
  done (took 42.354046428 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.84493946 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.844878311 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.860086703 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.862140657 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.864924474 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.873885457 seconds)
  done (took 12.918599583 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848087461 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849452631 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.843185849 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845318271 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848599296 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847823759 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845200421 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841564672 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84842152 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846718064 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842983752 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847765372 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847722826 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843846369 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847476631 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850607179 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844947928 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848061319 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84550907 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847669289 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845807926 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848899579 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847078686 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845546374 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843654357 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844424446 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848006126 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847220206 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847682695 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849027621 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845857599 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846727638 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848611959 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.844280178 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85019965 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846613574 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847992163 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847750151 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850020411 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847327691 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.848794619 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848633734 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84895708 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844510087 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850431092 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845677457 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847469811 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.844757121 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846646756 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851518574 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850965055 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845687813 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850576842 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848790168 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85121717 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850030249 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848777911 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847013422 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851908881 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847623007 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849078398 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849681454 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846989643 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846944738 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849941162 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847420775 seconds)
  done (took 123.703945724 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846335945 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.84515423 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84653884 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850479738 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846937618 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845192488 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845753975 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846137927 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84762956 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846428921 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850318199 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845001769 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844558889 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846014261 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844489457 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847433585 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845350616 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846961579 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.844351989 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851529345 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847110541 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848636006 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847465133 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847443283 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846575194 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848632339 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847610454 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846841487 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846770567 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847628879 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848899299 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847835383 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849642375 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.845703379 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847240355 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847424788 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847214912 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848598657 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84669345 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850680345 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848274203 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8505269 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847639876 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848882163 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847571413 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849227227 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848064563 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850164455 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846675642 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848888787 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846897336 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850399557 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848515113 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849778731 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847975173 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847685509 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848499186 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848318833 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849720429 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852202629 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84680545 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847276908 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852033708 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851629857 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849354067 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850836319 seconds)
  done (took 123.736013843 seconds)
done (took 2525.815542569 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.899142515 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.862134711 seconds)
  done (took 15.534104898 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.008050619 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.960933987 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.845912487 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.844708272 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.843843356 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.864930523 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.850246529 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.844378895 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.842403703 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.843888349 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.846120465 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.032361303 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.902929389 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.843363211 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.845780951 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.940070722 seconds)
  done (took 51.939790135 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.848695359 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.849361867 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.85948344 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.85407766 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.846281021 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.858636961 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.883854544 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.851250998 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.88401412 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.862325947 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.913723434 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.856120867 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.8445521 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.894286793 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.860762045 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.864876287 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.946662039 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.91882576 seconds)
  done (took 35.472863654 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.925455283 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.849047051 seconds)
  done (took 10.555430484 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.862839916 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.840692144 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.946006052 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.870151589 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.857050774 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.866877021 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.870292178 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.861307304 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.87813949 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.862484286 seconds)
  done (took 70.495534949 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.848406203 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.843630247 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.844311968 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.841757044 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.836771822 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.838326194 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.84165528 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.835887426 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.502547317 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.875545798 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.848787454 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.847845886 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.847030571 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.845291002 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.840361693 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.868231816 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.939115375 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.842002163 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.841427205 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.849170515 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.844476875 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.902071171 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.857083331 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.845444325 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.872198363 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.504807647 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.848788663 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.85031073 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.940212791 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.842260183 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.842775715 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.846137444 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.846611108 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.241379495 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.104031893 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.844017777 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.85715233 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.853864625 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.841763361 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.937078826 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.845454276 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.852027715 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.453014989 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.102113982 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.935674825 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.88485461 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.16161345 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.85778318 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.846523342 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.874894414 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.846497666 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.846158993 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.857521665 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.322262024 seconds)
  done (took 130.660230106 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.838122862 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.190884151 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.0110057 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.841480729 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.130511893 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.051073419 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.841396589 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.889765344 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.842807883 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.073572265 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.098300502 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.949575653 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.841436906 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.839784723 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.838943911 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.838224902 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.000505879 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.91383093 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.841816237 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.839579808 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.873582825 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.085883954 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.968640568 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.84049435 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.870464731 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.054693041 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.966900126 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.953515945 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.641727784 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.84148327 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.906404872 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.84216644 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.838522488 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.84119409 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.001494891 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.938100438 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.927639815 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.841657947 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.841625887 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.839538015 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.51476501 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.047271735 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.94047464 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.986580166 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.040396905 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.05045301 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.626407535 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.839386119 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.585159152 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.011789096 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.076630338 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.074228087 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.967364892 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.84337858 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.172446413 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.841047536 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.841059125 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.096419921 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.989560317 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.944629001 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.84539783 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.843577469 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.841365578 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.090243521 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.844179944 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.94057177 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.844074248 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.843890893 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.942096953 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.946955018 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.984170848 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.057639324 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.876190579 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.73744248 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.380458357 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.093436719 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.9114903 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.096873736 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.844928559 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.841873054 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.92532468 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.690228775 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.098376904 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.095809091 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.098786287 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.881153385 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.571470535 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.841525371 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.071503444 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.067772642 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.094834658 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.05187573 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.081685147 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.184545258 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.844147595 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.842978671 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.060178211 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.982132914 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.847190192 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.201944007 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.082850013 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.41706906 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.866641714 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.155556245 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.978345974 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.846743537 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.490591866 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.848044863 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.071832042 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.886131184 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.845486727 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.843221417 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.066364088 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.87245024 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.845326474 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.689489951 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.90942311 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.846935525 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.080882766 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.847479969 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.111266978 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.846501743 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.086098231 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.945103034 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.87884596 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.021904579 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.050934062 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.84637573 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.095612775 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.091518385 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.962385773 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.122720687 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.749233261 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.843982395 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.135860911 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.846504411 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.846006002 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.019331436 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.848399115 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.995007176 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.84794987 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.133846203 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.872892322 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.084577307 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.84958472 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.102454655 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.883196544 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.900810433 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.848069541 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.981426826 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.848995954 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.679247695 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.006648879 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.848759424 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.847321611 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.400693143 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.847620484 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.000960022 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.083204681 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.870985813 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.923054347 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.517216162 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.847946715 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.938380557 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.874578178 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.241737874 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.848721563 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.106273829 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.849553521 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.847583761 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.847689241 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.091308813 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.087364638 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.849172747 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.847589116 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.746464214 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.846916037 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.847471502 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.033925702 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.18725562 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.847164352 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.05480316 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.849494532 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.978854973 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.852607567 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.93367794 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.190010452 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.848464227 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.852050216 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.850315833 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.848762343 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.848775664 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.061391969 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.876730824 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.397466034 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.990916049 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.118976323 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.162484808 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.102588726 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.895093431 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.855607685 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.110274789 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.851518222 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.916276848 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.850672552 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.874008294 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.087571655 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.851440145 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.061683081 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.130450216 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.890343745 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.906037218 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.856919697 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.853290803 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.853061237 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.002659523 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.947943691 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.854889923 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.852533225 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.972629543 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.976568108 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.067012823 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.855519258 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.885954536 seconds)
  done (took 898.319002979 seconds)
done (took 1214.752128834 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.853939356 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.85961224 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.839741697 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.854792585 seconds)
  done (took 29.196285849 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.864514151 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.861267627 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.863334041 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.860783094 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.863794726 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.86124941 seconds)
  done (took 12.961825266 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.923477786 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.86088965 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.856186649 seconds)
  done (took 21.425983575 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.930353591 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.65720058 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.971909629 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.28178481 seconds)
  done (took 10.626591562 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.862627389 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.861293011 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.863408118 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.862947748 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.865621355 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.866014377 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.863324599 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.862258003 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.865255098 seconds)
  done (took 18.56074689 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.30452304 seconds)
done (took 98.859724949 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.235814284 seconds)
    (2/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.02183455 seconds)
    (3/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.016540913 seconds)
    (4/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.850828097 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.960485394 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.523137829 seconds)
    (7/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.872444859 seconds)
    (8/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.379102941 seconds)
    (9/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.034658272 seconds)
    (10/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.308551977 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.013630871 seconds)
    (12/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.947752206 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.90370874 seconds)
    (14/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.928337276 seconds)
    (15/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 3.030479364 seconds)
    (16/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.847796393 seconds)
    (17/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.682911204 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.895461742 seconds)
    (19/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.864000691 seconds)
    (20/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.925128731 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 3.394436165 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.955912568 seconds)
    (23/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.146961481 seconds)
    (24/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.864830115 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.94032626 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.243331211 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.982127929 seconds)
    (28/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.862405903 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.940785762 seconds)
    (30/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.314458635 seconds)
    (31/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.852918117 seconds)
    (32/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.261854488 seconds)
    (33/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.966099148 seconds)
    (34/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.043241757 seconds)
    (35/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.954636291 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.847555599 seconds)
    (37/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.799629788 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.223878069 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.999044407 seconds)
    (40/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.912476144 seconds)
    (41/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.851053779 seconds)
    (42/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 3.425034875 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.972487922 seconds)
    (44/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.162590939 seconds)
    (45/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.89689834 seconds)
    (46/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.888185598 seconds)
    (47/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.286872373 seconds)
    (48/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.163894261 seconds)
    (49/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.898855582 seconds)
    (50/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.986777963 seconds)
    (51/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.358221192 seconds)
    (52/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.868127798 seconds)
    (53/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.019982536 seconds)
    (54/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.864532273 seconds)
    (55/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 5.422857714 seconds)
    (56/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.954959625 seconds)
    (57/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.863958348 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.123103276 seconds)
    (59/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.947291106 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.987162209 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.116834591 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.109235693 seconds)
    (63/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.972480591 seconds)
    (64/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.089456615 seconds)
    (65/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.087306291 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.044960692 seconds)
    (67/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.933398079 seconds)
    (68/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.97068557 seconds)
    (69/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.003888389 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.9240938 seconds)
    (71/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.866509114 seconds)
    (72/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.265617931 seconds)
    (73/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.954613693 seconds)
    (74/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.379341595 seconds)
    (75/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.894518451 seconds)
    (76/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.139658933 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.550807512 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.867674736 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.491098823 seconds)
    (80/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.885727821 seconds)
    (81/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.919252581 seconds)
    (82/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.883098406 seconds)
    (83/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.866528453 seconds)
    (84/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.015713099 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 5.561348354 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.087992208 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.558600588 seconds)
    (88/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.947916137 seconds)
    (89/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.8916659 seconds)
    (90/309) benchmarking ("sort", Float64, false)...
    done (took 5.619021742 seconds)
    (91/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.160400669 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.549640326 seconds)
    (93/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.203900055 seconds)
    (94/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.442253722 seconds)
    (95/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.888886138 seconds)
    (96/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.436687855 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.825447287 seconds)
    (98/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.94257125 seconds)
    (99/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.970396859 seconds)
    (100/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.524920795 seconds)
    (101/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.182381405 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.955714582 seconds)
    (103/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.900122145 seconds)
    (104/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.965226459 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.084795176 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.106886048 seconds)
    (107/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.935216847 seconds)
    (108/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.139136622 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.869267099 seconds)
    (110/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.173749361 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.063081551 seconds)
    (112/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.201238042 seconds)
    (113/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.399924005 seconds)
    (114/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.288673198 seconds)
    (115/309) benchmarking ("sort", BigInt, false)...
    done (took 6.87339482 seconds)
    (116/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.892006104 seconds)
    (117/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.21559038 seconds)
    (118/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.855840415 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 3.074752305 seconds)
    (120/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.866466664 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.082333941 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.858130826 seconds)
    (123/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.884867435 seconds)
    (124/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.993677781 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 2.099500093 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.891130202 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.027833104 seconds)
    (128/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.886053312 seconds)
    (129/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.110162827 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.126295722 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.091358609 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.121540956 seconds)
    (133/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.854246199 seconds)
    (134/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.647527022 seconds)
    (135/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.061315525 seconds)
    (136/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.861733866 seconds)
    (137/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.986963545 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.869282968 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.976111407 seconds)
    (140/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.038891014 seconds)
    (141/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.947775533 seconds)
    (142/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.053156392 seconds)
    (143/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.0658657 seconds)
    (144/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.1277971 seconds)
    (145/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.308921133 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.093163021 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.897744427 seconds)
    (148/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.435566688 seconds)
    (149/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.737848712 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.701797898 seconds)
    (151/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.900357131 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.035602807 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.864696237 seconds)
    (154/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.977774341 seconds)
    (155/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.056696125 seconds)
    (156/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.869376482 seconds)
    (157/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.092380806 seconds)
    (158/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.960040623 seconds)
    (159/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.970534219 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.889274434 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.164012192 seconds)
    (162/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.030337255 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.870196126 seconds)
    (164/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.855439027 seconds)
    (165/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.171785646 seconds)
    (166/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.943093803 seconds)
    (167/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 3.39811675 seconds)
    (168/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.859995476 seconds)
    (169/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.971254755 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.195438999 seconds)
    (171/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.874681375 seconds)
    (172/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.221671633 seconds)
    (173/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.114806827 seconds)
    (174/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.7934957 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.260963496 seconds)
    (176/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.006150914 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.829135841 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.880795779 seconds)
    (179/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.33882467 seconds)
    (180/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.943096071 seconds)
    (181/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.938245326 seconds)
    (182/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.859289365 seconds)
    (183/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.872701482 seconds)
    (184/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 8.071638145 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.76495454 seconds)
    (186/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.877157907 seconds)
    (187/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.828263607 seconds)
    (188/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.983481566 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.903402738 seconds)
    (190/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.214082766 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.519415288 seconds)
    (192/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.975936606 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.982427324 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.906289364 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.2599309 seconds)
    (196/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.580018156 seconds)
    (197/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.974896828 seconds)
    (198/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.984375537 seconds)
    (199/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.921235342 seconds)
    (200/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.235379138 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.937058076 seconds)
    (202/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.215159494 seconds)
    (203/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.966860206 seconds)
    (204/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.296977349 seconds)
    (205/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.431972635 seconds)
    (206/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.059500691 seconds)
    (207/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.010619492 seconds)
    (208/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.985540295 seconds)
    (209/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.058856199 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.221693882 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.178514629 seconds)
    (212/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.390342359 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.913914638 seconds)
    (214/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.501642545 seconds)
    (215/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.90372159 seconds)
    (216/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.857783178 seconds)
    (217/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.671776953 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.690598858 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.068904105 seconds)
    (220/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.87435234 seconds)
    (221/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.969495313 seconds)
    (222/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.123799772 seconds)
    (223/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.964457852 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.174028024 seconds)
    (225/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.172215509 seconds)
    (226/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.959790915 seconds)
    (227/309) benchmarking ("sort", Float32, false)...
    done (took 5.604398113 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.975602411 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.894907592 seconds)
    (230/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.924088938 seconds)
    (231/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.984721822 seconds)
    (232/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.308544693 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.921481748 seconds)
    (234/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.120249953 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.721534294 seconds)
    (236/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.880493606 seconds)
    (237/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.353752701 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 3.18983777 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.203249916 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.879090823 seconds)
    (241/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.874889683 seconds)
    (242/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.968833183 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.165069 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.022241325 seconds)
    (245/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.359657851 seconds)
    (246/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.864460317 seconds)
    (247/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.963666693 seconds)
    (248/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.901083325 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.86264675 seconds)
    (250/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.351601913 seconds)
    (251/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.322483744 seconds)
    (252/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.126559692 seconds)
    (253/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.06188677 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.983352696 seconds)
    (255/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.98322821 seconds)
    (256/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.878646681 seconds)
    (257/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.942078576 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.943636149 seconds)
    (259/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.362093147 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.911565734 seconds)
    (261/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.879482764 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.149752118 seconds)
    (263/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.021905429 seconds)
    (264/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.98564498 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.216063959 seconds)
    (266/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.597392047 seconds)
    (267/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.079211978 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.872152253 seconds)
    (269/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.352677894 seconds)
    (270/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.88179494 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.030391419 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.905101794 seconds)
    (273/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.995954003 seconds)
    (274/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.179576429 seconds)
    (275/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.250069764 seconds)
    (276/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.047784355 seconds)
    (277/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.211119004 seconds)
    (278/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.075399047 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.991999089 seconds)
    (280/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.888519711 seconds)
    (281/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.977976696 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.960652587 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.952446404 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.014601686 seconds)
    (285/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.012239386 seconds)
    (286/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.13637711 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.644151643 seconds)
    (288/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.802656653 seconds)
    (289/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.033101324 seconds)
    (290/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.128436492 seconds)
    (291/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.962843102 seconds)
    (292/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.804650567 seconds)
    (293/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.980035641 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.912212533 seconds)
    (295/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.051045523 seconds)
    (296/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.9809138 seconds)
    (297/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.864604488 seconds)
    (298/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.142815311 seconds)
    (299/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.86357247 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.300359282 seconds)
    (301/309) benchmarking ("sort", Int8, false)...
    done (took 4.827970294 seconds)
    (302/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.898159969 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.898271032 seconds)
    (304/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.965531622 seconds)
    (305/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.212040041 seconds)
    (306/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.894556936 seconds)
    (307/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.999927067 seconds)
    (308/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.801560008 seconds)
    (309/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.040671601 seconds)
  done (took 1008.322208283 seconds)
done (took 1010.399948667 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.077233007 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.908523102 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.891936287 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.913418424 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.004799336 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.922069139 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.902546812 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.894923996 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.940337999 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.941648272 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.892357073 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.919566176 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.893896854 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.892497566 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.892732541 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.907458322 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.209672602 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.923105783 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.909979801 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.901542925 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.91058775 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.892652929 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.943113409 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.920051286 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.898355354 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.896263101 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.898882581 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.912981051 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.005400552 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.896673278 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.895621235 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.907158397 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.21249184 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.923069724 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.889316636 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.913946812 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.907109711 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.903388814 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.898421382 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.927720032 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.302857422 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.935173229 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.896518384 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.895396252 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.895598896 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.898433788 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.899215305 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.901386498 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.907451848 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.907960599 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.298501661 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.953809732 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.898163877 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.896547119 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.905320399 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.894986616 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.902482519 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.909637183 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.914524262 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.911717285 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.201911083 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.930051728 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.897935703 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.911287569 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.903647573 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.33584997 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.93140048 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.901022976 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.305120011 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.941376551 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.338785105 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.945995064 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.89782765 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.911516116 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.927015291 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.212398271 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.923524739 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.895413354 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.905518855 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.895222577 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.906041651 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.910069106 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.902800002 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.898210108 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.911367601 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.925359545 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.907610641 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.899954791 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.906215056 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.916529107 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.903192827 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.908620967 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.900445773 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.892417451 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.906359276 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.899937993 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.900630175 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.902740875 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.901558131 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.907968099 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.304109935 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.954345689 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.897702088 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.893919588 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.897872718 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.912285778 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.307061487 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.94079549 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.918375102 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.945073816 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.898824107 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.204181145 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.933378135 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.912828336 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.906914322 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.900838188 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.89345328 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.205097538 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.335568975 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.953571099 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.900469329 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.89776949 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.915036915 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.901092444 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.895996762 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.219087431 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.929498627 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.914015739 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.021642854 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.910274541 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.931660217 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.898099134 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.902749389 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.931514181 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.916617383 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.931968749 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.903293959 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.91710173 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.917264922 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.89603901 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.911060289 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.910058645 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.902484961 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.908716283 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.89412418 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.930268632 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.913413133 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.913197871 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.921924288 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.02333628 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.898522757 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.206476958 seconds)
done (took 299.23866158 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.968317933 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.891695574 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.001035886 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.89543834 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.97830212 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.983101384 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.892533318 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.894862873 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.892864234 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.268160304 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.893655608 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.894131981 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.890740896 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.893174113 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.979842895 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.897169401 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.893690189 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.23265925 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.898466037 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.968704245 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.89154403 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.893507593 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.898243731 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.269937408 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.895768314 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.891525315 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.969114825 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.896590732 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.234652806 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.894555003 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.890015214 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.234951655 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.988752174 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.925425024 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.897870664 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.904334063 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.982247221 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.911811082 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.979010006 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.97834256 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.997591373 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.928845722 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.892108107 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.892266073 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.903116193 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.900003233 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.896303718 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.926702429 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.893745039 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.895887078 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.233772818 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.909507357 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.897065512 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.897061081 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.895821263 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.931571785 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.897313552 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.900151692 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.988758495 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.901445738 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.960802885 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.271630148 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.27172036 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.90034149 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.897272616 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.896597716 seconds)
  done (took 186.130765973 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.966553505 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.972197709 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.965645722 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.90288188 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.948188232 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.968465053 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.902706477 seconds)
  done (took 15.445432529 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.906713781 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.900038732 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.952583906 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.952895099 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.901596461 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.048313119 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.900876208 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.91362482 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.897369637 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.953710824 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.901631341 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.89979489 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.908514124 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.899531352 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.95152714 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.91215106 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.019917238 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.902126255 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.901638941 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.052127146 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.899087094 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.907758375 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.955976004 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.913378443 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.90205691 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.908146863 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.486926794 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.901678644 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.898942888 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.901428128 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.898686527 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.944466103 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.902191085 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.9001648 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.898409525 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.017372211 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.901303247 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.899495322 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.902505025 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.899700751 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.901496577 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.902919114 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.902661239 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.899688407 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.902367181 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.926794832 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.901867609 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.902615259 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.902914039 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.902651938 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.949283711 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.901008138 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.897314889 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.898861201 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.955940606 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.907291187 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.901551239 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.896469113 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.899732458 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.895940062 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.050681166 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.951026233 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.901877538 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.951917744 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.899403653 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.902618785 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.899164744 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.902128183 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.998739653 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.900074367 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.952501625 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.898872822 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.060279934 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.926189777 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.902867378 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.902545843 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.902829024 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.900455194 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.900691638 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.906921838 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.897791339 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.903882818 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.907818354 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.897756298 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.899068462 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.012766911 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.006839341 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.898849151 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.913722192 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.907625168 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.898687491 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.953516864 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.901250574 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.89865423 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.958714864 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.018687722 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.95561307 seconds)
  done (took 208.931581667 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.9051026 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.90803758 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.901630182 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.919392631 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.90212105 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.902302957 seconds)
  done (took 13.258291049 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.90279994 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.905025565 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.901747597 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.902312926 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.901035827 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.902830027 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.903296641 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.902893303 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.905647795 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.901272538 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.903392009 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.903676455 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.901325459 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.904015178 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.903110277 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.903712758 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.902265269 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.900638206 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.903324609 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.902103722 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.05976647 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.903676184 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.901512357 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.904942908 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.907299203 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.904292771 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.911472263 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.903333747 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.903482328 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.912712047 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.907031804 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.904608327 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.903983575 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.910074222 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.908009711 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.903626784 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.907674313 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.904918132 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.90238137 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.905085426 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.906949356 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.902745182 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.90304591 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.906164451 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.904748436 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.909504106 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.910510057 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.91172492 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.904146843 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.905622601 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.903552356 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.903395881 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.906346464 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.905542162 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.908527419 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.91103885 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.90957486 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.905379527 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.904365385 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.906303756 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.90800218 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.906414446 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.907942568 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.910451532 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.90292424 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.906565032 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.908209107 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.910269284 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.904082295 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.906759605 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.90687194 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.902705845 seconds)
  done (took 140.159392645 seconds)
done (took 565.758419126 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.017548763 seconds)
  done (took 8.840252779 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.034732714 seconds)
  done (took 8.897518207 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.407207542 seconds)
  done (took 10.236820601 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.917114201 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.917717289 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.908195179 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.90887195 seconds)
  done (took 29.505554611 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.982816356 seconds)
  done (took 8.81162702 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.927006921 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.902375376 seconds)
  done (took 15.691630927 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.9090831 seconds)
  done (took 8.738262681 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.060617079 seconds)
  done (took 8.91325671 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.918521269 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.943840187 seconds)
  done (took 15.703354336 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.884323969 seconds)
  done (took 8.711746914 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.514466102 seconds)
  done (took 11.429058052 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.923653844 seconds)
  done (took 8.847007366 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.906399873 seconds)
  done (took 8.73087136 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.922906229 seconds)
  done (took 8.74618833 seconds)
done (took 163.627120878 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.906311138 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.899895924 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.898348416 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.898037624 seconds)
  done (took 29.425942645 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.943069671 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.944594776 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.951479627 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.950977178 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.947648279 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.957054327 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.933996601 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.930908632 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.950364105 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.945906582 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.942911566 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.944188859 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.9397492 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.933115046 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.942574025 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.942336264 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.950655776 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.941829805 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.932603035 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.943635867 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.907560082 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.952192917 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.945169509 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.907721695 seconds)
  done (took 48.408686813 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.10467966 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.977633598 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.06212409 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.960725673 seconds)
  done (took 9.931211287 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.958648299 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.959810288 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.97155156 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.011044942 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.034613647 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.970274214 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.930014449 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.927918671 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.915417827 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.96027133 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.035577398 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.960074388 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.043829755 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.908652667 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.111650483 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.909028341 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.907814495 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.959704707 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.011667646 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.033156586 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.910202019 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.960920489 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.964843373 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.954956782 seconds)
  done (took 49.13918766 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.907746782 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.916235433 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.91369884 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.906663994 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.909091478 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.908514895 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.91440508 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.910077578 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.929489726 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.90971821 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.906146249 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.907658571 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.907316187 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.908890175 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.907097801 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.919408461 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.921495104 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.909248928 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.908621901 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.912554883 seconds)
  done (took 40.061895776 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.901288589 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.755310765 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.251602918 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.154064488 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.900911466 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.90150601 seconds)
  done (took 31.691379935 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.916605957 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.908462701 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.899533849 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.958689383 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.040097044 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.908458821 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.90091827 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.912710329 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.946941951 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.963409855 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.919677754 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.929486543 seconds)
  done (took 25.028287186 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.894454143 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.895165047 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.888992279 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.908158777 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.907128959 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.903444758 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.903836741 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.889533779 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.908404885 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.914191856 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.901343439 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.908632672 seconds)
  done (took 44.646009532 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978636986 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.781088415 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.944589949 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.607104931 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.42579088 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.09543162 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.405796579 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.226543526 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.886537485 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16078862 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.822614394 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.139266235 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.157511532 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904520956 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.974214156 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.336893969 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.19934326 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.128841097 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.928083142 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.51947694 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023030473 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.492598542 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.649084735 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.024277948 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.116975846 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.034514135 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.163030584 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.862534335 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035525175 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937160072 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912845634 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.902835947 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.175184003 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.280617608 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016175553 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914642482 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.569158385 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.619562478 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.889604649 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.680407775 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.693932169 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.029923883 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91159313 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904731315 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.836881592 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.540674728 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254067884 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.907354003 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.609788228 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.903176785 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.913522772 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994749077 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.906703243 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.719441072 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856182869 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.181790569 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.901150995 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909346227 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.473750644 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.931028318 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.593691825 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.84955204 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.998929602 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.557056395 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.366029256 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.054061322 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.909494041 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.909563881 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84036389 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.616517915 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.025697735 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.052275071 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.924019113 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.556202681 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.210163114 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.932725207 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.980457891 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.19566604 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.835434628 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.848647352 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134574414 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.863420467 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.841526227 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.756311345 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.841085585 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.169168594 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944132568 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.525389886 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945355911 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.248438636 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.916509345 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928090915 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914359586 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.130761137 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.788749668 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906084745 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.645132505 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.183927612 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927417057 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.248682755 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842108229 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.909420672 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163951507 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.120000181 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.217512174 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.348752721 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070862253 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907116164 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.996189168 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.907929749 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.925162136 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.18514744 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965147847 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.943348937 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.034280434 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.868683544 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.21732726 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934745038 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.082111422 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.885869242 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.166863472 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.216754347 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.159910061 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990107171 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.909961893 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.908869334 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.630017689 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.530469164 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.132581525 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.910076894 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.472913165 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.925631414 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.909623272 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843255282 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.567632636 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.886418003 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.019857715 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.133966909 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.909772359 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.183542186 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845027008 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.066669997 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.019770667 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.130390243 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.554935719 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.980628589 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.170969397 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.491130295 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.221377996 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926302439 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927994686 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001636789 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930977335 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.418926815 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.171123957 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.913149147 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.913423616 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.569236601 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.975387375 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913318631 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.915724711 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.715891908 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187230065 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.932294208 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.917565805 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.798788882 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.924097268 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976762798 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.915551598 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.920716568 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.416310999 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.669968 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.920441743 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.56093204 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14117563 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919967931 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.537546989 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.09922626 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.996702477 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.18605223 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97064311 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.844998421 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.61626496 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.613182199 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.912060786 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.846631029 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.913441403 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919968845 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920434467 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.112363808 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.191433717 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.950638765 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.529901885 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.024993213 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.923859598 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.920092865 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.912763989 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.408588365 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.96064871 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.622492848 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.927780471 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049957405 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.926716771 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.849503032 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.915351238 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.915204219 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.912112202 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.878723362 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965876004 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.544760359 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368496081 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.173400977 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.570585116 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933713341 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.567930106 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.038357235 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.938929519 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.6587302 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.05939987 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.928515753 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00331666 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.925660154 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.548118991 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.679966932 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.483454183 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223183625 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.220951227 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353019909 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.470873284 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.140845507 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.259220218 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.148527578 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.445098087 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.978377893 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.265660577 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.859775918 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.006284461 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.559811041 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.268551471 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931594108 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.144420753 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.301435637 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.718095375 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.071230658 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.128371104 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951238278 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.913245142 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.845893939 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.119691679 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072483573 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.611440114 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.140555364 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259568076 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.662897807 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.020521231 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.915315187 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.629385798 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000194276 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.626212957 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.282018716 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.515674399 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.898744934 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415067657 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.923872293 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.362115502 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.266010767 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.312760387 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.019999476 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.850013738 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.927888125 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.926965973 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.917485576 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.895669816 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.774678404 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.171442451 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928375998 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149687336 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.273450178 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.178607626 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.819885943 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.920315695 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914902617 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211497637 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.646814336 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158950219 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.301396521 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.505775473 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.924296685 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.853206623 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849405095 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.619054984 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.912882563 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.887392328 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13831265 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.023958357 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.864105666 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.341908022 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.232450145 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.169250375 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.920673365 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.182004224 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.184566019 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.648766295 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934417529 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.006894964 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.636649912 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.625400544 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.142547634 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.155903951 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.725045457 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.148337359 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.00750158 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.881002116 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.91513228 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.139460467 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.144986743 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.911550067 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.177413455 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.656833509 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.944129811 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309610962 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981337729 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.928883462 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.138652202 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.022114862 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936998393 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007402579 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937481243 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.934667353 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.938881386 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976133558 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.931860713 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.051489576 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.932598128 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012273327 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.988727278 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.508551923 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.928708319 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.199631135 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286393249 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.253190908 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.979054159 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.91680312 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923722996 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.850115347 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050017962 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.359316962 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.185835697 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.044158882 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.049595177 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933288228 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.68814958 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.243788039 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.232729464 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.179962391 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.802632357 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.909077244 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.995927491 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.130262667 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913904415 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.116829406 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.135432369 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230317802 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.376917691 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.099466628 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.350433591 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174358748 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.270936397 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.899050758 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.488685448 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.900993377 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.712302438 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.972345796 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.950386131 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.214299343 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941739772 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.319983971 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.958132216 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.132205527 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.445608088 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.666425936 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.297068845 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.921909881 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.994192733 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.21240424 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.330992171 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245655876 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0003609 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940447498 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.629901816 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068601224 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.825487894 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.176588052 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.932168791 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141122212 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.641500625 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.939054768 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.213323714 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.237911466 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.9209634 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.853064934 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966475776 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.934605264 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.149667373 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.202014368 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.181221242 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934509413 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.926557193 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.739473203 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.214499641 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.985069989 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.860529912 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.930426029 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030531937 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.174937009 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944492248 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.444386055 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.629131599 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230259534 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.849060698 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950394846 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39129362 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38263874 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272666452 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.458230096 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.166587481 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.490649956 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.824080953 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.312934046 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.933803628 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.383792036 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.317017611 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.932384858 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.495802724 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.050332432 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.205879107 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.254336244 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.947095229 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.663843571 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.975526946 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.156870825 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.531308197 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.875496928 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.938130492 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.992987606 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.933480245 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.064202681 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943365111 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.891301522 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848607172 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.779759863 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.424502271 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.939357709 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.919857991 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.772903099 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.525319703 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.045020472 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088660653 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.939698737 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.635680804 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.22853361 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.189319952 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.485300774 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.011276395 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.935506583 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932510032 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.864082358 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.132061438 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.155648613 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.242269145 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.338367915 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.052722243 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.938146497 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.149571035 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.146126606 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.964698616 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092968044 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370737147 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.052623251 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.847199866 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.647514406 seconds)
  done (took 1708.741567465 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.971254256 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.980210248 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.935882622 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.937903586 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.958492746 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.968608032 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.008183851 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.97541289 seconds)
  done (took 57.596492097 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.929922798 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.139807162 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.938032242 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.928778982 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.946913372 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.932037059 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.151464921 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.941457358 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.985421423 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.939852616 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.928744208 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.928561961 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.318821791 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.955443381 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.928987058 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.926675612 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.937919062 seconds)
  done (took 75.644810738 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.93184891 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.113407809 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.949109075 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.949411305 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.805222932 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.945591984 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.886659722 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.94896126 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.934509712 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.102147452 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.268635687 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.988858277 seconds)
  done (took 90.681361448 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.946260628 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.936406304 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.936383419 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.936262753 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.936063119 seconds)
  done (took 11.555736632 seconds)
done (took 2224.398181531 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.187472807 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.153317068 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.161912555 seconds)
  done (took 6.172576754 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.079033305 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.128176279 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.25020965 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.223952482 seconds)
  done (took 10.54125448 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.221551594 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.314249611 seconds)
  done (took 6.391501424 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.262650725 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.952822627 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.312986349 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.931444659 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.932461891 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.930671984 seconds)
  done (took 22.656609051 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.934006911 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.936272888 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.935464939 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.937923088 seconds)
  done (took 9.602826625 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.915669748 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.654563177 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.917040288 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.930124501 seconds)
  done (took 21.273330246 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.682569921 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.333907547 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.679482689 seconds)
  done (took 9.555205144 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.393845593 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.260546629 seconds)
  done (took 9.513738653 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.177121219 seconds)
  done (took 4.037132975 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.965257805 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.208169959 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.493027849 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.503388914 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.595986163 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.17668156 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.278256137 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.172434911 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.382534101 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.415590321 seconds)
  done (took 26.052172139 seconds)
done (took 141.368597025 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.576568537 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.955388866 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.130094776 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.299874557 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.159402281 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.124514814 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.135747741 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.286121295 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.817460137 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.812798298 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.300570141 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.153563774 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.08674212 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.931145353 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.086910225 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.928894985 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.138948181 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.368623102 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.994001674 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.180241425 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.134625475 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.91508025 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.106132114 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.928110312 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.136292164 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.052930143 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.452544943 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.917338163 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.115364175 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.462478559 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.050542052 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.300841584 seconds)
  done (took 169.892377545 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.888978543 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.887189409 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.886512369 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.887232344 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.179532494 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.886257417 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.888647155 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.886664855 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.929999301 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.904764031 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.888188169 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.16764208 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.88744813 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.886709635 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.887266519 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.886965683 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.074050835 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.888728785 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.888029856 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.887485045 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.885870968 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.040801035 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.888336439 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.0456169 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.03733313 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.888521009 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.887810261 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.888214512 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.888342478 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.885561766 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.888331218 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.888534677 seconds)
  done (took 207.499384658 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.88713393 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.888920776 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.891122789 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.889545138 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.890346591 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.889037809 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.88907032 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.888216173 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.391751118 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.387295541 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.889563736 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.893079346 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.893396426 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.888807896 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.896022901 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.888609068 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.895053337 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.898776569 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.899037322 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.902913202 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.906582911 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.559636275 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.906183314 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.560920401 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.900954996 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.902226785 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.889117882 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.905950289 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.908419318 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.904335575 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.9093615 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.891232732 seconds)
  done (took 220.798305211 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.079171317 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.895628859 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.896565893 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.893223801 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.895919702 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.895493979 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.889458319 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.095776131 seconds)
  done (took 19.381436064 seconds)
done (took 619.431091093 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.357034281 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.208246045 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.078902197 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.921153069 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.184858071 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.958450899 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.916670468 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.990401836 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.659861793 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.991335977 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.566256745 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.938708013 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.655788209 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.944681043 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.038189543 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.977189266 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.463110518 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.553648517 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.100595143 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.979543235 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.09371546 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.881676848 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.004930466 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.689138708 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.680995114 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.93204676 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.101788097 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.474672618 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.927685074 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.075784371 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.674521714 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.318126576 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.933556503 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.916478673 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.976616201 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.952278833 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.279835443 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.93211637 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.044299212 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.68542746 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.991153728 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.533630978 seconds)
  done (took 104.402802601 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.886868268 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.884678975 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.88333191 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.885797767 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.885385377 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.885171013 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.884311996 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.88436439 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.885875271 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.884216973 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.884254307 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.886441008 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.884268221 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.885572311 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.885108825 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.886004393 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.886341314 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.887602945 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.884665488 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.885062394 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.886252572 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.885266549 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.901717474 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.8847924 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.88640024 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.886468587 seconds)
  done (took 50.867521624 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.899916649 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.063906228 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.141515718 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.922022664 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.900196963 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.904512164 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.919768427 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.906727754 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.90294137 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.902482866 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.011277621 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.905168755 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.918409709 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.13889406 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.918027735 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.899267956 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.898516035 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.898687984 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.068788887 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.917052484 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.919404672 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.904725072 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.918752052 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.912957204 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.901493415 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.898472787 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.903694726 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.398053802 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.907904322 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.009716627 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.959639772 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.925383499 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.342878308 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.146764957 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.967070276 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.910121394 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.899819117 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.010940699 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.905905263 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.901493119 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.917533904 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.905174145 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.136733209 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.39743595 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.916392366 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.900086949 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.407107284 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.02381678 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.942954073 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.912746073 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.141717858 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.921352322 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.903260185 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.901975708 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.938341256 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.908250397 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.900686747 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.250752805 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.914638874 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.918648858 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.908514776 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.902861205 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.075603154 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.911199999 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.064036002 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.911873171 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.908589466 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.902034349 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.140457232 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.920898185 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.397676019 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.918005073 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.900766437 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.011315104 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.069154081 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.436365045 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.915851566 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.074682729 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.360823686 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.927997333 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.909689721 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.387653537 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.932727007 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.91116511 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.903739956 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.90418042 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.902028277 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.945642235 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.918659506 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.327835803 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.405845071 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.270342216 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.932319851 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.918422478 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.903252992 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.250559138 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.912774748 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.903812733 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.133959255 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.411059253 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.919734443 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.912768619 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.389351856 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.920992423 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.92331356 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.912951066 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.144031841 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.921889715 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.947148233 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.904471258 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.910470684 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.906556941 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.922560429 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.911430604 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.906030218 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.377601652 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.033257191 seconds)
  done (took 236.276051127 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.89927218 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.923343682 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.899115512 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.926665397 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.897806328 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.903921213 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.896886395 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.898037343 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.903918074 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.897493004 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.898353371 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.900421878 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.899703736 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.937057109 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.92195236 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.905977904 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.511639332 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.900197912 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.899200607 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.9088016 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.644373003 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.906327456 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.899438215 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.904342124 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.909393205 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.902164502 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.988716323 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.911007877 seconds)
  done (took 168.624487804 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.90491155 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.023243183 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.923940254 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.934045354 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.915395186 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.903064744 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.929320175 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.921708093 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.910589968 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.902734029 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.903071667 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.967745622 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.916318681 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.004741762 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.938871518 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.937220839 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.012035605 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.913915984 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.90401482 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.903562637 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.936023266 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.900638077 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.968936188 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.034709136 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.927850613 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.025088198 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.910803404 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.907764187 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.906822079 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.025498621 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.924298246 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.968261749 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.93754781 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.92548115 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.030083266 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.025397871 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.014959921 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.936563344 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.911867999 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.904752897 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.90477718 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.893524965 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.024908383 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.928019393 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.908439424 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.014106627 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.926125025 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.909792974 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.916018868 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.90524821 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.920954798 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.926502447 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.975869445 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.042339958 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.942839905 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.933458895 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.932089816 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.187676148 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.915886552 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.007458813 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.900926278 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.025184963 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.931515863 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.895616557 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.908048883 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.913207659 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.937895908 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.940662487 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.013544918 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.917416015 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.008258996 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.943402467 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.915551727 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.908472351 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.909215703 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.026897516 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.027278896 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.943823834 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.946754464 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.940032987 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.903937397 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.908469494 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.895464938 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.926040134 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.912086238 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.027109167 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.029582907 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.916799253 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.9110696 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.910581463 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.910989945 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.935799582 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.035040951 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.9459826 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.006085344 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.979263549 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.985929311 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.926104484 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.922117938 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.913124024 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.975642382 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.926283473 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.923046224 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.236619418 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.980128358 seconds)
  done (took 206.637700598 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.378323955 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.965025201 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.967280121 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.241584699 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.344455426 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.785225162 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.958119581 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.962613413 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.983960781 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.148170246 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.027657616 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.979157555 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.94617505 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.932914162 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.961250291 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.980774745 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.976977418 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.308911477 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.07934037 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.059199362 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.941078125 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.248368828 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.281906206 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.360241248 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.99623238 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.299392271 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.640383657 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.102524379 seconds)
  done (took 62.696191297 seconds)
done (took 831.320142874 seconds)
SAVING RESULT...
DONE!
