cset: moving following pidspec: 26462
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.113161865 seconds)
loading group "string"... done (took 0.502942456 seconds)
loading group "linalg"... done (took 9.541083508 seconds)
loading group "parallel"... done (took 0.173039288 seconds)
loading group "find"... done (took 6.426554639 seconds)
loading group "tuple"... done (took 2.127203966 seconds)
loading group "dates"... done (took 1.438948972 seconds)
loading group "micro"... done (took 0.198489618 seconds)
loading group "io"... done (took 0.546693211 seconds)
loading group "scalar"... done (took 59.577616101 seconds)
loading group "sparse"... done (took 14.102089435 seconds)
loading group "broadcast"... done (took 1.362725769 seconds)
loading group "union"... done (took 11.34361298 seconds)
loading group "simd"... done (took 3.848319072 seconds)
loading group "random"... done (took 14.110836451 seconds)
loading group "problem"... done (took 2.204879614 seconds)
loading group "array"... done (took 24.5444365 seconds)
loading group "misc"... done (took 1.156162071 seconds)
loading group "sort"... done (took 3.727721661 seconds)
loading group "collection"... done (took 22.321986076 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.622893898 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.131344801 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.206076296 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.230156022 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.225317135 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.163924953 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155177357 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.236931355 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.538371905 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.195280058 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.156481082 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.421680088 seconds)
done (took 6.053352936 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.257460047 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.249430212 seconds)
    (2/2) benchmarking "String"...
    done (took 0.16587965 seconds)
  done (took 1.121105503 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.079133068 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.160325455 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.111766262 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.095815577 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095545106 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.111272356 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095793234 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.111521384 seconds)
  done (took 1.4890883 seconds)
done (took 3.653234994 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.507229138 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.873606831 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.503230317 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.145395743 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.315648913 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.293791398 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.266932158 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.200280006 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.096982771 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.093843852 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.179453715 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.400916251 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.398252543 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.953432713 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.09174061 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.112219374 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.118984029 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.765181315 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.083373064 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.124876352 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.50429431 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.194890953 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.118266647 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.108101745 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.188161342 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.142422662 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.167625668 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.104120653 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.676389797 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.135339322 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.181263408 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.101414687 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.165189439 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.186284102 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.213175267 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.095252311 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.686741074 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.204038463 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099002897 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.105340029 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.686099096 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.12191714 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.185736297 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.107187444 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.089099907 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.183314597 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.102291754 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.094544578 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095072289 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.088856059 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.166562573 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.452729298 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.108201443 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.171677306 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.094617446 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.688772141 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.100985668 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.276228069 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.127029819 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.097133277 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.094812344 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.090567497 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.160124851 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.094545189 seconds)
  done (took 20.126334109 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.151387535 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.1688163 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.08099382 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.160414645 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.127190116 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.083952976 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.104847172 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079998938 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.127554217 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180643514 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.141433131 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.154571401 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094511911 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091662051 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.148719249 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.233048015 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.113240982 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.12459142 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.092563924 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.093802332 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.142653463 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.099465289 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109864897 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093225318 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171276503 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.208562394 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11354707 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127129509 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092846097 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099398563 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144619747 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.150843568 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095561858 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091955602 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.191965574 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.108045185 seconds)
  done (took 5.321843827 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.228643661 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.105738508 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.229916612 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.200065884 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.138012966 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.184471975 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.168816822 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257179604 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.199486507 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.11666187 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.166613378 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132098015 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097307014 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09775444 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081614712 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084038259 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096448233 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.462418418 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.149351931 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.1933709 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.166391995 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114886248 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083560388 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365039464 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102491395 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.087332586 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.112835742 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064718901 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.204990413 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095243305 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.13777817 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084023048 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.123982087 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134003958 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.198736533 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.130796115 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140630933 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09727378 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.155807209 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.086982374 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.22510915 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.121996548 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080164452 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.116622286 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136108543 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114716569 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.110152202 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.126112955 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.222046707 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.089046833 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130351697 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.041304544 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199636976 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.14067961 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.087509993 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.296184682 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.129786673 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103882976 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.111619681 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.785527788 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131659723 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084579486 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081914728 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.118414266 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.082641389 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.436137796 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.128229217 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.401325238 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083085624 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.15948499 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098618219 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.120170226 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086781272 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10427697 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.112009933 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.087154762 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098803069 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.088510064 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081571965 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.111813915 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.117690382 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105194331 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083150846 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149794715 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.117826788 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.112766594 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126485769 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.094967723 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.089126514 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133507836 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08901874 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.10803111 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.146700383 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.119481549 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.085417309 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.130131562 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100317173 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145801278 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.091426878 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.236654472 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.086907534 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127078451 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103779259 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128521399 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.101942118 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082574877 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106727409 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.082871159 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.08496959 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.166251982 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.092731425 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084147112 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.108545576 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.097454282 seconds)
  done (took 28.873230453 seconds)
done (took 55.026090376 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.465284711 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082985145 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.08171465 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.100877258 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082156488 seconds)
  done (took 1.601685605 seconds)
done (took 2.363459602 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.330660229 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.198871416 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.104544898 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.189583568 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087303514 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.194436981 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.182868951 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.101249148 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.20830116 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085239629 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.186636857 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084389207 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.106016061 seconds)
  done (took 2.847452773 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.104435755 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10735374 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.119712888 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101298152 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084495633 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101240758 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119603017 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107300372 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09981326 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111584526 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083945143 seconds)
  done (took 1.90237405 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099875398 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104815207 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092970991 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115040766 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086593856 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.1018978 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115449882 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107452341 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099963743 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111717089 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084136429 seconds)
  done (took 1.881780162 seconds)
done (took 7.390748186 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.069988395 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.566138387 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.147363202 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.210390316 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.346703365 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.2370797 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.565102872 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.154096433 seconds)
  done (took 14.206710476 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.17278835 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.114209007 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.09684877 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.091527644 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.09186749 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.115437657 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.092346667 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.094766791 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.113184824 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.092679793 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.094514195 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.110956718 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.096654056 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.094564126 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.111897894 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095497979 seconds)
  done (took 2.502493917 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.147161245 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.143717809 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.099242971 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.100142911 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.112783382 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.09939071 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102825636 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.11731112 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.095267479 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095734118 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.118828374 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.09872597 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097858305 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.11100179 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.09957453 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.11737577 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.112104324 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.100734419 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116605459 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.11612747 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099616691 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097214254 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.113703967 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.100518177 seconds)
  done (took 3.462120898 seconds)
done (took 20.934902021 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.152959673 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.104970648 seconds)
  done (took 1.025366917 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.144155773 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.160618808 seconds)
  done (took 1.075387603 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.117165457 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094997537 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138579693 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.10417535 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091909725 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.108250906 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117106469 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.108394267 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.091845079 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091901839 seconds)
  done (took 1.837288146 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.099125676 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.099674908 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.126458355 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.140338842 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.118692942 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093969487 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.095922889 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.094200895 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.114124651 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091006292 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.096548068 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.125384689 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.095540594 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.127318555 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.095853819 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.2146741 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.116670003 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.094233907 seconds)
  done (took 2.814181638 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.094968541 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.093641126 seconds)
  done (took 0.964649116 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.097030225 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092925069 seconds)
    (3/7) benchmarking "month"...
    done (took 0.096372426 seconds)
    (4/7) benchmarking "year"...
    done (took 0.11059958 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.090517133 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.090852283 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.106940867 seconds)
  done (took 1.461823542 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.503208513 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.263490001 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.357673065 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.110403633 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.14991511 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.352591598 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.151267465 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.106944454 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.124970876 seconds)
  done (took 2.932961718 seconds)
done (took 12.887354148 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.094892985 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.223525098 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.606512099 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.11407181 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.089817281 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.158867867 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.291014757 seconds)
done (took 2.360914719 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.347695355 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.139347956 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.081709708 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.08986525 seconds)
  done (took 1.43505751 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.086027264 seconds)
    (2/2) benchmarking "read"...
    done (took 0.103682469 seconds)
  done (took 0.973910418 seconds)
done (took 3.19444289 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094193933 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.093440266 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.092602181 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.110146863 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.092339599 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.093147652 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.13922014 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.088404352 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.089476212 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.110398283 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.089172444 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090761812 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091182867 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110036407 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090794575 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.091195928 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.111360108 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091640854 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.09175874 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.09209335 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110349898 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090285811 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089000518 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.106030735 seconds)
  done (took 3.168038286 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.110354325 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.094475347 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.114591576 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.097117266 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.097356827 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.114885905 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.096996697 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.094602241 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.114640865 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.095281151 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09751465 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.113897578 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.094626848 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.096389959 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112094684 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.097632786 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.09723418 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111499226 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094383673 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.097571029 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.114160655 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095347005 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.096651235 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114761208 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.099257358 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097225603 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.112045189 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.095907066 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097028385 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.097696076 seconds)
  done (took 3.846502419 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.102747782 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.090746829 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.09287587 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.120578258 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.090305251 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.093089201 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.108675795 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091997526 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.095137331 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.092770064 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.113843864 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093546723 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.090122343 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.112075429 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.094823824 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.095854507 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.120323628 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.092328677 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.090235868 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.093555599 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.11429618 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.090362447 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.093069936 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.108804448 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090674241 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086092625 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.106327292 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.09041833 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.091901819 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089714996 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.109796817 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.093000694 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089970396 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.117581095 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.093792566 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089807439 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.113104807 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.088272825 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091087656 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.088360887 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.105816041 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.089761462 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.086959907 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.114561674 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.090720085 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.091263791 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.088891775 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.109127882 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.091529454 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09684494 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.10830095 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.090576499 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095381071 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.112735989 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.097421734 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.090217498 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094460643 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.109089295 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093075775 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.092997446 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.108138495 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.09116063 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099346612 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.094388318 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.124419877 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.097128331 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.103883424 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.093935792 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.090935187 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.096960458 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.109458771 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.101361583 seconds)
  done (took 7.865909356 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.106431466 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10236192 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.09515087 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.113055065 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093857556 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093657597 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.118004887 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092185226 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095317739 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119207103 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094301205 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095318695 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11264447 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095150897 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093882977 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.095286205 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118504568 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094546283 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.094414586 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110805204 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093409041 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101183168 seconds)
  done (took 3.018976211 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.246020374 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099784495 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.145535346 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.127049308 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110818208 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.121299981 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095742714 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097060548 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111798132 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101508614 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099370884 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112163612 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108895147 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117163908 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101010418 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10132661 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112598688 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102249136 seconds)
  done (took 2.907589891 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.10846857 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097440911 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.133001482 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093298811 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.093078628 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.113021269 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099676449 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111486623 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.112094488 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093880814 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.099960279 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10948826 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.093935778 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092846893 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092172022 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110602147 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.093158988 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094881139 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117428431 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098923977 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.115603867 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101066735 seconds)
  done (took 3.071132497 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111378064 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096523345 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.129978569 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.09570936 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092141277 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.110195142 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.09892659 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093610985 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.116758982 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.093285345 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093485807 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09252255 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.124678536 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093581653 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.098079976 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111897223 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.093058274 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092486244 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110718796 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092961577 seconds)
  done (took 2.836748162 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.176166072 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127037567 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110535667 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118060349 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126625005 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109389605 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.136071315 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109321494 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108996904 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137371036 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109244555 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108161809 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136793627 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114134031 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126614865 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118781336 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.134325938 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118570218 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109007958 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127610475 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122574567 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125904137 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118146149 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.1093391 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.127349557 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109124842 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109477669 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132545743 seconds)
  done (took 4.214916758 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096859393 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094986385 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.09563194 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.113404903 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.094565228 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.09454986 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.113591801 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.092707662 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090853569 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094131872 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.114004671 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.095331779 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.094846004 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.113513749 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095761151 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.095126215 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09551587 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.113612327 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094596864 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094221485 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.11387108 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096302096 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.095289199 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095351153 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114195555 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.095606017 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095164405 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.113461431 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095974044 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095121853 seconds)
  done (took 3.79478719 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.110374547 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10663378 seconds)
  done (took 1.021920632 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.103774816 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.1109415 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.095100273 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.116143732 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103251325 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.095620749 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.124478722 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102944462 seconds)
  done (took 1.657182162 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.147853219 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.168349897 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.100861704 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.108967543 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.167278487 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.156363405 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134941907 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.097031639 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.108065684 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085315636 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.156180533 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.085017165 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.093732903 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108030285 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092629512 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09830753 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.110908926 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.101659365 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.099008959 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.110588784 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097570573 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097708583 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112226012 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.102800266 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.087041615 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.113681459 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097239827 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103537845 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108384831 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094493466 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090194867 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.111054533 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.096426336 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.096756893 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.092942767 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.161923279 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09917117 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109238051 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093463815 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097779477 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.142861865 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093292732 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.093876871 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.109991401 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096087105 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.096642874 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.115776457 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094187358 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.085853508 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.106470956 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093408683 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088193648 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.110284507 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094945762 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.0937886 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118272364 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.094875547 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.090866373 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.107690944 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.08860273 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091467253 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.107531684 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096424716 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.095603035 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112725872 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094742873 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092355834 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.109653049 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094649766 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.095521767 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111513269 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108455862 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094007416 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.114267932 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.09868706 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.09306266 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108011819 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09835856 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092100574 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.111213576 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.09694525 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.121436464 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111875936 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090685252 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088352068 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.115885084 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.09501821 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.095686115 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085540578 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119899787 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.094413896 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.093296793 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.10426829 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.091289327 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089551937 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.113202326 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.086522579 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093566111 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.110859768 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.097933337 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098123135 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108916591 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095397912 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098440419 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.117009965 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092456761 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.137601673 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109821101 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088960598 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094347195 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116519078 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087378227 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.094986396 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.110772039 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090870435 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08940728 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.115448342 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.09336145 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.094177467 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.115789301 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096093395 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.095878735 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.112846477 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.093005666 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089839243 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.095957261 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.119073072 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095775465 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.093985095 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.112830412 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094364987 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.093247552 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.115216527 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.092192521 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098993407 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108631026 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093209662 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.09403126 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.11558046 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095173216 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.088296339 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.110966446 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.096052207 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.093295081 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.113676865 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.094854651 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08897869 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.104096771 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.09543218 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.089905077 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.1117961 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101602498 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.091755931 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.113966061 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090672186 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101421535 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.109558154 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.098495444 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096231441 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.097728708 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117270258 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086609824 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092191822 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.114016565 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.095835763 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089876571 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.112634774 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.093271281 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.099813815 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.105705763 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.097564198 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085242808 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.118095612 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.099414378 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.094797981 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.096043106 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.107988695 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.135068326 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104238555 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118913075 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093275349 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093218235 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.116202855 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093846137 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.097063854 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.117553764 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.098242277 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091493794 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.111247604 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099281307 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089149747 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.115224214 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093624052 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09538802 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.10476329 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.095280185 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086403739 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.11562962 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.096226956 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.098533496 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.117226619 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095912586 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092447701 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100977798 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.109165188 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.097355257 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085928651 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.116811314 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.113518847 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.099405883 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.117604359 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095283806 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092112695 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.113787414 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102739217 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095394243 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.113272384 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094405255 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087809518 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.106503352 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.099949287 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.0955441 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088598273 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.112614577 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095150811 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095116138 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.111324755 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086774546 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.097100849 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117220235 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.090343003 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095138975 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.109360496 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091789648 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100903284 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.106151954 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.091453 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095036351 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.117716739 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094642096 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094135256 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.114662984 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100223872 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.096273036 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.115791654 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092690625 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101728817 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.11054245 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095327225 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.09034555 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.095924381 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.10630543 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096907711 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.09371269 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.109365241 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.091088123 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097020526 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.118813733 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.098224024 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092836344 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.117147884 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.10017017 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.099156637 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11103616 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.099140031 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089374925 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.10558593 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.091555406 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.086122158 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.094085431 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.109223573 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.098488015 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092295831 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112041284 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.097487914 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096824493 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.111178236 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.098921871 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.123994102 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08982173 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.087030721 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091020294 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112446362 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.090492957 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.089181577 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.113710439 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096197602 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.097909463 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115794514 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.09197492 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.094120882 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.118577578 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.091074091 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.100872482 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.118235669 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.100692104 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.090369103 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.117364907 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.092066668 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098154604 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.105995566 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094734515 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093390592 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.1127092 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.092325695 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.093370745 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.108692218 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.088314505 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.091263527 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.099528295 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.112312975 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.097634933 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.09398293 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.112313984 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.091370598 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089283655 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.118620307 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.093765854 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.099838952 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.113983768 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.08830864 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08763894 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.116639256 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09576974 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.100364812 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.108348296 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.097576029 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100572726 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.097352372 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.113384331 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.104680363 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101879097 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.120808945 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100351079 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087605752 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.110712391 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098721405 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095314344 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.116325426 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.096310036 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.088198415 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116784266 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.099892107 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097205376 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.112423456 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.089367148 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.094605183 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.117860629 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.097552754 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097574304 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.095975067 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115393563 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090187988 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09800853 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.118237885 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.0954057 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101080009 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113586228 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.097654172 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.091719635 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.118727945 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.095306486 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090954108 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.106680018 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.092967033 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101076404 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.088502808 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.118106433 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.098807212 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091518628 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.113065756 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.099183608 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091503804 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118108677 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099280914 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.092897948 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.12244952 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096195087 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.093155471 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.119173343 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.100794181 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.089359564 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.11314095 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095654471 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101179535 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112377883 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100839003 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095113296 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099707125 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.11684862 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100412287 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100160315 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.119934227 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.089229699 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102001196 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.118143698 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.097813305 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.092513792 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113477807 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.091192798 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.094664689 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.119302018 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.093867365 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104345381 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.120344139 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.095137556 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092297791 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.100229789 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113817735 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10299496 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.092082692 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117533728 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.089017941 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.096914789 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.115100535 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.101976454 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.090836178 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.110244979 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100133941 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.099278923 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.118256551 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.099096051 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.101005705 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.108480777 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.089375432 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.097335678 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092066647 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.124781296 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098470559 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.112153005 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095406402 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097451894 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.096904996 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121111825 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.092167607 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.09643805 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.116785764 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097087954 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.094392335 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.110505478 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100066188 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094715065 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116925897 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.095744157 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.090879392 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.114805529 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.10245127 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.094555127 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.110775639 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.094426029 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101809008 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.114140125 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.093707272 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089976226 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.12115428 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.098549078 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101183803 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.111822 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.097824274 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.093077751 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097558401 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.12494375 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.094283979 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09579097 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.115042968 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10038552 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10006415 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.10920723 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.093829768 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10529813 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.120663532 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.09970541 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098753259 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.11460427 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103814821 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10266724 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.117644948 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.090765445 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.0911108 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.11367718 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.091141603 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098022592 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120679104 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095902918 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.093620897 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100542355 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.120574797 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097569537 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097680975 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.10973629 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10366305 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.092866657 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.118992349 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.090518029 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.089679301 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.117894447 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101785475 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095580552 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.115867842 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.099296355 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.099064892 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.09143282 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.113153812 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.100540836 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099749411 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.121486363 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097247204 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.094352895 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.118773135 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105066213 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.096992092 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.114616917 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105238603 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102330322 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117364877 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.096491382 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099489014 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.12164327 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098182201 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102556757 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.11204816 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.096392505 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102579523 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.122368456 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106717989 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095069157 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.109421442 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.101203556 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.094196921 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.090404321 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.120305848 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103034749 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.101595132 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.116851024 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.094085944 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104599052 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.121797141 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09643329 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.0933123 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.115435731 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100672976 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09423108 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.11968539 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.094248729 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.101561853 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.123301614 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101427249 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.104782772 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.110140925 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102357491 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.098274295 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.124139966 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.097927518 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.090897439 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.109958949 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099424248 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102429976 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.102212478 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.119791878 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100769639 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.099648171 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.116591444 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097333057 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.094704492 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.122286539 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101960034 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097250222 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.117560554 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.095400925 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098419832 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.116342707 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102372645 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.10232019 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.097279251 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.127532621 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.101918417 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.095634562 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.115002554 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097813133 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098961435 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.117046415 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101536378 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.094232118 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.110638508 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102129944 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.10343967 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116137658 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104253287 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103568475 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.11501743 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.100895993 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104352464 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.121293286 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100188678 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.098732137 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098798333 seconds)
  done (took 61.987760659 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.153627219 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104226493 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.118586399 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099175544 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11742027 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119640468 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099532579 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099264062 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.119601765 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108887007 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.099024034 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117458459 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115793226 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139176984 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117680296 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109545162 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119262577 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101241843 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098853644 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119796463 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115689118 seconds)
  done (took 3.250193638 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.124560681 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.114775113 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129967137 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114454723 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.125235298 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.111587332 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111770385 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.130288786 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115689031 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106927968 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.134672158 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110530016 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.127700905 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108130604 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106638935 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.127537805 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.115350069 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.125265367 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.112285754 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110405885 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.12757877 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111573246 seconds)
  done (took 3.457628931 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.137138683 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.104650579 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.097025929 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.118302483 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101944186 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098288863 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.121265464 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.100063737 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107037607 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.114697837 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.091715712 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094794268 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.099069409 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.119469133 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.094156331 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.099524114 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.126368616 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102565043 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103915594 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.118545818 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091059846 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099996829 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098997556 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.110958128 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103982265 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103125725 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.119373258 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.101733878 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.08978334 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.121096259 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.100179573 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093162315 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089687895 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.110411373 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.091236501 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102267681 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.121140868 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.1007957 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099733518 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089290255 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.119644111 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103656329 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.091127514 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.118826465 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.099328984 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093287971 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.120891848 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.099989686 seconds)
  done (took 5.893644952 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.371042191 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164015744 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102854278 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.136619393 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.135185906 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.108842767 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.125001955 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.135362419 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100958392 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123906534 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.113867703 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.134606305 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104906462 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106364176 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.125736051 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104589749 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103812049 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.120231297 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107094743 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101924156 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.12740545 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.103828496 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.111591456 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.131970548 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104190504 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101474274 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.122063783 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.105411581 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.129372438 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.10885566 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.104978741 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.126720868 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.112656629 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.102373955 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.122038351 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.103848333 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.114011498 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.124277036 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.10389983 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099824443 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.123978147 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.105792613 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103697283 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.135391306 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103859465 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.123393122 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10425446 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100092054 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.130554404 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.104755443 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.109482167 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.13327953 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.105413058 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103407633 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.124949088 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.114691204 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102007431 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.122583115 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.104464369 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.13080522 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101506098 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105632431 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.13346454 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.103401057 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.107992303 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.133188769 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.104623066 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104821303 seconds)
  done (took 9.043504554 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.140913066 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.108117428 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135298599 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115669602 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105955292 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.129091235 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106856291 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.126641859 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10689558 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11283353 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126139148 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.199584922 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.124712839 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111345168 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.106007372 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.128585765 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108086475 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128303495 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10839559 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106565807 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.126362612 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116363027 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106513626 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.135609247 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118943847 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.122428059 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107399061 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107701598 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13618663 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.106571851 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119006248 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.128873465 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106623872 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.134860628 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.119292484 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107048731 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.122158516 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107726106 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107116377 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.127262032 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104010817 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135003423 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109607078 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103454135 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.127076144 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.108455164 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116583033 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.138290665 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112214715 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131867668 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.108521591 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115398107 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126479573 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107319468 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11548091 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.144982366 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115535245 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.136580261 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108281436 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.134938312 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.117407795 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.121188749 seconds)
  done (took 8.307641968 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106212397 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100995774 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100167904 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.119287455 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100064483 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099993945 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.120056071 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102208481 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100290899 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099932569 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120280097 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100288504 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09984566 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118950435 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.101430435 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099953599 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099649176 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.120225448 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100705596 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099956052 seconds)
  done (took 2.984021559 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.116424222 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.117576671 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.121640016 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109347701 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.102503808 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.127809792 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103173859 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102893933 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123481417 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103703371 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110578629 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.130805227 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103500696 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107593437 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.131051311 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10858768 seconds)
  done (took 2.694877789 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.126626997 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118940784 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.187073385 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103984042 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.12445054 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108986648 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102292157 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.125051599 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101452859 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.108251805 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.125863616 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106325555 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10308115 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102670812 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.1238318 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105888496 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101577738 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.126618549 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103278431 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.188011357 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106653773 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103949664 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.125401972 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.10636755 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104261435 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.129031767 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108283131 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101762413 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.124813822 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103773779 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.106063264 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.130265491 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103125772 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107175931 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.124208285 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.104902697 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10345152 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.121914062 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.10687954 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103585579 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103983846 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.125054254 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102410843 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103815099 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.121875552 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103852466 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100049867 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.129292003 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104472236 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105382319 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.122795889 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.110042781 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106557286 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.131563796 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.110713459 seconds)
  done (took 7.179211199 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.118186141 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104655577 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.134023771 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101991543 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103009546 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102920759 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.124777629 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104157618 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10339461 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.122634073 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104794514 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10469532 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.12430733 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104101093 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104200368 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.125312687 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.100587372 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10473854 seconds)
  done (took 2.873262599 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.114407003 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101957843 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105717926 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.124379583 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102969147 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102242993 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122363386 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.102706426 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1028097 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.121546553 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103010971 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103036731 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101854882 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.123141459 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103639415 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103387023 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.123085978 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102296699 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102001679 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.122022806 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104037952 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102648231 seconds)
  done (took 3.278629188 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.121178428 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.185705709 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.108909656 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.194671252 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099662627 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.09799978 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.130750357 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.100145898 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.115105622 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.120617906 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.098781687 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.098403062 seconds)
  done (took 2.355476306 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136813862 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14011431 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125051546 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104706389 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112483956 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128920054 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107551927 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106956746 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137440886 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118937549 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127711251 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1166872 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114707958 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137163909 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111740187 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132974098 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108623036 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107049315 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124694017 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12524583 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107153733 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136443071 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107167225 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127526773 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107473586 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115508611 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135511595 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120193426 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127764978 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116357045 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112338371 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128767979 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116413425 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141679907 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105072633 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115734516 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127778348 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124143098 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131793623 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118327291 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104520979 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131856787 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116144507 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112344044 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137133483 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107333208 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133484671 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108942117 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10816847 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151827523 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112860463 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137795706 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112724742 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115980659 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136938113 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130045192 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141594779 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116903972 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134426175 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120843738 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136231798 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113286628 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115595362 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140409188 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112852262 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136370183 seconds)
  done (took 8.963795821 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151370538 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104602125 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129254397 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120308746 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137512046 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109182172 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108103524 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128559982 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108992923 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105180943 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.174475551 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108711089 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138136887 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11664792 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108955579 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130789751 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109019695 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115517859 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127102377 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130033578 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129571336 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118596392 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137883909 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117871776 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119652666 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133887364 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109002922 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129584946 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11177635 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108933893 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135557293 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109253725 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117478274 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.126102127 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117485058 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108099855 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12959951 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114775185 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129196434 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113383193 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116027026 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14574782 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10990156 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129674386 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122107479 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10847148 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13058214 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105768035 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108806902 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127137409 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121566971 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140816353 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121785251 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116688609 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13122149 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109713535 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128328347 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109979614 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109284611 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134035746 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117685997 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107918556 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151821753 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109143046 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130974706 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118091987 seconds)
  done (took 8.931920592 seconds)
done (took 169.393479774 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.156842499 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.18861386 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.16909429 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.158685194 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093993804 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.149721791 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.128253164 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.146714192 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.118500461 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.095654607 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094712114 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.118753331 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.163636622 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093837954 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.115975944 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.097021563 seconds)
  done (took 2.973858224 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.198893926 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.307134804 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109963104 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.12097609 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101557585 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099924415 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.122187011 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101635151 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.100099232 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.128803581 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099377571 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095303001 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.128153616 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096670303 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.100091338 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.121657937 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108112999 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099891682 seconds)
  done (took 3.137206271 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.125775776 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.143463165 seconds)
  done (took 1.167825208 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.13498548 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.214496904 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.282477323 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.169806278 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120664718 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.141649697 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.147576363 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13597348 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.188675246 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134086262 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.113035268 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.120565592 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.125277361 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.104966042 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.138874882 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098145322 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126847561 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.136239334 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113121453 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101526246 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.145845967 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103366468 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.125770502 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114791974 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.178197224 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.13547078 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103895747 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.124834211 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.102330977 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113265569 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.129277517 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.118176279 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.134473493 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.158662003 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.125911472 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.154808411 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.131180151 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.10044772 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.134232397 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.101440911 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.104517707 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.125273724 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.114278513 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.09814284 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.126125298 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.107920741 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.103447765 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.125687165 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.109429146 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.129222378 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.108786461 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.105914654 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.176408573 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.107440847 seconds)
  done (took 7.924335984 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.868626843 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.140486412 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099723951 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.017249141 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.151610005 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114890913 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.888625972 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.12443593 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256404412 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.892551922 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114054572 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.136480135 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.241905277 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.282947291 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.265094229 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.362202489 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.732061771 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.136064613 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.132033086 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.165773861 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111279018 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125379121 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.14500466 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.515722921 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101823875 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099853126 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.132431198 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.114453637 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.179554378 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101875411 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.104166291 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.198672071 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.293243104 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.213440072 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12227795 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.101926505 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099930142 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.187119843 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.27431925 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220130705 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.198401026 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09794554 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099224517 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.132543596 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122250829 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09824838 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180891696 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.193168584 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.193321821 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105260897 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.135830994 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113114675 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.130666358 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.157718901 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121899441 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.364193662 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.366211769 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100053295 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133548953 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11664721 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269775242 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125874937 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.239958151 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129363925 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217460941 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.124240084 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.833517025 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.1629921 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.124833497 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107910479 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.131270508 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108994715 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.108979236 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.192677271 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.498515116 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.114362179 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104577344 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123919449 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.237723958 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102246987 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100886627 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182955924 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101544615 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133185846 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115939228 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135630777 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.191396208 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.25042202 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.13644759 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111647388 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.128743722 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115918423 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.102263686 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.235197672 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.232516439 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.177320033 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.231885608 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110475863 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.18512635 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.187359449 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108518515 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.192966215 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109786666 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.139710932 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109821947 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226607391 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.159138805 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.106100095 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.130118502 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.111596178 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.160590058 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106581079 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.111007726 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.188287584 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.555391633 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.186329394 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.099153853 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106207252 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134403833 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.15948153 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13138019 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265361847 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111200286 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.188231807 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108425305 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.120626395 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110100365 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.183447082 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111720805 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13359173 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109599823 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133362542 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.259506879 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.224231943 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.137984668 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.258800993 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.202223689 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.110771725 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.193429509 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110987248 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.19044161 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114309768 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133043049 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103235684 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.822979223 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137862735 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.10957897 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106871286 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.208028333 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101478552 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127072254 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103248695 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098992441 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.812962202 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127447152 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.101129097 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10389121 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.108241318 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.133601293 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110454996 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.13001222 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.158550376 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.271498909 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114904086 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.132281656 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102003166 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.18053143 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.103305932 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102457145 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124114277 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102891233 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111374058 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.129915705 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105237402 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.193693219 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.156195104 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.258442038 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.656684824 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102006804 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102063493 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.268698367 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103069185 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.326984562 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132199026 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.240751731 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163857422 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.123699925 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.366272805 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.189915914 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.186643679 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128707392 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.169417508 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.121840429 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.111328382 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.181682815 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102154326 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131664064 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.155436197 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.140234074 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.114209222 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.279713279 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.126116311 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25874408 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.099995564 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.189555294 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103365882 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110089939 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.353047825 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103350383 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.119500212 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.183003194 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128607022 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.104912238 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.625692982 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104151629 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112836309 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.132908663 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.239050104 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.188340396 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111460393 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135877632 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116887209 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.182912497 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.233886917 seconds)
  done (took 48.266663959 seconds)
done (took 64.365263036 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.272703158 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.177039089 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.283762056 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.177768652 seconds)
  done (took 1.908116346 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.247028409 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.157494361 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.228974053 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.098969242 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.230810891 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.09791446 seconds)
  done (took 1.98609922 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.18236941 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.169196261 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.145523729 seconds)
  done (took 1.423617995 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.205800766 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.216402642 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.32518444 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.258437053 seconds)
  done (took 2.02164841 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.268574818 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116912096 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124605262 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.206680657 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.222934815 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.204997312 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.124214945 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.173622423 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.130122022 seconds)
  done (took 2.536296996 seconds)
done (took 10.798329586 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.334286349 seconds)
    (2/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.372577734 seconds)
    (3/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.369963667 seconds)
    (4/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.29940423 seconds)
    (5/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.207857836 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.2237692 seconds)
    (7/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.100681121 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.157362699 seconds)
    (9/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.132870947 seconds)
    (10/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.192299396 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.113291712 seconds)
    (12/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.274768009 seconds)
    (13/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.22621042 seconds)
    (14/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.270731105 seconds)
    (15/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.262285775 seconds)
    (16/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.323591446 seconds)
    (17/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.161822823 seconds)
    (18/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.121860862 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.210299228 seconds)
    (20/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.32829692 seconds)
    (21/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.251229994 seconds)
    (22/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.261451132 seconds)
    (23/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.151054082 seconds)
    (24/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.171272874 seconds)
    (25/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.115933156 seconds)
    (26/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.14076301 seconds)
    (27/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.128405345 seconds)
    (28/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.188969386 seconds)
    (29/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.169052334 seconds)
    (30/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.102110661 seconds)
    (31/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.207816687 seconds)
    (32/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.168717054 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.144288454 seconds)
    (34/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.182808024 seconds)
    (35/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.182485873 seconds)
    (36/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.24033199 seconds)
    (37/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.165010062 seconds)
    (38/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.11212728 seconds)
    (39/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.097603516 seconds)
    (40/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.152562412 seconds)
    (41/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.183514217 seconds)
    (42/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.082693198 seconds)
    (43/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.195160858 seconds)
    (44/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112619572 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.110807321 seconds)
    (46/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.14591314 seconds)
    (47/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.106518228 seconds)
    (48/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.08670017 seconds)
    (49/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.258843413 seconds)
    (50/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.109245856 seconds)
    (51/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.109904472 seconds)
    (52/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.17535849 seconds)
    (53/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.151733091 seconds)
    (54/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.215136387 seconds)
    (55/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.076633956 seconds)
    (56/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.168168198 seconds)
    (57/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.134192115 seconds)
    (58/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.141795247 seconds)
    (59/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.232142798 seconds)
    (60/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.108421809 seconds)
    (61/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.158902634 seconds)
    (62/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.089663454 seconds)
    (63/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.131316011 seconds)
    (64/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.100312453 seconds)
    (65/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.165369651 seconds)
    (66/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.107809863 seconds)
    (67/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.134243909 seconds)
    (68/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.181394922 seconds)
    (69/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.135549034 seconds)
    (70/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.100891975 seconds)
    (71/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.124332219 seconds)
    (72/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.103919181 seconds)
    (73/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.08688736 seconds)
    (74/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.076959653 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.116497356 seconds)
    (76/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.147812525 seconds)
    (77/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.076983594 seconds)
    (78/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.079985751 seconds)
    (79/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.076472404 seconds)
    (80/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.130054431 seconds)
    (81/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.121051766 seconds)
    (82/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.077648029 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.124494556 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.104060594 seconds)
    (85/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.128593226 seconds)
    (86/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.084159121 seconds)
    (87/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.150496572 seconds)
    (88/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.103043219 seconds)
    (89/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.077120531 seconds)
    (90/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.143830314 seconds)
    (91/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.165586446 seconds)
    (92/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.078636765 seconds)
    (93/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.152955646 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.106537251 seconds)
    (95/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.12276892 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.125135275 seconds)
    (97/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.084541086 seconds)
    (98/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.103705153 seconds)
    (99/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.079289188 seconds)
    (100/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.133304309 seconds)
    (101/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.080737885 seconds)
    (102/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.100409659 seconds)
    (103/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.109636612 seconds)
    (104/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.100440051 seconds)
    (105/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.101313282 seconds)
    (106/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.07778514 seconds)
    (107/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.111745132 seconds)
    (108/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.157336713 seconds)
    (109/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.127654159 seconds)
    (110/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.128864045 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.126186708 seconds)
    (112/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.104148868 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.103674892 seconds)
    (114/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.104210539 seconds)
    (115/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.140107881 seconds)
    (116/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.080006089 seconds)
    (117/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.137639315 seconds)
    (118/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.133972148 seconds)
    (119/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.080775032 seconds)
    (120/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.080708539 seconds)
    (121/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.082190522 seconds)
    (122/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.136759901 seconds)
    (123/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.088801686 seconds)
    (124/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.084334285 seconds)
    (125/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.078411642 seconds)
    (126/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.126632109 seconds)
    (127/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.111370262 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.103400313 seconds)
    (129/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.083257161 seconds)
    (130/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.149379429 seconds)
    (131/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.083968835 seconds)
    (132/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.07810582 seconds)
    (133/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.102108601 seconds)
    (134/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.211340026 seconds)
    (135/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.10965618 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.144271159 seconds)
    (137/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.138633852 seconds)
    (138/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.138267773 seconds)
    (139/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.082347836 seconds)
    (140/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.110424997 seconds)
    (141/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.188827396 seconds)
    (142/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.079289383 seconds)
    (143/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.10754039 seconds)
    (144/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.123173978 seconds)
    (145/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.122774667 seconds)
    (146/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.084385998 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.128173404 seconds)
    (148/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.111516664 seconds)
    (149/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.080657192 seconds)
    (150/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.106435734 seconds)
    (151/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.111020802 seconds)
    (152/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.086019339 seconds)
    (153/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.084924386 seconds)
    (154/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.080526003 seconds)
    (155/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.133046894 seconds)
    (156/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.080866309 seconds)
    (157/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.080997966 seconds)
    (158/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.108519449 seconds)
    (159/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.10171705 seconds)
    (160/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.109240811 seconds)
    (161/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.083470394 seconds)
    (162/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.084876171 seconds)
    (163/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.077643348 seconds)
    (164/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.106670019 seconds)
    (165/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.077449505 seconds)
    (166/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.103531001 seconds)
    (167/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.105418326 seconds)
    (168/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.125343613 seconds)
    (169/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.106641956 seconds)
    (170/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.111408073 seconds)
    (171/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.103149822 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.104319122 seconds)
    (173/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.108035066 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.125920299 seconds)
    (175/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.084275488 seconds)
    (176/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.124356739 seconds)
    (177/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.100510444 seconds)
    (178/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.107771628 seconds)
    (179/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.084890695 seconds)
    (180/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.07705524 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.104173216 seconds)
    (182/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.101149811 seconds)
    (183/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.078451859 seconds)
    (184/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.100681771 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.121152111 seconds)
    (186/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.100120323 seconds)
    (187/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.10210392 seconds)
    (188/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.078658999 seconds)
    (189/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.084271827 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.127239832 seconds)
    (191/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.084893285 seconds)
    (192/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.076683811 seconds)
  done (took 26.363354266 seconds)
done (took 27.294048569 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.211369622 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.127043615 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.109499694 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.109235125 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.201225096 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.116975013 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.149665811 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.112201804 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119552052 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.132887767 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.102065906 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123070199 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.133520319 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.180357556 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.137192968 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.105098182 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102076122 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.120044699 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.1514895 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.128256391 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.201418609 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104372694 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.119124183 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.128272665 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.177344208 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129017402 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.110299217 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.11114571 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.148292642 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.111845227 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.110111923 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.127115471 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.127209551 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.12511452 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.12595287 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.11226131 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101324525 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.08550831 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.136523476 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112853724 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.12283296 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.137247368 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111803042 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.102383122 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.136705998 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.112084325 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10141008 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.139033799 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101532688 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.110886243 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129508614 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.127200032 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110027099 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.124941695 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.10232685 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102558857 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.146174235 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103808353 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124889644 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.126165769 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.104585574 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102293558 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.1366915 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103650248 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.111525293 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101354159 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.138817035 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.114274489 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110327266 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130267451 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103570651 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111052696 seconds)
done (took 9.880838364 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.114976212 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146650563 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.199795633 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.211471178 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.132214116 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.142070147 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.116637693 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.125976622 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.139326984 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.121311585 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.139881022 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.157853685 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.183136103 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.144299044 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.118088168 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.138950744 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114762814 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111266082 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.207553494 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.127330488 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.152869256 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.119646299 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.129896318 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.144867565 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106911817 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.152338036 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112021803 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.11447358 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.129062166 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.12625566 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.12721493 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.130202508 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.110965727 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125202001 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.148346911 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.117147971 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.117369609 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.139020694 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.107488855 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.106719042 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.14054109 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.121936321 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.130434861 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.119778107 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115284026 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.145093309 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.115253867 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119915146 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.130931952 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115201955 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.107818153 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156171459 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.12038143 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123099782 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.14488167 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.119850769 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119030967 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.143103709 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111410466 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.118180604 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.132450579 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.107749606 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.108229539 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.152463223 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.111938258 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119550472 seconds)
  done (took 9.617560057 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.132604459 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136017011 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.142173321 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117040501 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.11294604 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.12571518 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101241721 seconds)
  done (took 1.841106283 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.109282386 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.185068501 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.209450635 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.209564063 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.20536816 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.19610841 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.15103444 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.10383919 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.136396304 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.138309314 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.185436794 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.239810977 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.111524575 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.144028598 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.211994091 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.102635254 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.215222733 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.103280006 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116256357 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.210834269 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119289947 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.159709649 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.115713261 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.102441922 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.204792084 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102884707 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.256091576 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.146312411 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112861707 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116373712 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.141799922 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.181563589 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.206045181 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.11717037 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.135731988 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.185101285 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.205813235 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116359108 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.223037906 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.107420605 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.206100854 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.116442888 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.144180708 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.117967869 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116732361 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.194101212 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.12146305 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.144503275 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116915732 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.213361716 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.114107804 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.209067975 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.115409063 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116443894 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.137915791 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11865152 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123919666 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.14348231 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.191043095 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.145428126 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.184604668 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.209864273 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.207753777 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.209394199 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127715303 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.209304027 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.178420087 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.140938223 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112859469 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117365766 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.212033654 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.115847633 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.141043197 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.173993469 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.145286843 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.18637988 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.210390772 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11464625 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.143168349 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.107636349 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115288387 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.127406412 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.176881424 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.141986899 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11642896 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123530363 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.160626479 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.118669709 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.107315126 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.152740667 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.117229558 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.114340361 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.147216978 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.116883711 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.143177965 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.189731678 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.139953674 seconds)
  done (took 15.781783026 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.110496457 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.104615162 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108175064 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129772552 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.10541422 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.103900641 seconds)
  done (took 1.646927991 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.147528845 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117251434 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.15031188 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119691989 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.185409374 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.190227551 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.217428998 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111775603 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.159983221 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127221594 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.215560032 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.192474824 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.216549769 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121060754 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.219714856 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.144434407 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.19706031 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.140380277 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127831972 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114978968 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.141363864 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122571491 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114584154 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.206791062 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118815889 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.145441415 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.11191814 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.124947794 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.150672226 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.113967817 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.120325425 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.161774708 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.11153693 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.136794018 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.196313521 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.136621778 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11440874 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119261728 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.146002192 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120013595 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.220359069 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115839545 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.123354839 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.145840758 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.113332267 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.110104037 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.146210677 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111231333 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.221028962 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120733913 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.145988888 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.120281764 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119490156 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.147608796 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.112274032 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112276334 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.145868808 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.196671755 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.147687554 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.111833615 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117407248 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.14394748 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.112234387 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.146414567 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.120057311 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120587291 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.134749945 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.119984091 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115642515 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.143135462 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.122243663 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118196507 seconds)
  done (took 11.226184992 seconds)
done (took 41.080722738 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.643745956 seconds)
  done (took 2.626097721 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.892509812 seconds)
  done (took 1.875989892 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.907075018 seconds)
  done (took 18.923776268 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.430877519 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.466135049 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.153894379 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.149478703 seconds)
  done (took 3.184899217 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.8227719 seconds)
  done (took 1.830292661 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.32681774 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.234292797 seconds)
  done (took 1.554100269 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.719318988 seconds)
  done (took 1.720420241 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.514665159 seconds)
  done (took 2.508025687 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.290316863 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.239663016 seconds)
  done (took 1.53667554 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.617024641 seconds)
  done (took 1.619784147 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.366015868 seconds)
  done (took 20.372462813 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.260157608 seconds)
  done (took 1.268877614 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.295421156 seconds)
  done (took 1.304831972 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.454380102 seconds)
  done (took 4.462915871 seconds)
done (took 65.78541284 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.119539103 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.117862957 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.140215797 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.1150822 seconds)
  done (took 1.489611568 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.129729277 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118867049 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.144755422 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.118284422 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123519892 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.140960478 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.117706034 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.120998907 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116442594 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.14391568 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118844931 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.1156616 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.144761668 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.116589242 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.114051842 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.145067562 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122051796 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117231182 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.142315992 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.118743295 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117923227 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.144859989 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121499246 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119701415 seconds)
  done (took 4.043889875 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.119539696 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.109530025 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110604771 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.132047882 seconds)
  done (took 1.483865418 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.131317809 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130086976 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.153512532 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125884278 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129125258 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.15188392 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117086165 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114177211 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.142124061 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126481894 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.132408918 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.154327843 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128952554 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.142199758 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.128452465 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.111389755 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.141513087 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.129346804 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124136393 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.149108835 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118746973 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123379185 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.146124043 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.127529157 seconds)
  done (took 4.186316895 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.196834818 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.129697863 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.172247211 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161571004 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.175555096 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.115154341 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.144261939 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.148987894 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.124026376 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.143784343 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.121103788 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.16348363 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.147525035 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.119327949 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117191597 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.147696289 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.129898944 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.147795623 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.164035149 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.121718667 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.148478893 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.130135939 seconds)
  done (took 4.183710334 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.12788827 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.111400768 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.128465264 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.110041249 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.121491481 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.136999421 seconds)
  done (took 1.757155538 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.113874173 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.102984815 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.10350395 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.127280509 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.107116621 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103015538 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.125577129 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.103812587 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.10374031 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102000774 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.12672982 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.104881237 seconds)
  done (took 2.335827345 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.33563801 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.108886996 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.134295644 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.11030223 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.114014072 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.105775582 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.145793491 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.107917359 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.268710145 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.103663206 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.132558852 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.196425557 seconds)
  done (took 2.88218829 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205327742 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144031485 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252217327 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.379090204 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18371487 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185594419 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.275495548 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18645863 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.201879957 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136270571 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209075887 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160317558 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178002763 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184339442 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164135662 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.157526701 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189520368 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204608499 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166563479 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235110096 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154593873 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198804999 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185524488 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174214305 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137786314 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18658816 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118200345 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153420447 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164244164 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188326853 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196084339 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150848777 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140173189 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213476025 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25232302 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19809258 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270410899 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13190382 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.194346068 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.187951679 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252984927 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166355354 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213971444 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151603414 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127754391 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208290688 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176216715 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.183804785 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.156984398 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143433614 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20616193 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177372074 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.199247646 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135218493 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317236596 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157730145 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.141135846 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204348712 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185404152 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224372834 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202179853 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122261124 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201503516 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214510188 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211009263 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.167024976 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.161233122 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151864812 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163403513 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.230504016 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207083058 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15928357 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.232144593 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156259887 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169988995 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197538997 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151109956 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231878666 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196480675 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.12035358 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175234151 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134526426 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124570562 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.211487879 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120839081 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241139705 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129835192 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.343727786 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210078947 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154017213 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185984243 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183606482 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161141253 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171845042 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.101096244 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141994125 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.187224941 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153553323 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154272533 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155047379 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166071437 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.125051467 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149632633 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.147487652 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166398366 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.15881063 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160270234 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194116592 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.130786438 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20333353 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146303548 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.186809136 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191468926 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191263718 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156775073 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133502148 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24450065 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166948267 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.16108115 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174289229 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.222644471 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.174135034 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133770285 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187985902 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192533267 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168815663 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197664879 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165488975 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133616338 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.162928665 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169225934 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185281105 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.152662202 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152799454 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.163485059 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215077213 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125513923 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165450841 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178531078 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158365406 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12466596 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160736662 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13507048 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140683303 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.174169139 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.137240968 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178094032 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164449952 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189912089 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154841598 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16078501 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171223931 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155917221 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.166025516 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172582369 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.118871171 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.198493983 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194661781 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155884484 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177426571 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.188544887 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209892567 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170242269 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154192105 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181754903 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153765528 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119578899 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187460318 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171136106 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188536183 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.212717941 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181901413 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.191160542 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.187429717 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149068587 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193397926 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.183678712 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181811648 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.142262106 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19931554 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167811432 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.148281694 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121942033 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.126723438 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16249565 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129174918 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165163028 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175000382 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192021089 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204086849 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166267672 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164009304 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189985327 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.150600542 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158220323 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.200448394 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138747146 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.214509209 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213662908 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176281304 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166071181 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161255638 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.14601947 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126218436 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.132438235 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188226681 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136537061 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161182703 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140809781 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.215826022 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16845627 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17583627 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218528344 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163425868 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.226009311 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119439632 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.185912924 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167303551 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193033178 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.184187933 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156953738 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.159340102 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.2188593 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141074751 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21782227 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19304112 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177666997 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221568268 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.188009026 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131343946 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146148598 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188131186 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137185441 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188918588 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145133884 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156694635 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152175019 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.163203894 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140543762 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211525696 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142970997 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204400132 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.156623554 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197483687 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124942463 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166730824 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173415288 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171509897 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104205035 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194227972 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191538671 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176288508 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154196767 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200822633 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128316712 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.340651873 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212181434 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176132178 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1629967 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137636494 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196154681 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159815343 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187922046 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183392095 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167146672 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232869419 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167665069 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.168206125 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131724224 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147167994 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178335575 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.136834956 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.178591275 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.160399008 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.169024786 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212721848 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136104367 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194593338 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1750677 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.170890144 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.149691903 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137809162 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249798341 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195014301 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169982909 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.190606569 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.190757541 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183345427 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122054983 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153746961 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133230182 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211857785 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129151639 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203379492 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.203964759 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184815505 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198830967 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187549531 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141406811 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.125685502 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193455226 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14672011 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214507645 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160584127 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.137320104 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214346965 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.127094848 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13031302 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18751654 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305373662 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14735511 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198316202 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.105825172 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.301575625 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130335071 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130354485 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189157425 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193945411 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.132189905 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.181698231 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200541041 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140690235 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189922841 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134565179 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209509647 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212101645 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166242907 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201123003 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.145894308 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190378156 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185047931 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17366487 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172018079 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.146562413 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156383954 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219628804 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.205729268 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.131366466 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196837116 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166805388 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197711383 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172628045 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166569603 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181865768 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154350434 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164419146 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165117694 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124678589 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186659483 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.177255371 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156140296 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173793784 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197140012 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129810505 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155330143 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146539836 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192201258 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139251333 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.155551811 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183680678 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.155651088 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179885265 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234529733 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129072592 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19310468 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145914256 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157396742 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138516558 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141986636 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158824409 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.173425436 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207544453 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.132037974 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204556831 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163951697 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189988078 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154433414 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17100732 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.333010176 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.15516989 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189392115 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177508046 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223643085 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150611829 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201787337 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168925332 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17532496 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163146364 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17252243 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.21724039 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190920146 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.165948222 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158236742 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142620362 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137511599 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.161894563 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151148614 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196258095 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139354502 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.162192813 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.165400926 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173651874 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.146316261 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139707197 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226867654 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179717225 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184723909 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215028809 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136909114 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201800332 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203455239 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129100788 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.19194946 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169896163 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171838386 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151118241 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.132508058 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.164032232 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239334186 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125866432 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157257459 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200806694 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19530647 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170667836 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.159256227 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17763252 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165614336 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174694455 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125776833 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.180446078 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169236712 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162006448 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126870047 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198063783 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157543829 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.192672497 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14061628 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.200300545 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193726113 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.150432912 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133998886 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305582457 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159793781 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222759167 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.134079026 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164718131 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144584774 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183645367 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.163549721 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197344998 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.13111412 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128417869 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.173456919 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.157403992 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.166826305 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168303101 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213119283 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158133771 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211058122 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.1314214 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278222697 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139706675 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198708466 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115924247 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.156346805 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140271335 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133566721 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169407344 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20956636 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211772497 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.190308545 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.146823893 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16267841 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.1272416 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129679378 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193794909 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150119241 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193504226 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146839605 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.13134119 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14077975 seconds)
  done (took 85.729484292 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.168154115 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.15119274 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.166952547 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221401127 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193911023 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.287953517 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.227056506 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.244893778 seconds)
  done (took 2.75856213 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.125418911 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.160868533 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.142197961 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.143347754 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.110574856 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.442582753 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.15727888 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.120927152 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.161714265 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.154149231 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.135552901 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.552100056 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.122684413 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.14345083 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.122280716 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.133961165 seconds)
  done (took 4.020836633 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.026843851 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.533618169 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.767443588 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.28934645 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.258308929 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.201833135 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.727089608 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.19582915 seconds)
  done (took 12.096569779 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.155013466 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.14357251 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.37026943 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.269311982 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.203614872 seconds)
  done (took 2.244488536 seconds)
done (took 130.213180593 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.128473675 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.121523542 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121230251 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.151737153 seconds)
  done (took 1.614785336 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.179563878 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.090088269 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.091537469 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.115679764 seconds)
  done (took 1.577530989 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.509205509 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.090726153 seconds)
  done (took 1.729229559 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.157091986 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.139209399 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.163385427 seconds)
  done (took 1.576838699 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.147163124 seconds)
  done (took 1.25522962 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.130335133 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.125520445 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.22647715 seconds)
  done (took 1.59396687 seconds)
done (took 10.456619157 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.124832789 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.92970246 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.431453667 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13195904 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.708746907 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.426145839 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.418990466 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.175572357 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174272585 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.13694807 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130445406 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.688823786 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.43243479 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.880065339 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.391582091 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.90455031 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.69397517 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.109995844 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.143795631 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11106748 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.425688573 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109267755 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111096507 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110171625 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.719021043 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.418879629 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108155292 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.910314041 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108758309 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.139308125 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.400094765 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109686822 seconds)
  done (took 20.914060153 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123164067 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.166217186 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144962217 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112320729 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112510872 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.137707277 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122997508 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121862229 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200998672 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108582122 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.158928101 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.108947781 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.114669216 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.137542325 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.134163605 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108078219 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.140201944 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112997533 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117184716 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.139196996 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.132032044 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108464335 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.139234319 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112473185 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.10934972 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.159179968 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109564938 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121793388 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.138809934 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113834843 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113669892 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.137538733 seconds)
  done (took 5.239004705 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.164226585 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175509932 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146146718 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146923514 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.185229446 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.111780802 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.223421983 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.149202481 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202998081 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113388513 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130771208 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.136933501 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.150057007 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.111282909 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.163455569 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.10953718 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.137671525 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.1127343 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119075772 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.13840905 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.133087579 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109017811 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.138334002 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113024151 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110476313 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.159985535 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110554816 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121832587 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.137074302 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114955991 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116038241 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.137873452 seconds)
  done (took 5.544195025 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.131569785 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.12700535 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.131675545 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.161307171 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.120763351 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.122997442 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.152597723 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.120063934 seconds)
  done (took 2.18475566 seconds)
done (took 34.994898492 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.139909688 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130452869 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.128527569 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.151322578 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.186086423 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.145116626 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.125503893 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.114661322 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.148949991 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.130468966 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.110076553 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.11475654 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.155702615 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.118868682 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.217372861 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.124561428 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.22232484 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.18970006 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.145153886 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.125006637 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.116655386 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.222230705 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.121399633 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.143662189 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.191567471 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.113216804 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.21098893 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.118043521 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.147696429 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.112333114 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.218473144 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.12086476 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.118021009 seconds)
  done (took 5.987925858 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.211493573 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.120674242 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.148317672 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.118726557 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.120354764 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.146192069 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.206791942 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.146575639 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.118123413 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117836323 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.117405483 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.220758455 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.125059301 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.144074765 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.122359347 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.107626918 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.236606607 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.121574244 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.110481022 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.121776881 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.115050945 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.118154277 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.24769333 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.113565151 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.146491094 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.120111519 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.122352317 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.122505824 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.149454439 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.120835625 seconds)
  done (took 5.389035725 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.131821401 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132614839 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.163316363 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185750922 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.147744556 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.160273385 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.139341208 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.133472161 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.169514815 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.112852216 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.127727692 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.178307925 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129578359 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.122601557 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.146668727 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.13186424 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134513777 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.14147415 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121428335 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129401306 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.16244495 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.130613444 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.135071 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.150006424 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.11184946 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120228464 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.151564783 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.128238204 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121303754 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.156584711 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.11601358 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.116199953 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.144556894 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.149148717 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.114271121 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.156023335 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.139669033 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123480795 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.154771397 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.145810567 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.116197339 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.143858869 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.138624826 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.19533544 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.115715026 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.12602795 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124131921 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.157630575 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.112029977 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131226849 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.186483522 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.113146724 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.161395112 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.112913281 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.110863098 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.121764169 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.142382305 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.117049485 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127837004 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.144576294 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.139270045 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.119849582 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.153218149 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.115656501 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123239671 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.140716193 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.113026907 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.117397708 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.167318506 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121498487 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.149332773 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.140065635 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125296169 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.125610741 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.123184744 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.15382844 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.112988377 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123698824 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.151632905 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.119544896 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.125550851 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.145199602 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.116679676 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.129282058 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.163072013 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.129305245 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124095346 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.15441292 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.117557499 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.114836571 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.15979355 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.115383176 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.117644427 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.154687579 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.11484332 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.116975593 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.154014928 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12571383 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.11091839 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.165949182 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.117457782 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.112653784 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.136907891 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.145363508 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119181113 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.12343432 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.184196425 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.117035931 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124506131 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.155249561 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.11418109 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120579469 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.146207692 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.112864889 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.129670892 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.158384468 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.121419786 seconds)
  done (took 16.935248971 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.322824893 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.304050786 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.184541859 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.242923303 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.125953042 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.236868334 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.300943148 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.302824781 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.112679157 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.18332635 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.164845285 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.27251109 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.144188778 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.143450857 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.30463104 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.357497652 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.172748352 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.15219657 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.180330692 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.12864751 seconds)
  done (took 5.482457079 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.14067479 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.147876706 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.165208656 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.142174556 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.124202484 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.158282107 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.113454469 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134575039 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.154179433 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123661135 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.115297845 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.158825178 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127080276 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.130078966 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.159051455 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.143565745 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.120877494 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.148466046 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136022505 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118624341 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.129860252 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.138637284 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.150430767 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.137063334 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.132741018 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.15211413 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.113593089 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.118914185 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.119831264 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.151128569 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119671153 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.13076743 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.151548099 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106963318 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124571792 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.157002097 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.120660962 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.115782394 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.146359773 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.118954588 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128834637 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.154516904 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122457292 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097307019 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.132177609 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.136181882 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.128985893 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.126087914 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.104637391 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.163117026 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.12553819 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.128238132 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.15068833 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.135916826 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.119914287 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.159136401 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.126263119 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.128302497 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.14778193 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.112904592 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.110671061 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.146044805 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.123281264 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.128791471 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.153538839 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135578262 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.129419263 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.143804109 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.120195624 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.117340732 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.146839397 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.129196087 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.134611698 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.151413568 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.120943046 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.12545632 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.149599515 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.094751824 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.123045642 seconds)
  done (took 11.665522381 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.146273191 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.121768616 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.160520738 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.150964171 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.125498981 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.14786295 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.122721972 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.133401444 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.125858389 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.160569312 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.127157689 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.126854298 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.165504155 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125430146 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121797695 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.159090713 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.125525834 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.180101816 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.133956999 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141602057 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.155893169 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.118755992 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.126232289 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.153942224 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142928159 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126124305 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.170633209 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.127767042 seconds)
  done (took 5.08165418 seconds)
done (took 51.666578802 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.305214078 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.462149251 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.244265475 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.250559441 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.253690328 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.258724828 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.244631836 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.250835245 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.542635253 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.21949264 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.252922809 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.25783024 seconds)
done (took 28.69090735 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.317824567 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.786185699 seconds)
    (2/2) benchmarking "String"...
    done (took 1.537962425 seconds)
  done (took 4.461720514 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.242362423 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.241682446 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.487174599 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.241548354 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.251831492 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.236862502 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.243088525 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.240563188 seconds)
  done (took 16.078868653 seconds)
done (took 26.243383452 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.300266871 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.416206935 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.486696464 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.238846466 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.237364166 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.245708263 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.235523769 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.260142695 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.244666624 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.240449471 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.632048294 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.526436174 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.249858689 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.634114376 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.240131941 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.259447464 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.23424498 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.479442511 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.241508307 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.278587927 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.215246934 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.219270102 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.29464043 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.241702137 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.241744241 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.241770779 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.250415853 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.237453031 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.422384502 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.240948931 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.268217902 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.242927165 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.249464424 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.236788527 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.235484352 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.249854265 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.423699113 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.24405881 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.220222154 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.269999949 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.426361916 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.246017386 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.236786491 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.250762255 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.242512826 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.286758537 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.225553429 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.364543749 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.261658972 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.254645032 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.282668577 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.60906067 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.252271437 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.251495033 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.238727536 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.46530707 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.243411893 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.290561786 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.262199059 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.254022165 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.246971771 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.236883959 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.241773652 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.240142287 seconds)
  done (took 145.980272263 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.24268704 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.241621384 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.239340525 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.302847706 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.23874327 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.240137829 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.241027227 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.242676679 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.240292293 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.269448759 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.24165386 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.238664988 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.240340156 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.177395227 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.24878385 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.264749507 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.242621526 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.242034191 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.25028145 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.242133491 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.246580359 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.24077776 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.253201008 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.241540416 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.276221074 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.309732253 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.255592708 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.259839602 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.250710421 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.241414258 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.27312288 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.239997658 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.79982208 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.091147539 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.246870395 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.241409215 seconds)
  done (took 81.494044675 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.244120017 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.2423225 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.243092359 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.26988815 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.243587338 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.761330835 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.763486951 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.198052907 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.364499364 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.242398887 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.432826956 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.42425976 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.239806622 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.331910744 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.25044186 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.239403439 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.243384095 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.257856495 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.269297913 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.242206282 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.243431787 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.762181832 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.254602574 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.270259531 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.409567582 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.246885692 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.272276124 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.630476598 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.240042352 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.269819013 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.566036378 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.284258393 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.240410372 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.525747038 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.536997311 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.351673009 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.238430812 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.272077351 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.241907896 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.244604199 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.521071409 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.240648299 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.242618893 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.246596975 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.830733472 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.242795792 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.763943231 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.24513697 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.150534514 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.246611104 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.245996093 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.182357535 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.816392315 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.243390851 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.24411855 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.244123677 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.243386461 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.243417363 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.273379877 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.206923519 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.333103056 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.244780105 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.250090136 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.272293916 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.242926744 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.399118527 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.244391032 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.497672938 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.294342517 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.350226544 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.749346378 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.244717754 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.336886168 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.354466532 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.238788494 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.244216822 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.24602556 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.2440527 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.351897394 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.238038387 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.887872353 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.406783525 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.25001593 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.40616848 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.338288874 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.23960424 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.50400892 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.240745028 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.241733668 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.913937037 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.334912503 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.238459411 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.243166314 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.246172211 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.245681322 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.890222106 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.745513428 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.420273363 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.243536717 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.748371414 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.240785188 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.056546499 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.72996332 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.816070874 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.241951692 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.34927497 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.401673029 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.250899219 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.241963137 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.378542049 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.241230581 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.299301321 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.242599395 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.641396198 seconds)
  done (took 375.717774329 seconds)
done (took 604.332918164 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.148391616 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.101094827 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.225759236 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.106938678 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.082032061 seconds)
  done (took 11.80140447 seconds)
done (took 12.940954498 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.468915159 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.41654794 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.293679389 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.416735409 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.268123383 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.435206948 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.394264185 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.261581826 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.346928097 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.311023879 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.34173103 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.283309224 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.27527673 seconds)
  done (took 18.653527795 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.511074002 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.254591006 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.30587857 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.517088345 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.284698363 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.515730832 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.544161173 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.25051375 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.3952913 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.267385841 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.26551943 seconds)
  done (took 18.25168391 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.527828934 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.249696051 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.310775402 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.496387017 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.287411957 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.509799155 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.535799396 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.251000789 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.407569889 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.268844167 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.266226457 seconds)
  done (took 18.251120827 seconds)
done (took 56.296760457 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.280769971 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.334971201 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.267514197 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.261255668 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.261048832 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.260170262 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.265786621 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.261482131 seconds)
  done (took 11.332953467 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.26046758 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.261234002 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.257750381 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.258106588 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.259857473 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.261184385 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.261150352 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.25974746 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.259484708 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.258966951 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.259564684 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.258328055 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.259099757 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.260448772 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.257502474 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.258194262 seconds)
  done (took 21.29039456 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.262981765 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.259790816 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.262178339 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.259985666 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.256837063 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.260503477 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.262568039 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.258183908 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.259224075 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.259994121 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.259575518 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.258429118 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.259686001 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.258980013 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.259515458 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.264499998 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.259482595 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.258523095 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.263728248 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.257484598 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.258829406 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.258582222 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.25788532 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.259294164 seconds)
  done (took 31.37763506 seconds)
done (took 65.144705024 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.249547709 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.247296807 seconds)
  done (took 5.637206544 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.316573331 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.314853975 seconds)
  done (took 3.768425129 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.262163457 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.260243624 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.261932576 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.259367594 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.26007676 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.261251239 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.260667417 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.260613344 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.260108578 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.25838661 seconds)
  done (took 13.744018097 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.261132786 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.261679561 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.259858662 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.26163187 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.262981208 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.260226119 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.26188978 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.263133177 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.260201204 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.262623353 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.260918246 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.262876526 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.260779392 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.261630064 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.262013992 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.262978357 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.260678443 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.262297346 seconds)
  done (took 23.850269701 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.274608413 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.282595057 seconds)
  done (took 3.70083434 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.38891025 seconds)
    (2/7) benchmarking "second"...
    done (took 1.305004028 seconds)
    (3/7) benchmarking "month"...
    done (took 1.366456775 seconds)
    (4/7) benchmarking "year"...
    done (took 1.35874548 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.300902391 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.284044643 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.303008262 seconds)
  done (took 10.447898352 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.26366883 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.468304017 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.586520382 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.266399328 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.266483912 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.266170285 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.460749951 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.266848846 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.268806271 seconds)
  done (took 13.255597089 seconds)
done (took 75.546179006 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.251704805 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.277080002 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.271351696 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.25803592 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.566097915 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.268920131 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.248299092 seconds)
done (took 16.28482057 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.232862139 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.227986938 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.234657864 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.210466624 seconds)
  done (took 10.047643079 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.213202975 seconds)
    (2/2) benchmarking "read"...
    done (took 1.566360191 seconds)
  done (took 4.92201236 seconds)
done (took 16.113311043 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.263232026 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.261923943 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.259906468 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.264113991 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.262979678 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.261879121 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.261830705 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.262641513 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.264222816 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.264284964 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.261870445 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263776871 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.261269724 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260964525 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26225804 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.261029834 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.264216268 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.260305562 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.264176512 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.261577927 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.260961216 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.263279832 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.262585003 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.26528078 seconds)
  done (took 31.441935051 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.264878775 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.263538242 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.265179319 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.263504321 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.263177293 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.264437654 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.26412597 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.263889404 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.264394747 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.264086313 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.264946525 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.264165383 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.265074114 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.263943348 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26402614 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.263752486 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.263501779 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263208931 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266206065 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.267148009 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.262422966 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.263910771 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.264715323 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.263658706 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.266113186 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.264962341 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.267023239 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.264918385 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.264820942 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.264218785 seconds)
  done (took 39.079233092 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.267497515 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.264478323 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.264385174 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.264490201 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.264992364 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.266906947 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.265674841 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.266206365 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.26694129 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.267026532 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.266676676 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.267388662 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.264760876 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.266588915 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.269155201 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.266935438 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.266579665 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.267332879 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.266533189 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.266153412 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.265519937 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.264698087 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.26699005 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.266962168 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.266296608 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.266424983 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.268020034 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.264930861 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.266263253 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.266085433 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.267945789 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.265705005 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.266675182 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.266805597 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.267036351 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.268303228 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.269311249 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.268388131 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.269683248 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.266895087 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.268521473 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.267096779 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.265761038 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.266325046 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.267555502 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.270042298 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.268015412 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.268801846 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.265051524 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.267533476 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.269193346 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.269779675 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.266324182 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.266352497 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.270132487 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.267492043 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.268356493 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.270160482 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.268639486 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.268321382 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.26890173 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.267933108 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.269643887 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.269289561 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.268399307 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.268621091 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.269755388 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.26891138 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.271439784 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.269190696 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.269714893 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.268601033 seconds)
  done (took 92.402233741 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.26880198 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.268271856 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.267791383 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.268969111 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.26943966 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.272699327 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.268326115 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269814582 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270675516 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.271462101 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269693472 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.271137997 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269638318 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.27122808 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.27244183 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.270264558 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.271447438 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.271377682 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.269268157 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.27296645 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.270996889 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.268900911 seconds)
  done (took 29.094672286 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.270254785 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.272848218 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.272044987 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.271552637 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.271685787 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.272034557 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.269928785 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.271863618 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.272517947 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.271722753 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26856004 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270291345 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.275103628 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.271984393 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.271686348 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.276818336 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.273664139 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.274374782 seconds)
  done (took 24.049820649 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.272252412 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.270217629 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.269654329 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.269609731 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.272150879 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.266858547 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.271725815 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.272406261 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.269244099 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.27345091 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.272301966 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270769374 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.27172992 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271549651 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.271695996 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.273902954 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.27345902 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270785989 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.271015907 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.27213377 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.27184415 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.271743265 seconds)
  done (took 29.122170854 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.274032393 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.275790381 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.27330257 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.271686794 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.27268271 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.272348148 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.273732627 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.272298977 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.273264203 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.274532061 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.273160699 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.27282802 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.270559764 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.274995784 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.273478326 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.27543195 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.275024105 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.27280542 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.277639091 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.271126143 seconds)
  done (took 26.621675074 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.272973928 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.272337978 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.276624604 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273712965 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.272477984 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.272427933 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274233258 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.268242828 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.272584091 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.271538016 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.274081043 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.275018948 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272622559 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.272716087 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.278404066 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273747861 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.269793081 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.274452085 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.272783012 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.271622837 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.272170214 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.269909675 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.275030761 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.271228855 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.275167067 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.271214476 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277776974 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.275823622 seconds)
  done (took 36.801964947 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.275812026 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.274988259 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.274982269 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.277856089 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.276177544 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.277161094 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.27437045 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.278806772 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.275365664 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.276703766 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.275190613 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.274665648 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.273017628 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.275969319 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.276975773 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.273296639 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275213865 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.278363952 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.278129836 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276890796 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.27753247 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275314825 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.275863471 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.277126176 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274169018 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.276662153 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.275862566 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.276327484 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.276146477 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.274375859 seconds)
  done (took 39.432963045 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.297679832 seconds)
    (2/2) benchmarking "in"...
    done (took 1.296192658 seconds)
  done (took 3.750656198 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.279653427 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.277106805 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.276678955 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.278564294 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.275841395 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.278291184 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.277945383 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.278539653 seconds)
  done (took 11.378173258 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.271339247 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.279266638 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.272176032 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.279660904 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.277129095 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.270910235 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.277785913 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.282187268 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.27248184 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.273102883 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.270832876 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.274240676 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.274171946 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.269279805 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.272210909 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.27505091 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.284795823 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.2819248 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.278620102 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.275975047 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.27912136 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.267742411 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.276396348 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.283394539 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.271872452 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.278702838 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.281366728 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.283339616 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.277194306 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.278794179 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.274300919 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.281485981 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.278475566 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.279106069 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.277813757 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.278023695 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.279773373 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.283621577 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.282838627 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.283688257 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.278048329 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.276551452 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.274670798 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.278366491 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.279152253 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.281723872 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.274525553 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.280424071 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.272105629 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.275824597 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.282006557 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.273432901 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.283601395 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.273967977 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.275793996 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.287523114 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.286444574 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.271476121 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.276065247 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.281255751 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.292950564 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.284544606 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.279349945 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.28777412 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.271331217 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.282868209 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.281621397 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.28901029 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.281298076 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.282004127 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.284891727 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.286789655 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.287596825 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.287150814 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.279468785 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.276284302 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.276542415 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.284920896 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.284842934 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.286409859 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.290110692 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.280073761 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274303075 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.277106095 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.279464076 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.285056527 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.280745448 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.282458657 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.275423448 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.287917292 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.291198734 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.280517841 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.277053215 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.275260129 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.279666539 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.282416321 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.272594193 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.279226152 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.286878066 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.284238328 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.28285236 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.274940933 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.282212591 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.28881907 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.28242811 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.282027777 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.288658204 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.278005027 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.288367349 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.291634039 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.285258464 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.273190261 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.279056468 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.287226863 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.276062029 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.280745648 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.290244564 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.276004334 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.289139654 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.285777416 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.280655725 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.287255341 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.292283747 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.285512335 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.278857938 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.289095842 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.28506223 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.283482556 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.290824181 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.286972253 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.283900844 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.282156214 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.290649379 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.277370064 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.287977436 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.270681222 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.277417611 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.281520373 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.274193936 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.270583968 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.279288286 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.27162834 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.272865208 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.268216756 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.271279724 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.261567926 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.272535721 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.267223928 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.263241417 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.269937997 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.258228831 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.25366355 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.248346955 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.256536346 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.246705674 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.257110553 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.248482538 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.261277359 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.243596505 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.242635839 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.242861188 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.235371658 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239935644 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.246807581 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.243813261 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.244788755 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.240620192 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.23601265 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.236567652 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.230088875 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.239537962 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.229079809 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.231484623 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.239696598 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.234320128 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.231641051 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.229709058 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.238216294 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.232016025 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.232202298 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.223765622 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.229682889 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.238317133 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.229943126 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.238027719 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.227795874 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.226887211 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.223149782 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.224770593 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.230823299 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.221547306 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.231235017 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.234408786 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.23399508 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.223523917 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.229288944 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.220267881 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.228487588 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.227335725 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.234361173 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.229814099 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.227806179 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.221999422 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.231710961 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.222684723 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.23133665 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.21870107 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.230207184 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.229593158 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.22708873 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.228586484 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.222474399 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.225921036 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.232349537 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.228346272 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.228997599 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.221162113 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.233360869 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.221184304 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.225845693 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.233866296 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.231669706 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.232536522 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.237108188 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.227358299 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.233154979 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.23067802 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.224314131 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.231174559 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.227647139 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.227405952 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.233761856 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.229090487 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.22373391 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.235760652 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.23175042 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.222941179 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.228529485 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.236677091 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.229601862 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.219270284 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.230406113 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.227769138 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.228190233 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.22832919 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.223020661 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.2325237 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.231692048 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.234000708 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.220351554 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.230061967 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.223059731 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.230773791 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.223104895 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.226104418 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.224090435 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.226880103 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.232721096 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.225665634 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.219162682 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.230050404 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.22631275 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.226592155 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.218581614 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.226933832 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.225662735 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.226634833 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.223093911 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.221774265 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.226648173 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.217800088 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.226805068 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.220461644 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.236612588 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.240224561 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.23011279 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.229483039 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.228462395 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.228348862 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.228615748 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.221484475 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.221502076 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.226721012 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.223741217 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.224457465 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.230414088 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.221156635 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.2298904 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.2270849 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.22726351 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.229779848 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.227690265 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.220530638 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.230789097 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.228682836 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.225973162 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.220810825 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.229695725 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.222960828 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.23108354 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.227757094 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.223011216 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.234294978 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.234574982 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.226542934 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.226022642 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.223509113 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.220985591 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.224996284 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.231975296 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.221432332 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.230432172 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.221135604 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.225500905 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.223147036 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.233366427 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.237929533 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.223273203 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.233536445 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.228392817 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.219666476 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.22276898 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.230736451 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.23299431 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.241611823 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.22358879 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.230772837 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.22975611 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.22804875 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.228288405 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.22864613 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.228928763 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.229823932 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.235008017 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.233139559 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.224395991 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.231747175 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.238097615 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.231350856 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.230342194 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.220943849 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.232542072 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.239787708 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.224455896 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.227634794 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.225885221 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.231223049 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.229833922 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.230783537 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.230985414 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.232278262 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.235133569 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.235058307 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.233239786 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.232291732 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.234421117 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.240903148 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.234479459 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.24217897 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.22544574 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.234742378 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.231618758 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.225858075 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.225733745 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.227091737 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.233480523 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.223994671 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.236255746 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.231570343 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.22919211 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.231913682 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.23720385 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.225080329 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.229020487 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.238181557 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.226161495 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.235212904 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.232552444 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.224456119 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.235448352 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.231661034 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.224978212 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.227121446 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.227102833 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.236310378 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.227054751 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.23639175 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.227898329 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.235455797 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.234049888 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.23294916 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.232411818 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.231519975 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.22561654 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.232683474 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.233862899 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.241556455 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.228126043 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.233098589 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.229052156 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.239566765 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.243753139 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.229514423 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.238238366 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.23515864 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.226959407 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.231647327 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.239369375 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.228903773 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.236703739 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.22358833 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.225377876 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.226947756 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.234150628 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.237876857 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.235273338 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.225247733 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.22719459 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.230046503 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.225721462 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.224145836 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.221276392 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.231592847 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.218246708 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.216795927 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.226646804 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.219314213 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.226086258 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.214990223 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.218215574 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.218356896 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.22516616 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.221459355 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.220506753 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.214093621 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.21331801 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.227661902 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.2240722 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.217050775 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.21708576 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.223665942 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.214113476 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.217257755 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.217321839 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.215688395 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.215888341 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.224740057 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.21716956 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.216090683 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.215925208 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.224488702 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.225672692 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.224923918 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.216101764 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.230268357 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.23131119 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.2283411 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.214735838 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.218251756 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.217900196 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.224471851 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.223377314 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.216471537 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.229009199 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.227428385 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.226037738 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.222241376 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.224647485 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.213981614 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.2245547 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.221934179 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.219564326 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.229290564 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.218958732 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.230106563 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.222464809 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.22468181 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.214761989 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.21851565 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.218706134 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.219271477 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.224751097 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.221385655 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.227922763 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.221340325 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.227935005 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.224848883 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.223847221 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.226187768 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.215153489 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.226184399 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.217709351 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.225561474 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.227124093 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.218045634 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.227358642 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.225083563 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.217307293 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.220206619 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.229234021 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.226457912 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.219576274 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.224500545 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.230558743 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.235990812 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.226365353 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.219558491 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.223474198 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.229743645 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.226611952 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.226286276 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.218830116 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.236117001 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.239091676 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.219757344 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.222450331 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.229160772 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.236435432 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.225439169 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.22693662 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.224159037 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.224134647 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.230741224 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.228620097 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.232977052 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.2345807 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.222715337 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.230463423 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.221366278 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.223199068 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.229215658 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.238849071 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.227067222 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.224191086 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.236028729 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.240226513 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.224845051 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.242435796 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.234790706 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.229149794 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.233920303 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.220329301 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.230552191 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.226039324 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.232121066 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.228390107 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.229715946 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.2300075 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.221037333 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.228992199 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.236367603 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.237394965 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.228794576 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.220098151 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.223536567 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.230276491 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.229041493 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.229570271 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.229800132 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.228036908 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.230753157 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.222865408 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.23898224 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.242632532 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.234936718 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.227584977 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.228792167 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.230712063 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.23229925 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.225367842 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.233106433 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.230532957 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.230332878 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.227595133 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.237721349 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.23200793 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.224373637 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.224954368 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.225124329 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.232650112 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.240444873 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.248644654 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.235350211 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.233791618 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.232886133 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.230879816 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.224803885 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.234692332 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.233277312 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.226492075 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.225901811 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.233808538 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.232848764 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.232411716 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.225613645 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.23585061 seconds)
  done (took 741.187908194 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.23230475 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.232328588 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.231658983 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.230853445 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.232347472 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.232585912 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.233688017 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.232213372 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.231093928 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.231840292 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.232322541 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.233207656 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.233597657 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.231583803 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.233354687 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.233867504 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.232654226 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.231581902 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.232798786 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.232809415 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.232626346 seconds)
  done (took 27.003435378 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.234608054 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.232985962 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.232778418 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.232172597 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232626359 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.232671526 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.232981995 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233771855 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.233241459 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23484655 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.232670351 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233734036 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.234227079 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.235105693 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233863975 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233712552 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.234614467 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.232581915 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.233136107 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.233882462 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.233501849 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.233446484 seconds)
  done (took 28.25918267 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.234641086 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.233963182 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.226839179 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.237899 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.234437853 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.234031876 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.234999237 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.234674452 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.234707055 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.228320519 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.227025691 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.227930976 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.22822133 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.238668708 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.23157345 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.239508386 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.234649152 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.233339544 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.235895764 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.234884663 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.238113744 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.247205091 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.235551297 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.226630943 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.236816645 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.237150297 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.235440785 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.236301863 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.22776781 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.237829975 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.235896945 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.229501887 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.239966573 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.238583193 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.230108174 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.238527183 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.236115185 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.235603671 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.236556447 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.233318918 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.244599179 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.236360558 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.241125401 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.250079286 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.239717023 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.231319214 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.239885518 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.238060056 seconds)
  done (took 60.424785973 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.237797945 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.23783244 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.236247104 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.239178325 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.23857802 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.237584921 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.238257014 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.238486086 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.238615185 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.23848128 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.237628108 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.238700004 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.237920149 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.237749201 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.238497411 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.23822458 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.237124579 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.239031844 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.237699062 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.239139154 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.239526667 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.239548601 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.238351924 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.237846108 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.238549912 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.238762994 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.239366587 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.239198662 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.239823362 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.238798402 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.239859914 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.239119298 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.238844708 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.237199466 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.239470502 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.240467609 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.240483617 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.238224743 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.238830814 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.239503779 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.238754216 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.238756011 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.239255997 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.240980758 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.239042867 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.239743053 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.238759878 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.239750273 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.239780983 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.240450977 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.240326866 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.24063458 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.240636227 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.240890205 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.240621672 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.239856744 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.239855842 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.239884731 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.24082078 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.239873435 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.239829058 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.24061245 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.240152175 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.241406409 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.240353306 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.24035685 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.240605027 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.24093567 seconds)
  done (took 85.394574177 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.240072584 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.241629561 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.241964522 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.242904286 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.241322441 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.242922255 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.241540063 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.241439343 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.241660508 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.242122938 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.241158712 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.241205056 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.242724831 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.242438058 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.242871016 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.243727022 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.24257282 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.242118301 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.243161975 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.243086759 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.242109815 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.24392505 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.243610517 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.243978022 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.243894535 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.242176922 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.244182876 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.242101422 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244622089 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.245010404 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.243000702 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.243565125 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.243848924 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.243819635 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.244194572 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.243051165 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.243655881 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.24284342 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.243570569 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.243636488 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.244837588 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.245141648 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.24626088 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.245218487 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.245442853 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.243141897 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.245810263 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.243023402 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.245372797 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.244870771 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.244663066 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.246964411 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.244698577 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.244716299 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.244723409 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.244762151 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.244719364 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.246014894 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244655586 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.245282476 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.245678288 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.24652501 seconds)
  done (took 78.23742951 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.24511722 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.246865706 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.245906511 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.244693646 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.246713699 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.24461312 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.244814642 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.246715439 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.24518163 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.247335621 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247360792 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.245844644 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247119084 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247293643 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.24592792 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.247744102 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.246921238 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.245633645 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.246486919 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.246318923 seconds)
  done (took 26.058243008 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.245964296 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.246830851 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.247281746 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.247803021 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.248616539 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.247519902 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.2461426 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246339348 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246700945 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247325286 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.246652547 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.246580278 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248011036 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.246872884 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.247709686 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.247433038 seconds)
  done (took 21.088031681 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.246490207 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.246120331 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.246575533 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.246807343 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.245737303 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.247501996 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.247528024 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.247379462 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.247156358 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.247946158 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.249920071 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.246715094 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.247626037 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.248448637 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.248199949 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.248659785 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.247916064 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.24810383 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.248337278 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.248626458 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.248725402 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.248234872 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.248786665 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.24875398 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.249087657 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.249966918 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.249278665 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.24988514 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.247532498 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.248886131 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.248511406 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.24942792 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.249271808 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.249692289 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.248423986 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.249936882 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.250289665 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.250843187 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.249619853 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.250405788 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.249681452 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.248588681 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.250963306 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.250225433 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.250239144 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.251724191 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.251627731 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.250514705 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.250931926 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.250722372 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.250663296 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.251603644 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.251803983 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.250351346 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.251997455 seconds)
  done (took 69.834904858 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.251566549 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.252603249 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.252129871 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.251563518 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.251724904 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.252102985 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.250547898 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.252905925 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.251651129 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.253001526 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.252298171 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.253257909 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.251762524 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.252114963 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.252671681 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.251916643 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.252401999 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.252324859 seconds)
  done (took 23.67734029 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.252381897 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.251935965 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.251992387 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.252006441 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.25380528 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.253974034 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.252126253 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.25392931 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253041479 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.253088471 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.252984902 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.253317453 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252386655 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.253647992 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.253143451 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251704067 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.252686386 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252641242 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.254561239 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.253037542 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.253075951 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.254069025 seconds)
  done (took 28.706362104 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.244663867 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.244637226 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.243418601 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.256615082 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.253392276 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.245218825 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.244225725 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.24412082 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.260463076 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.269298425 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.263542784 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.252724467 seconds)
  done (took 16.162296954 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254507978 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254344332 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.255332387 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255095228 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255862705 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254977731 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256679364 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254477127 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255291429 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255540332 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256315502 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254990292 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254166745 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254257337 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25463202 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254842909 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254602018 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255134157 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255517353 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254330863 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256560334 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255243002 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254913882 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256109357 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256016388 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256005364 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257200901 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.257340015 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257215302 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255379147 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255448146 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258760071 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255945192 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25697294 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256965979 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256622154 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255392388 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257856973 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258117202 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257893752 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.257588512 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257356444 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257396399 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256237215 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257409437 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258986611 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258686743 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25880165 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258926602 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258452866 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259392789 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25763739 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259118497 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260531515 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258294032 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260704356 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258408139 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259310632 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258093765 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259312898 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258742373 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258729671 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259230493 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259293796 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25972231 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258468853 seconds)
  done (took 84.099924526 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259769544 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.258645986 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259466462 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260553859 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260007257 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259358346 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259916272 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259748829 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259119706 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259775107 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259158886 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259771115 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260337346 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259625503 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260539422 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260853239 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259140553 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261241882 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260699181 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259934064 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260461597 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259924912 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26050628 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259554161 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25993767 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259164414 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26087768 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261162203 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261297794 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261511476 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260999655 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261935979 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261608066 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.261133295 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260047016 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261675337 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261382302 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262492458 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261457369 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.262207313 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261813858 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260221467 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261275451 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262079236 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262517249 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262091309 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261449416 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26287714 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261699967 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262290125 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262368828 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263014322 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263009287 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262572545 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262681603 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262341026 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262374605 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.263520643 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261995594 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26138628 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263593846 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262852733 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263692184 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264573381 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263737861 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263090961 seconds)
  done (took 84.388809771 seconds)
done (took 1738.84305093 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.420142869 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.374592237 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.25352742 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.265023165 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.254534037 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.250708248 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.264875059 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.255823664 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.254744399 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.25277102 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.254145837 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.444304243 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.287344282 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.253254739 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.25471786 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.34929728 seconds)
  done (took 25.837769081 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.277034206 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.267741257 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.36876697 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.265130753 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.287851219 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.439491382 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.324171869 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.268664142 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.419358668 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.288754842 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.255482386 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.282978315 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.265552475 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.256721486 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.282959049 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.440742157 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.507287391 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.265869321 seconds)
  done (took 27.915169167 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.669813528 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.273555789 seconds)
  done (took 5.097532835 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.282661617 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.265534385 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.265879175 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.263761098 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.259127871 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.263042263 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.265441315 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.259853305 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.266014817 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.386450371 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.273662425 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.280482663 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.26541622 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.266041168 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.274915132 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.310080284 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.413180682 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.275446162 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.275058508 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.273201741 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.265809933 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.353514423 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.304923117 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.279304172 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.380612833 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.268846533 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.274560723 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.272621934 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.378846166 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.277891425 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.266741698 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.267166832 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.268154209 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.158309836 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.788736292 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.261301651 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.289757212 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.277896541 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.276693042 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.398745653 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.26940108 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.276423131 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.261402985 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.788490088 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.365567374 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.384990254 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.271927771 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.274167709 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.270313251 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.330286179 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.267779579 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.269747194 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.324816149 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.061765336 seconds)
  done (took 81.571278173 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.270562773 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.262714591 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.443772781 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.287072508 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.262076537 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.266962534 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.266476816 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.523399025 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.270462 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.263726482 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.573330035 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.863717696 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.278625717 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.327653979 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.300845491 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.31502343 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.272462924 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.263406041 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.264267323 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.267425155 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.817907182 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.269469116 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.264940115 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.336562844 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.302805375 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.780407151 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.264442406 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.270448549 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.277355912 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.263229664 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.83391286 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.282631755 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.31303918 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.268498782 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.541508908 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.637373162 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.591253189 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.267997795 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.28549523 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.268176 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.287936291 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.77133904 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.614507684 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.266238945 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.267832808 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.77792041 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.268304869 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.27355658 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.264995277 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.53216311 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.265333841 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.265885916 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.26770447 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.271556493 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.264772689 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.316586698 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.320560137 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.786306669 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.270557088 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.26454854 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.280110661 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.266558 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.273237998 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.272854196 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.268255498 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.620820247 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.502257976 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.272308316 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.618658714 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.829627214 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.286197985 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.902915699 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.272835565 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.274876298 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.296220322 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.266371465 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.284798995 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.779386728 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.296531427 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.266523236 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.593818872 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.26762862 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.563823168 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.28928716 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.266755293 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.835898975 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.282657284 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.311934773 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.268156765 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.286211022 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.272105078 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.272544729 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.547578695 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.31308115 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.268743556 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.26960673 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.295876155 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.270094185 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.283590948 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.268994042 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.900066512 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.279523027 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.280600401 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.269386379 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.268363887 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.27473877 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.268796645 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.270931701 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.552302835 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.268680264 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.279797853 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.26896588 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.269173852 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.277968492 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.344431912 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.269041758 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.560993085 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.279231253 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.270161745 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.274924852 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.268255726 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.278050968 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.269546454 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.290645564 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.235024452 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.572803433 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.287988884 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.287659936 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.271583173 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.282815108 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.273837458 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.276584584 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.325147863 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.272445201 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.055442944 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.309554209 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.27085785 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.272294349 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.28110023 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.272506922 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.302041405 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.271235271 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.569557859 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.55018003 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.501308201 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.275682318 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.272297108 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.069854472 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.300881968 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.454671912 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.290687988 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.275065134 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.551395655 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.488052487 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.275401978 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.273508335 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.276738644 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.549999119 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.279694903 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.599500039 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.860790573 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.274531381 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.286041269 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.049177828 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.082741109 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.277823051 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.274822825 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.567904158 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.295280612 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.273710277 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.272781808 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.272278879 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.271968924 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.275071391 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.278368388 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.274302821 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.27569416 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.61726759 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.469735684 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.289431002 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.276237994 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.787590155 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.296284601 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.275190426 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.291189405 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.275876607 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.275487251 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.331608718 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.276802984 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.301224993 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.273793336 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.278366406 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.811772891 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.276327523 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.277188997 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.468324897 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.005648457 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.277564155 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.277985401 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.276489503 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.331227744 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.82117272 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.29719081 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.568137825 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.29449443 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.316637132 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.27745172 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.288647841 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.823558458 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.285521398 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.294038173 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.001243499 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.279545014 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.709388434 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.275312633 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.277472359 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.924483814 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.276448307 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.280560169 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.275937375 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.276601212 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.597423124 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.277332176 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.280629601 seconds)
  done (took 484.221721309 seconds)
done (took 625.790770303 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.279141737 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.276789426 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.284177273 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.283018513 seconds)
  done (took 10.29825635 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.294876209 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.283065424 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.296225758 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.282889266 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.295902946 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.28316677 seconds)
  done (took 8.91190473 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.278678933 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.281919415 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.282230965 seconds)
  done (took 8.017652451 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.475968395 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.297705378 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.618101424 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.292273256 seconds)
  done (took 8.859946763 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.295156566 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.292351446 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.294098504 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.295491768 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.295513878 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.295337824 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.297070565 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.296271511 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.295862562 seconds)
  done (took 12.832886809 seconds)
done (took 50.095522527 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.258150851 seconds)
    (2/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.406619431 seconds)
    (3/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.507667104 seconds)
    (4/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.258720365 seconds)
    (5/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.257777699 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.358403451 seconds)
    (7/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.433851458 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.393050899 seconds)
    (9/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.43344323 seconds)
    (10/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.338648505 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.315162307 seconds)
    (12/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.379017423 seconds)
    (13/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.502362439 seconds)
    (14/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.311059023 seconds)
    (15/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.407637664 seconds)
    (16/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.258556655 seconds)
    (17/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.313658312 seconds)
    (18/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.281281773 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.458266645 seconds)
    (20/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.517508948 seconds)
    (21/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.365635759 seconds)
    (22/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.444285394 seconds)
    (23/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.358791914 seconds)
    (24/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.258624579 seconds)
    (25/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.304657091 seconds)
    (26/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.305180204 seconds)
    (27/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.362994843 seconds)
    (28/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.265306179 seconds)
    (29/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.266026395 seconds)
    (30/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.29390826 seconds)
    (31/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.368478473 seconds)
    (32/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.487241795 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.400675679 seconds)
    (34/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.424698067 seconds)
    (35/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.261266728 seconds)
    (36/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.507728522 seconds)
    (37/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.490490328 seconds)
    (38/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.366232505 seconds)
    (39/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.435574951 seconds)
    (40/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.365627617 seconds)
    (41/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.495314648 seconds)
    (42/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.438245788 seconds)
    (43/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.352045061 seconds)
    (44/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.353827986 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.387845044 seconds)
    (46/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.436998624 seconds)
    (47/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.397957626 seconds)
    (48/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.261969043 seconds)
    (49/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.513224587 seconds)
    (50/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.316761601 seconds)
    (51/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.313937479 seconds)
    (52/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.521877647 seconds)
    (53/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.597403465 seconds)
    (54/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.287767583 seconds)
    (55/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.260853283 seconds)
    (56/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.388790115 seconds)
    (57/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.316533667 seconds)
    (58/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.523915781 seconds)
    (59/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.263782447 seconds)
    (60/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.317584371 seconds)
    (61/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.262132022 seconds)
    (62/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.268121003 seconds)
    (63/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.399968515 seconds)
    (64/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.390499124 seconds)
    (65/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.401472075 seconds)
    (66/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.449967235 seconds)
    (67/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.34329988 seconds)
    (68/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.57186651 seconds)
    (69/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.330574373 seconds)
    (70/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.40062679 seconds)
    (71/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.437080737 seconds)
    (72/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.386782088 seconds)
    (73/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.570948668 seconds)
    (74/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.315599376 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.422621999 seconds)
    (76/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.38423466 seconds)
    (77/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.262275947 seconds)
    (78/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.441600913 seconds)
    (79/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.275099515 seconds)
    (80/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.375329232 seconds)
    (81/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.314600224 seconds)
    (82/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.382726388 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.389559884 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.437684691 seconds)
    (85/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.353459808 seconds)
    (86/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.46875818 seconds)
    (87/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.369588734 seconds)
    (88/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.313135949 seconds)
    (89/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.363559446 seconds)
    (90/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.37076085 seconds)
    (91/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.439727684 seconds)
    (92/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.348768622 seconds)
    (93/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.29660527 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.392047574 seconds)
    (95/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.375825954 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.39082397 seconds)
    (97/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.580310178 seconds)
    (98/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.303446953 seconds)
    (99/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.510169589 seconds)
    (100/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.328039875 seconds)
    (101/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.405264932 seconds)
    (102/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.401167381 seconds)
    (103/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.323504869 seconds)
    (104/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.279599217 seconds)
    (105/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.353013982 seconds)
    (106/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.380525281 seconds)
    (107/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.368305881 seconds)
    (108/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.360905122 seconds)
    (109/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.356988106 seconds)
    (110/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.36380464 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.388600928 seconds)
    (112/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.287086407 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.427855057 seconds)
    (114/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.268855861 seconds)
    (115/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.406396833 seconds)
    (116/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.382416784 seconds)
    (117/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.475941931 seconds)
    (118/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.330683663 seconds)
    (119/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.444101373 seconds)
    (120/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.517341726 seconds)
    (121/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.457792873 seconds)
    (122/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.438843313 seconds)
    (123/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.580395145 seconds)
    (124/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.474522452 seconds)
    (125/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.367684371 seconds)
    (126/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.295986835 seconds)
    (127/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.32490045 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.434709289 seconds)
    (129/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.49596074 seconds)
    (130/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.521449399 seconds)
    (131/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.640146693 seconds)
    (132/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.31839657 seconds)
    (133/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.436554417 seconds)
    (134/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.731527166 seconds)
    (135/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.325338959 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.525254489 seconds)
    (137/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.2830415 seconds)
    (138/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.408114085 seconds)
    (139/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.50966965 seconds)
    (140/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.279422154 seconds)
    (141/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.284447766 seconds)
    (142/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.442707685 seconds)
    (143/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.282186172 seconds)
    (144/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.419640496 seconds)
    (145/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.380616003 seconds)
    (146/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.26777255 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.396167968 seconds)
    (148/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.351670323 seconds)
    (149/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.445110463 seconds)
    (150/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.276574241 seconds)
    (151/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.330512055 seconds)
    (152/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.267391666 seconds)
    (153/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.69889211 seconds)
    (154/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.272762867 seconds)
    (155/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.345762455 seconds)
    (156/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.415802301 seconds)
    (157/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.640555412 seconds)
    (158/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.335913802 seconds)
    (159/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.270794675 seconds)
    (160/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.323931045 seconds)
    (161/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.408251405 seconds)
    (162/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.581612356 seconds)
    (163/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.325135031 seconds)
    (164/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.494515059 seconds)
    (165/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.273892159 seconds)
    (166/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.313699763 seconds)
    (167/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.408249908 seconds)
    (168/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.353265865 seconds)
    (169/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.469767409 seconds)
    (170/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.364224782 seconds)
    (171/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.500180251 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.411985356 seconds)
    (173/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.33017795 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.529859635 seconds)
    (175/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.539487459 seconds)
    (176/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.408044446 seconds)
    (177/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.398922902 seconds)
    (178/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.29843965 seconds)
    (179/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.269490016 seconds)
    (180/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.274922298 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.570612851 seconds)
    (182/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.269392448 seconds)
    (183/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.270014941 seconds)
    (184/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.399613306 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.493808909 seconds)
    (186/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.27084968 seconds)
    (187/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.474177056 seconds)
    (188/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.354232121 seconds)
    (189/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.503919041 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.449115088 seconds)
    (191/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.273027575 seconds)
    (192/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.282862188 seconds)
  done (took 315.463785871 seconds)
done (took 316.640745756 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.324274571 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.387616763 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.301174882 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.299763236 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.301115677 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.29242586 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.327128409 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.301354908 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.316736974 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.316614824 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.29362489 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.315088451 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.316019397 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.313004832 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.336264543 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.301572945 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.300607695 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.311148084 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.317113074 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.318716322 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.303046137 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.302854987 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.328050285 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.300686742 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.311165964 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.309341434 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.307032034 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.294865781 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.309948224 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.318570812 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.29223932 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.309786292 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.319379058 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.313409196 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.303755735 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.311049846 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.304297355 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.391766224 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.323603877 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.314064671 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.310549915 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.32000783 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.308660991 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.308325236 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.31642315 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.330849095 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.310441732 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.317893643 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.295142219 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.30700195 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.329033385 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.316747067 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.312644401 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.302227923 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.31341187 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.318902458 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.313151696 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.32302405 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.311520706 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.303617883 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.338281457 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.323085219 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.317281188 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.311501378 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.313964999 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.321424632 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.313250804 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.321494904 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.313398228 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.307024257 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.306028661 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.313149418 seconds)
done (took 103.812344956 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.427302194 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.301793255 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.466225367 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.312437127 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.471033568 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.430896568 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.314978741 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.312809812 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.311518572 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.107884587 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.313096668 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.311312035 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.30240018 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.314426975 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.429154133 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.312801886 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.312525861 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.005432137 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.314416577 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.445009138 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.305237522 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.313591495 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.314639033 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.114847997 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.301439892 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.30011322 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.446509222 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.31275972 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.013701051 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.297516246 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.300473428 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.015330251 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.447521458 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.33276669 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.323563443 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.323065212 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.473369226 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.316828969 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.430298684 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.431157656 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.466213601 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.353158853 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.299361148 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.306574357 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.317156667 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.318409601 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.315447279 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.344560491 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.303583701 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.315620162 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.007622336 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.324890326 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.325108637 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.315969689 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.31509586 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.336289323 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.316032982 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.317731566 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.449715785 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.317535214 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.431543955 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.117459323 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.113066601 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.317156334 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.303198883 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.317064118 seconds)
  done (took 106.790443839 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.374757526 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.382751079 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.416733974 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.309029714 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.357683296 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.418344051 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.30718548 seconds)
  done (took 10.760160302 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.314720602 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.316175374 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.354558062 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.355697703 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.317491567 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.480633823 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.318283204 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.319635526 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.318019139 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.359401752 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.318676678 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.317733868 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.327665288 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.306672965 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.355792315 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.321022273 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.426536889 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.310148822 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.317184735 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.462122487 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.318420296 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.327812627 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.358232678 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.320798224 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.321057868 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.315401632 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.091929026 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.318932289 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.317873621 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.318380034 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.318188935 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.377907803 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.319974848 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.307586734 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.318932496 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.423286331 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.319842323 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.318331348 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.319821303 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.3109558 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.318711025 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.32096999 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.318418386 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.319490176 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.32005138 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.334906235 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.320060583 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.319232081 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.319264387 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.319713143 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.36105283 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.319160427 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.318972988 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.318913835 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.366944682 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.328962136 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.320607445 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.319706633 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.319060502 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.32077303 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.463469254 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.357080642 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.32159228 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.359614306 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.32151519 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.321152319 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.321980576 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.320143816 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.401543991 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.32065102 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.357567824 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.32029272 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.492600475 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.337472109 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.322474039 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.31566817 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.314472736 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.321507049 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.309188163 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.318093732 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.321317675 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.313722765 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.318015708 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.321789272 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.322308361 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.472721241 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.419490811 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.321161584 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.328186663 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.320621243 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.320628586 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.364783947 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.32240646 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.322697591 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.365942962 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.431886124 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.365046038 seconds)
  done (took 135.83743761 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.326534797 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.326410606 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.317285126 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.342230901 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.315025566 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.314700753 seconds)
  done (took 9.142970506 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.315171997 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.325720441 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.32472782 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.323804376 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.322511264 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.324469295 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.322619502 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.318076326 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.330092049 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.324417983 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.325132781 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.325270954 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.326789084 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.326370531 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.325992048 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.325259879 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.325727763 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.324256015 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.325290693 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.327130129 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.311420023 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.325623822 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.325968938 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.31820897 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.330207933 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.325978029 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.341297241 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.325448482 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.326754306 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.324620994 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.328565223 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.328594224 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.316940094 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.321759018 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.328735787 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.32037001 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.329820182 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.328499311 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.32599053 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.327979676 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.327160354 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.32748233 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.326950145 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.327510156 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.318419196 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.320797459 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.331995334 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.343235519 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.326945037 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.328654866 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.328477138 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.328195355 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.331674468 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.327765481 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.32374656 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.322623388 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.331492678 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.325688452 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.327787397 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.319395197 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.331165479 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.32781891 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.321865668 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.332127479 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.32936401 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.32921101 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.322885416 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.331725736 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.330111618 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.32911578 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.329232105 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.328720571 seconds)
  done (took 97.694804188 seconds)
done (took 361.418321555 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.618181064 seconds)
  done (took 3.826100885 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.5818297 seconds)
  done (took 3.789429144 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.818990612 seconds)
  done (took 22.277633913 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.322086699 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.328301796 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.323091021 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.328172172 seconds)
  done (took 10.510380008 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.578661584 seconds)
  done (took 3.785975935 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.327230192 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.324037488 seconds)
  done (took 5.86367404 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.485125693 seconds)
  done (took 3.691673185 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.555569161 seconds)
  done (took 3.764137956 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.348524675 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.331882936 seconds)
  done (took 5.895030595 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.298408165 seconds)
  done (took 3.50430029 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.398413353 seconds)
  done (took 20.607664677 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.347786132 seconds)
  done (took 3.557485565 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.351209813 seconds)
  done (took 3.560086575 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.745209032 seconds)
  done (took 5.950738704 seconds)
done (took 101.789328127 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.3192575 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.324134209 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.313390681 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.316295854 seconds)
  done (took 10.477675544 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.398253236 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.395392099 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.406007932 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.389331855 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.389575091 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.397007427 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.356371385 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.371608185 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.388142688 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.384143268 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.399902784 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.390612555 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.398801648 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.357324932 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.38345312 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.399322929 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.387848568 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.404073695 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.360552002 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.393622359 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.336382742 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.390131468 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.385099784 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.331629718 seconds)
  done (took 34.400102331 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.84739936 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.395539355 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.48205343 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.374453112 seconds)
  done (took 7.301758604 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.443200615 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.437003465 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.453050672 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.494052285 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.521140392 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.456265435 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.359492824 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.355156669 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.341628463 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.439865137 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.524259336 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.436813238 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.652271167 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.333146626 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.650479761 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.335053633 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.334381903 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.439052878 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.487947119 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.518592444 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.33323233 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.437029666 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.441149133 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.439053983 seconds)
  done (took 35.877003707 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.343591252 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.352433652 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.336501954 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.350570548 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.337950744 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.336315258 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.336899092 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.341818082 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.334184745 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.336816877 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.336778536 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.350844853 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.337597344 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.338028752 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.346230629 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.340006425 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.338094509 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.344919661 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.345530468 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.33638913 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.335647225 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.34260265 seconds)
  done (took 30.714121231 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.323663079 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.322350613 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.672028495 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.578689996 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.324971885 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.321091201 seconds)
  done (took 13.756063801 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.394470505 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.530086806 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.326974991 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.662993244 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.748021045 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.330527939 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.331878356 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.566688904 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.853772972 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.842605737 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.389042914 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.402524088 seconds)
  done (took 19.596343526 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.330114965 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.330247535 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.334475358 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.34394754 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.384797308 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.340348095 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.336250672 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.326555646 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.386307453 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.383178618 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.334428302 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.383363865 seconds)
  done (took 21.431666629 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418056716 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.329658457 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.337046677 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390037994 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329693286 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.332402893 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.38765584 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.01133363 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.339862219 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.608663516 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335635098 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422122197 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.581760649 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339440897 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.336609573 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.306189059 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.564001194 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804180969 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340326844 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341322214 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365592196 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.337354517 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.336184619 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.532620827 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.341909331 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337826003 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.600429491 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.334227016 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.608832893 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.58731165 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.591920669 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341538664 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613943523 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969286044 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443024299 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.529286228 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334067851 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.334935719 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.336482094 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.336913877 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347244019 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.336775798 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.590186816 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338597943 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.337895794 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336998842 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.04323157 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.345174879 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.336228378 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.340641031 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.590567008 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421769205 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.345337403 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.340571562 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333279563 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33737698 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.346094867 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459034852 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977353693 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338717658 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359087184 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.342618393 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.335050799 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336578785 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987956235 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.345108603 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.348517516 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.343890876 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342566462 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.347879555 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.360012348 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340334347 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.359646943 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339344543 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102640651 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.353368866 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338012333 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.858938648 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344955193 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.345506232 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.567657977 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338554987 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340808406 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.342505411 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.341365392 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.05599634 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347064848 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.309470537 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.384221541 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.025574755 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.531373744 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365007338 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373083108 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.560564325 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.311752026 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343546766 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.338879934 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340237887 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358782906 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.026715192 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341718794 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.343999655 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.588571241 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.552534013 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349666769 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.314611232 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.790360612 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347853815 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.365036567 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.352626665 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.540100901 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.948203938 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.602185186 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34641849 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376720616 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.34361867 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114394687 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347351654 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.353540539 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.355813187 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619680109 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.145802166 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33940703 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4199228 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347412141 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.343184009 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344311623 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363236522 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.34707475 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.518823534 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360863584 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.600484414 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.34691424 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341397605 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.350700905 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348737672 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.364250765 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.564665858 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347987924 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62335706 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342537062 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342932826 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343453571 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.559393409 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.345429334 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.35490055 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.683092576 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350386407 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.357905516 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603316809 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379823353 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453825474 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373246083 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.353934232 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.595204261 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.351716109 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.34988311 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360190496 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.352018356 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351423543 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.351457173 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340088604 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952589463 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327939973 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.350537678 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.344365335 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.36023101 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420733377 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.354190134 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.537189748 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.352062404 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352078728 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.358552708 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.348912467 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.572155138 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598062401 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.351875577 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.526272259 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.799332438 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.955358539 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.366082604 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.346417435 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.345750309 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.347262077 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350195435 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348374932 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.346521451 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.539955517 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.608439395 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.35009812 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.962865996 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355695403 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.354258065 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.360718519 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.600035747 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.36059968 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346175711 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.349664678 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354228888 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357702306 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.605046029 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.574424349 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.365361793 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.349954015 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.908039132 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.354607839 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.350639419 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.348761521 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374480472 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.352687518 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.16571248 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.687612864 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355637329 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.601879634 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.355785541 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.369314069 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.34671072 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355147544 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354190656 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.364852959 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37416529 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.5434247 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.356115983 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354470316 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985572481 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.118488336 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90466646 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366617136 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.34962029 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.354281402 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.035383666 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348917512 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349181891 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592039723 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.037092095 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349008854 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.794936233 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.365126942 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.082523904 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.605273139 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.575580112 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359911001 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.358244578 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.603011645 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.563710405 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376445019 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.355694959 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35468102 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.318566247 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.868660378 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349430482 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.52723757 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036345903 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354740228 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.352807716 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.359735167 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.349516185 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.75141551 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.356679644 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350145309 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.355645838 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.369131066 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.166087373 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.356124319 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350866761 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987448711 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.361376606 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.805703405 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350843248 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.548117495 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.608738136 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.580227976 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.353379231 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.355628792 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.617373313 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.605713989 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3523286 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.35065292 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906313343 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.215254883 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.361430499 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354808141 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.123788328 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353454401 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.649757873 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.355379566 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.376170139 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379416093 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.356037124 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355840736 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.353329683 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.356545632 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33041506 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827314262 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.355029141 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353602925 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360242361 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374584304 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.603758146 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.368835216 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.963564549 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.583826724 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345844186 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385098717 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.35805927 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353589546 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.324257668 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.357357165 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.357020366 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36911143 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.576400466 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.352888674 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.330226604 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.35143849 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.564551653 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.353448419 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.353672518 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566884 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.362127222 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.372743217 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14721507 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389951131 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.357427827 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371430473 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.350702015 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.393497338 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430328575 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55182739 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.613987393 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.610215889 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.735372872 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359814594 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374341676 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.373718137 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438062308 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362286045 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.363920551 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.362630998 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.966880631 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.133636248 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.976908602 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.617703913 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.358564088 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366804534 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357364292 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.596828351 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354164625 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631327023 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361136989 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.34732913 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383296037 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371879165 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358478977 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.572299594 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631296432 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355331225 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360696341 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364568133 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.357554406 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616119221 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.57163499 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838900668 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887519539 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358550688 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.372455978 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.054749686 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633592248 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360832493 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358420339 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357327414 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.36129555 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.376822079 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.371269658 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359425938 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.586840223 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.616247252 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999007952 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.608777322 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.544077846 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.359758918 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358538431 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.61308546 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.190909133 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.557465095 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.982748502 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.077926015 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619454278 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436592973 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.558766404 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.366607584 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.595215738 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.374303834 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.365322337 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360014964 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359292916 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.359351324 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.612976191 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.971071695 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619847749 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.365661571 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.370626767 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391423401 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.559446267 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.588478015 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.084434087 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.582895388 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622249883 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.368006835 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.364864938 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.98436682 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.621237528 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358138461 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.364866471 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570530538 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.36776158 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.400526118 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.239932224 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.36431342 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894391968 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.573612259 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384397883 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364940647 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.084377251 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990225858 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.372138551 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842510959 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363347933 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37294142 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643432994 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.372791611 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.370340152 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64904208 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.370238296 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.37078719 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.568854153 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.979889138 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.115269897 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.375064103 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385939582 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.382890946 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364442542 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421194165 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363510292 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365113088 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.755354467 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.370111158 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368530539 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.37919958 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.365739492 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37287447 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.368294998 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368859501 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.368961711 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.357601439 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.353031835 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.375294574 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.483693963 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894392224 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365544314 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.983965881 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.703725392 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.61463182 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.372793249 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.341300795 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.373031285 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36825464 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36742824 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365126314 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.371749012 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.896656123 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.369180496 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.628427516 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.373946964 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.57714522 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.57689044 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.368078518 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.571867963 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380654769 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391298828 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.333472617 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367614386 seconds)
  done (took 969.404477337 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.365551128 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.357005729 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.383132728 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.424998976 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.369517837 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.365029654 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.37022143 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.420567388 seconds)
  done (took 20.299421298 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.361723622 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.365997449 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.364119436 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.367566474 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.37127798 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.895955289 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.361210007 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.367874917 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.38239036 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.371545361 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.364391345 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.019837464 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.373324268 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.36555739 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.373437764 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.371118111 seconds)
  done (took 32.320538 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.089479141 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.382741149 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.910152917 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.395107124 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.394754421 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.361369327 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.500104594 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.373997712 seconds)
  done (took 25.650423629 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.376839258 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.378037285 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.374157879 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.373307242 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.376457578 seconds)
  done (took 8.125199023 seconds)
done (took 1230.56605857 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.379600672 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.376950687 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.379148931 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.379282888 seconds)
  done (took 6.763882864 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.341785109 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.339023182 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.341449043 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.350099399 seconds)
  done (took 9.621859408 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.036075155 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.883189924 seconds)
  done (took 5.169304286 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.90169062 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.898438283 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.895209897 seconds)
  done (took 6.940040993 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.651827883 seconds)
  done (took 2.901565452 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.342883163 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.366709318 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.076237103 seconds)
  done (took 8.034782751 seconds)
done (took 40.680778359 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.363921507 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.121858493 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.545232183 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.36626295 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.521292438 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.521897967 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.613166105 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.363105406 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.367064988 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.370851017 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.358977735 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.524470263 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.598782907 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.129985361 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.601600462 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.127347803 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.525455058 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.376760798 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.375027341 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.366991555 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.608259373 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.362693838 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.362862866 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.39093438 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.523079179 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.511979023 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.379107284 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.122394745 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.379380872 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.360042679 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.506179334 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.369435032 seconds)
  done (took 82.26784877 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.368090893 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.37399226 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.373431413 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.363677896 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.384359715 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.373887626 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.360991065 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.362510997 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.360494697 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.361391774 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.365956594 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.380609247 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.365991945 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.364688429 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.379043552 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.362877428 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.378149132 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.364542232 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.363780039 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.378648465 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.366037673 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.365502086 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.391194275 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.364041421 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.372302269 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.380306453 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.363991618 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.379321656 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.363872593 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.365830743 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.37002743 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.389483947 seconds)
  done (took 77.110719932 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.367829406 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.365809816 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.383929774 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.370235167 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.376452445 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.367137362 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.365501818 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.379999141 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.36689378 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.37228176 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.365015337 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.369059295 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.365396003 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.361970638 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.367200228 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.367288802 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.378525581 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.375485246 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.369171246 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.372058695 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.366239781 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.382073085 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.364981189 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.370590082 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.367773691 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.380228731 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.374782181 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.365186528 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.368359453 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.366839272 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.38675977 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.370146482 seconds)
  done (took 77.122410582 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.612378093 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.386537652 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.385985379 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.380114548 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.384218642 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.38175858 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.37934431 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.615874258 seconds)
  done (took 14.775670288 seconds)
done (took 252.527703998 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.378333901 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.87475161 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.407339002 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.380695943 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.401704391 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.405400722 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.595165645 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.410383217 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.602807296 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.405644631 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.393680109 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.380784692 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.179921592 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.526019736 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.193349007 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.313662895 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.234955183 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.379518313 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.92996624 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.661255162 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.405733934 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.374826279 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.188921255 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.254921437 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.358224548 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.458940569 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.471474586 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.61191 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.538065641 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.459751589 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.879471512 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.398032283 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.382838165 seconds)
  done (took 64.096664667 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.378775108 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.387159913 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.392249843 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.39098827 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.390246129 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.386095253 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.379575624 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.38460336 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.385214529 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.392193239 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.392373267 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.390515949 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.389047249 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.385931638 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.387102587 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.364363028 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.378346499 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.388291968 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.379614363 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.366756595 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.390671412 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.388643378 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.391680947 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.391856103 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.388336472 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.387703821 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.392640207 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.391269758 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.388751735 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.391328647 seconds)
  done (took 42.85495929 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.388721388 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.93636178 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.109617739 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.389397664 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.380218499 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.389434827 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.664702077 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.393031007 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.389488777 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.38471731 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.842007681 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.398565643 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.417703873 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.112937959 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.383920186 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.391138792 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.392253678 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.389424841 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.938407891 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.396343689 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.660984281 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.39176176 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.665255118 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.394814214 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.390586092 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.387515151 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.393472161 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.183122052 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.40920149 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.83887506 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.141260894 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.661053701 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.135843383 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.165872597 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.133095663 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.396384034 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.398521548 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.844287426 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.391672826 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.388843219 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.662633736 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.386948565 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.121028323 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.069547846 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.40241297 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.396986702 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.209961064 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.845849719 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.626438189 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.39468207 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.151911865 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.392049517 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.399111365 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.392123589 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.619865946 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.394245357 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.387338988 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.228370647 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.394906009 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.661940667 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.399652242 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.385182246 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.943283593 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.393624719 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.935209157 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.392748674 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.3932855 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.387072243 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.126130417 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.39129905 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.101324569 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.404919204 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.397954475 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.841265973 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.940016853 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.25287882 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.385042264 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.94279943 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.165065405 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.684894348 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.39446619 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.160887663 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.687981456 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.396439755 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.398110583 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.402805317 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.395530174 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.461941368 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.663152896 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.005448191 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.082876894 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.242315702 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.669752379 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.398304935 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.388908112 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.241791193 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.404521198 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.398036369 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.118351495 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.089326559 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.405685999 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.396069615 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.078315485 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.405215675 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.674854096 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.400409963 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.16475855 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.389939428 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.459076289 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.398864878 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.400762708 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.39338904 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.670980847 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.398094516 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.397588924 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.069932017 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.867744086 seconds)
  done (took 193.702448191 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.386236156 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.380519991 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.387751096 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.378488719 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.386753643 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.39518008 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.384251 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.382631046 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.387086448 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.385223483 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.387202165 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.392766689 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.391866223 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.38363953 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.387286027 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.400864993 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.383617781 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.386007509 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.399545957 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.386491753 seconds)
  done (took 45.022903344 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.401710643 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.947129484 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.906843159 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.406223398 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.402315739 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.390894894 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.444753985 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.406026585 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.403969638 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.69280058 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.559316855 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.405472558 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.400954422 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.403355965 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.910107442 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.374777425 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.690915589 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.939119353 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.399830909 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.94346214 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.373553509 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.40361571 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.389831528 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.945722204 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.697629646 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.670213489 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.449919885 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.947660475 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.399980713 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.400580055 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.946806082 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.407962599 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.3956002 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.927529391 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.397420396 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.420652776 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.399641475 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.449228234 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.455781057 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.690648121 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.938871398 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.681063954 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.409363096 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.559315687 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.406335193 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.374415366 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.947267918 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.403968236 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.373025964 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.40521857 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.412243563 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.924097781 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.399757479 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.923430966 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.399258665 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.404346165 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.939957602 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.918616657 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.916418327 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.563680795 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.399481557 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.676071791 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.398569651 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.951509855 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.399779144 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.403358219 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.403713036 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.563143957 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.955890041 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.676780124 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.694579795 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.685048554 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.400430562 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.465906769 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.410338037 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.692587302 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.458079389 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.783658864 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.694727647 seconds)
  done (took 126.288051157 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.672477593 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.50616095 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.779265811 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.971605732 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.890294747 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.529881834 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.513303641 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.645927036 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.402303007 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.516066402 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.036324536 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.486174544 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.139764795 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.467054298 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.508715056 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.524514659 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.791410141 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.361542373 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.031542569 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.014945847 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.39917618 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.492520267 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.925727968 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.607232459 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.395862372 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.960604627 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.3119095 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.90113721 seconds)
  done (took 53.058491617 seconds)
done (took 526.276898155 seconds)
SAVING RESULT...
DONE!
