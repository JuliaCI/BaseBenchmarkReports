cset: moving following pidspec: 21772
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.352000016 seconds)
loading group "string"... done (took 0.547486396 seconds)
loading group "linalg"... done (took 7.145853076 seconds)
loading group "parallel"... done (took 0.157586232 seconds)
loading group "find"... done (took 1.094502825 seconds)
loading group "tuple"... done (took 1.731571283 seconds)
loading group "dates"... done (took 1.190753045 seconds)
loading group "micro"... done (took 0.216775395 seconds)
loading group "io"... done (took 0.991828078 seconds)
loading group "scalar"... done (took 37.401771053 seconds)
loading group "sparse"... done (took 11.202984906 seconds)
loading group "broadcast"... done (took 0.90599553 seconds)
loading group "union"... done (took 11.909826291 seconds)
loading group "simd"... done (took 4.144556916 seconds)
loading group "random"... done (took 8.508109725 seconds)
loading group "problem"... done (took 1.852949758 seconds)
loading group "array"... done (took 19.799690049 seconds)
loading group "misc"... done (took 1.633244597 seconds)
loading group "sort"... done (took 3.142595584 seconds)
loading group "collection"... done (took 16.411690227 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.488673163 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124131869 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.115271919 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119137157 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.146703631 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115446514 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123727293 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084628033 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.778581175 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148822345 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.120242783 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.419002122 seconds)
done (took 5.091696335 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175102732 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082871566 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081892342 seconds)
  done (took 1.287138298 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066030871 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121982442 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067497584 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066960298 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06720915 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066595929 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066669735 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066399462 seconds)
  done (took 1.647221046 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074228734 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069450337 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.0697438 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068984245 seconds)
  done (took 1.408694048 seconds)
done (took 5.718997441 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.774793789 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.202674399 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183774133 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.403817372 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.130718401 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.155645198 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.645616534 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.316510843 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.18437537 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082292125 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.105333712 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.320965717 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107974968 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.628233708 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075389674 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091018527 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.13635502 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.412245368 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067909633 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082410527 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088909838 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128390461 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086441967 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075388397 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143299272 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068595304 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.131323245 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080794785 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067124022 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.210027632 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172908972 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.64974105 seconds)
  done (took 10.172364501 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097305128 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098523087 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06916328 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137487445 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100126788 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072830938 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073250999 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067999134 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087515792 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128565115 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089496329 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.1024408 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065702753 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06904614 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084860622 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203829529 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080634748 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081609403 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.07059788 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075651869 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.117107866 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078728727 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078220545 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078491092 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12883704 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180020528 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099598626 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098366206 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067458254 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081001313 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.118298316 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128732041 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067694678 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066558578 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125140895 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09696597 seconds)
  done (took 4.631895932 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.30351775 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.141302255 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090683559 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.132814403 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065082252 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107419637 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065696374 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081022598 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.201028081 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.35771475 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.584330401 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111688133 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104991543 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068584133 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.110444315 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068054666 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06537826 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.0672092 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.362299322 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.109111773 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103873012 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080896284 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070100047 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068979435 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.341679529 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067981101 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06397112 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068197797 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057910164 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124333 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067443496 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.927350284 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125173609 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066566996 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100450504 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.167689372 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.218044956 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.143956762 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068619073 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064169192 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.151216379 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070197888 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066366203 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083807787 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10448051 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112976369 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065825402 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067026849 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161761352 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065715086 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079383915 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.988572181 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15447799 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078239379 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064917529 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.247702063 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086272367 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069874424 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065416946 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.181791294 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.14028243 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067749812 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066500042 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068854868 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069637082 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.367561056 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066599981 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.720300511 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.07070317 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077589618 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069430467 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069612933 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073133684 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072528593 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085898617 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064382808 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066122433 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076024017 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066246622 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066495609 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066926037 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084674636 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.360457633 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06909611 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068889571 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064611415 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086563327 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100902386 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066690327 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06550963 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100590578 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.171022259 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067092731 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106856861 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067367286 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084524068 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064957164 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069508855 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113416926 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067749215 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.077782282 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068533065 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096968304 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070328891 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099127931 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081362288 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068067829 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.398595912 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065749778 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065375748 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068100907 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066330487 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068023818 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066695138 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079924251 seconds)
  done (took 20.974506166 seconds)
done (took 38.209307267 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.272120491 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076508806 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.07607282 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075682939 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075588336 seconds)
  done (took 1.789396568 seconds)
done (took 2.989128732 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121015476 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099806473 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064388843 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096121392 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064860392 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10071452 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099604201 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080918444 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099715088 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064211885 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096535482 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064807487 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064577165 seconds)
  done (took 2.327393317 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083372965 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083494549 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070018789 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082621758 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064229369 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082747341 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08097108 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088485541 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080970549 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071851917 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063958135 seconds)
  done (took 2.045375525 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082176689 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083803331 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070235861 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081961 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06396165 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081611583 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081314176 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085546706 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081534218 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073614373 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064131158 seconds)
  done (took 2.040446031 seconds)
done (took 7.600773218 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077991136 seconds)
  done (took 1.258364517 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.599376441 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.286882363 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081782044 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.113408405 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.184453185 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.120448181 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.284742675 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087828299 seconds)
  done (took 9.124323347 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.08955818 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068759757 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068698358 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068818004 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.082520122 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072407535 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071520396 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069350694 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071707817 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071157603 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070290946 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071894389 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071840125 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069397865 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06920238 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071057255 seconds)
  done (took 2.418706799 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092916534 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091405966 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074290974 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075008874 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07235265 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072326219 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074707566 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073723829 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071309469 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072359619 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074841664 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074221313 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071886547 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065437312 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07449912 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076173223 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071376455 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075004868 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075506031 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075372375 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074954418 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064778495 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071745482 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073929087 seconds)
  done (took 3.081894299 seconds)
done (took 17.076094293 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114974384 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072030916 seconds)
  done (took 1.378192511 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083297782 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084239885 seconds)
  done (took 1.366937282 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085722797 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065602187 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093357976 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079682754 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066532062 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066609829 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.090154486 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066441626 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066192983 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066834077 seconds)
  done (took 1.946181771 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069420126 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079981533 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071773183 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081541377 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074669617 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065026746 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073629986 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068405049 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078832994 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06351413 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072348691 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083618766 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07193197 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085426999 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.07314928 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069856092 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071752252 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.0681454 seconds)
  done (took 2.524679625 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066481618 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.0681993 seconds)
  done (took 1.343447881 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068581168 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064337288 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06850366 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067937865 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064173676 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063001 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064212227 seconds)
  done (took 1.664945275 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.386248464 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110464136 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.295913719 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071587485 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082240885 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.249913605 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065597294 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070723199 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070629473 seconds)
  done (took 2.650959856 seconds)
done (took 14.084988897 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079687047 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085443026 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095221777 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.363632821 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092417732 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.0662641 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113867448 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.193125801 seconds)
done (took 2.311174911 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.217685113 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.619561463 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.389910581 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.197525301 seconds)
  done (took 2.416721523 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.328541973 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086665816 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058758101 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067021829 seconds)
  done (took 1.76099944 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067888289 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069120756 seconds)
  done (took 1.354048173 seconds)
done (took 6.966539255 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068148674 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067035412 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.06409791 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066359927 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.06380269 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063966452 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06597549 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06603059 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.065719185 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.066106634 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068930787 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063489194 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063730607 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084890517 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065477427 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063623419 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063471937 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063861922 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063271142 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066357189 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065836562 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065619555 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063701558 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063495313 seconds)
  done (took 2.8327424 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085440892 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066739239 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071982281 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072045245 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070338837 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071651788 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071187052 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066292106 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.07158337 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068204308 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070435868 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070240647 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068220816 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07032187 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068419582 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07078294 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071426204 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066842109 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068648787 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070187098 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071171606 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066704204 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069758642 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071103633 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070130609 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069988797 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068175097 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066435249 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071168953 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070252877 seconds)
  done (took 3.330218139 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.07072469 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063558161 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064421956 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070792353 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06396541 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065674 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063345265 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064314171 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064441987 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063357676 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065226573 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063230646 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063736625 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064616108 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064407905 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066933627 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078798771 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063730988 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063429864 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06442389 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067209377 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063758225 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063868683 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063711211 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.175177835 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063382196 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063798743 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063737098 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064307769 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063392813 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066883916 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06776979 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063479616 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070213626 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067137821 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063302451 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067203109 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063081075 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064268043 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063245735 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063172427 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06354383 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064245833 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070013849 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063423272 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064978295 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063406374 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064999127 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063685244 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066233101 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062970965 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063184951 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065252241 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064295721 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067248668 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062842245 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064285073 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062910199 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064535548 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.0633381 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062843575 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063096537 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065804564 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064217674 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077552295 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070088002 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063391211 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065253686 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064746357 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066137273 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065036681 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076347719 seconds)
  done (took 6.04326897 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093013156 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088174958 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065602128 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065133902 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062148117 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064335301 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067530393 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064210918 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065569265 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.0701329 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064375564 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065504973 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065388219 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07677007 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064239315 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065562596 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070445464 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062203518 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064936271 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067590613 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064443546 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069151885 seconds)
  done (took 2.746893417 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156490881 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070607442 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107304249 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073706631 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068163263 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073705869 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070047122 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070356789 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070576554 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068741046 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068698562 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070087128 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067771561 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068293263 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068074394 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068602419 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069957533 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068705028 seconds)
  done (took 2.610736869 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078594484 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066053907 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087564332 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066059539 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066413089 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068865648 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07125191 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074759651 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068501938 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066115082 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074468827 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068093714 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068332907 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066009608 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068472607 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066493614 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06851932 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066694689 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074807422 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07100146 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070763175 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074056461 seconds)
  done (took 2.783493302 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081124385 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068074956 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083833138 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06864811 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062302648 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064338141 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070436763 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066037179 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070247446 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067842344 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066355003 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06440178 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069514425 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065712577 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069766598 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066154432 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06769971 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065992506 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067939024 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062464239 seconds)
  done (took 2.601792276 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087561255 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068443103 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068064732 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077055253 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06794242 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068218476 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075621585 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067486017 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067323239 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090123434 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067526736 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067503743 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075667296 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072352102 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067612788 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075394222 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07535525 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075172332 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067632029 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067399879 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087295507 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067776907 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075243972 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067475637 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067278378 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068200917 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067407863 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072283308 seconds)
  done (took 3.257332858 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067398868 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066307928 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063149903 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063319601 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063857503 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06329948 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063540563 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063767068 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066098696 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063776925 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066014428 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065811118 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065826365 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065875728 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065968551 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065965159 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065746204 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06377519 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06374337 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063711742 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066028723 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065763106 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065979894 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063506531 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063338565 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065463005 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06326503 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063615803 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065993127 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063241819 seconds)
  done (took 3.180586506 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077325375 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074080439 seconds)
  done (took 1.390918276 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064016989 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080047898 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.0632926 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069743345 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070570534 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066332407 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073712226 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070410729 seconds)
  done (took 1.791464776 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082743841 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077397368 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068391377 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081149254 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.0771202 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083138167 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132964049 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.06730808 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073350527 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065115235 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079974737 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065578875 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072155969 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06643898 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071750284 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07282684 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064384808 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072557944 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068608159 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065139463 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067267131 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074838483 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069177339 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062254549 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067394878 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088035994 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077292599 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065926376 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069523265 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073794873 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07193428 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060740211 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066911253 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067242102 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064618454 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076026586 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081733296 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069544481 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075373508 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067000146 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077242151 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061681779 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07101091 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072790792 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076166412 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066542621 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067240305 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061468342 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064088497 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068935672 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061714498 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066573966 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061337854 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07577941 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069967863 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076810585 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065421691 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.0675243 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069390354 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069944402 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073545161 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068342863 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068860059 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065925885 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076135557 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07075461 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075415466 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061778729 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060898581 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06485363 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076086047 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088740092 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072487499 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066957767 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067502115 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064602789 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069613763 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067388032 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071856258 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072735863 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066622822 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071903429 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073861506 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0667719 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068871993 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074868422 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064971763 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069850453 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064519852 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082783207 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06558151 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064255708 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063932343 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076971481 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069681982 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066210359 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064545769 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073413634 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060154193 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066247947 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066748767 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065963997 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075742918 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069887456 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070691623 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074421135 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073144466 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066268445 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068523323 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062682331 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066371334 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064511075 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072911279 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059819743 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068635433 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066397738 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066203567 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.199383431 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065352665 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068173009 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076451169 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073883401 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066047015 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064314579 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.07092146 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067189942 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071162203 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077065296 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067667443 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064673365 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063927325 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073001067 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.069049137 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072277257 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071986758 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070072617 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061355481 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06465844 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073062734 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075393684 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067468213 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067974556 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072601292 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068893596 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066272684 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073860204 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069740446 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066579132 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072869379 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067766293 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062727092 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070570064 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069567471 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065941752 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070334719 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070945068 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069817311 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067771631 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065938083 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074418927 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067996024 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06602275 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067172114 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066251865 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077947093 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069750528 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062000689 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064260797 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.07731841 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064832088 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066838753 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065867779 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069431948 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067817514 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06463575 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066863423 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068802676 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078044598 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071129153 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068339235 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073340753 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078598793 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066743365 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069456079 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066789689 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067984527 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067602771 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075540558 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072108795 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07171276 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069184723 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063395263 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072804202 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074427166 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066159693 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064336435 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065776371 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070855999 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072689648 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071620995 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067578983 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064902427 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067341871 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070093554 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069702252 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066406447 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065965595 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073683447 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065252371 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074192678 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067687376 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076983057 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070534164 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061978073 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069996312 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06477212 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072625336 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062389941 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064629857 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066325179 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067254818 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064660228 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068209995 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060035808 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072505633 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073087543 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066115743 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06505548 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065691558 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072255192 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067139442 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069221864 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068773907 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07138378 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075982224 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064909513 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068395042 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.203490434 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.06817897 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062233271 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074071624 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067255305 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066955145 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066962989 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066002035 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070656497 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07670773 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.0742173 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06146089 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070535826 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065809958 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067094245 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062853166 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072086969 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070517732 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06861162 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074461752 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068929104 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067892726 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071517678 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06708036 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068613863 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068255789 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070932563 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068267732 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069602767 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067127106 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070804112 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066573256 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065328207 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069555164 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067041937 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067679179 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072899734 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066403944 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067855248 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069879622 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067875323 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068218331 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067541489 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067048799 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071207782 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068416703 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067890536 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069594233 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062835185 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074608749 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066809726 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074448473 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067946559 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063743274 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074373649 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069806642 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073198209 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068317031 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067937891 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069280588 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066829885 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070304336 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074879776 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065420448 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078015516 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075163768 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0679969 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071355199 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06753773 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068626127 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066528804 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068269073 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068044476 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067564537 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066373238 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071542283 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069107588 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066687157 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06819928 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067303923 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066852798 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067354295 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061389819 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065596031 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065649843 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066508325 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07618195 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067118142 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066353621 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065996327 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06752179 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065662043 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063336537 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074958165 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076014116 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067072073 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073749824 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065785787 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067883061 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077269701 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060879266 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065006511 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064120273 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064363088 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073749998 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067629619 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075351397 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065921468 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065143481 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063300432 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066660587 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063864489 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060052159 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063382256 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069097269 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065338437 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064355567 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065757422 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067679978 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06620156 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074679495 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064531426 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.06647337 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065519632 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.193272992 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066264327 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066390827 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069805704 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068256157 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065461235 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064793809 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06658506 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068254063 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068366202 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066581015 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069934673 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07732324 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066843914 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070803974 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071113999 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061927912 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070643133 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067545568 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067420824 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066842051 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071681729 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.0707038 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068508733 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076853001 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067783603 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068936885 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068337466 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065804675 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067407688 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067162131 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067325889 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066947851 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068035241 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075672456 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065593587 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070270488 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066891012 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067780869 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07402558 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069102159 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070231603 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074278908 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067634261 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068636462 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075641986 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071888966 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070396804 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068586578 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068670549 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07374966 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067360228 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074483273 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068077415 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067820687 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068735426 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065310008 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066896766 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067373041 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066640889 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073039505 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067826996 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06711205 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066294729 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064327505 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067312461 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070915345 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074981231 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.07020901 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070573076 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062983038 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064538472 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067934725 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065008124 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068773075 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069099806 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072358756 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068562854 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066810458 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065529814 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075472279 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072352224 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070430606 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064527192 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070429232 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067512195 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069069238 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067615472 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066900307 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068155516 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070419727 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068524699 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066083231 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073679367 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070444941 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067688815 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068322364 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067761461 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067037467 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062146946 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067532455 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068603775 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0717914 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069455174 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066731904 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077211717 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064308086 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066384246 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069251 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066035899 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070794667 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061266143 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067430158 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065945223 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066223462 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061026224 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065055315 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063865819 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.06718594 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064832688 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061137137 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075844006 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07413316 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068647266 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0647166 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.195187698 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062947768 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062466318 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066103645 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068663678 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069253835 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077996095 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066402531 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066035744 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06222911 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067464237 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070605608 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070509517 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064498287 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062585202 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06676854 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070127621 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073161397 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065828576 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066924462 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071129627 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070007594 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065214158 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070353572 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065170863 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071820605 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080373039 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067577923 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068411665 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073923705 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075533074 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068224084 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062431843 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067602244 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070637602 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068131704 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068210042 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068760852 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081735763 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070849914 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066594786 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066004327 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069600412 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066720218 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075660456 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068679876 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06796015 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072005115 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069131613 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075795625 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069648682 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074432252 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069536066 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070302058 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065980168 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067681945 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06573268 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066554566 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068443302 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067816527 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073134939 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076156751 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066584406 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078180599 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075915819 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068861046 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064249757 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066442623 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066617855 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062458372 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067294654 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064942121 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064558091 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065377692 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065804491 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067846038 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071930626 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067627298 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067640493 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066312775 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060666886 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068806901 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068987975 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067098523 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063255204 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066897846 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067140652 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070852091 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069767838 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063985574 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068599063 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.06823173 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067474167 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061841281 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073366712 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066092388 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068847372 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066378787 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067002216 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067792594 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070215035 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072006359 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068145655 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069193199 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070683129 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06890834 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063886776 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063824959 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071347867 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064080756 seconds)
  done (took 42.853472898 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101391816 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063220607 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062470799 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062610349 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074498872 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063244188 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061974709 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063312176 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063742624 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065854993 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062366438 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062388053 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071418752 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078725155 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074779408 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067213846 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062201827 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063559346 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062393464 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063481008 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071411474 seconds)
  done (took 2.757593749 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075763868 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.07112717 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074014462 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076288532 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067715709 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071105155 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072936788 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071346306 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07737892 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067621223 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076674263 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07960867 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067625025 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.06764495 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067699512 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071236563 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076160816 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067674937 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.07085749 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073427955 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071356682 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073145284 seconds)
  done (took 2.900349626 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067109168 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066195976 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068523172 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061823215 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066676379 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061665311 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069940578 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064641604 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069905069 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065603134 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06577379 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065241084 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067773306 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061821515 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066073059 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064290904 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109466852 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069688392 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065719267 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066788285 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061732274 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068053054 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062064254 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062442259 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06525994 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070239063 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.06673159 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064512432 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065916012 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065301907 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065902848 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064031556 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067439149 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06714022 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065440646 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065373675 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065970548 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065936222 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061719085 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064524141 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066649547 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061882599 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067311892 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067775112 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064341998 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063887774 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067846898 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.06571727 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06187421 seconds)
  done (took 4.572329723 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081609963 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109846485 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067903148 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088905461 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080585568 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075825658 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069696309 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089624622 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06356966 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064730221 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082075365 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.08032786 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066336944 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070872559 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073071204 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066238432 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067105784 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065150781 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070214043 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065357352 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070170386 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072664824 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.08051334 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079912646 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069857996 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065064542 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06558306 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070078428 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078571386 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070276922 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070271575 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071605649 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081084659 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072092934 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065134314 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06831158 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082234947 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066291869 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068056101 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063373478 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068173943 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069932607 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072265983 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081968353 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066199308 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071496723 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065982014 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062980305 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.07922039 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068074755 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073503615 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080198615 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069689471 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065936278 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070143567 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080665793 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065874938 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063917216 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068882143 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078055733 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06354019 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069776255 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079607429 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067504642 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072803125 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079970397 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071032726 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069672385 seconds)
  done (took 6.379894918 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076887773 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.073297063 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08198917 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080829253 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072586614 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072776486 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072732238 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072903807 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072428233 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077313885 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07272384 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.094088331 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068230403 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075394486 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072560807 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072876606 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072471584 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072859072 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072662053 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07274722 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072750301 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080230664 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072919619 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080704065 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098660987 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067930675 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072612502 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073058714 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081127656 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072919684 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079750252 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072629289 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072822957 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080773544 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07964356 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072570644 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065534052 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072124142 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072514953 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072737009 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068087818 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08064346 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072361955 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067542306 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07284383 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072423178 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080548362 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079881736 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07546352 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077753716 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072585848 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080614688 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07216903 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07234928 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08055045 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105154049 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080308371 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080817275 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072313369 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080410426 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.0807901 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086458303 seconds)
  done (took 6.065727734 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085018938 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075489478 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076937197 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061654921 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064218306 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070480845 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064303891 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064328118 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074997066 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.07474129 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077326551 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070707856 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073385 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07720692 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070300455 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073331979 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070015899 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070101777 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074323129 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070019589 seconds)
  done (took 2.777397617 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075432278 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083683528 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067331964 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072982941 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069353076 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071941501 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068443413 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069047573 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067270378 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069439128 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076229152 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076479468 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067180757 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07190984 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075942836 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07226162 seconds)
  done (took 2.484907468 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.077573273 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072526515 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080838112 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067370347 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064445611 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062985401 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06584451 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061715126 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062862902 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078341642 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066083783 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068732156 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066304593 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064892348 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063141305 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068937657 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062516218 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063534924 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065801913 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078224782 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077262527 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06494406 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067011625 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06609032 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066580126 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071568949 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066086584 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063926247 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063492058 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066498253 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066587433 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.0696959 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063313967 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063964637 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064665336 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063821526 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06592734 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066235431 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069037543 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065773374 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063970349 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065763844 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065873075 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066920154 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062469624 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066393598 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062325651 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068153754 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063939148 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066634497 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065705357 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068305633 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066458745 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072793193 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068873407 seconds)
  done (took 5.021716784 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080311659 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070284799 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061804529 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064251795 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069529862 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067945719 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069273877 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067656548 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067960139 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064877494 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06794468 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068936388 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067713616 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069884839 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067935852 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069392743 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062340501 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06781054 seconds)
  done (took 2.568971427 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072324945 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.0665149 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073351574 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065959376 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065909786 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068266245 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062194031 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064327833 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065347754 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06576155 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066139146 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068553663 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065203036 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068249065 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066269686 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066052203 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068594631 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064657346 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066309652 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062167993 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068199468 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065045001 seconds)
  done (took 2.80233098 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.09391025 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081733955 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.138985888 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079636186 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08405321 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072006967 seconds)
  done (took 1.887995459 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093261842 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079146998 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067029389 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088323454 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074119194 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067792693 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067496871 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068094471 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076784913 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076869528 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067893726 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077021902 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076557558 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07592985 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073860278 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073403704 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067959147 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067603064 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066480304 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0846628 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06791991 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076647114 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067798364 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067470899 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067887584 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07606159 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076536799 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076713589 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067468643 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076503934 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073362757 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067806676 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076449627 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076711523 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069683827 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076940059 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068242716 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085040706 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073794837 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076358126 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069508766 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074239848 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076759713 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072907491 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076422331 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068171918 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072759082 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06811693 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068068314 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086479571 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07427656 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075970391 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073762797 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076713313 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076432808 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086417861 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076592815 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075802833 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073778884 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079149647 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075903496 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073778081 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075614976 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07648637 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073929699 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075860595 seconds)
  done (took 6.248326638 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085209392 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086142765 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068200693 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076780663 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076086379 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068022902 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068255714 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068072383 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067968154 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067777559 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109272471 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068224442 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076176425 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076441386 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068668387 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068067854 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068253332 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075952232 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067628452 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086948266 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067905264 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07609401 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075962686 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076228616 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076891175 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074035063 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068059032 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068388271 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068122603 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068046207 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073491549 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068582352 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076384495 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067552239 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076374087 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068318081 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067912074 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073095786 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068051992 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073575486 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076453379 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08481889 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068087341 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068112178 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07708135 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068314272 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068535497 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067617999 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067895909 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067391347 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076816437 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076579656 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076847944 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075805994 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068060384 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068202997 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067688911 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067936148 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068169456 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073465594 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07613558 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06793058 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08724495 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067693155 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067919111 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07596695 seconds)
  done (took 6.164386374 seconds)
done (took 129.268744142 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.18746767 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.166067368 seconds)
  done (took 1.684682042 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071385106 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09929527 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.07739401 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.12935338 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067059206 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101320634 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099922398 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078294975 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066719673 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066668573 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066716015 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069674845 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13339923 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067156753 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.067185288 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069476058 seconds)
  done (took 2.676768227 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099522563 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.158164841 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099859502 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065331103 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098588942 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073596074 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065663169 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075518803 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07193291 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065752858 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07342614 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071171371 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065068916 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071256491 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071426115 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073518021 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065243785 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073414581 seconds)
  done (took 2.791454644 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103266214 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092598785 seconds)
  done (took 1.551400279 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.157746312 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.10586825 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.151263362 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.348255849 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.168912511 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229914533 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.128115071 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.128472095 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11751311 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123777353 seconds)
  done (took 3.010001527 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101175007 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.15370093 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.25683396 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115944499 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072753199 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.096232994 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116955956 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078720944 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081333925 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081329828 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.08110696 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076990172 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099135479 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075109506 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074307955 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076779611 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103115551 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072717109 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07462337 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077396439 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100219969 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066042028 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074295038 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072528605 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078028532 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078230772 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065750635 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066001043 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077418051 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074453232 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077675782 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094829528 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078001858 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108602949 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070362658 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.109467437 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077142663 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074560567 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074804513 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074606448 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07930339 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079458752 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07262718 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076583931 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065591408 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077198852 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06589764 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065708707 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078604846 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067492362 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07858753 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077796579 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.108383479 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067321226 seconds)
  done (took 6.000329974 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103588166 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104777625 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072217878 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112260515 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100608097 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071740533 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102003952 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.0942598 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103665817 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070568157 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068804024 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.078403602 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082652065 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083567332 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.112782014 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104640894 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074380573 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071019378 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104585715 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.103542095 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069341052 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095680036 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09042064 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10266687 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067791624 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070936976 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068867088 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071291788 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077772618 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079556514 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070480479 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081933445 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085337202 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079438101 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067794906 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06828872 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068612361 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080487887 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080428101 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079710295 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078123722 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068340031 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068339756 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069749541 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070324956 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068236949 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079576666 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081133586 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079754728 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069718259 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070475902 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068343598 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069895047 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081275209 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078799117 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081643066 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081126315 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068868878 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069115714 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072171523 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081676775 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079866669 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079833629 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069972854 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079853154 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068683248 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080813309 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085701843 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068775517 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070365932 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069149526 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070263722 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070346712 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07938433 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079488551 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071278021 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07030325 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069432524 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080986131 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079802438 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068717737 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077923118 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068194494 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069345082 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070597849 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07048155 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078642225 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.0804314 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070567448 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068825236 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069232722 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068416208 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066613502 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076284661 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07882726 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078266431 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078523538 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069199256 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078609402 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078208798 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069271968 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078572846 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06801069 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.19803239 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070731091 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080456237 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079402176 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080168906 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070180707 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069346061 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079928353 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081983489 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070245203 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080042991 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082275863 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.081917566 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068668802 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083101345 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070088359 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081270114 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07091628 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08150751 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069925207 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081326083 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069470112 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069185086 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070308741 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.08127801 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071024552 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069799524 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070553766 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07143648 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.081706574 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083860819 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072088933 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082184072 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080012593 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070698903 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080356658 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070105281 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080670739 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070557854 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071680131 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068497126 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083814113 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.0700418 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069785114 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070608613 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082195726 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069263862 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081057736 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079984846 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069210069 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083328029 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081062842 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078818068 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080232707 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070924581 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069662611 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068462025 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069873673 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078474829 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081448184 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071330913 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069922348 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079150968 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080404472 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.0683347 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079657158 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079472502 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079721913 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068983829 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070301753 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081003423 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081681275 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079212692 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.07923047 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079426914 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069461805 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078461456 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079359003 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069148026 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085932504 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068954405 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.08363324 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080381374 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078242515 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079876527 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081707734 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081630606 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081061687 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084186908 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068908716 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069108004 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080810382 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068638496 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069727637 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078196213 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069755217 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069364653 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082930461 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068234989 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079246926 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067274272 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078203549 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067185716 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069314123 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082761522 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.199712641 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071525488 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082897454 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071654375 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079641482 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082327254 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079492707 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070041131 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070400263 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081912757 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080999604 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.0699746 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070016545 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071155687 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.080513298 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.079429606 seconds)
  done (took 18.833509843 seconds)
done (took 37.907366219 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.21303775 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152974853 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.181917174 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119752655 seconds)
  done (took 2.120706236 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.125323082 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102554862 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095906199 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066304718 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.104382211 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067045322 seconds)
  done (took 1.95329523 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.320181952 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.215755735 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.185856717 seconds)
  done (took 2.108864818 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.201676526 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189993992 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.402371011 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.258277906 seconds)
  done (took 2.550869221 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.146921789 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.091040128 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068349617 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083962697 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.13706109 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.164325515 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102914517 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.128111752 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079320899 seconds)
  done (took 2.445018078 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149596723 seconds)
done (took 12.725025043 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.134790969 seconds)
    (2/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090141992 seconds)
    (3/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.232266719 seconds)
    (4/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.083318206 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.121497557 seconds)
    (6/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.083559361 seconds)
    (7/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.175092207 seconds)
    (8/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.218441439 seconds)
    (9/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.193248529 seconds)
    (10/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067352586 seconds)
    (11/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.083552863 seconds)
    (12/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.196235665 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.08301928 seconds)
    (14/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076384779 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078415703 seconds)
    (16/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070012764 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074476658 seconds)
    (18/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.204896662 seconds)
    (19/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.211056419 seconds)
    (20/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074240322 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092953179 seconds)
    (22/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.141000523 seconds)
    (23/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102083826 seconds)
    (24/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.218499011 seconds)
    (25/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.074123362 seconds)
    (26/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.16636506 seconds)
    (27/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.077482042 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.120352106 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.122465815 seconds)
    (30/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074306982 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.090523283 seconds)
    (32/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073334484 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.092331086 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072370017 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071827323 seconds)
    (36/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.176776471 seconds)
    (37/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.094354642 seconds)
    (38/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.218713833 seconds)
    (39/309) benchmarking ("sort", Int8, false)...
    done (took 0.150519514 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.122764291 seconds)
    (41/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.150936726 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091762755 seconds)
    (43/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074141554 seconds)
    (44/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.176902118 seconds)
    (45/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.117597248 seconds)
    (46/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070968172 seconds)
    (47/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.155454504 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092617296 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074050892 seconds)
    (50/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.159658983 seconds)
    (51/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.196660781 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.086721279 seconds)
    (53/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072693125 seconds)
    (54/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.089699936 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.090385157 seconds)
    (56/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.148656363 seconds)
    (57/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052944861 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.11096215 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067507133 seconds)
    (60/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.07914661 seconds)
    (61/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.156441751 seconds)
    (62/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.170564533 seconds)
    (63/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.181658051 seconds)
    (64/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077462867 seconds)
    (65/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.151259449 seconds)
    (66/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.139024818 seconds)
    (67/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118451281 seconds)
    (68/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.110325568 seconds)
    (69/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.196395461 seconds)
    (70/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075839099 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.08970164 seconds)
    (72/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.110441358 seconds)
    (73/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.08976458 seconds)
    (74/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.179911084 seconds)
    (75/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.07537324 seconds)
    (76/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.150247982 seconds)
    (77/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081539491 seconds)
    (78/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073605252 seconds)
    (79/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.160140954 seconds)
    (80/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.21018917 seconds)
    (81/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.194411879 seconds)
    (82/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.053725896 seconds)
    (83/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.33079042 seconds)
    (84/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.053484607 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 0.067279027 seconds)
    (86/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.068923976 seconds)
    (87/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.068916077 seconds)
    (88/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.189140701 seconds)
    (89/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.153135625 seconds)
    (90/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.052001386 seconds)
    (91/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.153787733 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.09190216 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.141701629 seconds)
    (94/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.052805313 seconds)
    (95/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.052158322 seconds)
    (96/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.157416605 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.076917647 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.102451121 seconds)
    (99/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.109392112 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.098396549 seconds)
    (101/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.136992945 seconds)
    (102/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.099870875 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.136102917 seconds)
    (104/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.052318476 seconds)
    (105/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.100625696 seconds)
    (106/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.052292306 seconds)
    (107/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068835719 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07382322 seconds)
    (109/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069120828 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067014183 seconds)
    (111/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.188184956 seconds)
    (112/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.073857287 seconds)
    (113/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.113294167 seconds)
    (114/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072723689 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.13758828 seconds)
    (116/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066219948 seconds)
    (117/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070924441 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066735651 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08810481 seconds)
    (120/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.078924026 seconds)
    (121/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077092161 seconds)
    (122/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055692161 seconds)
    (123/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063689133 seconds)
    (124/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.18738341 seconds)
    (125/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.053202595 seconds)
    (126/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.053035698 seconds)
    (127/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.097410189 seconds)
    (128/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071482258 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 0.135620154 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074129637 seconds)
    (131/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051894057 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.086548991 seconds)
    (133/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075994662 seconds)
    (134/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076716771 seconds)
    (135/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.106271357 seconds)
    (136/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054047791 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071878867 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072710752 seconds)
    (139/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.078327592 seconds)
    (140/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064698297 seconds)
    (141/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.053169529 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065536757 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072482959 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065590383 seconds)
    (145/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07291846 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.128309599 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06496277 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072429293 seconds)
    (149/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.052237933 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089851414 seconds)
    (151/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073923111 seconds)
    (152/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051594701 seconds)
    (153/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060653752 seconds)
    (154/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06676663 seconds)
    (155/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051833413 seconds)
    (156/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051516073 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073770939 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.10649594 seconds)
    (159/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071361801 seconds)
    (160/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052936424 seconds)
    (161/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087598348 seconds)
    (162/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081210422 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.076412667 seconds)
    (164/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.05279338 seconds)
    (165/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074812937 seconds)
    (166/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051999408 seconds)
    (167/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.166299089 seconds)
    (168/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053885587 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065873119 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067837322 seconds)
    (171/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066079763 seconds)
    (172/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089594437 seconds)
    (173/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.114080512 seconds)
    (174/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.169924509 seconds)
    (175/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078945533 seconds)
    (176/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051681916 seconds)
    (177/309) benchmarking ("sort", Float32, false)...
    done (took 0.128413341 seconds)
    (178/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.150513485 seconds)
    (179/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072434803 seconds)
    (180/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054142609 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087294995 seconds)
    (182/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.173934693 seconds)
    (183/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052388114 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071652844 seconds)
    (185/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051817744 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065271981 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066584984 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066261914 seconds)
    (189/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051804243 seconds)
    (190/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076167463 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087302576 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06512035 seconds)
    (193/309) benchmarking ("sort", Float64, false)...
    done (took 0.125233156 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073341077 seconds)
    (195/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061648569 seconds)
    (196/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.06605959 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.298767628 seconds)
    (198/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.138698481 seconds)
    (199/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066978208 seconds)
    (200/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.101810068 seconds)
    (201/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066852818 seconds)
    (202/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068993372 seconds)
    (203/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.054139213 seconds)
    (204/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089548317 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065640238 seconds)
    (206/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.139774492 seconds)
    (207/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080281943 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088303751 seconds)
    (209/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066936 seconds)
    (210/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076562163 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06662658 seconds)
    (212/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074084 seconds)
    (213/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.09135124 seconds)
    (214/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.08426034 seconds)
    (215/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088275259 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075895688 seconds)
    (217/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.053745265 seconds)
    (218/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.151556167 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09364597 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074127399 seconds)
    (221/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.055785443 seconds)
    (222/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.0681809 seconds)
    (223/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075666216 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.107899027 seconds)
    (225/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.066088985 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087356452 seconds)
    (227/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067229753 seconds)
    (228/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067850951 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071837111 seconds)
    (230/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072628208 seconds)
    (231/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074509911 seconds)
    (232/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.052073274 seconds)
    (233/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.089296801 seconds)
    (234/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.051925873 seconds)
    (235/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.062323206 seconds)
    (236/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.1783231 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064919602 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090748993 seconds)
    (239/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.052601495 seconds)
    (240/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.19924408 seconds)
    (241/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072477374 seconds)
    (242/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.067604908 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.133249932 seconds)
    (244/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051873464 seconds)
    (245/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072822932 seconds)
    (246/309) benchmarking ("sort", BigInt, false)...
    done (took 0.186824583 seconds)
    (247/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064774312 seconds)
    (248/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081827727 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06573296 seconds)
    (250/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.054308499 seconds)
    (251/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062479388 seconds)
    (252/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065877571 seconds)
    (253/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.05172454 seconds)
    (254/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051905427 seconds)
    (255/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.065084557 seconds)
    (256/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.176953033 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091052234 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.112383525 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065980133 seconds)
    (260/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051386339 seconds)
    (261/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073202821 seconds)
    (262/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051417418 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072176562 seconds)
    (264/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051540522 seconds)
    (265/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.05198234 seconds)
    (266/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.06714408 seconds)
    (267/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073205172 seconds)
    (268/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061394077 seconds)
    (269/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.053069572 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073554298 seconds)
    (271/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072152598 seconds)
    (272/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051824289 seconds)
    (273/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053996986 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087756452 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089506662 seconds)
    (276/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052792227 seconds)
    (277/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.135507227 seconds)
    (278/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051937418 seconds)
    (279/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066975698 seconds)
    (280/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.052388521 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065869241 seconds)
    (282/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061914965 seconds)
    (283/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067117289 seconds)
    (284/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051838596 seconds)
    (285/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077697671 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072898719 seconds)
    (287/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065402024 seconds)
    (288/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072485768 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064463924 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064530612 seconds)
    (291/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.053200805 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.133658296 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073330581 seconds)
    (294/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.052131727 seconds)
    (295/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.052210077 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066198637 seconds)
    (297/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066004371 seconds)
    (298/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066471305 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071553134 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089900971 seconds)
    (301/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068160804 seconds)
    (302/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079075827 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093181737 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071248409 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067301475 seconds)
    (306/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.0739452 seconds)
    (307/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.137921978 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.126161557 seconds)
    (309/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051515744 seconds)
  done (took 30.684022423 seconds)
done (took 32.088664786 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087514272 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093277566 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075116744 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093008855 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081113103 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076938833 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072905487 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078513509 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080385573 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082218298 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079091141 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055259809 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074835829 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07433389 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074993241 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09216068 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078801091 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073143179 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073418573 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064950013 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073078793 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066144583 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067813475 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05508391 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078175511 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071604281 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072758873 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074212939 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065802734 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066453689 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069215859 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073407011 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065951244 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078870161 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073290284 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073616429 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075398276 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077085118 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067975468 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066791734 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074259866 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066514413 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072856573 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074255619 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072282669 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071724268 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073710907 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078601454 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091866572 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068681005 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074903645 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076101943 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076860514 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07255286 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069896457 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073360552 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070831362 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091601269 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073263352 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067969966 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073875143 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074304997 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071344063 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073090071 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073051061 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07556506 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075538495 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071535941 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075045019 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071067356 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066122488 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073277239 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069007029 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066355805 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075607753 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077196689 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.0650189 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070990777 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072456136 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071697158 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065453868 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067871372 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067463713 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071674974 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068031 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05465642 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069384324 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071978782 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064768059 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073389946 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071723436 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072079838 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06717728 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075848348 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065330276 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070632588 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06587352 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066553971 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.0675166 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069652866 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065614318 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067705773 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074176977 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067071863 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07145257 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079375747 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065599172 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071886305 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064558547 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065088895 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080086304 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07456961 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065620399 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067759234 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06497914 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072470396 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064709151 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065104199 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065445041 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065600976 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070473046 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064519647 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067159378 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071420959 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076423089 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06449636 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067524172 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066636389 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06473444 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069631331 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064876065 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.198763038 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068660061 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062519856 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069167408 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066376398 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073810675 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06817351 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073694238 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067569112 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074370572 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070736439 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071988757 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071556731 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064943997 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059573259 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068145769 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068668518 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067803864 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066445821 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067104739 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066862063 seconds)
done (took 12.502166803 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070237962 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145470206 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099819949 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095303922 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086974992 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066952714 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076638146 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102581524 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068174126 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103377495 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088133272 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085710927 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113115114 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064999599 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066697878 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070008081 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067394194 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082066144 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.10161109 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086693024 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116708672 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065748374 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094949024 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090709694 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088035915 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.102120828 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067399995 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070578341 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069972515 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091723397 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.087094459 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.07037492 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067329596 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.10111271 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093165218 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083692481 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06688333 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082771961 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06712596 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066307994 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068007331 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098487328 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080351199 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081007386 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070292158 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069426051 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067532913 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084378315 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089841312 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.07919051 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.08731399 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103503352 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069424223 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065856718 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064739884 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085809607 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065879978 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069241165 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066594977 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068723005 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066293149 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069374446 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081910978 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082683015 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070381402 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081069895 seconds)
  done (took 6.841141162 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087792016 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092528021 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083739982 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084896339 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066121852 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066835112 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066802257 seconds)
  done (took 2.052115893 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069627162 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090274394 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089545435 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089347258 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08463914 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087579889 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076083394 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066633387 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080812214 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06791201 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087740376 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102700346 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067379038 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072943396 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091767338 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066937138 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090615945 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06723308 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069792627 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090667542 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069104077 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.08238208 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070349924 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067532994 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081172933 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067011124 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114479205 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071251432 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068620345 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069536321 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064775789 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107364125 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080940827 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075944052 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066481951 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080927761 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.0814819 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064904937 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083242339 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071850741 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080464486 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067282846 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06781258 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064847064 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071850322 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076833684 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067866296 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067361899 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069178676 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08596599 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06795312 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080391647 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069990525 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069541665 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067906863 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070541271 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076499418 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067831588 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086848922 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06814206 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08390128 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083622374 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080808688 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083567651 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069902782 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080568435 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080864783 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069511911 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068409106 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069938836 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083141842 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065439461 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068195536 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077543764 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06889334 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.08996904 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089849022 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068005502 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.076337955 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067355247 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067163641 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066765641 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089490226 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069189407 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066722549 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071212923 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069768937 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065285058 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066064129 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070188901 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065266863 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068154611 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069792109 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069991552 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070044348 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084020117 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069785073 seconds)
  done (took 8.812283044 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072223566 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071335261 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.072038521 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068715759 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068247345 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068908249 seconds)
  done (took 1.95239185 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.098031557 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.072703858 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084074938 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07598434 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.108434288 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.090369226 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091212314 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.082601059 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087444982 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.081687092 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087451226 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089119721 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093672634 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073659133 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087499216 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072729677 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087855526 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07660574 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079408544 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07342672 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087392471 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073346187 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073884993 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082284513 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076152982 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072339102 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067710143 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079112214 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078765108 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079666465 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073412883 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076683787 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071186669 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079118509 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087333259 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071458019 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072291647 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077729478 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07321828 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076118339 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088450536 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073793382 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075149993 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077666746 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078924197 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071256108 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077891029 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076661425 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086939221 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077618108 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077370316 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071829862 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075569426 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077448178 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070953887 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079049842 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077568688 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086991527 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073285331 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070972339 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069275621 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075657778 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078779621 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075562001 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079400331 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077244848 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070935138 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073024478 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073060386 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072509273 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077579427 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070041741 seconds)
  done (took 7.167484683 seconds)
done (took 28.318725533 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.549567158 seconds)
  done (took 2.04153529 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.611719403 seconds)
  done (took 2.131005326 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.561243347 seconds)
  done (took 8.078632273 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.40301089 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.480160097 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.696904963 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131613709 seconds)
  done (took 3.257622552 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.677740453 seconds)
  done (took 2.202250011 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.215997252 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.197042002 seconds)
  done (took 1.945155824 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.384573874 seconds)
  done (took 1.902742878 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.113515811 seconds)
  done (took 2.633200759 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.271011259 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163709754 seconds)
  done (took 1.956973377 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.47711359 seconds)
  done (took 1.99722051 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.859458496 seconds)
  done (took 6.381784069 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.211191972 seconds)
  done (took 1.77386756 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.244520465 seconds)
  done (took 1.766665176 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.681541686 seconds)
  done (took 3.203759912 seconds)
done (took 42.800367698 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084583607 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083541306 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.082573488 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079401321 seconds)
  done (took 1.838935622 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080227574 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.076446649 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.080033664 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073812859 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.078214133 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073526552 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.075220133 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077663164 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073021721 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.074284286 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073365614 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073433636 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.0764763 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074958007 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071505177 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075922804 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077139018 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073395969 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076316469 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073205761 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071561355 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075510922 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075691603 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072638779 seconds)
  done (took 3.329796067 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082448809 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07433353 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075846599 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072579298 seconds)
  done (took 1.839880124 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.08125035 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095178319 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090348157 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078558043 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093145293 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087307274 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070131747 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069696541 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.074074753 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07795022 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068832633 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096955342 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089274296 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078082609 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079842775 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066758477 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069109462 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087744641 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077902545 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078658965 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070627959 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077938614 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.069126077 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.08918283 seconds)
  done (took 3.449191906 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081649134 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10642381 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078487206 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089336867 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090955884 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066222648 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.075216112 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090246973 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124010806 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066040529 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070698597 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066252536 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073460405 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066019099 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076998158 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.105662704 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.109264275 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068794882 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096816241 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066213435 seconds)
  done (took 3.208511565 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07665663 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07197258 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067316584 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070206935 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079195151 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073381514 seconds)
  done (took 1.979168405 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071527624 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070711391 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069375623 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067169134 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073089409 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068371818 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06714986 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068304227 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068206748 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067936749 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06701628 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066582539 seconds)
  done (took 2.360098629 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.438461546 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071231812 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071292092 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066511708 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071415373 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067031807 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080871114 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068874413 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091478372 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067191768 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067281919 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.06918256 seconds)
  done (took 2.766165608 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214663282 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078032839 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240094257 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138489341 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113327704 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117054694 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105550239 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113963253 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.145783828 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103174375 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170130196 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167956982 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10883058 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139647145 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090187158 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.099645312 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157883619 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164594642 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105172263 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167866511 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146343073 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126075883 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149121764 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102351775 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107375732 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123597456 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071947896 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080767245 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173330414 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133557261 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148996386 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112661031 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095309062 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179747283 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173916 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144516927 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135753789 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08457065 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105993648 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.138798773 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201373155 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088838163 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164606289 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248475966 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082365107 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136688253 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122961368 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.122953491 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.109251971 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09137254 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148995077 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186567192 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.141270999 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088520072 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11406886 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117801449 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.118335344 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10542133 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185399908 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164621653 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129676981 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071803064 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100780948 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156181431 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133707664 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109950724 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.129288864 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095454591 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135644731 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157010104 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120177468 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146410245 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.130975295 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089808931 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120810292 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141612812 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130764671 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172520799 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126579497 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074022489 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127380143 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1049958 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082622 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144137766 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076394399 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176861726 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099647388 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.107237435 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114313531 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110316961 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109628392 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163152433 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143576342 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.247502991 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066839084 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10552858 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.12286688 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149958623 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08881259 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110143602 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118810364 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079672401 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141676814 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076416363 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124906875 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077013399 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127411852 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13522732 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077116273 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123841953 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102431766 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101772122 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137404624 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162971651 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090063443 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083923265 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169857452 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125942767 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105303252 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146223262 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158175974 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.100934461 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104108486 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15165719 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182754041 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091130355 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165195613 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109517426 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085250609 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088942663 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125760569 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114365095 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124282415 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083174507 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.120529696 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171319155 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075961435 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09638404 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134550915 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08042797 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081650897 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104525988 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101605655 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095983256 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101244391 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10547435 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138869073 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123901981 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104086151 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272171229 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10069838 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173367601 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091626107 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.10255495 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106168866 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071207459 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.139924548 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16114143 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080559399 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168106538 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.125517943 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107596309 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121933585 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083536109 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142761998 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079794815 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07144228 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146879266 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112007371 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111931088 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.154736198 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10633685 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.129147354 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.122237541 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137124952 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134941144 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131014838 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10709178 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089558384 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114300734 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128230575 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07395549 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092703468 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080886186 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105361704 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097169338 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084098195 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144822679 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127176274 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101851286 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113169971 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098309973 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149386769 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07758032 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130824256 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120241605 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094636718 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153612922 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153632773 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132534185 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100176994 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146112377 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069969843 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073562118 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.23510453 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126420118 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084951362 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08547771 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120700742 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150263928 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132436593 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14166737 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113964285 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124571803 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157529218 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070722764 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116292733 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15139892 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123817955 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105479984 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091542097 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100685158 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145889532 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110197791 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186639148 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116289944 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128728236 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156348657 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.10112327 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080883113 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104619028 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143174226 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105926282 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146644769 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101587112 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089762526 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111390957 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07524211 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101757739 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130078427 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121729611 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138469367 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.11623374 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135497147 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077952006 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118892871 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122394027 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123825508 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064595116 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121328941 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163225162 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09492175 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120131007 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154025022 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079861165 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.12527595 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.324838232 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14913786 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085920863 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112084777 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12106752 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12960331 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121941668 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142334829 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110290372 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137244911 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111328523 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087023822 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088955089 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098396045 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106706732 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096632117 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.110356139 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.116572822 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.097307032 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134334971 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105333632 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110909255 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119823312 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097795848 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091298373 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098750815 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177453796 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121152892 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175627209 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100914934 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.147519432 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167149954 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075572628 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080169699 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079615068 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141665253 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084972677 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132507708 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.099097805 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107333547 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126076033 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144697968 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096601829 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069252041 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110301382 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136299467 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113909068 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099204856 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105327727 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16451979 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101604577 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079987854 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114757191 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105404995 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102833762 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.317871214 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063196464 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100029193 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077590008 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082605172 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129516297 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15631652 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082365535 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104045559 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121400352 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112925233 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130210821 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104390916 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101369317 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116783001 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152038455 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132130996 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091409007 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114890155 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132404047 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160412232 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107184249 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097040971 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174594976 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154246962 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.180977211 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.090300455 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11623971 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115798269 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110554545 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141251191 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08445934 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166276281 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08287605 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139025592 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105656717 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091410242 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132268916 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.100646546 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08963666 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150641835 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119661787 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084062526 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078895406 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11966195 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121198492 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10735723 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075902424 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14113243 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073168585 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133655997 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169951524 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081668172 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.2520035 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099924808 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082317689 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11001992 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104937991 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091724869 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.100193431 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17619483 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.090397509 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153084116 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14407391 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115668104 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139639513 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10128464 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.637655996 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078948273 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154811745 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118913236 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177200807 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099589228 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120227548 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111199519 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1257232 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148703842 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107578077 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179252693 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134410969 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.118335805 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080961431 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104326414 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104011108 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.090581684 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107246086 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115184464 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118001909 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.09534508 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.1180013 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125682137 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083366299 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096510075 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159292046 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118991642 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147133949 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141996476 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085495794 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119011655 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14097851 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080601805 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.123841785 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153769421 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109261434 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244240801 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082769156 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.105512606 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17511069 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074644453 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166446007 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122760188 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111178422 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115457751 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116606594 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133829188 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110532619 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12409387 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095998643 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.113613698 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115412456 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083807785 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077950474 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106699199 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115264637 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099798511 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100644431 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099158537 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154302643 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072455097 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097140725 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105314298 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147354571 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178332594 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089501052 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084067592 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121358197 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11487218 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.115037829 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122175829 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.0803341 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083178595 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082958614 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.078563372 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110015425 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113638739 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105973107 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113648561 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167267237 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083603064 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.227650385 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096583111 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106473395 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070671653 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079942176 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096968973 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098700872 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109128887 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100764016 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17060651 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.09526413 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090477174 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092915068 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073339958 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228917323 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131292236 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113964857 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122041676 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099117609 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.064535317 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112796552 seconds)
  done (took 59.817220001 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122682462 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083115557 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.098136487 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.151318711 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.124693096 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.213964682 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157927692 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.201641929 seconds)
  done (took 2.803347802 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072261809 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096129076 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100961173 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.0839031 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068643304 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069712589 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.22878565 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081538701 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067391157 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089749918 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079698788 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069880033 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.431105708 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066822922 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.06820516 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062742188 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067935662 seconds)
  done (took 3.445262045 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.377605478 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.597881261 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.376962261 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07424686 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.890966888 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.093643432 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.053578961 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.131958789 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074946806 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537527454 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.702109235 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.128862688 seconds)
  done (took 18.69032508 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.08176341 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.073476339 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.085898134 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086249579 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073694265 seconds)
  done (took 2.044973975 seconds)
done (took 109.153247689 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084841354 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.401789839 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054867275 seconds)
  done (took 2.132885654 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086594639 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087404837 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086038681 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084180866 seconds)
  done (took 1.996076665 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.07912814 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077548588 seconds)
  done (took 1.799699623 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.227939858 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.141745584 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087897643 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086314115 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079392776 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079617952 seconds)
  done (took 1.902306215 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076338982 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077961343 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073936193 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076928594 seconds)
  done (took 1.955678366 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080465131 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053912468 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056033193 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.057298043 seconds)
  done (took 1.901181867 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090609566 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.082327497 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079732627 seconds)
  done (took 1.904782335 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106883368 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.088197743 seconds)
  done (took 1.849440463 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086664376 seconds)
  done (took 1.739795326 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.104467036 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.116518651 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131190408 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111455986 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138943828 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.11057197 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087184033 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087970152 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078278929 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089070659 seconds)
  done (took 2.708890862 seconds)
done (took 22.079609769 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083293979 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.362684815 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362975705 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091291903 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670494466 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357831283 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.99578714 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093313369 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115074959 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068595812 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085408422 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649932978 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.022385771 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.321007856 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.006751775 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324418687 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.65016226 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069226535 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068791193 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068969469 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.979557005 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068611304 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068782463 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069424466 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652358134 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373068265 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069297286 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.32383438 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068941013 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070811964 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355692936 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06931947 seconds)
  done (took 16.274949089 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073941418 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120490405 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07459079 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085127493 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071058817 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070622625 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072606583 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070128052 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121221079 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068961342 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086232521 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068511243 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07263911 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069684719 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088003893 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068818975 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069966684 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069676316 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068848832 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069781789 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087790387 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068939883 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069422087 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069520729 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068993503 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080971391 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070231856 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06909777 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069844534 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071145215 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072374205 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070159082 seconds)
  done (took 4.096079858 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120346621 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127635229 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076069584 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104831192 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114487498 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07160795 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.145284726 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094626344 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129645957 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069143923 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085730959 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069240403 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102240496 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070375352 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089436508 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06958953 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070128789 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069815975 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069774727 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069601972 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088744911 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069331863 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069408615 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069923512 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069758608 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082756404 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069665293 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069848741 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.0699331 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071988788 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073098807 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070093865 seconds)
  done (took 4.363990837 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076289698 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076841753 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084742835 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085169766 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070496686 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073269958 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073842776 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070392026 seconds)
  done (took 2.282868279 seconds)
done (took 28.6806936 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.08335175 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070861235 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.07378994 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082519196 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07500993 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080061997 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068566765 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075872762 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073113734 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074233879 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076011599 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068673097 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072087541 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068390497 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07486454 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068526235 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.08087334 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072719387 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.08101687 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080695225 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.071319246 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074384039 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075357357 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080478317 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080487596 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080126773 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078841255 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074195913 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.07018013 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071910564 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07826316 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085203369 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069676967 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080009978 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068818339 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069243516 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072715981 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069024786 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080164278 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07788133 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070430893 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076910942 seconds)
  done (took 4.802419494 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092299948 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091629964 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085850004 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061966757 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.068145635 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066180211 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089327346 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060631814 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060840862 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089392822 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056690639 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060239577 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.063302051 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05497877 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060367476 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.05797627 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062711995 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056463352 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.06011836 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060201836 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.059169737 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055216676 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.061010843 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063932413 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059848022 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062855183 seconds)
  done (took 3.39898811 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.090130061 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085976386 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089515866 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128380854 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104750553 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078004849 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078926512 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093459598 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.086229212 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067804724 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071946905 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094398634 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088689519 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074907049 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068721301 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085681336 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082905796 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069948901 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074954622 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092071704 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085349355 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084648661 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093564607 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081894629 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067501271 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07049701 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072031031 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082531493 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073356867 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07787019 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07238733 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072569472 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070831921 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079788298 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072974125 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069827298 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091856297 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078132244 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078889947 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069306967 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.072186584 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069540209 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090632907 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.124066017 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068141186 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074962395 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075961822 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077643618 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068725521 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087167484 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079457153 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068573416 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071745102 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067896497 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068439793 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081954722 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070472157 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070828614 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077436408 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071537899 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086901731 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072703905 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083802677 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06816451 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076312698 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06777275 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069379494 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067361852 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093788102 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069886112 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109845074 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069492957 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069516133 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077832527 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076241482 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074725558 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069052607 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083759728 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078725125 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072282284 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076857614 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072019949 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071769282 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.089301785 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070815513 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070125009 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069532854 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074772521 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071078836 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070159832 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081318539 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068516412 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071487279 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085012745 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068028415 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069664886 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074701676 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07295403 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068119193 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079401206 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073525359 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069087761 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077443092 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06832638 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071244024 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078837626 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074505156 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067445844 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073138962 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074468475 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069095193 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069594758 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071365594 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069810731 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076504405 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074954828 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072775349 seconds)
  done (took 10.71590915 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.167019539 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.157262229 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071392326 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.146831513 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077632652 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080298811 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.150188699 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096112859 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069639824 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069737393 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069945195 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111623311 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107836276 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.117042404 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079957991 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068734633 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084504243 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115031196 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.151896993 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.145821199 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084913664 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078388901 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071213462 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070190554 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071453961 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07926521 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086168886 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077705664 seconds)
  done (took 4.470077018 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085794909 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.099788217 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075246892 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091314676 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092829982 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068697611 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071182115 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070715368 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081663205 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080263607 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068717087 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074567625 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075568642 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07236848 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069646551 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076203198 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076092877 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070201012 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071971519 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074103328 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078582834 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.082232878 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072902143 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068154716 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075560006 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.06827799 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066008334 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085905826 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069210897 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.091434976 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066661132 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075877045 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082343423 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069234577 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06869749 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068882464 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068270303 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068394592 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070260924 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066922595 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067386032 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058427302 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067891962 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080643123 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074781368 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057448543 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073802919 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073527442 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073687668 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066056731 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071341999 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071389117 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071855447 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076013455 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073402377 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073867746 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069951656 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066615032 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076030446 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068596879 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065863475 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066777276 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072832864 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066739082 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075986745 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072525174 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066597878 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067889379 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070185426 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.07446333 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068321429 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071519021 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066056883 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070515902 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072952217 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070369711 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069344518 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066772318 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068180846 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068697027 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056436595 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068556032 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05448484 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07164298 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066699606 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066992552 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068482443 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073051449 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081278649 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070020682 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074242041 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069680571 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067329123 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071661821 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06131245 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071406082 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084191311 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.084026067 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06837512 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066678025 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083275635 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073086857 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067456599 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056994638 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075577748 seconds)
  done (took 9.271908129 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094996119 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.073324653 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085900635 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092999613 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087405628 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07587063 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077873833 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07021066 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083472364 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074508068 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078062986 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069794647 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07837461 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078175162 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070817622 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078307641 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073186075 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084046725 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083833612 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069598599 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07718341 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081477076 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090226589 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.081200425 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080447852 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.081618184 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091712349 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.074691448 seconds)
  done (took 3.958611489 seconds)
done (took 38.283585292 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.742121299 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.923030277 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.746919488 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.100429275 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.041723938 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.758907909 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.877750856 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.745404571 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.055777886 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.781333819 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.003484885 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.804224819 seconds)
done (took 65.263304429 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.789904424 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.766816404 seconds)
    (2/2) benchmarking "String"...
    done (took 1.889694111 seconds)
  done (took 5.214319042 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.97607455 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.15877457 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.86133482 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.619651102 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.619386744 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.907555275 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.397626706 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.133159484 seconds)
  done (took 29.265325484 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.577135683 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.829061695 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.212861912 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.237409426 seconds)
  done (took 14.458496123 seconds)
done (took 60.470566586 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.645948842 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.638505778 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.626282183 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.603393607 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.67509962 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.630791231 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.857423748 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.542679349 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.619818446 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.600606694 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.617436211 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.040348578 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.625621241 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.799882089 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.620449358 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.61703046 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.652060698 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.848686615 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.769333723 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.631214443 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.636723984 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.670432425 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.619911012 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.619963268 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.663618923 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.617157111 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.010822448 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.621142421 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.402479216 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.621141578 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.673084552 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.156176328 seconds)
  done (took 199.533450546 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.620658435 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.729624825 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.799853412 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.648314305 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.146509961 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.804136385 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.730488574 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.196336213 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.621664399 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.644040093 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.94908778 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.618239426 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.907278651 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.56969361 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.670156765 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.716513868 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.907669997 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.898453135 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.671406363 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.790548222 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.646162594 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.789544321 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.747704019 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.873278888 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.618226863 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.626440026 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.624600562 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.635517164 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.813988768 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.86006193 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.639438007 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.664522308 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.825938475 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.491957878 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.634559986 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.646308694 seconds)
  done (took 165.341282333 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.779296452 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.622039163 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.620195288 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.622402582 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.627083992 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.621195206 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.744178702 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.744926903 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.071510742 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.742585336 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.675098672 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.40045761 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.621709286 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.689927284 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.620586027 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.635888961 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.619672045 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.623353506 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.639746756 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.651188675 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.624667141 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.622828917 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.748621729 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.632156827 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.950467937 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.625881077 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.625499345 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.631002461 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.992890479 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.620576603 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.628063862 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.868548836 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.619017589 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.623513354 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.422331322 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.685394711 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.715015703 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.62555597 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.632870862 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.62674408 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.846858866 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.623529488 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.627467548 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.629249457 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.76666208 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.623811082 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.751383052 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.6248743 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.100631159 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.624449626 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.62939657 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.533445539 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.408562477 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.748069346 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.749067908 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.751407265 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.750265756 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.75002798 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.754984327 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.415262741 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.823302031 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.747757307 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.751529842 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.753770282 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.748474642 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.829256824 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.745987164 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.023283621 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.802830716 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.959237838 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.861986493 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.741718117 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.811093722 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.837440494 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.7397465 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.741731663 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.739666871 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.740950054 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.744539076 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.824567975 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.73988179 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.862462059 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.748413914 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.744999323 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.793424704 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.810806969 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.738780041 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.621020091 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.742673094 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.741523168 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.050033291 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.806906232 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.739007826 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.740775053 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.742019203 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.857266484 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.738104659 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.863329695 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.501075709 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.7438795 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.451041199 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.750456951 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.873571057 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.740870135 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.923904692 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.746993029 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.82791542 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.746556081 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.743795682 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.743973701 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.777905726 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.745963272 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.803181609 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.741164587 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.114665931 seconds)
  done (took 392.427422497 seconds)
done (took 760.691061729 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.430657211 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.389714963 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.500361746 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.414910735 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.389408649 seconds)
  done (took 13.803826284 seconds)
done (took 15.486010415 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.83211091 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.834920264 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.767492247 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.838216131 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.762671866 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.834986434 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.81468659 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.768514725 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.80394848 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.768508997 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.802988156 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.768568943 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.757706059 seconds)
  done (took 25.035789723 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.981581631 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.986065179 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.810412305 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.981322021 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.788737044 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.968752681 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.908912605 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.895167894 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.893988674 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.757127945 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.75742977 seconds)
  done (took 22.413187706 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.980184327 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.987121956 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.816061253 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.984038532 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.790006328 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.973743246 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.903942622 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.888911586 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.889439335 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.755250634 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.751398103 seconds)
  done (took 22.404371059 seconds)
done (took 71.535537684 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.746444231 seconds)
  done (took 3.422111732 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.772709072 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.901676561 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.752517457 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.748079688 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.744798918 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.745125145 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.748240318 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.74163946 seconds)
  done (took 15.831079185 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.739512805 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.738298191 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.743761927 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.73924343 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.742654154 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.741454031 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.740157077 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.740173663 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.746142729 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.743576516 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.741097615 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.743602675 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.743050774 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.743267216 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.742287746 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.742260223 seconds)
  done (took 29.543897754 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.742617751 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.739228905 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.739525172 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.745243599 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.74044587 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.741003237 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.74248109 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.741702614 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.744868899 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.740691311 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.742665086 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.742009447 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.742195709 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.741714454 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.74272999 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.742969346 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.741828379 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.741895954 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.746223646 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.741733913 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.74283631 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.741149788 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.742918685 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.742422831 seconds)
  done (took 43.488807519 seconds)
done (took 93.961728831 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.645168533 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.139201858 seconds)
  done (took 8.456961747 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.746895107 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.745732055 seconds)
  done (took 5.207329437 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.745120636 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.745196473 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.745342405 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.74812058 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.744688671 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.744570852 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.744502526 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.746077203 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.746369533 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.745953731 seconds)
  done (took 19.132184 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.745633542 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.744768524 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.742169309 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.745761595 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.748091389 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.740574985 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.744051391 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.745123842 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.744095489 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.741767613 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.747343198 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.742003519 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.743699093 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.741611017 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.742838205 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.745274404 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.740838157 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.74125273 seconds)
  done (took 33.061652021 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.743039635 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.742390355 seconds)
  done (took 5.159807072 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.737639876 seconds)
    (2/7) benchmarking "second"...
    done (took 1.737017063 seconds)
    (3/7) benchmarking "month"...
    done (took 1.739624003 seconds)
    (4/7) benchmarking "year"...
    done (took 1.738809219 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.739118691 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.74239418 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.737149752 seconds)
  done (took 13.849043514 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.741654741 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.902066175 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.978060139 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.409280522 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.739367799 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.743665387 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.670724768 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.744059331 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.745627455 seconds)
  done (took 19.346020095 seconds)
done (took 105.886867673 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.553550836 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.733004085 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.117799333 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.78615616 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.793652158 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.03015976 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.734295332 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.95722164 seconds)
done (took 42.376915794 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.753040507 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.281617192 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.514290817 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.261210075 seconds)
  done (took 12.725372873 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.718061249 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.26345394 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.773948924 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.397441736 seconds)
  done (took 19.849342332 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.10005526 seconds)
    (2/2) benchmarking "read"...
    done (took 2.088421205 seconds)
  done (took 5.862692719 seconds)
done (took 46.859410134 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.736723456 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.738169608 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.734657674 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.737207267 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.734430002 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.735085504 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.737908982 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.738292337 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.737273272 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.736565028 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.737679897 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.734758687 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.735101598 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.736379976 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.738668477 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.734365081 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.734316492 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.734934971 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.734949226 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.734339874 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.737301006 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.735894185 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.733084138 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.734144494 seconds)
  done (took 43.329415835 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.737709203 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.734192038 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.737330647 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.736613718 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.733874596 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.737833452 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.739043775 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.734366807 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.737800015 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.738831669 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.734081099 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.735941052 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.738358429 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.734211615 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.735770933 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.734443684 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.736796634 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.73438137 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.738424591 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.733660518 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.736014721 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.734725102 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.734019937 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.736113261 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.735349622 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.735519503 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.735972183 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.735402588 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.73663875 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.73262074 seconds)
  done (took 53.743136408 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.739570229 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.744930054 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.736268478 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.737491927 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.737758152 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.735849059 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.736817885 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.735731073 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.736192102 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.736018094 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.736498005 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.735971299 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.735437614 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.734230186 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.736227627 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.735613071 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.738085682 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.734340386 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.736035007 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.736229732 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.736522731 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.736617539 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.738111068 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.735656853 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.736386874 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.736622801 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.736911845 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.736843797 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.734336214 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.733691209 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.736894507 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.735994077 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.736104391 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.73786265 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.736666077 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.736935606 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.742072133 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.745150272 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.737890011 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.737899803 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.73626074 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.735886937 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.736119709 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.737135 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.735996427 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.737566112 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.737018065 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.734889103 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.736524216 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.736858419 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.74071158 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.736082884 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.736235765 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.737763089 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.737350717 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.736984357 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.73868967 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.736942979 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.736328665 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.735287306 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.737232471 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.738652228 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.737013374 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.735585124 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.736501553 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.738969659 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.736514557 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.737502912 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.737175054 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.735831462 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.736438226 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.73770478 seconds)
  done (took 126.731781409 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.738521954 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.73360229 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.733745731 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.733756078 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.733504175 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.737278903 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.737317134 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.735405538 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.734095883 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.735653707 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.736606782 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.735093869 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.735467435 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.735990416 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.737185021 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.735449227 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.73726839 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.73434828 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.739925424 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.736480473 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.736967405 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.736671782 seconds)
  done (took 39.859560082 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.73701644 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.738242933 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.734301598 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.73651546 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.733521913 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.737848124 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.739084188 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.736923375 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.737127039 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.7341941 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.734306571 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.737466853 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.736091182 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.73483951 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.735624676 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.735459358 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.736926274 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.735602971 seconds)
  done (took 32.919687858 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.734202995 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.735114619 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.73694881 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.732623378 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.734195909 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.737697055 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.733276517 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.736093167 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.73669969 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.735089778 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.738059669 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.737047782 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.738210056 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.734791455 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.736821785 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.735245322 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.739255193 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.735230191 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.737145419 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.735007213 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.734759366 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.737122396 seconds)
  done (took 39.860334844 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.736059876 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.737920012 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.734769795 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.736944129 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.735721349 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.737311953 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.736952957 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.735334253 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.739048358 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.738064353 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.737291299 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.738220856 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.735581821 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.736889351 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.734808256 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.735966313 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.742555144 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.737060723 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.738119267 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.737913275 seconds)
  done (took 36.412631297 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.739185543 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.741908017 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.741461022 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.739664619 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.740234612 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.740199051 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.74137191 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.744180522 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.740945242 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.741981114 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.740570611 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.739844926 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.740875032 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.739874107 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.740197811 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.740723168 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.740780795 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.741431518 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.740831498 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.739783223 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.739346623 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.740099151 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.739385036 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.741161572 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.741225352 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.739805967 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.740748819 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.739724333 seconds)
  done (took 50.407293525 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.74001287 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.743407919 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.738343218 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.737940976 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.738843499 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.736371409 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.737393913 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.737523299 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.739319515 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.7380672 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.740621988 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.741842128 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.74102725 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.740806881 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.740378143 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.741549422 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.740442821 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.739675623 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.739005669 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.737581202 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.741568077 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.740835918 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.742084925 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.739062612 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.740977947 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.741854896 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.739724744 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.739401324 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.741715433 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.739811196 seconds)
  done (took 53.867978559 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.759662336 seconds)
    (2/2) benchmarking "in"...
    done (took 1.761454121 seconds)
  done (took 5.192676431 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.738996034 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.743744438 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.742332007 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.739136331 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.739643794 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.742857316 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.740408805 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.740964726 seconds)
  done (took 15.601122792 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.742216827 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.741382464 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.743827218 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.741995115 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.742905721 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.743271368 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.748980819 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.743447267 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.743927909 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.743310736 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.749161001 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.750811548 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.744695329 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.743290601 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.742485694 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.746525044 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.741423567 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.741750726 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.742274012 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.743335244 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.742880458 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.747221628 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.744534381 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.740340516 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.74471453 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.753214398 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.747835858 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.745236291 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.743989788 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.747378365 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.744641297 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.739494705 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.745109978 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.743555385 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.743610311 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.744654452 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.75197045 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.745430601 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.75064293 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.744093406 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.743742348 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.742270569 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.746823276 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.747797338 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.746955263 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.745568286 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.745787041 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.742920961 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.745896807 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.749327844 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.748881277 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.746174878 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.743234505 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.749844302 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.747941437 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.752995293 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.745611313 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.749149442 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.753877557 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.754082026 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.75696401 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.752320479 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.747656563 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.745971875 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.753864826 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.769652274 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.752723326 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.744072093 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.743897427 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.746476817 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.753111581 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.760087218 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.756572299 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.745723284 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.745500721 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.746190251 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.747139215 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.745499206 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.755972979 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.74919114 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.745798976 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.746996565 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.752888516 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.766974418 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.746872027 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.745099582 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.74709487 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.746651308 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.74797461 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.757749145 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.749333654 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.74651776 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.747236901 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.747052612 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.75165855 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.749646498 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.746463627 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.748909186 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.745969849 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.747234578 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.747824944 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.750776435 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.756249716 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.747642563 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.748493071 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.752054773 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.747726646 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.749340814 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.755406242 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.747088764 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.748668859 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.748696253 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.753930509 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.747021574 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.752035175 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.755936329 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.748507915 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.748502516 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.752074531 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.747811603 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.757081574 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.772570498 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.749646269 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.749302484 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.754794638 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.759214414 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.749376195 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.752116282 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.748005459 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.745823096 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.746148832 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.750249103 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.748683721 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.748480409 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.749604051 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.751827672 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.745508898 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.748869453 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.750289203 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.751578462 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.75304874 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.752546673 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.752308264 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.7522522 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.749091315 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.752163578 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.755823881 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.750970567 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.751390012 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.751131669 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.748290941 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.750803843 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.754479136 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.750312931 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.750921929 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.750175088 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.752578802 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.751462951 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.752377586 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.751657966 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.751191581 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.752613499 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.754051849 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.753159694 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.756199412 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.750536999 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.748784835 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.751089865 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.751013629 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.751131032 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.750374324 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.751230438 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.754652552 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.758953501 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.75084468 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.754725447 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.752823194 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.749065492 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.751296212 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.752461281 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.754144333 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.7584443 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.751258272 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.758763717 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.749852771 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.751564623 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.7520974 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.752842471 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.752404656 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.751107076 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.755270796 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.758121825 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.764621197 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.760698669 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.754256666 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.75518034 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.753429056 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.75552824 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.756526085 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.752449066 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.750295676 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.753891471 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.752747062 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.752182879 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.755339364 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.75108461 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.752664034 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.753532945 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.752579613 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.75351788 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.752869655 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.755956153 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.755359093 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.749023651 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.753517018 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.754475864 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.75408205 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.749684529 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.754160061 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.753895945 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.752269274 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.753498625 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.759465029 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.748817455 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.755706523 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.756359624 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.755593531 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.752797286 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.754294239 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.757062082 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.753317826 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.759662302 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.754861783 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.755987463 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.76072736 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.753515708 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.754168566 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.757755404 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.753173157 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.750087716 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.756573933 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.761429887 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.753109905 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.756091417 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.756254059 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.755241934 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.753772169 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.762424747 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.749723208 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.757183919 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.754195176 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.755994009 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.751700535 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.756861549 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.756366353 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.757992203 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.758166744 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.755850541 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.75462743 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.757265005 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.755857773 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.758227222 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.757110164 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.758052813 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.764051919 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.760413663 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.755957395 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.758843393 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.757474674 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.758411881 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.758027107 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.755335488 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.757580957 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.768472224 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.763227303 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.76205099 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.758560958 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.757696049 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.762850631 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.758456847 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.76056716 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.758013711 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.758454254 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.758852282 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.757313652 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.752268986 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.759528044 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.756609626 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.758549894 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.761357344 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.758557565 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.75541619 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.757174666 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.757317406 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.75792649 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.755815468 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.756926126 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.757036251 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.759577615 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.759146561 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.758116013 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.758822778 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.762524825 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.757822431 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.757284488 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.757322698 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.759824826 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.75863146 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.758508063 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.75936489 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.760994448 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.765378082 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.763455012 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.767530508 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.758525345 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.767226913 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.757225577 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.761021539 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.766121888 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.757060241 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.758183307 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.759162879 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.757651607 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.765581771 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.76080253 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.760915759 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.76238495 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.760133192 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.76128838 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.761330993 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.758687111 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.760235026 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.759973999 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.767073839 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.760503661 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.764247503 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.760966167 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.75739521 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.760627278 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.759894004 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.75941131 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.764008671 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.75947652 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.761629461 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.761543502 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.762224408 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.763066645 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.760203777 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.75884306 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.758503451 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.759057477 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.767301955 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.760405216 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.763432865 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.759952979 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.767497407 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.759947504 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.768886139 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.759670284 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.762561392 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.760990193 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.759472234 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.763441724 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.763761903 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.762324543 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.762110446 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.763674735 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.763826006 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.762395399 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.767867271 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.761945525 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.761393417 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.761211752 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.769207362 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.784768064 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.763267627 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.765150244 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.75876427 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.76219874 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.765084002 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.764429948 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.762171624 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.765418929 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.771235398 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.768889622 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.762088329 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.76504945 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.764207603 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.762894379 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.763088972 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.762608199 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.763537811 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.762230142 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.763838463 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.764357489 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.766759298 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.762105499 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.765724731 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.763934821 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.765045975 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.773072742 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.761593826 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.764753154 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.765568715 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.763465595 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.76357228 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.764621738 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.762948367 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.76523611 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.76295125 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.764320188 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.769055655 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.768959157 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.766646201 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.766237994 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.76229917 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.765815561 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.764477682 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.76314734 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.764832592 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.766264958 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.767369862 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.763780433 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.766626424 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.766259213 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.765876524 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.764947776 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.765020832 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.768426886 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.771946482 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.764476888 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.763900099 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.763748105 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.764041428 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.764492441 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.766095964 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.771911617 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.769003488 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.773694356 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.772125969 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.768803158 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.766680388 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.770656876 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.772004012 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.764753921 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.766244579 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.764345851 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.769454064 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.770230043 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.768270008 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.764845296 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.772188481 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.765076234 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.765623376 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.77371821 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.767032125 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.76558334 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.766315443 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.768798531 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.767783485 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.762834048 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.766877065 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.766703337 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.772339518 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.766403284 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.768605359 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.768301487 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.764020458 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.766970015 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.769484381 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.766362152 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.768257331 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.763146124 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.769096071 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.767826568 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.767179066 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.76600789 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.768286648 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.768167498 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.76952523 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.772075307 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.76289709 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.77421394 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.76652482 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.768438705 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.768272462 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.766861592 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.764017654 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.764530611 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.767035938 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.767687504 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.768907505 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.770240534 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.769676668 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.768711735 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.768855116 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.769139257 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.770347658 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.775381942 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.774220639 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.765094417 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.767552016 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.770721815 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.771165068 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.766902501 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.769319346 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.768704621 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.771757332 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.768554598 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.768813079 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.769570961 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.7714572 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.783220885 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.76731841 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.769327249 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.770723858 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.773389815 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.768907355 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.766120737 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.769658841 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.769867769 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.769568628 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.77575608 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.768503023 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.774560326 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.769083231 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.769736503 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.772854453 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.770785279 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.777292157 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.771951509 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.768619217 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.768333616 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.775789547 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.785141688 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.767824346 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.780233243 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.796271062 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.771098608 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.772164499 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.769349163 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.769420649 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.768878968 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.772398654 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.769780944 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.769341342 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.770192267 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.770121096 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.770920009 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.77555075 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.773399219 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.770639557 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.770117039 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.77058437 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.771434934 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.767823857 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.771614738 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.770414665 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.771337619 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.770991004 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.771288539 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.773542937 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.784129165 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.781575805 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.770551596 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.771261717 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.768268827 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.776252179 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.773458838 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.781727234 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.777659496 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.771420115 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.771631255 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.773544984 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.770502912 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.767674219 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.771909009 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.77258982 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.772256818 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.769294281 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.783102124 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.779713102 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.777028699 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.773212037 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.774899404 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.771979432 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.773952528 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.772260964 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.772220575 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.776122835 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.773208252 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.776025459 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.771887849 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.772774704 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.776274067 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.779286418 seconds)
  done (took 1050.405339268 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.769798448 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.771476148 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.771471218 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.772095012 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.769640639 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.768868504 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.770552693 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.770621672 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.771347415 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.770480117 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.770681659 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.770861474 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.769654092 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.770822946 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.770457323 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.771298087 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.771005783 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.770813005 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.771778319 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.772441825 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.773142165 seconds)
  done (took 38.893769004 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.77372154 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.771649517 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.770902143 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.776091666 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.771369443 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.775476272 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.771434503 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.774127816 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.773361014 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.7708747 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.775054136 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.774235123 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.770786273 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.770305046 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.769993624 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.775971626 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.774250316 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.7716683 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.775272199 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.771245344 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.775851581 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.773848238 seconds)
  done (took 40.710655334 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.776419882 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.77493191 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.775842789 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.772602272 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.776009129 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.772752987 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.776913386 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.774786529 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.77687378 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.77611878 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.776183745 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.776118353 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.782380469 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.778901078 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.778390377 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.777002459 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.918848705 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.775596357 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.776065746 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.775225965 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.771788911 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.782380557 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.77189148 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.773058635 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.776792123 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.777021815 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.777566091 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.776653327 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.777598305 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.778170243 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.78048104 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.776231677 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.777986874 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.781145314 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.776053152 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.77902096 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.780148536 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.77754084 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.774347926 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.777127106 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.785012466 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.796658247 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.777809185 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.785540456 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.776535606 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.776359558 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.779794469 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.78295535 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.774818299 seconds)
  done (took 88.952710429 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.776351747 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.776103748 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.774674741 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.776112902 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.777268332 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.777800899 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.777559946 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.778154081 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.775516939 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.776331988 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.779176576 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.775449247 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.775111844 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.776312854 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.778783542 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.775937664 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.775755904 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.776125408 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.776390366 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.775661249 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.774318283 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.777709336 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.778638984 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.77613342 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.777665693 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.77663397 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.775633758 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.778033857 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.77676784 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.776238742 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.780392703 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.779765737 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.780076771 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.77812693 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.774504262 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.778493762 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.778788806 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.776695101 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.779197007 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.776382319 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.779699566 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.779740706 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.780428534 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.780084877 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.777004895 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.778823346 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.77795608 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.776245972 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.777745637 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.779794252 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.779725364 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.777582003 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.780148928 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.77817687 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.781170088 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.779949584 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.778086444 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.77894078 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.779562251 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.778044715 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.777159387 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.781456847 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.777806902 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.779951701 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.781008171 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.780449711 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.779371627 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.781669151 seconds)
  done (took 122.609315268 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.781177084 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.781665816 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.782355539 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.78103192 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.781432429 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.782612399 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.782758759 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.782788742 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.782803002 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.781713586 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.783344653 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.781721339 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.782757626 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.781096977 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.782843361 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.781768635 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.781747551 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.782250718 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.782954 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.783082556 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.783368481 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.783226772 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.785776865 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.783752397 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.784456905 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.783245787 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.783848782 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.785307513 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.783667873 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.78312377 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.784059575 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.783562401 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.783437004 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.785674813 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.785171525 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.783178535 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.784110826 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.78403202 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.783837214 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.783017024 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.783659395 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.784587097 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.784656868 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.784756589 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.784607608 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.784246786 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.782313984 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.785879246 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.784055479 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.783872396 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.783936759 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.785937049 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.783805002 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.783678956 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.784858003 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.78423618 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.783856748 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.784667777 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.785625972 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.784570157 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.783829079 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.784774652 seconds)
  done (took 112.293393468 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.784086107 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.784417593 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.781521588 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.782630267 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.785886132 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.78212295 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.784853725 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.785968343 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.783839641 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.785081247 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.785397252 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.781957788 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.781807632 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785968761 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.782684102 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.783536064 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.782745538 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.782201852 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.785195092 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.781461787 seconds)
  done (took 37.387870165 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.78276602 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.785836496 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.782844831 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.784085773 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.784320236 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.783372355 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.786011371 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.786691111 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.783491709 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.786568464 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.786538095 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.786007766 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.783849706 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.782738827 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.785442479 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.785198488 seconds)
  done (took 30.270332609 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.784553613 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.786206876 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.786416246 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.787210645 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.783307875 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.785067413 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.784601717 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.783740424 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.783901784 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.787536304 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.7879253 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.786323202 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.788337215 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.788056236 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.784647317 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.788233137 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.785707828 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.784431902 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.787724208 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.788021602 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.785893876 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.785278875 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.787336852 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.786183841 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.785546368 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.786007273 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.786542509 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.785383044 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.787266538 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.788738069 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.786344492 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.78615734 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.786358202 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.786552355 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.788861636 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.7858316 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.78818841 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.787171497 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.787692059 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.789206012 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.788714975 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.787073291 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.786700951 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.789524342 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.786408687 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.787343995 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.786033384 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.788237484 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.786244118 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.786255637 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.790883165 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.79045789 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.788861287 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.789173754 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.789182984 seconds)
  done (took 99.997421096 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.788491483 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.789945674 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.786986564 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.790361362 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.790259591 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.787230829 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.789570068 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.787531878 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.788184462 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.790231325 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.787053415 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.791851113 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.787056288 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.791461595 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.78840002 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.790383235 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.787767666 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.788250884 seconds)
  done (took 33.918778318 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.787075578 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.786698244 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.790845829 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.787863914 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.787033686 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.791764775 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.788045139 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.789088968 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.791216162 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.787992863 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.787277662 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.790204595 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.791220946 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.791892637 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.790109747 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.788985683 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.791226575 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.793165109 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.7889776 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.788019318 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.790546816 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.790627954 seconds)
  done (took 41.089133391 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.789622413 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.789954262 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.804959471 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.81185961 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.810395696 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.823922387 seconds)
  done (took 12.552713134 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791814337 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79238369 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.790207075 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793897251 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792701529 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789122607 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788780006 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789942596 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792150554 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789970756 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789296877 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793338557 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79261078 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790209512 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793467138 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792904428 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789507631 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789187776 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790622993 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793803208 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790711605 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793389347 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.790879845 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78888544 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.791481754 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.790332866 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792396466 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790278383 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789993145 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792985768 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793113601 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791518793 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793677946 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790138687 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793584448 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.79391684 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791583508 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79354001 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793197411 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79010079 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.79412449 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794079582 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79284189 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791209486 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791765805 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792009957 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.791750713 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792072528 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791023098 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.796031309 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792550938 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791671849 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.794888915 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.794267077 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796957776 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.794665153 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792623143 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791792758 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793563564 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792566221 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791156333 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791581039 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792347366 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79196761 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795157988 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793457932 seconds)
  done (took 120.002389245 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792250792 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.791971704 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791901155 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.79275411 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792630651 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792488919 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793011371 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.791897431 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792266361 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791509413 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797293227 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791745351 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792609735 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792359361 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792979452 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791696062 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791402669 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792513248 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791848791 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.794871126 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793960921 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.794189875 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793801774 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792107895 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794950859 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.794549184 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793564437 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794192097 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794337091 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793533781 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794157387 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793876534 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793542982 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.793945889 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795351498 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.795432576 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794966529 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794977747 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794313899 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.798309751 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794011106 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.797154473 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793628447 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.795707681 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795817054 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795619818 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794376442 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.795411807 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795258708 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795492085 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793942029 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794292474 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.796287039 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795500914 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793163713 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795425095 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.7949547 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794935763 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793882545 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797938319 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795441981 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794646453 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79915117 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795101872 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795375936 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795401191 seconds)
  done (took 120.143393049 seconds)
done (took 2448.820103182 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.883106669 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.828142846 seconds)
  done (took 15.43764196 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.958341453 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.909696812 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.793909433 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.833618899 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.791752728 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.811015487 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.788468312 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.794059813 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.794868345 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.795742797 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.794913605 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.982843007 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.814826992 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.792812729 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.795492813 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.886118432 seconds)
  done (took 51.073422794 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.79883735 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.798215609 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.809169929 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.800890836 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.798768781 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.810045311 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.829121387 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.801841378 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.832390979 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.809477184 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.866132465 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.807155409 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.798312296 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.846547953 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.807730702 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.814353175 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.885465759 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.869918018 seconds)
  done (took 34.510437358 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.873332917 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.797407698 seconds)
  done (took 10.404752995 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.804485858 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.792075112 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.825861542 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.79039025 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.80465072 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.817714764 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.814482812 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.808645605 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.805371446 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.810647754 seconds)
  done (took 69.805189343 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.804590428 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.800664746 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.80057628 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.797685113 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.79170965 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.794519887 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.799029035 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.795523575 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.479543098 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.831419528 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.804773734 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.805756457 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.799000985 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.801438806 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.797605597 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.823082475 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.938308334 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.796249074 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.796040072 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.804909991 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.800482879 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.85127131 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.812999384 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.799581104 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.82799597 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.47736697 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.80613878 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.805000323 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.916790552 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.797803423 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.800776054 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.80049056 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.802546058 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.187147612 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.069080016 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.796391793 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.807767791 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.807060955 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.797451417 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.930160415 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.800703021 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.806963843 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.791898645 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.044875928 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.878850194 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.841886472 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.162464216 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.802019209 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.802390688 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.830970313 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.802839347 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.802385952 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.814669393 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.312290255 seconds)
  done (took 128.784094795 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.797638306 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.087784761 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.950259963 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.799622785 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.067152936 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.999820333 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.733997376 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.844918606 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.794848544 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.000012975 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.011930427 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.908670787 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.794862769 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.796666772 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.796014412 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.794714051 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.957971308 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.862213175 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.797859306 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.792982739 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.824879469 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.004480392 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.915864291 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.796410826 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.817486162 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.008305539 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.91752256 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.900544083 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.252263416 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.795863174 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.860798438 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.79560144 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.795736755 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.796313345 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.952699264 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.896658437 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.886344907 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.797678093 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.79653951 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.795091793 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.458628347 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.997181439 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.895191035 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.938598452 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.945213176 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.999328161 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.443446258 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.797171413 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.441755938 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.961205002 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.012330158 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.003999828 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.921338803 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.796676047 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.946193942 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.798455863 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.797983474 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.03404114 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.939649085 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.90090641 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.798624202 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.798924318 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.79920704 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.045502453 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.798691319 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.895083689 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.797896432 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.798279759 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.898769263 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.902395568 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.937941952 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.010859768 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.830834888 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.5214205 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.010144181 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.013021898 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.866835283 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.033851023 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.801061517 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.796793291 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.886584278 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.551049442 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.998607945 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.045167117 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.019377234 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.832275853 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.394458345 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.800048759 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.993092889 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.985095028 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.993445958 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.946160906 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.951607036 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.131782119 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.799286423 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.799573919 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.027395316 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.936471219 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.802162471 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.165379107 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.034938611 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.428611856 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.822654763 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.096245815 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.931968572 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.12578819 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.426596891 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.80070259 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.969235168 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.839683718 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.801193655 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.802923603 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.992324839 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.610450683 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.801256999 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.554786149 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.86506116 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.80082669 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.003883079 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.803413806 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.010937286 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.801790316 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.037507553 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.230649009 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.836406639 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.972489714 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.948532333 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.596180721 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.047507477 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.045097474 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.918458029 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.069136601 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.533221925 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.803033616 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.078106619 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.802324276 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.801733136 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.968807672 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.803438947 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.949933755 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.803108981 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.030142283 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.826853612 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.959062618 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.804903707 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.034712669 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.83690798 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.854258092 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.801950958 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.925908032 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.802516866 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.705771452 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.957926784 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.807526112 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.80332458 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.230878269 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.802019584 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.949485756 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.034020608 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.82808079 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.871042698 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.327082154 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.804034287 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.890287077 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.82877048 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.402592271 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.802355084 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.015344187 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.775849543 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.255224424 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.802650756 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.044527602 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.035118107 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.806839852 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.802262977 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.544621913 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.508682958 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.805574854 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.961650877 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.18062875 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.443610729 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.009469103 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.802811616 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.930807081 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.804860055 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.885579296 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.151744313 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.804637139 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.80514903 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.804381255 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.804791429 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.805709467 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.010838017 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.835329686 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.304934038 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.938907991 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.021650963 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.113377765 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.026271834 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.848497252 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.806629052 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.050703589 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.805829444 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.868279819 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.806413503 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.827712679 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.034875013 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.806819403 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.040665002 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.059553609 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.712615895 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.85435686 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.805651506 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.809116662 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.805680087 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.952382469 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.894830379 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.80990831 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.805753328 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.917495848 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.925143687 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.998560874 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.399942637 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.927247982 seconds)
  done (took 883.297425369 seconds)
done (took 1195.037706006 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.805650086 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.808644545 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.794672714 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.804324263 seconds)
  done (took 28.955181931 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.814466988 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.810988123 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.810898027 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.809708572 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.81302068 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.809465673 seconds)
  done (took 12.608567274 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.847262972 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.8073425 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.804502338 seconds)
  done (took 21.199804144 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.880484515 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.214621706 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.916215056 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.249354557 seconds)
  done (took 10.00386012 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.814152412 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.813684204 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.812752279 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.813505208 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.815414633 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.817185154 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.815387227 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.813257555 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.815887843 seconds)
  done (took 18.076360214 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.190632123 seconds)
done (took 96.774910051 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.815978114 seconds)
    (2/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.871918967 seconds)
    (3/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.676770057 seconds)
    (4/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.902345831 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.690277187 seconds)
    (6/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.055432952 seconds)
    (7/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.137082095 seconds)
    (8/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.741950853 seconds)
    (9/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.948012022 seconds)
    (10/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.810134797 seconds)
    (11/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.117876902 seconds)
    (12/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.810195374 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.965701121 seconds)
    (14/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.833984624 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.847038305 seconds)
    (16/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.87098311 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.835075814 seconds)
    (18/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.157113036 seconds)
    (19/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.79590945 seconds)
    (20/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.838252645 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.592110087 seconds)
    (22/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.749762598 seconds)
    (23/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.633667138 seconds)
    (24/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.326489553 seconds)
    (25/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.336958968 seconds)
    (26/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.810118388 seconds)
    (27/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.937971707 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.858267528 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.88496605 seconds)
    (30/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.892790877 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.102070828 seconds)
    (32/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.835438834 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.404140929 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.911448544 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.94897701 seconds)
    (36/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.809593756 seconds)
    (37/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.808713601 seconds)
    (38/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 3.598855031 seconds)
    (39/309) benchmarking ("sort", Int8, false)...
    done (took 4.774272803 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.489977312 seconds)
    (41/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.160311907 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.044864775 seconds)
    (43/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.799356219 seconds)
    (44/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.508670642 seconds)
    (45/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.795074966 seconds)
    (46/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.907668052 seconds)
    (47/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.80782642 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.453892512 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.92947614 seconds)
    (50/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.003672783 seconds)
    (51/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.797873432 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.083196225 seconds)
    (53/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.89094297 seconds)
    (54/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.821444648 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.082787319 seconds)
    (56/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.114606527 seconds)
    (57/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.703292764 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.88274835 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.866517735 seconds)
    (60/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.9648054 seconds)
    (61/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.404582211 seconds)
    (62/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.810611079 seconds)
    (63/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.180082514 seconds)
    (64/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.564284916 seconds)
    (65/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.036096626 seconds)
    (66/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.883758532 seconds)
    (67/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.813176753 seconds)
    (68/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.01161584 seconds)
    (69/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.989784815 seconds)
    (70/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.822800057 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.199012314 seconds)
    (72/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.095682627 seconds)
    (73/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.830574849 seconds)
    (74/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.011365238 seconds)
    (75/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.9081436 seconds)
    (76/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.867664618 seconds)
    (77/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.37705993 seconds)
    (78/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.908876978 seconds)
    (79/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.99512344 seconds)
    (80/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.982101179 seconds)
    (81/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.06766469 seconds)
    (82/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.947999938 seconds)
    (83/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.985064406 seconds)
    (84/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.412921249 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 5.497291206 seconds)
    (86/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.206147772 seconds)
    (87/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.942114929 seconds)
    (88/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.405692378 seconds)
    (89/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.970068169 seconds)
    (90/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.116316264 seconds)
    (91/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.09407498 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.179842578 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.908141556 seconds)
    (94/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.799188297 seconds)
    (95/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.915306002 seconds)
    (96/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.436790322 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.050702258 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.889250892 seconds)
    (99/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.334379111 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.063264888 seconds)
    (101/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.056036929 seconds)
    (102/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.957625035 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.931439509 seconds)
    (104/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.994499447 seconds)
    (105/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.959283055 seconds)
    (106/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.115839767 seconds)
    (107/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.882075314 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.026931104 seconds)
    (109/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.88061909 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.057023473 seconds)
    (111/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.41795793 seconds)
    (112/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.087669891 seconds)
    (113/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.900668136 seconds)
    (114/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.916066186 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.816065866 seconds)
    (116/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.992924234 seconds)
    (117/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.925658028 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.110175664 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.738263161 seconds)
    (120/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.820016717 seconds)
    (121/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.930219581 seconds)
    (122/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.800952295 seconds)
    (123/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 8.037587477 seconds)
    (124/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.829153259 seconds)
    (125/309) benchmarking ("map", abs, Float64, false)...
    done (took 3.590061115 seconds)
    (126/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.394061279 seconds)
    (127/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.944091216 seconds)
    (128/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.841626735 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 2.255363104 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.840173145 seconds)
    (131/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.998721888 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.071979299 seconds)
    (133/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.897884751 seconds)
    (134/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.816846404 seconds)
    (135/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.010413045 seconds)
    (136/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.802813498 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.105457252 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.064025725 seconds)
    (139/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.815441149 seconds)
    (140/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.979553164 seconds)
    (141/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.189466443 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.119461535 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.947983585 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.467336111 seconds)
    (145/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.32550096 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.938333002 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.054855812 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.8413611 seconds)
    (149/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.944560711 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.861134561 seconds)
    (151/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.33133192 seconds)
    (152/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.018887636 seconds)
    (153/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.994791632 seconds)
    (154/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.728387764 seconds)
    (155/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.267872013 seconds)
    (156/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.011634672 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.837803637 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.80145705 seconds)
    (159/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.930853408 seconds)
    (160/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.209262369 seconds)
    (161/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.833926633 seconds)
    (162/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.329660016 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.207859219 seconds)
    (164/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.241221741 seconds)
    (165/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.939596752 seconds)
    (166/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.923799703 seconds)
    (167/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.246942612 seconds)
    (168/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.801966065 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 3.934708361 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.815626448 seconds)
    (171/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 8.170260226 seconds)
    (172/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.845050785 seconds)
    (173/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.358695265 seconds)
    (174/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.768251259 seconds)
    (175/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.492460044 seconds)
    (176/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.020766564 seconds)
    (177/309) benchmarking ("sort", Float32, false)...
    done (took 5.592000906 seconds)
    (178/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.124248415 seconds)
    (179/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.217651777 seconds)
    (180/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.865984745 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.825645538 seconds)
    (182/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.824141893 seconds)
    (183/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.052337603 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.935764048 seconds)
    (185/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.163253383 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.196276462 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.817740451 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.895265784 seconds)
    (189/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 3.777736998 seconds)
    (190/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.843186763 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.077493595 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.141573302 seconds)
    (193/309) benchmarking ("sort", Float64, false)...
    done (took 5.626757051 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.864603577 seconds)
    (195/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.100610798 seconds)
    (196/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.87633119 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.838568426 seconds)
    (198/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.818451919 seconds)
    (199/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.179813872 seconds)
    (200/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.954186326 seconds)
    (201/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.044164856 seconds)
    (202/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.951333366 seconds)
    (203/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.231989947 seconds)
    (204/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.929295874 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.967020315 seconds)
    (206/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.819098022 seconds)
    (207/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.497657869 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.736246086 seconds)
    (209/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.491225423 seconds)
    (210/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.922679303 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.148574303 seconds)
    (212/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.8502584 seconds)
    (213/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.820894766 seconds)
    (214/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.745372395 seconds)
    (215/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.840444976 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.600555693 seconds)
    (217/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.328034764 seconds)
    (218/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.923390885 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.873487765 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.021026971 seconds)
    (221/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.806657394 seconds)
    (222/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 9.893189864 seconds)
    (223/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.004817326 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.805397255 seconds)
    (225/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.22400466 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.717259116 seconds)
    (227/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.823324413 seconds)
    (228/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.961737914 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.841191959 seconds)
    (230/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.846062769 seconds)
    (231/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.844072696 seconds)
    (232/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.702445911 seconds)
    (233/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.90226465 seconds)
    (234/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.923306443 seconds)
    (235/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.317445633 seconds)
    (236/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.982579851 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.866100808 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.507622302 seconds)
    (239/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.960033304 seconds)
    (240/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.805891688 seconds)
    (241/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.980176909 seconds)
    (242/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.76393576 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.801472945 seconds)
    (244/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.188141133 seconds)
    (245/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.848811155 seconds)
    (246/309) benchmarking ("sort", BigInt, false)...
    done (took 6.821152914 seconds)
    (247/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.923221573 seconds)
    (248/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.656148182 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.130112482 seconds)
    (250/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.807686863 seconds)
    (251/309) benchmarking ("map", abs, Float32, true)...
    done (took 3.389685428 seconds)
    (252/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.826089316 seconds)
    (253/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.182518914 seconds)
    (254/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.124612699 seconds)
    (255/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.766985597 seconds)
    (256/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.819919309 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.469134388 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.94529157 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.916212069 seconds)
    (260/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.044745294 seconds)
    (261/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.842382317 seconds)
    (262/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.005929421 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.851914853 seconds)
    (264/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.898411488 seconds)
    (265/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.13687767 seconds)
    (266/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.91426044 seconds)
    (267/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.850567698 seconds)
    (268/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.010805694 seconds)
    (269/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.80977993 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.297260552 seconds)
    (271/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.847684425 seconds)
    (272/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.119708922 seconds)
    (273/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.80912712 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 4.500076365 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.624280333 seconds)
    (276/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.809521899 seconds)
    (277/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.182868583 seconds)
    (278/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.7018504 seconds)
    (279/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.920696554 seconds)
    (280/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.107853935 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.19845178 seconds)
    (282/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.143529767 seconds)
    (283/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.160445942 seconds)
    (284/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.218848046 seconds)
    (285/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.908918515 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.903763562 seconds)
    (287/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.169110255 seconds)
    (288/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.851083785 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.903749987 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.932992145 seconds)
    (291/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.187993751 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.82673693 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.610963648 seconds)
    (294/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.054709191 seconds)
    (295/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.926487934 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.489390123 seconds)
    (297/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.959254295 seconds)
    (298/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.826321481 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.865953377 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.978002681 seconds)
    (301/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.940859859 seconds)
    (302/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.330911232 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.858827863 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.849703549 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.152800325 seconds)
    (306/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.83379232 seconds)
    (307/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.824414223 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.934100679 seconds)
    (309/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.125394126 seconds)
  done (took 999.807166498 seconds)
done (took 1001.610922164 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.857663098 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.84929335 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.835317999 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.855381433 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.945296315 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.863920133 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.843262237 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.838370354 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.879937996 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.881476362 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.833978522 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.86101846 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.836521006 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.8367641 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.833324238 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.847267941 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.139102008 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.856528638 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.854307855 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.843900225 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.851200019 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.835252631 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.883985813 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.86260022 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.838307559 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.837328946 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.837664113 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.855304222 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.947172323 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.841153775 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.836673567 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.846730466 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.139096615 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.855459078 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.831359046 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.855484379 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.848196268 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.844211641 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.839068212 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.86852825 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.273881276 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.839360078 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.838081687 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.835903574 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.834977236 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.841442158 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.837207999 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.842629531 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.848554368 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.849868772 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.270528427 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.854001869 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.839886079 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.836927093 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.847649923 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.839166351 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.839614486 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.853481629 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.85633902 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.852853488 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.128696379 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.865158116 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.838246932 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.854366517 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.845377154 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.307761888 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.835354711 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.842150872 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.273364527 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.845991647 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.307616785 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.850098963 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.838997069 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.853492225 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.871576517 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.139341316 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.856786483 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.83565863 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.845257993 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.836327591 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.846589103 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.852183355 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.842814439 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.837990632 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.852181861 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.867774586 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.847908225 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.841153957 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.847593234 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.859665748 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.846463804 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.849791848 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.84368843 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.83247598 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.84792108 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.843020501 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.841703844 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.841677251 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.842959017 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.849074562 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.271623463 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.858326628 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.834494505 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.836353681 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.837550596 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.85329273 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.273332982 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.842922115 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.862094818 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.886217874 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.840583169 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.131276985 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.863312625 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.856540895 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.847269377 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.841954659 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.834506868 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.132140729 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.293164299 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.859402924 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.840698621 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.838650425 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.856129949 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.840001211 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.836928965 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.143416064 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.862200217 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.853647701 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.96190943 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.8527823 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.871229825 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.838204578 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.842887891 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.870241459 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.857519056 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.872909192 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.844709521 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.85618207 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.85805585 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.83935532 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.855813588 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.851561087 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.842545737 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.847912761 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.835646195 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.871897834 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.855034827 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.855091393 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.862163826 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.962286662 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.838361749 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.133988101 seconds)
done (took 288.961985602 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.908489213 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.836007243 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.934256568 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.839460621 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.923483715 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.924114773 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.836267948 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.836632592 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.837011111 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.216976675 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.836811368 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.837458202 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.832418061 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.83582184 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.92024411 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.840465563 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.83638055 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.182140632 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.839883505 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.911765475 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.835240232 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.837482228 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.838493789 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.222034224 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.839005907 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.838558586 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.910753065 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.841728486 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.185790189 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.838853324 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.834421835 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.185083244 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.929525103 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.860626682 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.851611879 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.848692781 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.923889125 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.84308976 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.921759456 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.920676583 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.938409409 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.882016362 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.837063489 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.840260225 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.842581821 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.841285763 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.838691739 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.86897158 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.836459302 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.837989041 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.182117634 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.84961308 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.838637642 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.837883444 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.837328082 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.871180893 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.838438204 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.841521504 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.930974135 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.842457818 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.904327743 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.22195876 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.220687641 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.840964022 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.84027422 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.839706698 seconds)
  done (took 182.342008398 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.907951021 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.91688595 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.910711586 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.844702425 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.894739368 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.915032254 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.255896661 seconds)
  done (took 15.415882793 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.848554391 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.844589324 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.89307851 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.894383917 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.842233388 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.993792836 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.842267845 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.853607678 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.842713507 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.896147954 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.844211858 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.844050425 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.847831002 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.834484637 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.891591178 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.854866051 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.957687987 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.843770144 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.844539242 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.995540973 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.840233507 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.848948206 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.896484291 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.853920795 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.843573428 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.849995703 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.425790041 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.845036379 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.842587664 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.845546622 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.841668054 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.887780999 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.844963139 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.840817036 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.843579057 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.960975319 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.844750438 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.842378941 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.84528729 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.844382886 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.845821521 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.844819462 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.845390412 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.841879102 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.84521073 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.868914667 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.844480095 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.845776131 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.846208328 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.845294298 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.896199466 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.847201109 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.842627262 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.842982374 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.901265583 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.852486291 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.846767694 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.842832028 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.847047923 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.844997061 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.997305395 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.894367641 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.848508054 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.89687446 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.84534804 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.84547426 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.845591703 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.846819651 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.900310843 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.845125994 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.894506644 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.843575666 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.00488315 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.871800229 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.847060282 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.848478927 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.849851851 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.846631788 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.841186441 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.853641709 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.845711799 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.849017366 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.854340398 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.844722319 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.844526482 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.959517169 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.956732084 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.844943179 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.860612458 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.854435313 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.845009755 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.899722834 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.847703316 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.845049868 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.89861038 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.961579403 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.902879069 seconds)
  done (took 203.392042434 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.851525569 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.85465766 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.851196898 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.863286352 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.848035507 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.846567531 seconds)
  done (took 12.888426103 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.848185983 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.849631478 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.846997416 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.848126034 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.848143002 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.848114774 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.850289779 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.849972236 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.850192086 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.846742269 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.849255173 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.848807789 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.851634306 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.847792718 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.848667191 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.850321726 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.848085859 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.847809367 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.849406531 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.848856304 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.993294565 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.850066118 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.850335371 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.851103165 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.852405806 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.849173917 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.855982049 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.848231469 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.849163956 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.854416694 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.854351404 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.850945444 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.850525114 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.855036818 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.854580108 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.851720535 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.852915556 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.849804961 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.84744973 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.850093488 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.850171875 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.851736254 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.856314708 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.849800792 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.851348801 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.853471151 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.851959414 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.859051569 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.855986554 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.850503549 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.850805533 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.848299691 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.849046212 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.855914545 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.8509662 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.853176859 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.85361301 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.849213901 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.856580926 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.850222789 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.848922477 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.84955471 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.852440047 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.853550779 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.859633259 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.851194094 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.851371193 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.85253971 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.851486434 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.851490084 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.850231077 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.847286501 seconds)
  done (took 136.194251852 seconds)
done (took 552.012366837 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.124183594 seconds)
  done (took 8.900340229 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.99260919 seconds)
  done (took 8.865129955 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.253113891 seconds)
  done (took 10.032863955 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.859785622 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.844303183 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.855110261 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.841787882 seconds)
  done (took 29.188035664 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.893308314 seconds)
  done (took 8.670758556 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.856608144 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.841303127 seconds)
  done (took 15.510988037 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.900742574 seconds)
  done (took 8.68136711 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.943709605 seconds)
  done (took 8.726277643 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.86191169 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.853485687 seconds)
  done (took 15.509524674 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.832190401 seconds)
  done (took 8.612084982 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.498286169 seconds)
  done (took 11.290186169 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.851166957 seconds)
  done (took 8.644381799 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.91102182 seconds)
  done (took 8.69244951 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.864567482 seconds)
  done (took 9.643836927 seconds)
done (took 162.74617506 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.847775518 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.845998166 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.846870905 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.845601577 seconds)
  done (took 29.165522478 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.884781237 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.885152581 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.887842331 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.897224643 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.888388273 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.890158747 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.878951927 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.880180873 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.8984576 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.888319125 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.890269292 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.888536206 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.885855284 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.877702138 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.888594504 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.890315908 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.899086394 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.889614091 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.879693126 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.891612111 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.853483468 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.899161035 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.890982638 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.855330384 seconds)
  done (took 47.039952541 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.054321745 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.925672879 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.008849227 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.906715952 seconds)
  done (took 9.677906808 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.903879517 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.908275903 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.918950749 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.959321577 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.992402717 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.916765037 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.881304942 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.876616989 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.862436166 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.907648772 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.982305462 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.923742307 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.992454726 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.855552377 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.041840833 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.854768145 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.855376576 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.907729846 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.958794024 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.9727633 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.854787312 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.907038291 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.911812249 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.923762457 seconds)
  done (took 47.852377542 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.852751428 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.862203046 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.860401302 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.853643343 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.854017053 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.855886998 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.859859579 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.856090847 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.876820662 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.856545798 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.854252776 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.853726503 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.854439288 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.855522025 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.853310677 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.868243779 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.869038039 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.855679975 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.859220879 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.863345184 seconds)
  done (took 38.958954599 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.852359928 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.788564395 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.202293887 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.106412948 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.851819647 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.850472707 seconds)
  done (took 32.435478627 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.867295438 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.861099805 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.856444335 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.910666522 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.990651378 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.861159381 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.856019623 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.864932621 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.900133063 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.919826698 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.873736859 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.880754933 seconds)
  done (took 24.426524143 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.85959818 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.850069571 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.849870805 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.867051511 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.867916261 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.86308925 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.864359454 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.85081775 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.868374358 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.872330836 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.863065172 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.868405902 seconds)
  done (took 44.130770001 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93941049 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.894473685 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.900506849 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.539514332 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.231232147 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.062635036 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.460962886 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.193869346 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.853627619 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.124598836 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.912686968 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951305724 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.10789273 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.249347336 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.88046448 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.328349119 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.145685968 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.068288126 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879121411 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.546443061 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914015019 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.927351474 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.659263094 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.909663356 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.064056564 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.981111248 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.111682335 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.852033835 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988515291 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.888494767 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863156488 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.855260666 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.127476563 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236519004 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958536387 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862798333 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.474207251 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.565196465 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.842399197 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.629749233 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.603217923 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.973052174 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864938316 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.853327426 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.789006664 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.901816368 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229837373 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.857334122 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.564159202 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.853589911 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.86573525 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949618504 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.858347989 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.670319322 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.774940842 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.853111475 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.851561001 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861817162 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.429573317 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.990240195 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.919237869 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.823791432 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.947506021 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.635566757 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.247300331 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.001620132 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.858396955 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.85662537 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.789659413 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.549549891 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90918934 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.184460337 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.874500598 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.505593126 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.159267485 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.963380008 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.794749255 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130902691 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.28183053 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.822436363 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.082795235 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.857506435 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79272808 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.803129155 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.791139155 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.138389499 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894341136 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.656581322 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897597751 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.197615251 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.865920433 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876284162 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879590666 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.080431375 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.741056029 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.857600572 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.722869507 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.998520103 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876730022 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.20134529 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.791994924 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.85877539 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114976835 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.068959157 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.808613683 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.357242263 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.019607007 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.314238968 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.90467941 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.886280075 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.899254211 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.126937654 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.9149476 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.002059417 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912225048 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.859872468 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168080034 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.332496406 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.991287479 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.978163916 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.981944435 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.195906379 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889657201 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94171103 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.867391279 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.859602223 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.631804621 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.411052116 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.859743574 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.860108995 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.805661887 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.904308935 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.861940483 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.80924676 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.476827965 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.931846254 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.873076682 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.084908395 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.325598083 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.167335595 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795288687 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.191105379 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.916894258 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.081520544 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.515376108 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.932462074 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.119956166 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.811484533 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.845894566 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904097305 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87875032 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95782235 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882822201 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.88797051 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.148379169 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.864914034 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.864082769 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.665796717 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.896139432 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860490135 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.864626415 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.610492322 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.135137456 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.882007283 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.865575676 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.755351046 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.874463666 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924973493 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.866553393 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.87078283 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.399667111 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.57455611 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.866974926 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.440397034 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08638015 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871366001 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.637156337 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975835 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.951316678 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.137682436 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.92149625 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.795044353 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.57286029 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.556155717 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865298444 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.803515502 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.865756484 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8782836 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875765557 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.061627772 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.139636649 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90982521 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.570581904 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.904300442 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874799337 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.869140804 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865219478 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.374321973 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.016223253 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.928482873 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.90808717 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008211616 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.879458025 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.800642729 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.869916713 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.870140167 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.865480168 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.866126447 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899111705 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.578749018 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249679459 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.123637618 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.481826715 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.879805929 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.614050783 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.924876063 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.868761304 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.585707328 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.061306958 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.949084418 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877345017 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.877302239 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.650922279 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.574421313 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.436095531 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.175611407 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.174981787 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.30607759 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 4.95701434 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.892120333 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.210073258 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.8004292 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.424355919 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.925540084 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.212050058 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811805283 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.956206933 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.522337939 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.206454923 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879899851 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096388794 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.25165354 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.649810095 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.008691924 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.07782406 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901070716 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.900660078 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.821452786 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.388415113 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01301251 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.605152354 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067984806 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206513891 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.600212504 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.991617943 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.866932957 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.578515757 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956388404 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.577196905 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.042281871 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.932495814 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.86072463 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347097707 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.875433407 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.095631249 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.22597226 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.908894982 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.991336029 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.804745416 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.880022277 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.880028144 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.870860155 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.866835263 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.723996678 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.123680852 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878444844 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803216493 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.860494389 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.157002877 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.768851647 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.872418298 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868857124 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180969967 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.303212418 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03376449 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.850111513 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.382492792 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.875498556 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.804030812 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.804476196 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.562804537 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.875873427 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.84456485 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.083648812 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.976262468 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.782771975 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.825153948 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.110007737 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.127760437 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.883362683 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.141854703 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.145430485 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.570754014 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892265957 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.966607092 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.608730633 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.975413308 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.869453303 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.103612249 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.625553887 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.094526879 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.917257796 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.822519028 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.868363082 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.085855313 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.869737029 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.859231921 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095980265 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.59174013 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.976437722 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.173642347 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942037338 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.893764416 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.912299322 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.960530816 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879351202 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949878593 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879759233 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.881743281 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.87911329 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918953917 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.894391142 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.994373352 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.885334943 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964481786 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.024471305 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.394723863 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.874652843 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146234609 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.22954709 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.195288444 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.928511403 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.871167105 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877361092 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.807254782 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018649249 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.09857144 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.145157305 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.002756667 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.98889208 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895646727 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.620726237 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.957817181 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108693825 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.145034902 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.768576209 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.269852279 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.911351831 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.873551333 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884464461 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.081921077 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090339318 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182771296 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.010873083 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.827473077 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.235530767 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.146805491 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.87220893 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.871613179 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.461070047 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.012262184 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.579523403 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.918846702 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.847482028 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149201158 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.883028968 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.267046389 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.895418228 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.038128157 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.646239253 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.597720053 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.165139851 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.867374361 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.936285949 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.152077137 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.259502365 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.188732316 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941430424 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.885866994 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.994734485 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029651281 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.730876595 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.877862864 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.87920621 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.925254542 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.589103523 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.887189647 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.155139203 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.191027317 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.874569652 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.73454791 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89936478 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.886366742 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.100922694 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.156954802 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.131976622 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887075025 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.882638855 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.69315768 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.153744271 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936833671 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.812459384 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.878492501 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978301937 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.125834373 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.896242368 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.328279831 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.587694114 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159154905 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.879337709 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898939017 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.914080246 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.235922273 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.20208654 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.416220249 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089215348 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.466353116 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.341461286 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174910087 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.882555979 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.906559182 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.176068775 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.881323997 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.836694448 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912325427 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.150666777 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.190533947 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.88299608 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.733658358 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.848235621 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.220954393 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.441977957 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816776271 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.887685371 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.938514666 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.878151909 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.008041624 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.889305123 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.738628453 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.910728389 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.654894686 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.163342833 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.88320261 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.865227748 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.713487062 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.046703655 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908316479 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023779825 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878892947 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.553411865 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.231829375 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.135924694 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.836426462 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.880860284 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.88353653 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879958335 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.867827436 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.076630604 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.076424805 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.164200091 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.865499037 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.913207821 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.884967924 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.098255813 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.091309386 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.909218843 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.019990198 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.836376842 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.91757361 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.786709975 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.390572428 seconds)
  done (took 1670.521827298 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.889319651 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.950146504 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.926256067 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.916243096 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.946091342 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.905807749 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.959627304 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.053574661 seconds)
  done (took 57.361095858 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.882397407 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.075725873 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.890218667 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.881663078 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.88896667 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.880827688 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.048947093 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.889748285 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.888657062 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.891530393 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.883751275 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.880392171 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.189390661 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.902471312 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.883351713 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.868839942 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.890597947 seconds)
  done (took 74.553667953 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.893064703 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.943934826 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.90548574 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.897606394 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.83785369 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.896421605 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.686181626 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.891546792 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.885031108 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.107630038 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.514241146 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.895970376 seconds)
  done (took 90.171123515 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.892643863 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.888968199 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.889668397 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.889732366 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.889738307 seconds)
  done (took 11.271018549 seconds)
done (took 2179.369660883 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.26891851 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.094571333 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.105529009 seconds)
  done (took 6.01551068 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.029078162 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.078337108 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.198385244 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.203380029 seconds)
  done (took 10.326136631 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.16818687 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.26233631 seconds)
  done (took 6.241882032 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.271280563 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.893907854 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.25641 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.878846452 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.880224591 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.878829755 seconds)
  done (took 22.455697383 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.885429375 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.886854448 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.885023768 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.887381216 seconds)
  done (took 9.357644615 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.865544104 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.571581862 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.867965127 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.882101411 seconds)
  done (took 21.000139052 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.637251567 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.642408384 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.629273134 seconds)
  done (took 9.721270258 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.53124829 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.777105246 seconds)
  done (took 9.121617991 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.150533275 seconds)
  done (took 3.96483619 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.017334886 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.192926749 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.373587927 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.399547683 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.488328764 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.561507266 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.187535566 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.118868745 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.289184231 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.313412158 seconds)
  done (took 24.757699378 seconds)
done (took 138.46753595 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.25641661 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.125076895 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.084757005 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.217743627 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.104807501 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.084213001 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.094965142 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.20148739 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.723492358 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.722159504 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.213442558 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.11095867 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.262818178 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.119325259 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.261299986 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.121257001 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.102982694 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.264272333 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.915244367 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.146349482 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.093831968 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.85354429 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.06103864 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.866875956 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.136603448 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.035847715 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.431650028 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.117859731 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.068669194 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.440978058 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.037311136 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.301175797 seconds)
  done (took 173.392406844 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.640135088 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.88414416 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.882660258 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.884728234 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.325135821 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.884850312 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.884879982 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.883839493 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.147100346 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.129774522 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.883202212 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.311463296 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.886335068 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.88451624 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.89632558 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.885162057 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.269790037 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.709047639 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.895220176 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.899690248 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.901221727 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.25287719 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.906620202 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.308115873 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.308489158 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.906452364 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.883745701 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.906371308 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.893554767 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.907711584 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.911054128 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.883981157 seconds)
  done (took 208.857016837 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.884074 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.8855698 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.893243877 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.886682576 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.896769357 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.896348329 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.887883359 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.885054374 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.483883312 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.487012426 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.904492722 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.894635069 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.894036407 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.885019819 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.902107607 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.886115588 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.897305423 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.892560682 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.892868793 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.901173577 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.907355129 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.631180479 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.911171085 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.633950039 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.905067007 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.899870834 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.885898956 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.899977792 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.411704213 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.907947707 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.908240207 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.896381393 seconds)
  done (took 221.689747327 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.096920896 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.902022232 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.902142547 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.855687334 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.90212035 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.902093115 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.898169034 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.099062924 seconds)
  done (took 19.409334804 seconds)
done (took 625.17264942 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.473678555 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.240590828 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.085415465 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.92644032 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.182190992 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.965352365 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.921290677 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.993559037 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.660257152 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.994964365 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.637581031 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.942848103 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.718067998 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.94827021 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.052957612 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.980220534 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.496928808 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.587650313 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.107433628 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.008893959 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.097341477 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.925250008 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.999586939 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.677980757 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.738708469 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.93903052 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.116522184 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.504477526 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.93438745 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.089486593 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.645795204 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.31663743 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.935927159 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.920373852 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.972552452 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.955298363 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.270310872 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.934164204 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.049151035 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.692487066 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.005941037 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.540302803 seconds)
  done (took 105.014415519 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.892835843 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.890026885 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.890530604 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.890781808 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.891772044 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.892628687 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.88923483 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.890515244 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.891949798 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.889703376 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.890537384 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.894170856 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.890419587 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.892251906 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.890784058 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.890586594 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.892438518 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.893304632 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.889489627 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.89237184 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.892010853 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.891228442 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.892821732 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.891292692 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.892477243 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.892544291 seconds)
  done (took 51.019333098 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.916032699 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.05332709 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.137101518 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.927814691 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.906994599 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.909171517 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.92531147 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.913967151 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.909101679 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.909326505 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.000852264 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.913204642 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.925407496 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.136212877 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.922493715 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.906757904 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.906014669 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.904247898 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.058135065 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.924500721 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.927604879 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.911913949 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.925730799 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.920723489 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.907404242 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.906320907 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.91018555 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.339072238 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.915700608 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.002578293 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.987875796 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.929738566 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.306079352 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.146191508 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.97418417 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.915674125 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.907550693 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.005169168 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.915193187 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.908371697 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.926096171 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.913633033 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.13619691 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.407688285 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.922344834 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.908646035 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.353795175 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.014897576 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.949878537 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.919352273 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.142249211 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.925185131 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.910603495 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.908213016 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.944747553 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.918880791 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.90792547 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.21933263 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.919863771 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.928001217 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.913667934 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.909521282 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.067098247 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.918375136 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.054932621 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.918332743 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.916305464 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.910267618 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.135502588 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.925288188 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.405667517 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.922949497 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.908522227 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.002108596 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.057412299 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.378879735 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.922538765 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.06816251 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.31855669 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.932205712 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.916952659 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.330863235 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.938026471 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.917278367 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.912230055 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.911205661 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.909861786 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.953378955 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.926179915 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.351938364 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.415480663 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.233815609 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.940194493 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.926303823 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.913198388 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.222034326 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.920226363 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.912047195 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.131683143 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.423046161 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.92465933 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.91663568 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.398039616 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.928460596 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.930333517 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.919243246 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.142902494 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.927420574 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.956104337 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.910984644 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.917890896 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.914606979 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.930206026 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.918940609 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.911831202 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.386937948 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.025484869 seconds)
  done (took 236.435284621 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.906733637 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.904624071 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.905114664 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.906949806 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.903950977 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.909615644 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.906581643 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.903957435 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.911126469 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.906122658 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.907238938 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.909216127 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.908065418 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.912311506 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.946152879 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.913212444 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.515887442 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.906199557 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.905383634 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.90719093 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.557286551 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.912890453 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.906278935 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.905044473 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.904791385 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.908419067 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.916257293 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.938855668 seconds)
  done (took 168.585675687 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.912737283 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.027921483 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.930481583 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.940525195 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.922431938 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.910250505 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.935559491 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.929048944 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.919369077 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.90959134 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.910418075 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.973970127 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.924232492 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.013534677 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.943890342 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.945717528 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.018209541 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.919684687 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.910737759 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.911390826 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.940449491 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.90918168 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.973827261 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.040461382 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.930489549 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.030806096 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.916124207 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.913435851 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.917708777 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.032760038 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.927260809 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.974433096 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.942140553 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.941536763 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.034796756 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.030116806 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.017549144 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.941856663 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.923497541 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.911697674 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.911327622 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.90264053 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.028761179 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.937525788 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.913473722 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.023117008 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.931656454 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.91548737 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.924671574 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.918912581 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.927310445 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.933327586 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.982910527 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.046529536 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.952859696 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.939955879 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.938993395 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.200144305 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.923292551 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.021265181 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.905250797 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.033643543 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.933306854 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.902760922 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.919428829 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.917490664 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.941653448 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.945789663 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.021001807 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.927456976 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.015368841 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.949702671 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.921577521 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.914406082 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.920520602 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.033309102 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.034147966 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.950041744 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.95452746 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.951144467 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.91158665 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.917842597 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.904080704 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.934089638 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.92260059 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.031250314 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.035499642 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.921892911 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.916426277 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.921840985 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.918074371 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.941694323 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.044166461 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.95126839 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.017655204 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.984506779 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.992520026 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.932346166 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.928586854 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.92093201 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.982417213 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.932521671 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.928135548 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.24670005 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.990341856 seconds)
  done (took 207.397301798 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.386807425 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.972121246 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.976030903 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.211082094 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.342378935 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.709609568 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.964907523 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.968725429 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.992906884 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.126136543 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.022902865 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.978531788 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.95429236 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.940027481 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.967320807 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.98846728 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.970960466 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.256185205 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.083082608 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.099054379 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.947419731 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.251017601 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.287508285 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.360673512 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.002807361 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.290018979 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.652882394 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.211357678 seconds)
  done (took 62.764128075 seconds)
done (took 833.042458612 seconds)
SAVING RESULT...
DONE!
