cset: moving following pidspec: 10591
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.351337205 seconds)
loading group "string"... done (took 0.547423358 seconds)
loading group "linalg"... done (took 7.05300938 seconds)
loading group "parallel"... done (took 0.15370011 seconds)
loading group "find"... done (took 1.074261534 seconds)
loading group "tuple"... done (took 1.694639473 seconds)
loading group "dates"... done (took 1.165560005 seconds)
loading group "micro"... done (took 0.21184976 seconds)
loading group "io"... done (took 0.982540145 seconds)
loading group "scalar"... done (took 36.132693036 seconds)
loading group "sparse"... done (took 11.112766996 seconds)
loading group "broadcast"... done (took 0.903588523 seconds)
loading group "union"... done (took 11.822168034 seconds)
loading group "simd"... done (took 4.125574725 seconds)
loading group "random"... done (took 8.481233612 seconds)
loading group "problem"... done (took 1.841249465 seconds)
loading group "array"... done (took 19.719318787 seconds)
loading group "misc"... done (took 1.6242187 seconds)
loading group "sort"... done (took 3.131201144 seconds)
loading group "collection"... done (took 16.342231022 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.486983721 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12405402 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114389879 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118538133 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.146553977 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114930388 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123047419 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083904237 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.769992947 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147038522 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118505924 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.413892134 seconds)
done (took 5.081863428 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173742603 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083079535 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081730803 seconds)
  done (took 1.296612796 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065603896 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121225125 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066375173 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067221435 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066919997 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066173483 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066290631 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066333355 seconds)
  done (took 1.653819121 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073329954 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069474568 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069371127 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068629463 seconds)
  done (took 1.414237401 seconds)
done (took 5.750639914 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.770297084 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201783252 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182330417 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.396808125 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.128922567 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.154269809 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.645666033 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.307914752 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.185269212 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081960248 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104437534 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.318754118 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107140479 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.635073796 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076559577 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090337644 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136149067 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.433886424 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067410243 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082403203 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088828016 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128145528 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088277251 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075047396 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.142729112 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067989363 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.13020997 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080243253 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066880809 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.207762618 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172389842 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.651669786 seconds)
  done (took 10.179049332 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096396497 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097101238 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068907633 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136738893 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098293658 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070047224 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070776867 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067486747 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086758835 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128358301 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.09189185 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.10336236 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067648739 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070198295 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084933725 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204954048 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082734365 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083307042 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072313616 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077229376 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116957551 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078314643 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077938206 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077746881 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128214085 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180211547 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098360868 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097232544 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067402673 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081080551 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.118018942 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127628767 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06787898 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068044005 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126725317 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.0962008 seconds)
  done (took 4.6397964 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.293304355 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140478192 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090108551 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131660507 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065236278 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106753776 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065500348 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081115305 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.200569603 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.371834322 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.576608102 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111357799 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103725666 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06775912 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068512067 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066889284 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.354285633 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.110781919 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103496571 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081186976 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069807475 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068537486 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.34143634 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067961253 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063977401 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068547345 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057573154 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.108723097 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123102763 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067366197 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.926226306 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125899162 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067245128 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10063508 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.167780101 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088275072 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.273134792 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067900636 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064719231 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.150147487 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070148025 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066192246 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083559859 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103571556 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113286528 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065343651 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067193978 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.163073843 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06503133 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079770023 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.990239163 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15504792 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078792076 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066194259 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.246683827 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085973028 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069504837 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064719134 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.173851633 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.138406784 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064861824 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068180382 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066706053 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06817341 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068958448 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.374148654 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066183658 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.770200876 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069394019 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077155541 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068961168 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069478718 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072750784 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072398854 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085140561 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065982499 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075504558 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066146864 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065830172 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066912265 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084130898 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.358295843 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066300341 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070587713 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06476726 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085951733 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096080018 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071224415 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065215965 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099904932 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068093639 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065886037 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.104857955 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066170276 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08314714 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063019184 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111677501 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068400364 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065240958 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.083586006 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065888272 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.09623592 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.068215588 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097846836 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079102213 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.062657157 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066702785 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.384744815 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063682668 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.063837144 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.06683341 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064437748 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.06608295 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.064882931 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.077624326 seconds)
  done (took 20.861508994 seconds)
done (took 38.10677731 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.274507059 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075529798 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.07550757 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075894527 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075787644 seconds)
  done (took 1.81130389 seconds)
done (took 3.050901317 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120351854 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098866462 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064272203 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096251327 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064495721 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100892999 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098797563 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081267462 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09914798 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064665937 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09627563 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06443486 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064441818 seconds)
  done (took 2.347441997 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08209664 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082954747 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069624745 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082974246 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063864742 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082041412 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080877208 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088484465 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080631683 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072368483 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064063037 seconds)
  done (took 2.057521812 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082393355 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083657267 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069551527 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08159688 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063595951 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081077209 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080620546 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08504998 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080760275 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073162731 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063992391 seconds)
  done (took 2.051166421 seconds)
done (took 7.658873948 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077589327 seconds)
  done (took 1.27581298 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.592789102 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.095534034 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081141943 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112366397 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183648737 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.120322711 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.280605698 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086733985 seconds)
  done (took 8.930839163 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.102443168 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068676176 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07097864 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07074218 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068946065 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068315442 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.06978925 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069393631 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069317874 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071261053 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072545232 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071474309 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071691283 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068259043 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072135 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069582868 seconds)
  done (took 2.426698635 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092560019 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091011012 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073481764 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075126896 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071967146 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072762968 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074554849 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073891947 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070568265 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071753812 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074769926 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073758675 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071532857 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064965896 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07386305 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075898711 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07091652 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074437616 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074997129 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075488232 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07497399 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064426626 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071499994 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074580621 seconds)
  done (took 3.089334483 seconds)
done (took 16.927923544 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114193681 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071174513 seconds)
  done (took 1.392022758 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081424757 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083462824 seconds)
  done (took 1.378875209 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084713823 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.0653838 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093748462 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079498775 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066452704 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066110266 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.090212376 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066174353 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065938421 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066142875 seconds)
  done (took 1.959144056 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068993091 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079107939 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071272474 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082709289 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074217346 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065508743 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073037513 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068067254 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079054879 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063259113 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071696808 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083130554 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071925612 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085197931 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073071846 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069577849 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071956383 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068231346 seconds)
  done (took 2.536949791 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066075763 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067283366 seconds)
  done (took 1.351600472 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068364296 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064211088 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068387031 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067995123 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063791689 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063130221 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063994009 seconds)
  done (took 1.67542107 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.385485711 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.111476388 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.297361695 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071066537 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081933472 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.250497519 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066234454 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070973863 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.07126512 seconds)
  done (took 2.664655158 seconds)
done (took 14.17846246 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078493929 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085511615 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.09513096 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.362545306 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091931547 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06597645 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113771155 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189595458 seconds)
done (took 2.313425819 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.249256698 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.615171638 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.386641887 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.196465708 seconds)
  done (took 2.416307262 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.325927097 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086829336 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059024435 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066865451 seconds)
  done (took 1.764600279 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065809588 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068188247 seconds)
  done (took 1.357416158 seconds)
done (took 7.016045821 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066546397 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066018198 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063564152 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066302867 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.063200205 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.0634184 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08444962 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066116289 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065750958 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065558455 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.068665495 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066064992 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063565374 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063294837 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065538224 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06573684 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063176552 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063088033 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063537393 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066386002 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06330087 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065492538 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063154838 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063201164 seconds)
  done (took 2.834277492 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083801798 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066535347 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071583339 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.07065788 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069792403 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071116523 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07157164 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065887224 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071036821 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067971196 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069451464 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069747289 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067551323 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070263035 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068108119 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069927062 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071429163 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066251285 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067751238 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.07010466 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071008012 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066348718 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069684066 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070796989 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069701456 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069306353 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06855067 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066675621 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070969189 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069610758 seconds)
  done (took 3.329813444 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069186869 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063141998 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063860008 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070426815 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063255899 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064760786 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063302131 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06385495 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064160447 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063447429 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064643863 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063400295 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063476218 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064368434 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064318272 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067127641 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078354504 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063709813 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063708688 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06383669 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066395781 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063536426 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06350489 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063373535 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.175587964 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063302835 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063728335 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063379781 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063971076 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063246843 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066021197 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066969577 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063155241 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069951773 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066897453 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062959192 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067320177 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062814278 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063910058 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06267678 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063084103 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06296265 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063346227 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070048703 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063187458 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065157484 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063634483 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06430459 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063412708 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065896334 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063113605 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062946518 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065389387 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064698149 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067664892 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062993128 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064068141 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06303301 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064199738 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062684323 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062720192 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063338965 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065615844 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063817477 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077749049 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069712476 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063020557 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065115098 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066002779 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065516759 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065345281 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075915373 seconds)
  done (took 6.032562291 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091670293 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08658568 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065703391 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065338975 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0621202 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063965221 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067858546 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063972522 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065638776 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069455401 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0641611 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065100149 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065034658 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076665126 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064444162 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065413184 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070075953 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06204718 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064331448 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067243697 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064172086 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067473496 seconds)
  done (took 2.743256469 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154456748 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070455052 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105728028 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073141525 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06782032 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073320342 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069494237 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06987056 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070045403 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068192628 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068061183 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069604833 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067407068 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067783549 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068068952 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068454905 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069837924 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068093887 seconds)
  done (took 2.609311959 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077666412 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065837247 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086459794 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066262286 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066381674 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068378784 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071086154 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074268771 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068317483 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06587008 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074307338 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068237285 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068179895 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066200053 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067880562 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066471483 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068071443 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065987448 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074399532 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070696453 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070860397 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074238108 seconds)
  done (took 2.787394033 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079792168 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067134704 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082422834 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069068647 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061708586 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064144633 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070206695 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065976374 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069905268 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067388725 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065830498 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06393666 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069230203 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066013911 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069479214 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066121146 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067527342 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065957889 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067297065 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06206034 seconds)
  done (took 2.602004092 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08761067 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067096424 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067827154 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076484783 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067348688 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06753425 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07540607 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067160258 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067197715 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089355089 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067323072 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067209892 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075178956 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072209816 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067195567 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075470056 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075014686 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075177089 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066974207 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067082156 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086717495 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067121927 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074780922 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067078787 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067129993 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066963369 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06716999 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072137412 seconds)
  done (took 3.253724367 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066101637 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065971575 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063801153 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063879914 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063728781 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064057478 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063428095 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06340381 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06592838 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063447371 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066061946 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065652771 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065618973 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066003982 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066478478 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065869558 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065671274 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064034911 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063418612 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063609019 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065780566 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065659848 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065599954 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06356339 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063251941 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065576684 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063343816 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063347993 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065586655 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063456379 seconds)
  done (took 3.187276434 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075594557 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073391852 seconds)
  done (took 1.396734571 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063897581 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079804094 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063576992 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070173048 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070317383 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066760582 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073627548 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069905452 seconds)
  done (took 1.801804229 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082853016 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077279614 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068155341 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.08102418 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076492294 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083138255 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132451153 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067306842 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072613302 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064394927 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079449475 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065702188 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072525663 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066354142 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071683814 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072691476 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064154491 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072307403 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06829283 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064682187 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067562007 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074989192 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068406481 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061946443 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067467226 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087833118 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077401217 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065681766 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068985736 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073282165 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071598306 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059978706 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06599839 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066725237 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063822063 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.07571617 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080964308 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068921138 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074198824 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066619408 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076871908 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061244209 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07060693 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072546321 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075798048 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066127639 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066384492 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061284921 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063677558 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.06825968 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061583109 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066302293 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061020408 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075559017 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069537782 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076426516 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06497715 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067852509 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069392145 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069564464 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073227554 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068869422 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068901876 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065924097 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076318517 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070438529 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075000293 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061416469 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060034463 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063688806 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075684776 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088212435 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072101343 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066658336 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066823764 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063730378 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069009512 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067477333 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071838277 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072565444 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065764625 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071590018 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073249444 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066400438 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06834812 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074328016 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064192481 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069552432 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064037113 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082431576 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065162289 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064406359 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064489826 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076440633 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069622766 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066224326 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064160296 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073279487 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060313269 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066368851 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065762104 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065548405 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074872142 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069427004 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069602029 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073410258 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072205615 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065441854 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067742292 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061884147 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065825711 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064060813 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072118563 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059263662 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067650781 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065938095 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065368909 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.199338423 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065223179 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067465729 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075132872 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072281061 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065583373 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063519142 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069666702 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066464118 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070068148 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074470191 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065428316 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061804299 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061315289 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070211035 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065951054 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070459048 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071221183 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069888245 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061036384 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064934222 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072272202 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075777397 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066810822 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06790283 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07277864 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067628215 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.0656845 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073303602 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069283401 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066148562 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072083577 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06755527 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062072903 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068988502 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069446458 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064990409 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070352006 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06959052 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.06866048 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067168402 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064783202 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074653226 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067222676 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065330762 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067398806 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065280709 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076860675 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068824375 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061958874 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063897449 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076666055 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064715749 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066733995 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065611048 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068995127 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067067669 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064309951 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065959547 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068304274 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076581738 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070984336 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067704817 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072345611 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078357548 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.06667732 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068629116 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066202481 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067659647 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067991882 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075056417 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071914665 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071008113 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068677321 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063202417 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071546614 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074102596 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065256767 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064071767 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065371132 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070311786 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072001903 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070316897 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066589061 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06438137 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066535389 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069610365 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.06873936 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065840429 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065389027 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073261891 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064307365 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073548042 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06699776 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076356988 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069601775 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06131823 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069707788 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064506366 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072008582 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061267804 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064231863 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065552968 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06708111 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064718153 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067626616 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059535329 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071804565 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072520437 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065330756 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06454336 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065006034 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07129678 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066350478 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068674707 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068132231 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07100259 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075168014 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06455867 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06828888 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074620286 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.195096244 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061201253 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072885812 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066013657 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066296064 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06560504 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064844967 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069491585 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075979608 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073008491 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060442184 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069278535 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066066501 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065582253 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062317929 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071275882 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070336003 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067629962 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073761806 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069056787 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06748226 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071147749 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066405789 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068399745 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068066951 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070348662 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068117074 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068198657 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066655401 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069898728 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066049477 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065120096 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068680622 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06674938 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067039321 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072815898 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066364537 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066440915 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069018572 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066972784 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067684915 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066845945 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065797535 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069479119 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067098204 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066665651 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.06847384 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061430482 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074067817 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066144238 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074628385 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066596725 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063886305 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074239368 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.06863364 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072742991 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067629577 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067836472 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067849948 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066361668 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069324867 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073819221 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06450659 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077059738 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073631363 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067814483 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069350883 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067166958 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068591278 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065958367 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.06685847 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067171933 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066915404 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066271105 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070580736 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068479931 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066602524 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068011735 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067394931 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066391758 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067606666 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061203241 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065607436 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065986476 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066459079 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076039204 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067077565 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066372186 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065650612 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067641657 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065356397 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063435976 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07535982 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076106783 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066986467 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073631604 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065814077 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068361798 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077046664 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060672888 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064597576 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064673885 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064821122 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073884284 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067160589 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07550573 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066291344 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06517342 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063242194 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066313795 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064237612 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060003356 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063458324 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068597987 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.0648032 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064299382 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065325762 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067884375 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06601207 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074747302 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064736034 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066018641 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065474349 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.195179491 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066869247 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067180633 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071177798 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068027029 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064932205 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064782508 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066164764 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068576327 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06769833 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06705858 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.0682106 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076433704 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066339309 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069895882 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069980724 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062033852 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069939585 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066825297 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067423811 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066710054 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070364502 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070285793 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06798542 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076141834 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066295542 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068231819 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067213249 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064329808 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06743911 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06669495 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067168847 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06626475 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068527838 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074799942 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064684554 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070012283 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06713376 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066551 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073068646 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067840198 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069118817 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073166703 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067099116 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068888759 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075110238 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071253615 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070110566 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068023662 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068737849 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072812009 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066085194 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.07352222 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067565265 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067807645 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068199879 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065125067 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067012688 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06628976 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066169337 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07244097 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067690123 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066710159 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065958377 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065332033 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067643203 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070071103 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074419038 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069060878 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071079442 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061878883 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064325819 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067443682 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064709066 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068467476 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069322156 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073055758 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068497645 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067028245 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065400126 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075410368 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07234117 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070309727 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064271967 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070329021 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067568462 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06861349 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067673508 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06710768 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068125564 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071643957 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068322571 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066438336 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073505965 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070436443 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067939547 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068501766 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067534558 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06751751 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061956673 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067697961 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068731105 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071992796 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068792473 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066731948 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077066679 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064783885 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067343726 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069471844 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065241839 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07053784 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061438992 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067414514 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06686433 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066543418 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061058434 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06500284 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063568399 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067699391 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064998532 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060823703 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075761295 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074287147 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068502629 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064421185 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.198529044 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062994324 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063350593 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067216835 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069120261 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069540912 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077373189 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066242211 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065603445 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06278131 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067289932 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070432525 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070811177 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065080471 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063604765 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067176168 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070506654 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072533482 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065756024 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066828161 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070998925 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070037998 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064929145 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071256719 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064863203 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07137637 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07973398 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067903218 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067688947 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073857563 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075052343 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067534056 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062976948 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06776595 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070669313 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068074782 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067463452 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06857438 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082373594 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070427618 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067468236 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066024228 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069866303 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066607886 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075131323 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06723439 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067239713 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071858413 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069126932 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075881706 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069696732 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074960511 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070089151 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070769657 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066001449 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067464007 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065191042 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066055579 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068342088 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068257301 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072368097 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075688649 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066759362 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077339592 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076631806 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068628659 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063808125 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06688603 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066272328 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062205207 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067809711 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064937285 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064814589 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.06486422 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065241711 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067690467 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071765214 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067419887 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067849074 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066206442 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060788993 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068656999 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068576748 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066977283 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063514961 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066658013 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066797308 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070489949 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069844071 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064163515 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068181961 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067971434 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067276423 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062240542 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073377987 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065750829 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068579958 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065984809 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066895154 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067213793 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069917742 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071400809 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067599509 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068567497 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070070906 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06872355 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06360947 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063409655 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070916855 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063518897 seconds)
  done (took 42.63863227 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101265068 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06390347 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062772614 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062539346 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075056521 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063548993 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062077905 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063399839 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063674728 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066035282 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062846534 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062843222 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071439055 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078953846 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074708432 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067323428 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062672318 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063986248 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06252806 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063800449 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071935021 seconds)
  done (took 2.786884993 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074266809 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070915834 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073659503 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077047479 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068053576 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071612986 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073682862 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071468036 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077344143 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067653963 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07678991 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080051824 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.068107432 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067884268 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06785286 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071564044 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07689068 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067847706 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071249178 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073337173 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071343564 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073370802 seconds)
  done (took 2.918211896 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067634017 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066690448 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068528816 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062136706 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067127865 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062827164 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070440517 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064798278 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069724951 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065539634 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065465923 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065384578 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067755965 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062044301 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066538364 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064483531 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109921709 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069755591 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066275153 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067353421 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06210075 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068402331 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06231982 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062565934 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065365784 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069818689 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067586542 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064495258 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06602584 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065558098 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066264108 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064214077 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067895121 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066961942 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06572636 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065581019 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066035634 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06614647 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062108431 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064780119 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067065816 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06232828 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066568239 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067794716 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064445058 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064368033 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068084651 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065852991 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061420832 seconds)
  done (took 4.594090005 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080509954 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110506739 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068119814 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089154973 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080510413 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076064048 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070243368 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09000435 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064345432 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064997778 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081904961 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080432031 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06625041 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070876071 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072729799 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066088472 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067458466 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065305274 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070325822 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065692895 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070632524 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073083687 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081226285 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080448379 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070100216 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065445313 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065444838 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070556707 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079031765 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070823189 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070674994 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071799462 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081099896 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071198296 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065069496 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067664039 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081894919 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066062065 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067941859 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064017098 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068293422 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070155877 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072365614 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082017964 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065895278 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071023954 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065845846 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063027364 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078967708 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067801607 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073644322 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080318766 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069468283 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065823077 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070229045 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080626586 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065707352 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064493874 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068576177 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078248957 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063467977 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069797962 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079763166 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06810253 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072951303 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080537334 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071548494 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069610707 seconds)
  done (took 6.398139332 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074621053 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072979242 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081771469 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080556552 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072849128 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073089355 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072638149 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073002166 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072719872 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077524722 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072983235 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093727167 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06794972 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075741247 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073105242 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072766072 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073121628 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073135175 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07297529 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072935408 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073127922 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080558469 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072862378 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080665826 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09869028 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068250341 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072486173 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072792547 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081474469 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072867578 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080618666 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072717916 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073172084 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080893052 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079910055 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072585242 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06557787 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073116911 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072556271 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072664569 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067564961 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080359317 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072189208 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068004058 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072443566 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071840442 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080259518 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079779838 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074933061 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077093984 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072449497 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080443227 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072178766 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072596631 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080576244 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104909689 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080562129 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080606914 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073042491 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080508799 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080627691 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087299385 seconds)
  done (took 6.082241876 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084333782 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0749939 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076803177 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061981756 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064268282 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069991384 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064348306 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064570673 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075293479 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074860894 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077152773 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070307466 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073118399 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07705787 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070289302 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073938405 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07006148 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070137161 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074862105 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070033284 seconds)
  done (took 2.79273403 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074609519 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083649599 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067245179 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072068299 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068982652 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071884121 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068836502 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069446901 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067127769 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069430573 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076366139 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076138373 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066826561 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072089132 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076008798 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071879011 seconds)
  done (took 2.49795739 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075399189 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073116869 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080028691 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066374164 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.0644711 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063293 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065794457 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06164972 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063043075 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07859267 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065933185 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068407847 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066319374 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065055773 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063298116 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069181656 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06298443 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063355457 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066076408 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078278445 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076977345 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064711366 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066751702 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065981466 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066082006 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071519725 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065578013 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063942709 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063233362 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066223467 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066596104 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070177215 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063393656 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063978194 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064418156 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06326019 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065526767 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066140471 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068808891 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065656834 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063784277 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065784862 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066009602 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067316602 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062251784 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066227539 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062748099 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068213689 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063874972 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066293265 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06595771 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06854328 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06659098 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072990338 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069086289 seconds)
  done (took 5.031786091 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079561847 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069832497 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061865072 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064930322 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069307317 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067703843 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069391322 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067801029 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0680734 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064377699 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067679767 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068916564 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068650303 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06936043 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06782184 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069970429 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062115072 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067614656 seconds)
  done (took 2.583447784 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071416033 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066027681 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07326037 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066699529 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067111352 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068024808 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062219362 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064701161 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064950365 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065939011 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066068555 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068122628 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064876245 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068684566 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066128771 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066215052 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068136252 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06467353 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065942954 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062142794 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068424504 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064827802 seconds)
  done (took 2.817041302 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.092152809 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081576451 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.137852466 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079223607 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084040457 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071587427 seconds)
  done (took 1.899531406 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090843764 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079791594 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066553883 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088219557 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073905692 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06765399 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06743209 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067792084 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076389606 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07658926 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068242164 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076166252 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07723177 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076010304 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073654834 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073335979 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067471011 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067637366 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066418561 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084749271 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067755049 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07643102 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068262673 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067749894 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067707546 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075726699 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076466899 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077017491 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067589213 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076600817 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073529245 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067995588 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076701885 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076677317 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069740365 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077546664 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067982583 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084974312 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073616329 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075784056 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068937304 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073529468 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076448389 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072576556 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07644815 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068283778 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073036673 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067738426 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06790985 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086364177 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07354734 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075505702 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073891246 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076742761 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076766165 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086695835 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076675 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076092554 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073630569 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0786178 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076082414 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073152839 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075670212 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076222829 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073789053 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075840163 seconds)
  done (took 6.257919222 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082935235 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086768507 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068483607 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07703927 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075782986 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067607614 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068068126 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067973461 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067796391 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067385669 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108443679 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068263495 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076155592 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076223771 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067950293 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0679478 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06794182 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076365692 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067807433 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086805394 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06811216 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075951241 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076432941 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075757157 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076947171 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073783685 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068275763 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067831641 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067635781 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068021066 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073003383 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068068035 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076109877 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067507237 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075867541 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067914002 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067858116 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072676215 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067727868 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073687143 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076108853 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084476737 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0685308 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067789051 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076348968 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068006591 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067725935 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067173256 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067769138 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067147431 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076542671 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076607513 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076254833 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07566893 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067877142 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068401472 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067727349 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067588013 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067745265 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073433008 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075796187 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06769804 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086344609 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067847786 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067740562 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075797952 seconds)
  done (took 6.165110406 seconds)
done (took 129.265172742 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.185994501 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.166217521 seconds)
  done (took 1.702530286 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068395557 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097121902 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077005082 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128562771 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066592944 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100341007 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099458203 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077881313 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066795374 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066653414 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066095878 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068622783 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131576081 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066335506 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066110631 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068988237 seconds)
  done (took 2.679376129 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097408744 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157395423 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100793747 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065356096 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096978874 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073363805 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06538266 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075273501 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071252406 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065252141 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073487464 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070583197 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065032123 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070899468 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071391804 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07282538 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06516817 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073332726 seconds)
  done (took 2.795897971 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10181939 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091392816 seconds)
  done (took 1.560931869 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.159812553 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.111919092 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.15120081 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.347657469 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167859154 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.231494975 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.129187895 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.129900036 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.12249989 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.12505466 seconds)
  done (took 3.040119285 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098380363 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.151821134 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.257063551 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115546657 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07272806 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095474126 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116792507 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078126608 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081156367 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080631765 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080971529 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076349613 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099027684 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.0745859 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07358675 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076159625 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102889558 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072374383 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074419114 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076959957 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099745628 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065650222 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074057079 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072176653 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077771368 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077810159 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065314286 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065948421 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076699074 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074354335 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077517954 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094219366 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077932482 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107814009 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.071105069 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10848615 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076513052 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074321124 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074703999 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074670375 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07976197 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079303646 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07290573 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076641158 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065555997 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077302719 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066230155 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065965842 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078561386 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067175428 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078443761 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076972796 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107701959 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067068449 seconds)
  done (took 5.995697923 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101181556 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104930679 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071872047 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110978258 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100144938 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071604398 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.10203229 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093968086 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103383472 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070354203 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068447469 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072080501 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082113686 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083322276 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111997358 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104722226 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07423202 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070659725 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104243879 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.103340008 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068534737 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095652544 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090321181 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102239858 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06760414 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070451256 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068127838 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070700514 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077342538 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079001583 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070197852 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081206435 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084760259 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07891518 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067727761 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068301889 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068616467 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080295562 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079960817 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079435933 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077992042 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067679273 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067851753 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069661437 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070623208 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068066167 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079214357 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080839622 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079631234 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069685869 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070486092 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068684401 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070103874 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080558878 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078300275 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081560979 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080694169 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068614384 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068717244 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072322147 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081999853 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079955885 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080040529 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070152461 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079572468 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068603349 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080576248 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085327141 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06865268 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070363761 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068722066 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069724597 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069971171 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078292303 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078704558 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070388763 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069897039 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06860606 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079965291 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079032127 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068604703 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077543067 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067641449 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068754739 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070195993 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070094074 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078221714 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080094677 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07012834 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.0683043 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069934164 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.0687602 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066517605 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076365813 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07911402 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077989704 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077836761 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068932732 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078071476 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077706056 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069172002 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078196194 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067731067 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.199012934 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071511058 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079902088 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.07821169 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08099843 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07082192 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068783122 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079666144 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081669359 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069404087 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079077593 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082123058 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080643556 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068366322 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082736199 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06958545 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080153084 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070092713 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080804 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069466318 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080846365 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068863381 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069296933 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069557395 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081708736 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070599159 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070107978 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070552435 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070435892 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080550643 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084020847 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071348597 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082493643 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079152204 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070009897 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080209273 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069569877 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080199983 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070764464 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070462909 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067976324 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083252622 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06924039 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069376132 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069753029 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081621322 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068998398 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081206361 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078853209 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068269606 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082337415 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080523697 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078508357 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081734342 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071050001 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068796606 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069065473 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069963191 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078907261 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08121696 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071391712 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069222563 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079232323 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079750284 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068283406 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078883636 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078743459 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079136603 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.0690696 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070082446 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081071493 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081219075 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07907648 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078343366 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078731345 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068613574 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077949076 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078620457 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068229312 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085156785 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068288285 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083127855 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079964391 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077694665 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079335034 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081266084 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080428834 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080621205 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083152361 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068137878 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068132933 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080033499 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068931863 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06964999 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077848498 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069225193 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069243798 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082239575 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067688692 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078394855 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06674168 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077493088 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066208502 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068712861 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081864881 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.200440876 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071123016 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081277642 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070908892 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079293928 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082113564 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07969127 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068689582 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071229038 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081511811 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080497656 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069703256 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068565382 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071431906 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.07937123 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07905118 seconds)
  done (took 18.758137172 seconds)
done (took 37.907514494 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.20933384 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150755753 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.180286128 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118716305 seconds)
  done (took 2.125988694 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122363898 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100947063 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095488129 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064903354 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102270478 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065505352 seconds)
  done (took 1.961454538 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311966244 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211740078 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.182722684 seconds)
  done (took 2.110770369 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199415301 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187881831 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.394091722 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.253519656 seconds)
  done (took 2.544402329 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144632642 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089727258 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067105547 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.08324474 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.135678033 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161667429 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102252004 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126499191 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07792015 seconds)
  done (took 2.445259011 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147858273 seconds)
done (took 12.73882787 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.209114954 seconds)
    (2/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.092986134 seconds)
    (3/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.098713871 seconds)
    (4/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.094681199 seconds)
    (5/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069850865 seconds)
    (6/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.195782211 seconds)
    (7/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.165740428 seconds)
    (8/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078087606 seconds)
    (9/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.238920193 seconds)
    (10/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075396506 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081636362 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.108232249 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077507494 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.120338945 seconds)
    (15/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075613518 seconds)
    (16/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.169249343 seconds)
    (17/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076238045 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07255338 seconds)
    (19/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.17621504 seconds)
    (20/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.06303676 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091535848 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.090123001 seconds)
    (23/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.183000119 seconds)
    (24/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.185061899 seconds)
    (25/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.213268367 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.090362731 seconds)
    (27/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.108081162 seconds)
    (28/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.07843731 seconds)
    (29/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070830402 seconds)
    (30/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.157678726 seconds)
    (31/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.081422664 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.132243845 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.105329173 seconds)
    (34/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.110353883 seconds)
    (35/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.152170983 seconds)
    (36/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.217947489 seconds)
    (37/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.098237872 seconds)
    (38/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.07439403 seconds)
    (39/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.169569468 seconds)
    (40/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.172688993 seconds)
    (41/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.150134757 seconds)
    (42/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.179315781 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071790758 seconds)
    (44/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068392251 seconds)
    (45/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080901438 seconds)
    (46/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.186769214 seconds)
    (47/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.171300209 seconds)
    (48/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.167640544 seconds)
    (49/309) benchmarking ("sort", Int8, false)...
    done (took 0.140512674 seconds)
    (50/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072568966 seconds)
    (51/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.149415606 seconds)
    (52/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.183149151 seconds)
    (53/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051422741 seconds)
    (54/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174257937 seconds)
    (55/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.149325175 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.093161641 seconds)
    (57/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.061677863 seconds)
    (58/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.098246088 seconds)
    (59/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.154263119 seconds)
    (60/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070874615 seconds)
    (61/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118911505 seconds)
    (62/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075467896 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072964655 seconds)
    (64/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.088370712 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.129869842 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.1197837 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071500048 seconds)
    (68/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.073595274 seconds)
    (69/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079674371 seconds)
    (70/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.05078311 seconds)
    (71/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.07293424 seconds)
    (72/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.051875802 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.088932811 seconds)
    (74/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066687996 seconds)
    (75/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087708914 seconds)
    (76/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.099337557 seconds)
    (77/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074614071 seconds)
    (78/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.0803157 seconds)
    (79/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074535491 seconds)
    (80/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073181011 seconds)
    (81/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.149092834 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.087870712 seconds)
    (83/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.224713085 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.109118065 seconds)
    (85/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.196698264 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.139112737 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.28880976 seconds)
    (88/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072957667 seconds)
    (89/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075646108 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.12578205 seconds)
    (91/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.098986483 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.10773792 seconds)
    (93/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088521304 seconds)
    (94/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069203321 seconds)
    (95/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.187010498 seconds)
    (96/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.1066677 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.098661571 seconds)
    (98/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061679005 seconds)
    (99/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.107353733 seconds)
    (100/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.151191955 seconds)
    (101/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.05205428 seconds)
    (102/309) benchmarking ("sort", Int64, false)...
    done (took 0.066244431 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065899717 seconds)
    (104/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073392849 seconds)
    (105/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.051991677 seconds)
    (106/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.196356551 seconds)
    (107/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067515272 seconds)
    (108/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.16506034 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065491444 seconds)
    (110/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060701354 seconds)
    (111/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072975641 seconds)
    (112/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.105091308 seconds)
    (113/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.176135867 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.101403331 seconds)
    (115/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053168106 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065723369 seconds)
    (117/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072931954 seconds)
    (118/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051629263 seconds)
    (119/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075410225 seconds)
    (120/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065977642 seconds)
    (121/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.052305677 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.140174923 seconds)
    (123/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071866086 seconds)
    (124/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068905894 seconds)
    (125/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.099593306 seconds)
    (126/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079683635 seconds)
    (127/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.186151595 seconds)
    (128/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.07637503 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.138486683 seconds)
    (130/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072463663 seconds)
    (131/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.1515835 seconds)
    (132/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.155630253 seconds)
    (133/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.173582601 seconds)
    (134/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.10923516 seconds)
    (135/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065329844 seconds)
    (136/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135178752 seconds)
    (137/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071990667 seconds)
    (138/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066837307 seconds)
    (139/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.146373459 seconds)
    (140/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.146080958 seconds)
    (141/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080435836 seconds)
    (142/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.163973929 seconds)
    (143/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052352137 seconds)
    (144/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.0509861 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.087941517 seconds)
    (146/309) benchmarking ("sort", Bool, false)...
    done (took 0.132870626 seconds)
    (147/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073487851 seconds)
    (148/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052287737 seconds)
    (149/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051391834 seconds)
    (150/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.086083835 seconds)
    (151/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.06674276 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065805192 seconds)
    (153/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.0653002 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070868343 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088356687 seconds)
    (156/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071910554 seconds)
    (157/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073501887 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088975902 seconds)
    (159/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.071634336 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066476061 seconds)
    (161/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.14768709 seconds)
    (162/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051031818 seconds)
    (163/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.111971169 seconds)
    (164/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072214846 seconds)
    (165/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.08135183 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.075769128 seconds)
    (167/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064979286 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064889091 seconds)
    (169/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072159898 seconds)
    (170/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051173072 seconds)
    (171/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06516232 seconds)
    (172/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072269797 seconds)
    (173/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069582114 seconds)
    (174/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.196722694 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087774917 seconds)
    (176/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067542136 seconds)
    (177/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050900831 seconds)
    (178/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050826969 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.137398536 seconds)
    (180/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072722114 seconds)
    (181/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07115829 seconds)
    (182/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063683367 seconds)
    (183/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063622754 seconds)
    (184/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064167466 seconds)
    (185/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065052541 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065942552 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067136317 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087550745 seconds)
    (189/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054111734 seconds)
    (190/309) benchmarking ("sort", BigInt, false)...
    done (took 0.18251235 seconds)
    (191/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.051797735 seconds)
    (192/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.225735661 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088786715 seconds)
    (194/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.150681734 seconds)
    (195/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082015419 seconds)
    (196/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072843777 seconds)
    (197/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.108610729 seconds)
    (198/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051860236 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090264222 seconds)
    (200/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052778175 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089068713 seconds)
    (202/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074563531 seconds)
    (203/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080474696 seconds)
    (204/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072176813 seconds)
    (205/309) benchmarking ("sort", Float64, false)...
    done (took 0.125464799 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065950571 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.122122021 seconds)
    (208/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052262144 seconds)
    (209/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066533816 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065269537 seconds)
    (211/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076323657 seconds)
    (212/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053301593 seconds)
    (213/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07264833 seconds)
    (214/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065696258 seconds)
    (215/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051762749 seconds)
    (216/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076423251 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.107719888 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074559402 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073263054 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066380385 seconds)
    (221/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051755375 seconds)
    (222/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068032785 seconds)
    (223/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051557801 seconds)
    (224/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070886647 seconds)
    (225/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.052122728 seconds)
    (226/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067765843 seconds)
    (227/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073274602 seconds)
    (228/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074031539 seconds)
    (229/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.053131679 seconds)
    (230/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074430061 seconds)
    (231/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.197304962 seconds)
    (232/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062208463 seconds)
    (233/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067341758 seconds)
    (234/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.05366395 seconds)
    (235/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071322925 seconds)
    (236/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052578485 seconds)
    (237/309) benchmarking ("sort", Float32, false)...
    done (took 0.127828274 seconds)
    (238/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053744755 seconds)
    (239/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072411833 seconds)
    (240/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064617554 seconds)
    (241/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052696875 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.132453512 seconds)
    (243/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052908571 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.132133155 seconds)
    (245/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.052109746 seconds)
    (246/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064915765 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.088451035 seconds)
    (248/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.158367014 seconds)
    (249/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054602528 seconds)
    (250/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061652964 seconds)
    (251/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085688697 seconds)
    (252/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071667345 seconds)
    (253/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052196776 seconds)
    (254/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051915546 seconds)
    (255/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071708033 seconds)
    (256/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068729583 seconds)
    (257/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06746568 seconds)
    (258/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.132348906 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089736333 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065510441 seconds)
    (261/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066226242 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065681189 seconds)
    (263/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065596133 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.08882395 seconds)
    (265/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062215054 seconds)
    (266/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064586302 seconds)
    (267/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.052132579 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065198214 seconds)
    (269/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085748474 seconds)
    (270/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052492722 seconds)
    (271/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062910425 seconds)
    (272/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051352127 seconds)
    (273/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071366235 seconds)
    (274/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066643882 seconds)
    (275/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052286361 seconds)
    (276/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.162776017 seconds)
    (277/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.05398982 seconds)
    (278/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072859963 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.091670631 seconds)
    (280/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051565061 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086389281 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.1075553 seconds)
    (283/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051690434 seconds)
    (284/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051308082 seconds)
    (285/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051663449 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08606733 seconds)
    (287/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.1374997 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088613873 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064940523 seconds)
    (290/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053562292 seconds)
    (291/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135760588 seconds)
    (292/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.052185275 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072526628 seconds)
    (294/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087726878 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065407916 seconds)
    (296/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06408864 seconds)
    (297/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063797142 seconds)
    (298/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061884905 seconds)
    (299/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061751673 seconds)
    (300/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051388863 seconds)
    (301/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073092564 seconds)
    (302/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068235158 seconds)
    (303/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051299853 seconds)
    (304/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051174379 seconds)
    (305/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053619539 seconds)
    (306/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070461696 seconds)
    (307/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065777082 seconds)
    (308/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054131859 seconds)
    (309/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070288373 seconds)
  done (took 30.441686672 seconds)
done (took 31.858827134 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084457832 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091751278 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074230588 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092254491 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080188774 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076234778 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071764066 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077778475 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079384173 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080689824 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077937356 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054548066 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073955829 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073472017 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073943319 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090844751 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077918715 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072624168 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072944224 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064374837 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072508673 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065454443 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066964385 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054904516 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077150209 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071625775 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072698589 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073583066 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065328524 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065876366 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068638792 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073244345 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065674982 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077884602 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071810789 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072843625 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074511511 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076419658 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067343286 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065653234 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073628711 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065652026 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072054595 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073261511 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071541618 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.0708996 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072917032 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077991208 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090995895 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067871677 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07379438 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075631533 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076088902 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07201948 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069056391 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072852603 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070329845 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090790359 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072860869 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067477266 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073548169 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073587187 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070716484 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072822774 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072481072 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074745654 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074925497 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070579037 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074557107 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070432895 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065251472 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072381605 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068401104 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065351499 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075022262 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076300448 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064268628 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070469051 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072055206 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070931324 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.0643987 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06763175 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066681117 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070775456 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067414365 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054320447 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068463607 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070862439 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064551044 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072911192 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070954064 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071813201 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06680522 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075049572 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064459109 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069991055 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065008123 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065361715 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067021484 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068779373 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064583102 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06705244 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073544678 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066409966 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070861157 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078580556 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065111233 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07111133 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064269955 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064472968 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07937612 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073944067 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065100201 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066945077 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064078569 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071670448 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064126701 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064419823 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064523085 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064664099 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070160528 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06498342 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066234557 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071111064 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076129536 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063671936 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067223219 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066488648 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063858202 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069172887 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064246633 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.200671546 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.06738862 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061854711 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068171008 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065297238 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072823221 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067337498 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073617929 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066748362 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073065521 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069763986 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071035017 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070934892 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064556803 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058453053 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068516599 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06774929 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067607338 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065830372 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067430698 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066047772 seconds)
done (took 12.403827755 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067466586 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142184587 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099675808 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09486137 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085910352 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066958763 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075921688 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102040941 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06762777 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102246213 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087328943 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084615715 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112097512 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06472672 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.0653863 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069333199 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066692716 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081332786 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100677804 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08675603 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115691642 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065104407 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09422821 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089734029 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086970697 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.092033757 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066825572 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069598046 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069238807 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.100787522 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086227952 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069611008 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066645481 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100360718 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092138473 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083122325 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066385904 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082494134 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066942748 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065946989 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067449871 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097804211 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080564068 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080556579 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070002808 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.06879317 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066716176 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083110544 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088639203 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078416229 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086395057 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102763054 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068495216 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.06529513 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064437185 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08498629 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065149033 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068565029 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065666386 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068236508 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066165673 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.06911969 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080877945 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081951171 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069516958 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080134319 seconds)
  done (took 6.797176121 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083473247 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089286519 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082735055 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082968441 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065479417 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066254055 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066477628 seconds)
  done (took 2.044801507 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067561618 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087805246 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088457329 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08851366 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08434289 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.0872928 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075353678 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066827273 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080428004 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067444845 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086587945 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101755397 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067269982 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07245691 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.0909884 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066537944 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089927176 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066737137 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069270944 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089407923 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068301418 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081859731 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.06971139 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066843154 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080368376 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066738177 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113111746 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071139867 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067515622 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069117511 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064611099 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106850115 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079935963 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07570709 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066426708 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080602235 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081147911 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064970811 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082609817 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071532781 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080229247 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066937491 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067691918 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06488155 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070885222 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077066512 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06735423 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067310689 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068939433 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086274594 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067153478 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080141884 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069790758 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069444086 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068099879 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070987143 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076706463 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067355458 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08635389 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068178136 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083654714 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082512374 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080435954 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082777163 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068857446 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080296444 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080305232 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068974775 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068391029 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069952559 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082662888 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064856936 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069016356 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.07680621 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068438935 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088707327 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089317131 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067820878 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075487512 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066765997 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066449209 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066167991 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089066034 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068575988 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06627432 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070672124 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069634271 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064599913 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065295188 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.06983794 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064384697 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067861162 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069044015 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069117688 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06878178 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082409346 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.06875864 seconds)
  done (took 8.768772384 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069394776 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067834092 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069793002 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068218462 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067576395 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068616137 seconds)
  done (took 1.942524453 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094435152 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069545883 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080107679 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072466747 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104738144 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086621541 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08703045 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078876849 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084097879 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078980452 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086820425 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088527404 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093016476 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072742157 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086791393 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072168861 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087161911 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075979666 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.07856658 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073080513 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087019404 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072632226 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07348123 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.08153935 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075634956 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072758821 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067785584 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078894382 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078591724 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079140732 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072928844 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075412645 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071270809 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078544253 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087064961 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070887147 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07184733 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077375985 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072661981 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075880363 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088114536 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073107464 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074800877 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077667924 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078454766 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070964533 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076885341 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076295019 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086376293 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076890098 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077051306 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071557888 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075164928 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077277309 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070963236 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078415062 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077178615 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086269956 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072381913 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070040423 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069673617 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075324349 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078512323 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075124735 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078719174 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077009792 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070505036 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07246987 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072540403 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071467085 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076669232 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069410221 seconds)
  done (took 7.107051998 seconds)
done (took 28.159998576 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542470806 seconds)
  done (took 2.042498019 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.602055983 seconds)
  done (took 2.12843725 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.011319507 seconds)
  done (took 8.537979596 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.396995005 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.473143056 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.687440878 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130645454 seconds)
  done (took 3.232400023 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.676793692 seconds)
  done (took 2.213348559 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.211296518 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.196292209 seconds)
  done (took 1.958865371 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.379745373 seconds)
  done (took 1.909004376 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.104091246 seconds)
  done (took 2.632117123 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.265395751 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163303604 seconds)
  done (took 1.961639598 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.459689956 seconds)
  done (took 1.995616992 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.835544711 seconds)
  done (took 6.371133991 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.206634189 seconds)
  done (took 1.776560222 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240677351 seconds)
  done (took 1.77112822 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.732072505 seconds)
  done (took 3.263057662 seconds)
done (took 43.328478818 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082638805 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081725455 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081722737 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078937652 seconds)
  done (took 1.846566602 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079258476 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072846407 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076663251 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072737735 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077576969 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072796387 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074666029 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07732253 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072621263 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073033167 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072860915 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073932147 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074944661 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074760359 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071104339 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074970102 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076467893 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072714843 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076051924 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072996127 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071195821 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075085258 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074886936 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072392554 seconds)
  done (took 3.32302364 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079111324 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072824164 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075129608 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072447934 seconds)
  done (took 1.843838987 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079304273 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092752409 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090125928 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.0776299 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092368999 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087020643 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069113531 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069218553 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073585474 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077323409 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068568144 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096804662 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088284235 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077394738 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079191025 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066390799 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068708801 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087601224 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07763506 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078010885 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070225463 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076995242 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068495838 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088456147 seconds)
  done (took 3.442401594 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080559712 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104424473 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077966845 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088521492 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090250997 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065833586 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074918444 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089797978 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123356616 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06563811 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070334202 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065762761 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072910025 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065829108 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076614529 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.105429482 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.10861603 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068833847 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096219116 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065990206 seconds)
  done (took 3.211355044 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075502331 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070530563 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066447442 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069153359 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078434261 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073302248 seconds)
  done (took 1.988506624 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069813487 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068375015 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067523631 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067473988 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072029945 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068000563 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066361843 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067602136 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067742353 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067217933 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066809477 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06604505 seconds)
  done (took 2.364796728 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.426151576 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068803 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070118601 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066350426 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071153772 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066717611 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080335346 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068034928 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090938521 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067071517 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067056323 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068948724 seconds)
  done (took 2.762989436 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209561788 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077015862 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238580923 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13893185 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112120814 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116431546 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104984655 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113892102 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.144657845 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102490242 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169262462 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167414027 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107767332 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139813962 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08962375 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098366839 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156579483 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163546395 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103831099 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166412305 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144595213 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125178748 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147822696 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10256121 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106486373 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123412142 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071756812 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081062288 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17232382 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133440807 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147958886 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112635749 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094638364 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1787975 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172904479 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143734612 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135491277 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08422476 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.103352795 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134114073 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199309094 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088207012 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163833036 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251325183 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082119626 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134809168 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121687312 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121903804 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108071261 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090369113 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148999754 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184375721 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.140694153 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08721054 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113514625 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11706148 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116405332 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104717228 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184160639 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162724794 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130465943 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071450468 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100678382 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154301997 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133569836 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110072499 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.128037138 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094327664 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135884719 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155922348 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11987579 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145260942 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.129806777 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089618249 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120401609 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141168909 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130176177 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171825161 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126071138 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073708505 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127135223 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104750641 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081912963 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143927164 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076430255 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180352037 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099198473 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106996447 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113692239 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109386016 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109945058 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164747673 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143247379 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.248062172 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066964202 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105080803 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121107823 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148708585 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088441962 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110440973 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117554171 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079160447 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140186187 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075939884 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124277714 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076199085 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126428075 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133873462 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076318756 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123216193 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101965127 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10145584 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134594659 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161563469 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090682762 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083038217 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169437479 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123211373 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.106080994 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145726877 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157655287 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.100249806 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104120052 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151585937 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181410628 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090444826 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164741557 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10855851 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084518923 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088290743 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124994769 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113626933 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123578568 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082870776 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.120066783 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170706077 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075952614 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096402272 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134863172 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079324264 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081282426 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104156604 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10158812 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095652378 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100908312 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104763738 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138001226 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122911453 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103795351 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274230275 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100621457 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172145792 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089395406 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.10123416 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105184943 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070123834 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138025747 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159341904 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080260397 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167231619 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124951308 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106254747 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120215645 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083491016 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141576007 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079408978 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070570305 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145408832 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111181737 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110818932 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152989464 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10638899 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.129023429 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.121463009 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136737943 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133368014 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130526405 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105816768 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088776119 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11311981 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126835509 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073418594 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091969262 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080985394 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104803687 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096393159 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083945709 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143633221 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126815389 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101949387 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113000343 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097445609 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148432604 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077738339 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130285403 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119554799 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094481345 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152879082 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153215503 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133731775 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099277356 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144700249 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069628513 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073368938 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.238081189 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125368001 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084377803 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084695646 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11992649 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148520932 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131741042 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139314336 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113098891 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121929323 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156135301 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.07131684 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116461759 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149178365 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122299809 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.10530314 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091190166 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099747055 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143654389 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109328351 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18412901 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115062567 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127949695 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154668038 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100520553 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080418721 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104109018 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142479877 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106027015 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146254107 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100942733 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088959059 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111625658 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.0749979 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101161874 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128516792 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121256158 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137957031 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115974388 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134551057 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077718333 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118096073 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121726939 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123699266 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064459942 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120795146 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162246549 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094159898 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119382239 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153007334 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079330942 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.124305069 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.328146869 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146680395 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085811047 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111868857 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118942291 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13019178 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122918662 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142236326 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109618208 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137154542 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109928698 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086954433 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088163657 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097978394 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106868186 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096239832 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109761083 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115784929 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095710592 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133485449 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10434848 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110558317 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118912364 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097670505 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090231526 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097244316 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176217184 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120279083 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174174595 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100295754 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146569258 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166019439 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075550819 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079709731 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079160961 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140692411 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084628504 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13191384 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098650511 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106589842 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125724915 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143167086 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095835417 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069156047 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109537814 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135976967 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113195453 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098560154 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104709928 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163498908 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.10092716 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07967205 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114424945 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104926823 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102481294 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.318692233 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062823762 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09909797 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07639112 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081474549 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131629511 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156189156 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081845938 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104176728 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120806602 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111957488 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128784031 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102494009 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100455812 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115672885 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153155562 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130737704 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090323371 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112958284 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130629783 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158305199 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106641224 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096034604 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174292254 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153633052 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.179398175 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089010616 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114981887 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115283786 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109161567 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140578133 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083650214 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165317395 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082507099 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137299797 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106016342 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091073796 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131120298 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.099563274 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089110822 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15001277 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118946828 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083254168 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078759182 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118945335 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121309193 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106874042 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075327277 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14048727 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073403239 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132947835 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169664901 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083708906 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.253650563 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09822774 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082468585 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10896495 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104555898 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091239289 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099984641 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175510124 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089845384 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151590536 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142896491 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11404913 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138986245 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101241639 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636985784 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078029572 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153746661 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117496513 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174804704 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097832752 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119516875 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109810015 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125224949 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146473887 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106628657 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178274427 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133351152 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117499415 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080272434 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103195974 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103415733 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089801175 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106086773 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114490211 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117225165 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094616758 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116924361 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12431206 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082239984 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09599505 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157534281 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118014084 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145536249 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141659409 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085316145 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118114141 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139348873 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08043874 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122750314 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152704339 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10608917 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096636367 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.229750842 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.104996459 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173278783 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074022204 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16464488 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121685666 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11052449 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115172437 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.117252673 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132997094 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109160837 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123585076 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095147304 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111295694 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113633318 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082992191 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078256807 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105611195 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114101014 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099615535 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099843178 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099094377 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153536662 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072043163 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096399478 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105360205 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147046404 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176036309 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088916011 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083203443 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120763962 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113916799 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114678916 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121592689 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080140559 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083131758 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082462567 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077634028 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109320279 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113160237 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105584625 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112232385 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166431834 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083454154 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.22488304 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096163958 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105554408 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069941927 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079364364 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096642761 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097903272 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108930233 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100431433 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169691297 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094664112 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089980208 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092473334 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072747266 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08181778 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.278094862 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111856614 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121336377 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098797445 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063091673 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109760361 seconds)
  done (took 59.481162948 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.112657778 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082478976 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097880915 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150198466 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123111161 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.213390141 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157660192 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200848524 seconds)
  done (took 2.797557716 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070212534 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095415681 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100351803 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083756975 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066930071 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069570415 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.226990564 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081628199 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067315982 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.08946676 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079347158 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070464204 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.427416894 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066515128 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069522966 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.06467632 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067588882 seconds)
  done (took 3.446749231 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.36997923 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.60285176 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.374032402 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074195539 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.903375428 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089351228 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.093880729 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.128486371 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074513597 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.527616298 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.705389876 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.128475184 seconds)
  done (took 18.734307969 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078855087 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071250256 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.085384683 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084210583 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.07360013 seconds)
  done (took 2.042264915 seconds)
done (took 108.875515953 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082951954 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.394933442 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054047591 seconds)
  done (took 2.132353543 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085755213 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085161567 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085103034 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083323086 seconds)
  done (took 2.003999543 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076158913 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076527179 seconds)
  done (took 1.806233273 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.225891256 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.140666716 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087399103 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084538446 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078659696 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078440418 seconds)
  done (took 1.902356726 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074727051 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076073949 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073196706 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077271912 seconds)
  done (took 1.947773363 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079605298 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053626457 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055348283 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056681238 seconds)
  done (took 1.893325181 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088266055 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079257539 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079409626 seconds)
  done (took 1.898865962 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104338718 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085481168 seconds)
  done (took 1.84747424 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084608934 seconds)
  done (took 1.740539894 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.101596256 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.115424768 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.130008543 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.11064048 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137056386 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109747955 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086000061 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087840909 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077808117 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088085195 seconds)
  done (took 2.698007072 seconds)
done (took 22.065228296 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081266844 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.369327982 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360855025 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090417304 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668112465 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357036633 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.02531297 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092955196 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114302078 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067885561 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084388551 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648148038 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.980603727 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.320330654 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.964157272 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.417942133 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649967615 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068868741 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068208021 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068150137 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.010292763 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068199127 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06824649 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068845882 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649883085 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371294351 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068691921 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.418152502 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067999517 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070150149 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355954266 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068497589 seconds)
  done (took 16.421564108 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072460049 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119143828 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07488974 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084299071 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071718043 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069954489 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071959706 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069106239 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120245362 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068519099 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085018919 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068231658 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072267773 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069160611 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087576231 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068634005 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06978737 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069111469 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06925552 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06913581 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087599023 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067715672 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068880734 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068909425 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068365332 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080256258 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069138677 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069000947 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06897424 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070901623 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071823825 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069548483 seconds)
  done (took 4.084554358 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11867034 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125773235 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075109893 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103546694 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113962043 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070825887 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144585735 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09350743 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128469394 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068535544 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085337663 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068688676 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101982088 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069709215 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088440475 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069523656 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070213912 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069657994 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069141131 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069257027 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087746805 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069000681 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069349934 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070145678 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069400881 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082546756 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069431991 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069731564 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06921132 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070974436 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072621108 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069629082 seconds)
  done (took 4.349954186 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074648882 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075615501 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084001545 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084807388 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070683205 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073073895 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073577612 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070529648 seconds)
  done (took 2.283346504 seconds)
done (took 28.80145358 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081542481 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06967366 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073210519 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082093139 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073710304 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080329709 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067983378 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075136214 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072484677 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073540811 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075548143 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06789104 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071536038 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067541921 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074095612 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06864182 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079983047 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.07275072 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079456915 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080212617 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070795363 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073439202 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074829067 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079836776 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079672314 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079851671 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077724743 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073619233 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069808975 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070968682 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077420829 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084539454 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.0690506 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079861512 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.06860554 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068570487 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071673761 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068555552 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079447257 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077045338 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070226382 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076485545 seconds)
  done (took 4.772993291 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090405849 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091530054 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085862521 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062365014 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066738575 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065679211 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089095413 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060037422 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060123485 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088159725 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056220677 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059876848 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062787433 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054584626 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059985695 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057047482 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062233839 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056647326 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059580817 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059809761 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058684239 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054628542 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.061067247 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063123669 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059592198 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062381131 seconds)
  done (took 3.390568581 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077344872 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085664732 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088696446 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127406651 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105099311 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077280318 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078359146 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092610463 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085795779 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067218352 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071363743 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093778384 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088657828 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074067129 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067678651 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085171139 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082352504 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069639733 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074200111 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091466977 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084870843 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084159125 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093402038 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081414265 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067401022 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070219452 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071833609 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081909323 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072698057 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076747917 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071792194 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071530547 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069723447 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079291631 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071844644 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069449256 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09124451 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077884872 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078927604 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068594064 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071797124 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069072596 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.101171476 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123938308 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067697566 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074687539 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075623316 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077336289 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068137884 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086195065 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07957432 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067518959 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070875087 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067335446 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06809546 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080833869 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070267997 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070602003 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077737262 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071037941 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086239782 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071613805 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083308413 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06764167 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075486735 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067245048 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068776641 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066869493 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093249987 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069443264 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108889032 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069324121 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068763231 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077110665 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075805629 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07409617 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068354758 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083119406 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078248953 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072041993 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.0768021 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071476826 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070934857 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088707204 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070268488 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069417891 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069063618 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074193805 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070833116 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069495259 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080865305 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067807426 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07125261 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084289917 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067535011 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069169594 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07406253 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072810228 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067367821 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078744618 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072879258 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068661441 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077295482 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068327194 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070701312 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078035811 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074184435 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066843679 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072445506 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074124016 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068870808 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068957836 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070546141 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069335075 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075751264 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073742211 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072126057 seconds)
  done (took 10.657128514 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.164613888 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155216388 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071006966 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.14586622 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076977355 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079444047 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.14833212 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094875106 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068497211 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069004973 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06934673 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110768363 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107043677 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115884132 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.07927933 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068310114 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083972656 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.11502963 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.15065718 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.144267583 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084676761 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077541208 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071285078 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070241428 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070925067 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079501691 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08584889 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077227215 seconds)
  done (took 4.45368325 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083968663 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.097280244 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074450207 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090394903 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092129591 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.06845885 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07070986 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069833911 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080993757 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079639708 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068245897 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073770977 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074999098 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071670723 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069654228 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075510736 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075857796 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06983274 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071744804 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07329138 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077825022 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081773616 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072044409 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067704797 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07489832 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067588438 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065431923 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085670424 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068397764 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090999959 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066127557 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075546674 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081664908 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069083052 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068105175 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068289766 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067871675 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067684552 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069837419 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066873876 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.0669113 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058281716 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067169472 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080678685 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074266329 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057122925 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073129325 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073161441 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073335657 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065887357 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070691001 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070765671 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071560765 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075375901 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073165451 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073225409 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069070292 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066239131 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07604451 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.06812619 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065051623 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066419281 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072284156 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.06669985 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075628552 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07242926 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066256994 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067833125 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069398053 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074362633 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067908196 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070942166 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065767722 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069895888 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072547902 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069674726 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069290861 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066582078 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068072465 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068458782 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056549819 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067983352 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054002123 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071222382 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066604356 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06672872 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068079171 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072735158 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.08098767 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069430676 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074021051 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069112069 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067492472 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070897047 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.061060961 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07079122 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08307149 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083660025 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068144724 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066480889 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082294588 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072348335 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067311135 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056588125 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075593693 seconds)
  done (took 9.230030289 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093280476 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070691752 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08451477 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091982962 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087416972 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075564041 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076969941 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069964852 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082716066 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074306031 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076883423 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06858246 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.0778417 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077328717 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071016978 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077469335 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072884871 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08396536 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083452994 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069341733 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076453051 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080869565 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.09032326 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.08099701 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.07891849 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080575789 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089824892 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072746229 seconds)
  done (took 3.932005693 seconds)
done (took 38.103886422 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.75936244 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.927587426 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.745762046 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.098708668 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.824332466 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.975340187 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.882170647 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.743564979 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.861881526 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.778554381 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.021359513 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.807371585 seconds)
done (took 65.11076289 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.8084454 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.895495225 seconds)
    (2/2) benchmarking "String"...
    done (took 2.01339312 seconds)
  done (took 5.594734802 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.100924783 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.284732441 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.993437242 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.745641013 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.746905234 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.04154453 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.55239825 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.283120403 seconds)
  done (took 30.330801457 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.857955478 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.967941023 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.418323921 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.463832619 seconds)
  done (took 15.4440241 seconds)
done (took 63.056183609 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.770545022 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.743114616 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.773011085 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.725156322 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.799900072 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.758501735 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.935755863 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.960790716 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.738832032 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.728634755 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.745982409 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.194406452 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.75021033 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.923364331 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.742945004 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.750550409 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.791547228 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.165174783 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.902945284 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.756914255 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.744813243 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.757940755 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.74921444 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.758676132 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.788862574 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.760470132 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.189417226 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.763154232 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.377018229 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.751473863 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.780853135 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.066477798 seconds)
  done (took 203.827706116 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.750952768 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.79715785 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.824228549 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.76206635 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.210904778 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.933663059 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.868420251 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.260194887 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.753468623 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.755947175 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.076360108 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.752486795 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.107489203 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.696432109 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.799903803 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.862323688 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.026910523 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.038885928 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.806074739 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.924004244 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.773068203 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.938254041 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.883360848 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.988811784 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.794955435 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.830223654 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.774923619 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.925872479 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.949957341 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.996723721 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.804180825 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.782100155 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.005916208 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.632726893 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.782400073 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.77749334 seconds)
  done (took 170.342632676 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.92548462 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.75699406 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.755950173 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.7565012 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.770245403 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.755518798 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.887912327 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.885181273 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.222476615 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.277907845 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.807762583 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.590665378 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.75533051 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.821851073 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.770148339 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.753830083 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.77364988 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.784810911 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.758732355 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.755558406 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.886814344 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.768158212 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.909518813 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.763451286 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.758168833 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.762120879 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.124407255 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.756756892 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.757826517 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.760725346 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.02032186 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.756589565 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.756627002 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.652679597 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.010590871 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.851572617 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.757895283 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.762669375 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.75464527 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.978100807 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.757485195 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.755813917 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.761647907 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.93241337 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.757485577 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.883160957 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.754809167 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.258369457 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.755808635 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.755732614 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.589384876 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.41734164 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.746887397 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.751902254 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.756881785 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.752199486 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.755022765 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.760449992 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.527646244 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.836498054 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.759469732 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.758262648 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.759943278 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.760907845 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.759751749 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.937712531 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.754936323 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.106332363 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.809431527 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.985053106 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.882005402 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.760656756 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.825769983 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.850965705 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.756321349 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.755519461 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.758629337 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.759200706 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.840561671 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.760492521 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.879411678 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.763923794 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.758860138 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.811114846 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.827314283 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.758676935 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.645764635 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.758112785 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.758855612 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.072077309 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.824809507 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.756531003 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.758186804 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.758066204 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.87631572 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.754853002 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.529342077 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.883774131 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.758120165 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.550103834 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.764284341 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.92924635 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.761082616 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.941517994 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.761419675 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.764730661 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.844510153 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.765516516 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.764752307 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.766027329 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.794077155 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.764551261 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.821601569 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.759379816 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.136985008 seconds)
  done (took 401.33939748 seconds)
done (took 779.177249504 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.417879965 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.382488206 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.502036497 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.414846239 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.392653336 seconds)
  done (took 13.80858284 seconds)
done (took 15.50970281 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.851709463 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.854577605 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.786782162 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.853982018 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.780855904 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.855799302 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.832569963 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.785963492 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.81949461 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.788967381 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.820900108 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.788633878 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.775924511 seconds)
  done (took 25.297037207 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.987607692 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.99879438 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.839774397 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.002230485 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.810591527 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.985360151 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.928177184 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.922669714 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.916657371 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.780493612 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.777039752 seconds)
  done (took 22.655240081 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.000047878 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.002623822 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.838701311 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.001757674 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.812162188 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.002337892 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.931727823 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.919184987 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.919134579 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.783213572 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.777732094 seconds)
  done (took 22.693001641 seconds)
done (took 72.34593664 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.770999278 seconds)
  done (took 3.475580354 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.793407242 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.933323665 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.779667021 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.775726503 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.77461752 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.774275394 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.777951798 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.773326609 seconds)
  done (took 16.088919355 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.773804144 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.769529591 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.77524498 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.776103715 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.77202557 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.770157397 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.770317073 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.770271756 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.774773014 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.773595648 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.780684082 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.774644062 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.776499878 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.773805528 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.773910938 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.769458812 seconds)
  done (took 30.082740146 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.775723386 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.773371626 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.774019263 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.774354035 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.770217254 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.774356942 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.771403631 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.774598592 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.773154196 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.778149139 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.772269367 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.774837675 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.776917289 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.772063188 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.773224396 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.774703738 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.775813831 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.772762875 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.777880927 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.775161887 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.776164168 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.773258709 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.773709952 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.77441248 seconds)
  done (took 44.2930362 seconds)
done (took 95.65109723 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.686603976 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.183090004 seconds)
  done (took 8.573743485 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.775034097 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.777321685 seconds)
  done (took 5.300936067 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.775300209 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.775005359 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.7774822 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.775424255 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.78043399 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.776407692 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.780068575 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.775645284 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.775316459 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.773228125 seconds)
  done (took 19.470171882 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.776123438 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.778916751 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.773934826 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.77938701 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.776132875 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.773965819 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.777478366 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.77654165 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.777080366 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.777811546 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.775001194 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.774286239 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.780292404 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.775985119 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.777597973 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.778458724 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.774352618 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.779445184 seconds)
  done (took 33.690096542 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.776356315 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.777489655 seconds)
  done (took 5.263298187 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.773717078 seconds)
    (2/7) benchmarking "second"...
    done (took 1.776183347 seconds)
    (3/7) benchmarking "month"...
    done (took 1.774573476 seconds)
    (4/7) benchmarking "year"...
    done (took 1.775222865 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.774175704 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.774906303 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.776573065 seconds)
  done (took 14.135085029 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.775681054 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.938526476 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.016986301 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.447022176 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.779788274 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.780751174 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.72720252 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.785908394 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.788115935 seconds)
  done (took 19.752636616 seconds)
done (took 107.896853614 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.596369423 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.774806674 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.156901706 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.829455825 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.834268434 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.098060498 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.776624548 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.001633179 seconds)
done (took 42.777661113 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.779304716 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.316561254 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.352961289 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.02892236 seconds)
  done (took 12.412757054 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.758878386 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.287270396 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.806166207 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.362974927 seconds)
  done (took 19.944641129 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.138985636 seconds)
    (2/2) benchmarking "read"...
    done (took 2.127619673 seconds)
  done (took 5.977990278 seconds)
done (took 46.828864082 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.777069323 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.779445796 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.775590333 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.777448169 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.778408219 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.775324452 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.7782093 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.776896664 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.781173876 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.779088745 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.77777714 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783528829 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.778831216 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.781034424 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.780191352 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.77831331 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.780364713 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.778837995 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.77904428 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.778439086 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.779610961 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.780718345 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.780101551 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.779741029 seconds)
  done (took 44.404103233 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.780561976 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.781643797 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.780940006 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.780585311 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.778424511 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.783233646 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.782161753 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.780089393 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.781695107 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.781430715 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.780343648 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.777227862 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.779113428 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.780478379 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783776695 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.784560142 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.781462043 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.780506047 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.779590509 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.781056516 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.781763055 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.780508021 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.78098802 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.782276335 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.781130916 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.778782607 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.781103202 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.781264721 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.78052561 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.781463616 seconds)
  done (took 55.144317373 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.787659789 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.795858668 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.782736501 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.784126964 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.784092707 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.785411675 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.783947409 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.785648175 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.784525888 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.783601519 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.78603216 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.785783226 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.784834981 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.783660139 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.785702099 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.78368867 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.782537989 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.785529525 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.780980144 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.78400667 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.783529044 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.783193789 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.781569794 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.778867697 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.784154254 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.778585953 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.780703944 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.779592642 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.780780789 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.781321252 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.779524632 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.77927801 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.780798413 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.779244238 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.777506308 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.778412863 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.785310035 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.790337234 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.780913682 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.784172452 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.78003709 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.780880646 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.780853265 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.782657914 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.780293502 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.780997009 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.780640971 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.782678338 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.781009051 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.782410908 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.782110555 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.779813425 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.783611538 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.781926954 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.78039593 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.782185174 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.78068586 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.782060735 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.781554569 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.781937671 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.78206254 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.782446951 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.784076038 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.783369342 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.784681804 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.780166861 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.783254859 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.783071026 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.782532989 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.783481531 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.783200426 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.782478041 seconds)
  done (took 130.071336415 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.780636746 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.780372725 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.782598254 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.780533886 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.780515731 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.783534678 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.780724276 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.784806796 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.78064147 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.780892621 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.78288565 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.781405509 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.780419552 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.784929995 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.780578147 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.778320915 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.784837839 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.781138818 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.784088928 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.783165682 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.783340769 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.779554157 seconds)
  done (took 40.913576316 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.783452628 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.784289289 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.781280359 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.785150149 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.779782601 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.784093256 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.784143288 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.784434279 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.784751039 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.779621365 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.780559684 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.783004583 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.779732211 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782637901 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.782074074 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.782144914 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.786936305 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.78059442 seconds)
  done (took 33.802880153 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.779443249 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.782163607 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.783976186 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.780681324 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.783159734 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.783396788 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.779581284 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.785040369 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.782490393 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.781329662 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.787021937 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.785065123 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.785384285 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782352122 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.786044118 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.781897944 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.787414666 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.78426306 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.787752647 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.783107911 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.782150673 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.784983919 seconds)
  done (took 40.955619371 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.783848405 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.786654159 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.781005168 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.782755047 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.784929647 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.786590117 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.78735549 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.784388366 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.784484015 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.784167115 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.783384993 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.784174857 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.782267561 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.784480559 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.781324375 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.782953331 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.784149584 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.785260733 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.784872415 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.782823974 seconds)
  done (took 37.401718458 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.785360928 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.787210441 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.786644603 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.787120663 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.785736468 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.786035311 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.787867354 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.786260176 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.786885009 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.788313771 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.787299349 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.786574566 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.790084728 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.78470831 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.789325255 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.787172316 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.786436104 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.789792881 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.787400269 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.788492774 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.7868915 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.788237163 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.785520284 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.788015571 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.787953804 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.788125092 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.788667875 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.788419619 seconds)
  done (took 51.765014325 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.788949886 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.789300743 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.785025049 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.787250971 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.785325706 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.785001363 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.784882826 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.783839401 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.788116436 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.786829484 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.787494433 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.78836496 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.787311183 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.788291237 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.788705394 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.788678502 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.788650777 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.787720091 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.785774746 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.784149903 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.790035553 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.789128855 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.789021813 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.784306048 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.786505017 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.789551075 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.785371478 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.788444465 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.788690127 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.785874759 seconds)
  done (took 55.338241859 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.806952064 seconds)
    (2/2) benchmarking "in"...
    done (took 1.807006091 seconds)
  done (took 5.333165268 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.784672958 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.790336097 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.787108755 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.786576593 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.7872648 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.790352831 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.787852114 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.788890518 seconds)
  done (took 16.02445093 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.789534532 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.788878095 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.790297907 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.789607009 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.789463596 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.790084694 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.796394677 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.7892703 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.793335541 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.791207325 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.798125266 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.799855373 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.794826304 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.789832503 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.790406838 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.79065338 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.788915842 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.790118057 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.790124472 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.789036031 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.792295879 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.795154358 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.789756317 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.786971517 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.793097486 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.80205245 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.797552238 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.789703488 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.79090628 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.797923597 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.788460331 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.78860836 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.791369112 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.789378356 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.790836312 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.790497412 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.801859166 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.794277263 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.797025693 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.790724877 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.790403046 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.791234282 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.794319269 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.795367305 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.792250276 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.79183181 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.791807798 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.788941387 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.791865888 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.795064027 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.798227758 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.793511848 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.789183386 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.797868602 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.794054934 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.800997147 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.793660875 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.796264184 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.801272762 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.806376913 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.806106463 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.799716171 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.796160863 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.792813428 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.804198246 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.819570267 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.800473854 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.78980318 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.790358523 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.793908882 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.800612526 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.809174403 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.804680727 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.793431653 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.792556046 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.793021596 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.794937077 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.793476654 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.798753864 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.794522314 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.793806446 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.792765635 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.805854738 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.818737301 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.793864373 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.796493175 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.794543742 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.796068079 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.796196665 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.806361731 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.79448392 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.79313413 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.795233131 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.793899838 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.796983218 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.793479101 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.793046878 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.796565548 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.792523218 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.795450696 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.795219575 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.797143023 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.805161953 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.796976967 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.79680596 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.801573173 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.794466426 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.795926403 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.80537016 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.795431224 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.796920076 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.796859384 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.805002987 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.794913133 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.799229953 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.807524384 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.794552021 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.795637142 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.794007615 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.797070471 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.806939719 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.825237101 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.795418819 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.795949368 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.801141955 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.809020466 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.796724147 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.799731746 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.798459124 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.796773045 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.793654302 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.797051374 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.797808148 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.798837494 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.7985928 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.799321721 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.794588139 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.796248395 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.797217235 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.798451489 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.800252336 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.797319266 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.797586193 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.799026295 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.796973155 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.799809199 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.805191734 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.799728192 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.798659776 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.800393454 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.795632421 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.798464135 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.799489497 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.796814556 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.799470543 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.798773646 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.796328225 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.799404874 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.799858251 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.796540276 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.798634591 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.799710356 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.804680583 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.800433936 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.802794168 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.797555604 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.794853184 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.800455267 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.799171889 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.800150063 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.799667242 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.79752421 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.802398475 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.8098246 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.800240006 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.798236884 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.806448192 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.799365693 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.800045318 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.799763658 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.803257266 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.81134714 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.801455037 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.807009498 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.79964783 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.801101259 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.799589512 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.800614701 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.800926753 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.801453644 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.804192776 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.807944967 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.816701764 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.809526829 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.799562037 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.805036474 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.801510283 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.806297191 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.80661251 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.801224611 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.802190504 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.802075773 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.801677535 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.803189634 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.805434918 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.802430192 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.800333993 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.80127872 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.804198289 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.800005802 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.80113483 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.802206537 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.804073293 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.800132023 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.803029036 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.801628994 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.800339746 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.799202654 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.801833808 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.800417621 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.802655943 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.80362007 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.81155149 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.799468028 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.804081406 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.803707109 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.802153307 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.801076206 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.801175053 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.803824538 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.802736716 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.812834355 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.804420996 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.803684392 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.809032818 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.801380674 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.803605504 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.806104352 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.803025191 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.801851349 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.807433967 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.81331736 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.802332255 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.803751265 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.802052091 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.804668618 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.803893385 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.811844004 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.801162002 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.801842191 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.802126933 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.805783167 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.802061753 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.806973938 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.806261728 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.806154218 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.805323261 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.80160564 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.804015108 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.807289551 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.804497573 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.804339085 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.80305392 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.80870766 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.813224065 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.808717123 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.804209436 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.806980979 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.804241788 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.80873614 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.805191197 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.80463338 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.803746277 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.818726081 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.812646919 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.813825595 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.807231282 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.804124813 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.809879992 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.805998231 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.809804899 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.804880199 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.806015894 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.806330128 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.806193531 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.802459736 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.808642319 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.804984931 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.806284638 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.806800938 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.808855474 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.805098732 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.806781686 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.806173278 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.806793696 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.80611923 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.80555654 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.806750142 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.81233303 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.807502792 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.80509862 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.807142284 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.813429427 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.806220805 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.808493512 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.806171562 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.807377282 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.805779041 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.80618163 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.804657541 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.809914376 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.815092358 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.809627233 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.819095708 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.807020729 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.817615858 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.805477272 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.811221309 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.814446682 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.803951649 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.805985669 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.806122164 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.806457098 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.81375718 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.806570978 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.808102503 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.812219048 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.805862366 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.805647533 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.803891177 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.807819812 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.80506137 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.806917222 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.817376749 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.810015629 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.8127447 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.809041655 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.80547193 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.808117439 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.806647226 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.806812746 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.815442207 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.810890587 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.810973163 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.807251352 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.81075793 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.808891344 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.808246835 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.806036832 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.807324097 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.810320564 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.819955008 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.808479193 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.816080587 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.811899014 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.820551418 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.809625133 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.816152362 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.80880347 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.810242839 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.808508682 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.807718444 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.811051568 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.809535223 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.811359773 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.809553701 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.810863641 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.812340293 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.810069504 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.812548804 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.813041204 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.809772963 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.811047215 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.821440437 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.835672902 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.808053069 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.817276827 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.807460308 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.812133202 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.815909776 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.810725786 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.810663485 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.815316671 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.825530398 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.819649299 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.810442727 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.81099759 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.812356469 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.813507978 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.812812105 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.810443605 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.814248921 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.810481378 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.812951126 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.812469371 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.818008073 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.810196183 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.813749685 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.811820211 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.814042436 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.824157139 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.81111661 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.812477443 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.811239331 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.80943309 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.813807768 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.80974374 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.813030832 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.814917331 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.809505533 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.813644238 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.819442427 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.818889432 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.81494761 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.811278601 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.811378959 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.8118643 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.813478709 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.811758921 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.812659928 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.81210377 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.81379533 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.812228396 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.814559647 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.811617851 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.811475054 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.813054967 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.811462128 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.815762228 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.821355554 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.813418429 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.81007901 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.812551885 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.812173002 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.811641846 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.814599935 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.821956114 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.815599803 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.825062291 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.824085335 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.817178017 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.81404035 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.817498929 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.823560375 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.813401428 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.816627515 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.814357402 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.815619375 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.81579209 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.820710524 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.814357689 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.823853715 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.813464114 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.817365546 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.8230974 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.815214389 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.814065958 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.815840091 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.821350471 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.81391344 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.811531021 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.814311332 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.815550783 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.823680493 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.817640243 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.816434498 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.814114685 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.812535291 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.816050611 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.819575878 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.813554037 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.816432555 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.812741286 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.818308844 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.816260818 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.814583017 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.81171033 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.816563481 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.815393384 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.818790454 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.822869315 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.813159905 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.817344253 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.816446784 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.817352744 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.816592763 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.815789357 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.812075425 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.816323333 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.815273327 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.815741764 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.817170207 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.819899811 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.815703488 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.817082904 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.815995064 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.81481253 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.817775882 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.827851941 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.826329296 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.814142248 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.815947388 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.817368918 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.819759252 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.816912219 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.817044629 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.81882872 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.818988036 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.816627206 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.816857317 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.816962522 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.82003952 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.834654724 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.815784289 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.816539142 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.819095424 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.820923546 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.81611337 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.815407217 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.816121727 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.820126286 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.820507251 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.826007283 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.817644286 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.825399265 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.816487911 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.819487804 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.821792845 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.820944235 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.826875993 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.821531112 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.816646598 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.818042877 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.822297381 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.835175802 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.818848603 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.828095333 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.853875374 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.818886041 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.819658872 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.819475419 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.817658028 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.819919681 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.824636012 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.818006729 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.819723319 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.818211768 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.818163563 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.820981908 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.8257216 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.821179335 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.818329292 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.818758452 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.818402338 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.824381721 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.817307283 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.818309622 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.821698157 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.819206638 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.82176171 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.822637318 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.820280649 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.835044825 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.834145442 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.819417813 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.820143579 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.817345619 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.824308279 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.82256884 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.833004752 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.830147865 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.822329348 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.819809537 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.822938854 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.820009567 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.816991306 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.821250562 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.819447188 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.820441374 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.816701376 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.834383628 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.828901147 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.825382921 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.820542041 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.821561766 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.821002183 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.822376297 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.821142374 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.82012398 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.825315445 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.823284804 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.827064713 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.822723688 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.822711066 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.82299621 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.830714983 seconds)
  done (took 1079.334028709 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.817786762 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.816990816 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.81817187 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.817284029 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.81653563 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.818795854 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.819080174 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.819385268 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.817694107 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.81839834 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.818916829 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.818447096 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.818965016 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.817951282 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.818232147 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.819243469 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.819845453 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.81904301 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.819517841 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.819998898 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.818435106 seconds)
  done (took 39.939940557 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.820735851 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.82015712 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.817447925 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.820856511 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.819912787 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.820840562 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.819044918 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.822100226 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.822990323 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.819386274 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.822657192 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.82186099 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.82055934 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.818832627 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.82002649 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.822583625 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.823587115 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.820624889 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.82425751 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.81995896 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.822474248 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.820509486 seconds)
  done (took 41.814991609 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.824007497 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.822610607 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.823565142 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.820141897 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.821356795 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.819748478 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.824055937 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.822824147 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.821652922 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.826675418 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.824025304 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.826575078 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.832717609 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.828766198 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.826524904 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.823570695 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.968147159 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.824598946 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.822326881 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.822902796 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.821388373 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.832096644 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.820211292 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.8226963 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.823689908 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.825398315 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.824167121 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.823495039 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.825866274 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.825407107 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.829558721 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.825307713 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.824240614 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.826687787 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.82537172 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.825414383 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.828877539 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.826712994 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.820684288 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.825817705 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.836999684 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.848494767 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.82487514 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.8351567 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.825444379 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.823750399 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.829080378 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.835550107 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.823981637 seconds)
  done (took 91.367508412 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.82552271 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.826094552 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.824009526 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.826012709 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.826721422 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.827288787 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.825507863 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.826237462 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.821060206 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.823753178 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.826719399 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.825236911 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.822808275 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.825820489 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.825647559 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.822660543 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.822697688 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.824185728 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.824148463 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.823832512 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.824837223 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.828139972 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.826521866 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.824268268 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.828034068 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.824484823 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.825443654 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.826741854 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.827112085 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.825714275 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.825640122 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.826814576 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.829304776 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.824738153 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.824822375 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.827928411 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.829364397 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.825576341 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.827787036 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.825602427 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.828252226 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.827696847 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.827296572 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.826619275 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.825014507 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.825234349 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.824845171 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.825689504 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.826331848 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.827985217 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.82836875 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.827346109 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.827889542 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.825563503 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.828186571 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.83008839 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.826102091 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.826389178 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.827743232 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.826091234 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.826393365 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.827911548 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.824692073 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.827586993 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.830602279 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.825325786 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.826954742 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.826812149 seconds)
  done (took 125.93766429 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.827546828 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.829073105 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.829799097 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.827537713 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.829847772 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.82908914 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.829089652 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.829486085 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.828793567 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.827351437 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.827365896 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.826018888 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.830812662 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.829372294 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.829577784 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.830894696 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.830449543 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.829392544 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.828840866 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.82831783 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.830638778 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.829206207 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.828473924 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.829358722 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.830849533 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.829334002 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.829031291 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.829745569 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.830385523 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.834391775 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.831461038 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.829825627 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.830660798 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.829804722 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.832125376 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.829373584 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.829022568 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.831844915 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.830026457 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.831377332 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.827808243 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.830583141 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.829544179 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.829601471 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.827505888 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.829560292 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.830177543 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.830413968 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.832565262 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.829865002 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.831149016 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.831331286 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.831148426 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.831248861 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.830226379 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.829720253 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.831419262 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.831341754 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.830394357 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.832163762 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.83124918 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.831530141 seconds)
  done (took 115.217157918 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.83282832 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.830143259 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.829948348 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.831161835 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.834756675 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.828215092 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.83273756 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.831686933 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.835058174 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.831742038 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.832992395 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.829815145 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.830600984 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.834088375 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.828724861 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.82908834 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.832096809 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.830177194 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.833265189 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.8325168 seconds)
  done (took 38.394132625 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.831637509 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.833166127 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.82996873 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.83076817 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.83558516 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.830841659 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.833100916 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.834106168 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.829885752 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.832625066 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.834154893 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.835157203 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831432555 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.832094106 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.835713023 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.832675532 seconds)
  done (took 31.083903661 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.830089781 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.834031182 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.836214847 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.833080684 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.831932397 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.832358918 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.835155082 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.833337027 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.83181033 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.834950229 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.837407552 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.834577831 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.834740165 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.834504782 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.832632027 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.834216675 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.832557941 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.832803675 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.835534251 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.834996998 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.835422778 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.831481911 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.834540741 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.837931745 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.834053207 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.833151879 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.834455761 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.831645272 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.834015406 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.835466059 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.835471748 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.834940265 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.833378835 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.833379702 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.8369331 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.831672433 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.836792759 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.835702062 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.836499957 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.836093624 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.836970071 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.834172622 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.83688055 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.834626743 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.836321344 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.836725303 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.83338145 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.833344189 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.835090198 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.833491903 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.836565085 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.836039745 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.838014867 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.83856715 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.83685256 seconds)
  done (took 102.671483345 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.837208713 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.8354912 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.836094515 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.837469609 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.838013612 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.836434428 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.837385848 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.833161325 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.83395444 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.83764114 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.835502416 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.836977825 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.833739878 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.838136571 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.835306592 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.838779151 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.835340666 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.834908238 seconds)
  done (took 34.818691166 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.833115012 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.835950807 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.838843585 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.834231607 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.83741932 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.83600553 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.835568724 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.838720004 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.838101806 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.836531577 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.836443408 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.839936167 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.838640313 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.838824715 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.837045409 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.83557045 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.839497786 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.840970071 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.838539556 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.834454117 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.840079064 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.839247943 seconds)
  done (took 42.190434091 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.838851843 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.837895019 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.855992494 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.859594288 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.866789591 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.875751763 seconds)
  done (took 12.901846987 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837234239 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839656294 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.83776503 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840410353 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83882376 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835914124 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838419029 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836078218 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838113637 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837708713 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837507754 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839366995 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837625166 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835847302 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84089917 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840071051 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837250292 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836008308 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837965889 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843128985 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837617667 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839297114 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837055445 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838624747 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837569515 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838674128 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838996513 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839900881 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840589872 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840871258 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843029369 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837626301 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840158402 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841865877 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84356101 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842028256 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837374163 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842840523 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841945116 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839238472 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.8416367 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842811439 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843449094 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84226308 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841897943 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840477698 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838607194 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840616446 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837232488 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840987275 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841003444 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840030849 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.844480285 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840743312 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843199617 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843673575 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839402619 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838974969 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843115755 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838786108 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838668583 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84307296 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839986739 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84015087 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840452717 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839108161 seconds)
  done (took 123.201063114 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839360432 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.838893788 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839672686 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840440096 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838292594 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839557639 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840839128 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841398423 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838170257 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840198518 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844137819 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839476847 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840657408 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839710241 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838576746 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840835513 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842046692 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842262729 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843524583 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844174444 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840136332 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842224986 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843455887 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841494877 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840920599 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843545583 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84330873 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840661041 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842310628 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839562241 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839832079 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842813748 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840623112 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.842051634 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840608717 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841537877 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843011148 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83975692 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841232467 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845043294 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839579345 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845447036 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841382037 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842114171 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845734485 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843445299 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841981685 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843741875 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841703387 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841729453 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846092075 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844867957 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841981123 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843592203 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844444718 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.844185593 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842109571 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844569669 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842538935 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845951955 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842981655 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843775823 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845937958 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84381056 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842091499 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841889695 seconds)
  done (took 123.347877586 seconds)
done (took 2515.08729525 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.926933178 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.056487019 seconds)
  done (took 15.758587951 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.005474223 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.960166474 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.84235351 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.882474262 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.842733266 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.839677229 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.856819849 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.838972425 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.840061324 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.841569462 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.841445642 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.030044612 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.840918366 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.83807766 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.839004191 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.932532713 seconds)
  done (took 51.849684447 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.84302201 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.845863622 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.854074256 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.846252805 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.84399249 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.865119336 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.877981869 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.847461004 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.906033832 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.856275198 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.979818678 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.858703288 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.843486813 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.905512915 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.855828475 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.859580707 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.931684962 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.921543662 seconds)
  done (took 35.515002801 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.924888497 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.851317786 seconds)
  done (took 10.558195862 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.863538025 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.851778955 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.845396705 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.852442658 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.862749754 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.867342646 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.869144978 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.865709533 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.869759727 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.880570004 seconds)
  done (took 70.404569886 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.848467897 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.846325273 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.845792577 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.842093636 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.835840006 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.843064777 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.843990554 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.838117188 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.549606011 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.879516684 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.851051197 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.84094202 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.837282704 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.838543564 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.834022132 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.859481024 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.974518074 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.831683237 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.831034305 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.839462704 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.835231765 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.886402434 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.845288744 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.835050736 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.862928172 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.537101732 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.84675158 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.839015839 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.948824654 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.829064061 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.831608892 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.834166725 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.832407707 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.230872263 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.119512542 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.833815793 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.841743383 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.838939416 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.828964131 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.964964182 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.832393812 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.836959727 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.825562929 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.103999065 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.916575314 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.875061668 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.206929013 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.835510508 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.83198353 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.862565576 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.834914528 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.834898178 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.849536787 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.347897216 seconds)
  done (took 130.906474517 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.828116337 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.119826705 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.980308897 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.826618643 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.104055818 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.035751439 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.770098649 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.877700571 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.827455905 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.031292824 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.043144047 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.936940236 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.830939121 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.826250248 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.824469909 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.824075747 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.986075297 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.896506536 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.826240457 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.823562883 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.852673097 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.03572672 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.952995672 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.826419609 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.846550203 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.037086043 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.947839305 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.931240951 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.29454741 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.824941205 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.88796825 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.82361643 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.819941498 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.816268037 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.980207375 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.92298709 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.912264788 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.82116346 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.818108546 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.818537064 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.481921587 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.016927898 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.918950904 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.964461758 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.972333239 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.026926074 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.467894031 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.817407258 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.464094936 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.982781124 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.03496585 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.028337495 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.946611764 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.823233697 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.972263398 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.820021069 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.820669787 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.06023456 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.968498516 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.923776228 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.822703372 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.820677852 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.819622087 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.065199381 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.82380891 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.91810951 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.823181884 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.822043105 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.920870153 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.928222466 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.964660621 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.037115231 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.856336051 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.549854287 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.039371041 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.038819324 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.892891967 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.057318133 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.825265272 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.821245224 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.907269536 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.575701222 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.024862961 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.071684415 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.045117229 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.859033783 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.417241316 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.821125198 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.016466816 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.008049863 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.018739207 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.972010623 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.976410799 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.146826737 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.822818875 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.824240822 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.046062278 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.961651099 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.826378303 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.185414608 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.057307599 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.442363293 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.845020913 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.119628662 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.958882192 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.140431145 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.449931489 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.822128935 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.992089423 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.864269944 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.824394796 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.826893074 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.014839374 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.634174738 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.824507134 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.547007957 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.888237654 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.824015973 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.027378051 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.828461259 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.033790033 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.826702542 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.061430575 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.234808294 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.860218148 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.993949589 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.973963271 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.619402707 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.073476444 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.073223874 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.945803359 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.094851895 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.551553904 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.823505525 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.10078833 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.82632317 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.825551366 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.993372099 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.825463716 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.973967735 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.82570946 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.055798107 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.849943222 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.981423156 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.82816552 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.056877224 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.863658248 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.879042504 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.827975883 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.951088292 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.829255502 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.708341917 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.980157748 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.827599213 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.827677398 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.232136478 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.828196225 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.974005258 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.0605487 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.852714349 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.896767702 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.352693136 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.828403692 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.913844638 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.853914362 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.432732138 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.827636668 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.0371391 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.799341148 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.268538692 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.824737292 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.068187499 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.06159289 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.825547184 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.825128714 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.569869984 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.532631849 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.827516123 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.984746483 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.226674673 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.476357645 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.031038974 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.82968966 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.957606435 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.829252396 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.907004254 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.175428011 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.825389168 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.826036406 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.828855427 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.826951797 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.827951127 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.03578106 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.860944196 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.325754754 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.963438737 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.045136863 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.13945892 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.047794269 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.876894173 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.828386355 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.074789293 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.831164968 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.893866803 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.830642076 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.851340399 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.064494372 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.830340287 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.067233879 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.083768285 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.883446852 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.880163972 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.829977447 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.827821026 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.827650722 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.977501502 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.921532034 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.82888503 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.828486924 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.939687496 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.953234981 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.024740452 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.422567243 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.941870612 seconds)
  done (took 888.977930023 seconds)
done (took 1205.743294452 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.830297908 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.827916643 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.816826146 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.830659651 seconds)
  done (took 29.073201703 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.835036351 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.83365052 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.835169801 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.834064171 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.835862793 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.834130312 seconds)
  done (took 12.775812179 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.860160559 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.827822008 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.831466232 seconds)
  done (took 21.28624569 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.903632334 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.252828861 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.943177423 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.287068508 seconds)
  done (took 10.15537854 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.836409576 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.838413996 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.835597683 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.836339486 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.836017995 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.838552319 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.83701463 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.836970392 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.836904643 seconds)
  done (took 18.301597498 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.215028405 seconds)
done (took 97.575466031 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.984750308 seconds)
    (2/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.863946659 seconds)
    (3/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.51923686 seconds)
    (4/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.673076897 seconds)
    (5/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.904345421 seconds)
    (6/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.830455129 seconds)
    (7/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.81790235 seconds)
    (8/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.936583511 seconds)
    (9/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.397546356 seconds)
    (10/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.484298854 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.043746702 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.433032334 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.871495793 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.0755861 seconds)
    (15/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.676200035 seconds)
    (16/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.953792423 seconds)
    (17/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.95534082 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.857242789 seconds)
    (19/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.830615579 seconds)
    (20/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.263215621 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.219627572 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.152992876 seconds)
    (23/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.015041116 seconds)
    (24/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.928792247 seconds)
    (25/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.817882611 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 3.687570823 seconds)
    (27/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.554297588 seconds)
    (28/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.996738586 seconds)
    (29/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.926818051 seconds)
    (30/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.142203194 seconds)
    (31/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.976151787 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.909446797 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.854667943 seconds)
    (34/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.166416341 seconds)
    (35/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.969680073 seconds)
    (36/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.135729504 seconds)
    (37/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.978953465 seconds)
    (38/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.921198476 seconds)
    (39/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.908112637 seconds)
    (40/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.128611507 seconds)
    (41/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.118141325 seconds)
    (42/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.030751192 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.935980804 seconds)
    (44/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.829610997 seconds)
    (45/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 9.209371118 seconds)
    (46/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.738552503 seconds)
    (47/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.08733716 seconds)
    (48/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.33906903 seconds)
    (49/309) benchmarking ("sort", Int8, false)...
    done (took 4.832244293 seconds)
    (50/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.859111419 seconds)
    (51/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.133898863 seconds)
    (52/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.994162829 seconds)
    (53/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.13467864 seconds)
    (54/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.838221072 seconds)
    (55/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.088628747 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.831012367 seconds)
    (57/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.569129878 seconds)
    (58/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.962473469 seconds)
    (59/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.963901166 seconds)
    (60/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.848665972 seconds)
    (61/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.829581259 seconds)
    (62/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.832762668 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.95646503 seconds)
    (64/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.84001862 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.935207442 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.904818417 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.09235861 seconds)
    (68/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.940765229 seconds)
    (69/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.527886405 seconds)
    (70/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.933012785 seconds)
    (71/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.959477954 seconds)
    (72/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.337217312 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.178681651 seconds)
    (74/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.892525919 seconds)
    (75/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.912949232 seconds)
    (76/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.971498802 seconds)
    (77/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.954185394 seconds)
    (78/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.345733455 seconds)
    (79/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.976371368 seconds)
    (80/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.474033354 seconds)
    (81/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.117199956 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.13066003 seconds)
    (83/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.237887976 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.816802332 seconds)
    (85/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 4.348960753 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.940427432 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.215079094 seconds)
    (88/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.859945922 seconds)
    (89/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.832338289 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.980743191 seconds)
    (91/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.966540619 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.823956085 seconds)
    (93/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.853890057 seconds)
    (94/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.920279671 seconds)
    (95/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.816183775 seconds)
    (96/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.096344776 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.890003916 seconds)
    (98/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.338337966 seconds)
    (99/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.833624734 seconds)
    (100/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.898544053 seconds)
    (101/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.136509603 seconds)
    (102/309) benchmarking ("sort", Int64, false)...
    done (took 5.538009214 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.137039292 seconds)
    (104/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.956794283 seconds)
    (105/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.937487965 seconds)
    (106/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.430307989 seconds)
    (107/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.884180984 seconds)
    (108/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.784729795 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.531633403 seconds)
    (110/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.002368576 seconds)
    (111/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.867621225 seconds)
    (112/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.002909206 seconds)
    (113/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.840047383 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.907656424 seconds)
    (115/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.414482993 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.110271516 seconds)
    (117/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.190482164 seconds)
    (118/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.185063739 seconds)
    (119/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.49933906 seconds)
    (120/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.918584627 seconds)
    (121/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.144944479 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.856010889 seconds)
    (123/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.85922153 seconds)
    (124/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.851680313 seconds)
    (125/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.179694714 seconds)
    (126/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.756161548 seconds)
    (127/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.822268598 seconds)
    (128/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 8.1690965 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.843331087 seconds)
    (130/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.059821847 seconds)
    (131/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.906543032 seconds)
    (132/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.437094341 seconds)
    (133/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.205011368 seconds)
    (134/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.121734664 seconds)
    (135/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.026549129 seconds)
    (136/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.839643959 seconds)
    (137/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.969503876 seconds)
    (138/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.892906265 seconds)
    (139/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.384738324 seconds)
    (140/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.913040357 seconds)
    (141/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.679406652 seconds)
    (142/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.755490336 seconds)
    (143/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.230780412 seconds)
    (144/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.020159256 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.485711099 seconds)
    (146/309) benchmarking ("sort", Bool, false)...
    done (took 2.291835317 seconds)
    (147/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.858725856 seconds)
    (148/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.407348266 seconds)
    (149/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.121271951 seconds)
    (150/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.117979251 seconds)
    (151/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.834202736 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.212621836 seconds)
    (153/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.089151095 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.055785313 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.765517354 seconds)
    (156/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.108265789 seconds)
    (157/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.860463256 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.64975589 seconds)
    (159/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.358572566 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.838931578 seconds)
    (161/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.269925656 seconds)
    (162/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.081862801 seconds)
    (163/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.299927845 seconds)
    (164/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.064434568 seconds)
    (165/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.403532543 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.245731163 seconds)
    (167/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.25206829 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.999608658 seconds)
    (169/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.186436113 seconds)
    (170/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.937333829 seconds)
    (171/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.063204799 seconds)
    (172/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.865780914 seconds)
    (173/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.917759581 seconds)
    (174/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.821591325 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.771467105 seconds)
    (176/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.912663414 seconds)
    (177/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.478465961 seconds)
    (178/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.44846287 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.837686196 seconds)
    (180/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.867230777 seconds)
    (181/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.920467176 seconds)
    (182/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.917316719 seconds)
    (183/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.918746878 seconds)
    (184/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.106034952 seconds)
    (185/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.0737933 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.935142321 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 8.335597261 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.247793851 seconds)
    (189/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.823535088 seconds)
    (190/309) benchmarking ("sort", BigInt, false)...
    done (took 7.93989538 seconds)
    (191/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.089393793 seconds)
    (192/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.926379793 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.848618712 seconds)
    (194/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.831086458 seconds)
    (195/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.361305891 seconds)
    (196/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.872645433 seconds)
    (197/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.774006656 seconds)
    (198/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.032948538 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.652493016 seconds)
    (200/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.4482848 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.82449334 seconds)
    (202/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.896226251 seconds)
    (203/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.962195175 seconds)
    (204/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.863531127 seconds)
    (205/309) benchmarking ("sort", Float64, false)...
    done (took 5.637474968 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.17059062 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.868964851 seconds)
    (208/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.072361107 seconds)
    (209/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.841724209 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.919468977 seconds)
    (211/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.846540662 seconds)
    (212/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.822774049 seconds)
    (213/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.868144113 seconds)
    (214/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.113496949 seconds)
    (215/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.962194696 seconds)
    (216/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.98531281 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.826262021 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.593330902 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.047911033 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.167365602 seconds)
    (221/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.138286131 seconds)
    (222/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.186178948 seconds)
    (223/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.73429537 seconds)
    (224/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.064872906 seconds)
    (225/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.011791133 seconds)
    (226/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.992234212 seconds)
    (227/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.84988039 seconds)
    (228/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.849554368 seconds)
    (229/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.216277251 seconds)
    (230/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.874302256 seconds)
    (231/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.043652693 seconds)
    (232/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.217761247 seconds)
    (233/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.841063672 seconds)
    (234/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.879648273 seconds)
    (235/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.874673149 seconds)
    (236/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.253537273 seconds)
    (237/309) benchmarking ("sort", Float32, false)...
    done (took 5.603851831 seconds)
    (238/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.828510077 seconds)
    (239/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 3.290418191 seconds)
    (240/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.891964332 seconds)
    (241/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.710640422 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.941238387 seconds)
    (243/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.356461253 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.738637152 seconds)
    (245/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.979230954 seconds)
    (246/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.062655437 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.888484845 seconds)
    (248/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.037631097 seconds)
    (249/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.825550442 seconds)
    (250/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.01492955 seconds)
    (251/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.86737969 seconds)
    (252/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.927813598 seconds)
    (253/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.011673445 seconds)
    (254/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.229117377 seconds)
    (255/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.867643634 seconds)
    (256/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.905162488 seconds)
    (257/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.963774775 seconds)
    (258/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.841539288 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.542659376 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.527445349 seconds)
    (261/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.969223201 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.089782046 seconds)
    (263/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.172102541 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.595116652 seconds)
    (265/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.066243767 seconds)
    (266/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.952479818 seconds)
    (267/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.991924392 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.138732589 seconds)
    (269/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.862770837 seconds)
    (270/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.206908299 seconds)
    (271/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.830974461 seconds)
    (272/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.158546171 seconds)
    (273/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.869407705 seconds)
    (274/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.927788299 seconds)
    (275/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.802888701 seconds)
    (276/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.847234265 seconds)
    (277/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.831037455 seconds)
    (278/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 3.39308214 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.891402085 seconds)
    (280/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.225434234 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.786425159 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.298507926 seconds)
    (283/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.925399558 seconds)
    (284/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.087007013 seconds)
    (285/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.223094001 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.759378617 seconds)
    (287/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.850649957 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.017869257 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.089992884 seconds)
    (290/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.831836735 seconds)
    (291/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 8.495171676 seconds)
    (292/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.000856731 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.930320025 seconds)
    (294/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.872893496 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.223529262 seconds)
    (296/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.929604129 seconds)
    (297/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.95405691 seconds)
    (298/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.047115597 seconds)
    (299/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.148117149 seconds)
    (300/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.138350185 seconds)
    (301/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.021118467 seconds)
    (302/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.948296191 seconds)
    (303/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.949185682 seconds)
    (304/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.059383081 seconds)
    (305/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.836910321 seconds)
    (306/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 3.331577144 seconds)
    (307/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.844344144 seconds)
    (308/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.8430777 seconds)
    (309/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.87837426 seconds)
  done (took 1015.975119474 seconds)
done (took 1017.811782686 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.875663082 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.870463767 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.8546352 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.875154081 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.967277182 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.889063324 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.865188552 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.857117644 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.902983483 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.903384069 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.854581703 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.888527749 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.858786056 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.855294654 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.854553212 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.870717313 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.1806911 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.884477107 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.871602316 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.865716384 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.871640173 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.854540573 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.904118364 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.889173679 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.858485246 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.856480375 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.85902455 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.875528334 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.967064061 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.859033261 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.856993061 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.868093913 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.178898063 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.883789782 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.850012955 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.874897849 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.868000716 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.864210061 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.859620249 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.886743253 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.328391705 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.863191646 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.859065811 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.855660719 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.857507267 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.858817163 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.859032417 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.86300124 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.871252381 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.870525368 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.325316155 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.879426431 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.861693198 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.857102337 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.868768158 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.856926359 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.860929502 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.873297298 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.875812783 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.872602459 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.172369286 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.891669983 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.859726545 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.876053522 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.865904856 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.360250801 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.860089077 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.862094698 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.330012152 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.869286952 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.362689307 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.875574495 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.859279392 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.870635946 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.890812839 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.180940393 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.883283119 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.857682589 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.865767795 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.856099099 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.868374021 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.871280098 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.864288325 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.858385532 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.872332871 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.892210334 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.869197573 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.8601498 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.868176562 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.877840259 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.866773126 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.869313226 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.86160312 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.855529281 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.869192325 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.862385581 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.863440407 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.861911394 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.864558076 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.870322243 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.331145656 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.88481507 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.855243998 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.855747714 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.859669122 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.874153038 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.330692691 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.869357219 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.881369952 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.908314668 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.861193911 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.171982925 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.892881125 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.877241158 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.870414198 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.864384803 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.856165116 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.173523548 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.357315792 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.883209211 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.862323496 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.859444108 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.877764989 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.863096287 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.857135936 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.184276283 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.891754573 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.873551573 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.983371289 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.872639349 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.892685425 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.860245664 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.864754617 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.891593773 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.879228778 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.893059112 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.864705921 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.878856358 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.879671275 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.85604221 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.872985127 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.871129565 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.862967415 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.869554802 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.855462042 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.892329773 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.875147111 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.874689683 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.882370928 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.983904534 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.859288795 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.176224328 seconds)
done (took 292.658047625 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.929704826 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.850637553 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.954622828 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.858243495 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.944206901 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.950048473 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.856669825 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.85932033 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.858570412 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.239616782 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.858876135 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.858916643 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.856600023 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.858001618 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.947232674 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.859418493 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.857420132 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.225329131 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.860145272 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.932443152 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.856743158 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.857404777 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.859700109 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.242188333 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.855889672 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.85837207 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.930879077 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.859538261 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.204614568 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.857428834 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.859607757 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.207526706 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.954683401 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.879859041 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.871085768 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.869386798 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.946528577 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.865689034 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.943891093 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.943111372 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.957372923 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.900129652 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.85819945 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.857149256 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.864196992 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.864885477 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.859225031 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.889973562 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.855415249 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.859356939 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.229221165 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.871310287 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.859676386 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.858799669 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.860278784 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.892866753 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.858649587 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.864275393 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.951511105 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.862233799 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.924890363 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.242843264 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.242036222 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.861477414 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.859646368 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.859933909 seconds)
  done (took 183.796067603 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.93102098 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.93656619 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.930241261 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.867695024 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.913683486 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.936264632 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.315564971 seconds)
  done (took 15.6231493 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.869873875 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.864108015 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.91345409 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.913342828 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.863907099 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.013154295 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.863181136 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.874974399 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.861201631 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.916940554 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.864415614 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.864082535 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.87416953 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.857043414 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.911679407 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.875442348 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.979918523 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.865383288 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.86432613 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.014737677 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.862636948 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.873238115 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.916836531 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.874733574 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.863497653 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.86970206 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.446909795 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.864009094 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.861164404 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.864182474 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.861464171 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.906758094 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.862887189 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.856008931 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.861189199 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.980652584 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.863915782 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.860383347 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.864299947 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.862779213 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.864003569 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.86548944 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.864182427 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.860485631 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.864241561 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.888485376 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.865144503 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.864517876 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.863836889 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.867310456 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.915473528 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.866410845 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.862356877 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.864313793 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.920619684 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.872696117 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.865287724 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.864043325 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.865253628 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.86452874 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.018496544 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.913113707 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.866307388 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.915078744 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.866666471 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.867621239 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.865242243 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.86612687 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.921398491 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.866235196 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.914717564 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.865363075 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.027327604 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.890493814 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.866301952 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.868878695 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.870169883 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.866962521 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.860388869 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.873429083 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.863855521 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.867448986 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.87219086 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.866844434 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.863405855 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.979395024 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.975175905 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.864145747 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.878751743 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.875059214 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.864227036 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.920829613 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.867593388 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.863316519 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.919175925 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.982156499 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.923007928 seconds)
  done (took 205.345101006 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.872321486 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.874221241 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.868633625 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.884535371 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.868588051 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.869498256 seconds)
  done (took 13.03548808 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.869744256 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.869336239 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.867526695 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.870337394 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.866415153 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.868811346 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.868603161 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.869820002 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.873304222 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.869511116 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.868844784 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.870114547 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.869890158 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.870511363 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.871030175 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.870122399 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.869457789 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.866402823 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.868059048 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.869469052 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.012426376 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.870656776 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.870062068 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.870445194 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.87270438 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.870366096 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.876468857 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.870004474 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.870204645 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.87583489 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.872812118 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.867934391 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.870983899 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.878595791 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.874520904 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.871459945 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.874361333 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.870345824 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.869285939 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.871795002 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.869751088 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.868196169 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.872095653 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.869937847 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.872609955 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.874679635 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.874988582 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.879517425 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.870005053 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.87027962 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.871726919 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.870743274 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.871404147 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.872980947 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.876006118 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.877308296 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.875030839 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.873374502 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.871821762 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.872995551 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.874071103 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.871454299 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.873311211 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.877221458 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.880842046 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.874285501 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.873317788 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.877602854 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.872739013 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.872665791 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.872764621 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.869639936 seconds)
  done (took 137.714535408 seconds)
done (took 557.321726168 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.087135769 seconds)
  done (took 8.888666975 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.927399719 seconds)
  done (took 8.801641231 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.998444453 seconds)
  done (took 10.80363497 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.880528528 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.864382427 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.878420168 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.877752504 seconds)
  done (took 29.313692761 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.237789337 seconds)
  done (took 9.040671144 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.881858718 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.8658174 seconds)
  done (took 15.611179555 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.977731365 seconds)
  done (took 8.780796039 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.987361027 seconds)
  done (took 8.796245472 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.890638081 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.884730238 seconds)
  done (took 15.591535899 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.854755936 seconds)
  done (took 8.658388586 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.495264781 seconds)
  done (took 11.305218956 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.879670845 seconds)
  done (took 8.695317842 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.959383203 seconds)
  done (took 8.760970191 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.99001554 seconds)
  done (took 8.793768662 seconds)
done (took 163.64447861 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.873803642 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.867895274 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.86603744 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.866105073 seconds)
  done (took 29.277018546 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.90583725 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.906384911 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.908603663 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.919848304 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.91200036 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.907775788 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.900472508 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.900456195 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.917292997 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.910743022 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.907953399 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.909069331 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.908711117 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.898254094 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.909607251 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.909964223 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.919472266 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.909372775 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.899244409 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.91037675 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.875401609 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.920281906 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.911574367 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.875284908 seconds)
  done (took 47.558351241 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.075310208 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.947386002 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.031477302 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.926400431 seconds)
  done (took 9.784427068 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.925589359 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.927728147 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.938110905 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.979215491 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.013863978 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.936910235 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.904320516 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.896441725 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.8829281 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.928607122 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.003610634 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.943675385 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.01364577 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.875839963 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.063188897 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.874626184 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.875303028 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.927787794 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.977986928 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.994124848 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.877225695 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.928637212 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.932423524 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.945961769 seconds)
  done (took 48.371861873 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.874602099 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.883528835 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.882751999 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.876084594 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.875793262 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.874801182 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.880907243 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.877892735 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.896674835 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.877593014 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.874198443 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.876501084 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.87713839 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.876599837 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.876363598 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.891227054 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.8915899 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.876938669 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.879892784 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.882878718 seconds)
  done (took 39.412845065 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.871052542 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.808418623 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.222944024 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.124554882 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.870051192 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.871329205 seconds)
  done (took 32.575747221 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.890042829 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.885397288 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.877706817 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.933752753 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.017355599 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.887986421 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.879974246 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.890160363 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.924499837 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.947469275 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.89954907 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.905884149 seconds)
  done (took 24.747811069 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.874790768 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.87268514 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.871603747 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.889463468 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.888979586 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.88399322 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.883411756 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.869849305 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.890102429 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.897138916 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.885688945 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.891465352 seconds)
  done (took 44.411266314 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965087531 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.917359723 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.913749908 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.551202741 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.252677697 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.085315645 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.47602839 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.216481562 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.877997 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.149277365 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.823907241 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977955539 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.133403515 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.502847044 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.911712993 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.325550338 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.161510669 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.088690204 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896313416 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.507979169 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932363775 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.188199936 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.642478991 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.925367406 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.08608786 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.002646051 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.13469795 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.874173493 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004412658 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.903962616 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884878434 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.874695344 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.148241887 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248487338 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978524263 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885299285 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.494745597 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.58696926 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.917974698 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.518242724 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.539385639 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.985466563 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886387984 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.874595393 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.809074329 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.155231329 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260872342 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.881514042 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.586102173 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.87493444 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.886934765 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970713431 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.878729042 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.688726453 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796466675 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.876957825 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.874737635 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882926365 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.451513646 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.940628582 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.169454072 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.859038676 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.969687022 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.602448505 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252338361 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.016000629 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.882211644 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.880043571 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811124144 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.511839668 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924834495 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.209620708 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.896475866 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.529063836 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.166787087 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.907441173 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.821872816 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.147234858 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.530496638 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.855389013 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104296789 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.875054051 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.814765802 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.823128353 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.81023095 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142191315 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91112365 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.619116112 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912190806 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.216500792 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.887761894 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899440962 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902612731 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.102158715 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.761387864 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877287455 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.64948568 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.020305802 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898880315 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.212724507 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.812839066 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.881765888 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.136954051 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.088160057 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.069461902 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.371689647 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032388518 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.567922289 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.935734027 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.149256585 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.93185257 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.145437558 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931464467 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.955633825 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926178099 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.878561858 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176822184 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.576964828 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.019942095 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.868459243 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.007585861 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.196760595 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902491676 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961221918 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.88597176 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.879096392 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.585484114 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.426076855 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.881711953 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.883748226 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.064183619 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.931658463 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.880384432 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829548065 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.514701367 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.820135288 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.893033993 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.105002745 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.585474178 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.19677992 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.815284315 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211039049 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.935860721 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.102737257 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.51855923 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.938169553 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.142300034 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.074834934 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.131339933 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934436944 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899887686 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98169147 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904670042 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.155412045 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.182718925 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.884221197 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.887960325 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.617027237 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.911501645 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891916367 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.888376131 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.634544451 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1498024 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.898920413 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.889278098 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.772700428 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.895934421 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948946223 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.887263961 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.892470965 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.42751953 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.59911395 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.892064977 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.479146973 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108531619 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892444017 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.581921713 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.992814419 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.97017471 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.149678321 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933234664 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.817815708 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.594835504 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.576338666 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884208833 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.819413991 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.883301914 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891114435 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.89435044 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.078678707 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.151712795 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.919420068 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.519175397 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.920264337 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.8978886 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.887560519 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883203175 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.402650433 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.952063394 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.194177505 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.934832389 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030255767 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.897639009 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.817613402 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.888308703 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.888315046 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.884649387 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.884879609 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916654972 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.53086206 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259202783 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.144427194 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.49520776 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.899389409 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.569637155 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.935499797 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.886547424 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.628725668 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.177177585 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.926632808 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912060403 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.894767225 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.597709832 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.588657634 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.456714385 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.182726418 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.17813133 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315278047 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.223334191 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.918882209 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.223394582 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.819114468 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.44184794 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.945294841 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.232729 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831153044 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.975512365 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.525112024 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.213833012 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900370415 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113947969 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.261198898 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.551274862 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.017182386 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.0975881 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920567259 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.163594558 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.854806199 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.408956858 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029275395 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.517540805 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.081050598 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227054173 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.496178061 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.998575356 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.886380783 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.571830163 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971810356 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.602290366 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.058120849 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.196144787 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.759773674 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357400809 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.894485508 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.111919592 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.238480081 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.176487587 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.021063889 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.823730282 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.899976832 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.899416886 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.8904162 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.890320499 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.776885714 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.141929171 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90021482 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.821408401 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.127155536 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.181557531 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.789918031 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.894219074 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89108138 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181154681 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.547255805 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054798939 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.104833238 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.422647394 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896908796 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.822470423 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.825600334 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.583429734 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.892919553 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.861858869 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.095251668 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.987437784 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.844084038 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.091461274 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.975770901 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.147475682 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.902666638 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.154211954 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.155932322 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.590534508 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913985991 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.989167829 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.504780786 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.986337417 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.889831215 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.124444084 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.64752203 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.118095033 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.918855404 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.843685446 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.888932956 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.104777131 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.891064121 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.711906392 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.105708018 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.611878206 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.892626644 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.19113267 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955792637 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.787732076 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.92313439 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.982477816 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901996707 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970201638 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901227467 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.901513542 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.902750584 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941761753 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.791363798 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.001928607 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.905325126 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985546968 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.971888677 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.415455168 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.897275245 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158448067 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231947437 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.203872343 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944121794 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.891057749 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89815029 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.825410665 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040654393 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.119056402 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.164404887 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.021666102 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.006744251 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91645726 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.494392084 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.218678596 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13847718 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.166421075 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.788613235 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.529112149 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.937199809 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.892846786 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901787908 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.103007153 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.101826587 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.18862333 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.035647336 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.09108362 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.263016787 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.167038668 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.8919312 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.893081793 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.48027138 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.897086133 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.585129482 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.931292355 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.778346488 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155768061 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.90294842 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.267792668 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.911055705 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.049016611 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.666868476 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.575076124 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.178281159 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.8770678 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.940550652 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.160478019 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.260241685 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.200255894 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96271576 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904816577 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.011747903 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041222628 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.774093648 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.894138522 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.894301498 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.941364291 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.604555604 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.903721375 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.164793291 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198476243 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.891313727 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.775596332 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918798812 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.904371945 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.117968647 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.164001187 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.144158938 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902969769 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.899976018 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.710745208 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.163212837 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.946158058 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829851531 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.89840753 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991335995 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.142748264 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916139325 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.348193171 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.607157036 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.178556985 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.892934687 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917526346 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.185767596 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.257197768 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.206749693 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.429899269 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.114735983 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.478381206 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.596304694 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.200282728 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.902212416 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.169921349 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.203743552 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.899039054 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.101194874 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938502111 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.159183423 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.202706003 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.904114709 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.546306549 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.861057844 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.237891676 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.465473197 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.8354922 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.90525781 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.957097234 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.89741647 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.026628814 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.908040476 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.77482128 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.17471322 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.684033728 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.182445314 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.902210808 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.890518422 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.618744616 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.29660691 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935747979 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.044802515 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898634959 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.572595326 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.247281286 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.153586872 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.104506276 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.90778907 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.900421063 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897573393 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.883819943 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.093210468 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.095487617 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.170547331 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.126780354 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.939210824 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.899781482 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.114083029 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.111036492 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.777841266 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.026197191 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.10938547 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944455408 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.804513492 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.405859019 seconds)
  done (took 1684.330449119 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.912604156 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.924592438 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.93844771 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.967118219 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.911855013 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.011439393 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.915095753 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.945546892 seconds)
  done (took 57.360894083 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.898705407 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.096521536 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.907161565 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.899896797 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.907764138 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.899972046 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.080973264 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.912833871 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.909670904 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.908120851 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.899288286 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.899719059 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.226500312 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.925355862 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.900471031 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.887388799 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.908563869 seconds)
  done (took 74.916827254 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.901987137 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.014064294 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.921489149 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.917259364 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.8795344 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.912329338 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.752732527 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.958644781 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.901113466 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.142229557 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.538014802 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.937230911 seconds)
  done (took 90.612789281 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.911041326 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.906212606 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.907549371 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.906771262 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.906606554 seconds)
  done (took 11.378760606 seconds)
done (took 2196.59626452 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.153767907 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.116475844 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.143177141 seconds)
  done (took 6.094119561 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.058003982 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.114875815 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.226815992 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.233328382 seconds)
  done (took 10.481420733 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.200846197 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.292066214 seconds)
  done (took 6.336353277 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.318745645 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.927851801 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.294401715 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.910226764 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.912816502 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.913241248 seconds)
  done (took 22.585149421 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.913600564 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.91823114 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.912621789 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.917483125 seconds)
  done (took 9.505929426 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.897375039 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.620088688 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.896571743 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.913224869 seconds)
  done (took 21.172495517 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.662762472 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.672410269 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.658595864 seconds)
  done (took 9.838354968 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.512632092 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.800785281 seconds)
  done (took 9.157798123 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.183755631 seconds)
  done (took 4.028972169 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.045862953 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.224509728 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.396081478 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.427675149 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.513585453 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.634954111 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.245646114 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.176790865 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.325915429 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.3646133 seconds)
  done (took 25.201941989 seconds)
done (took 139.932359174 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.304540141 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.917654093 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.120164715 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.29900969 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.142822164 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.12475242 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.327130116 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.277455199 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.767018495 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.7632494 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.25448729 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.143159964 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.070287778 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.915736108 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.07031123 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.292622085 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.138688184 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.316327875 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.989193528 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.1461211 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.334447598 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.894978066 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.096451726 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.909141016 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.142884844 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.1389583 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.472853049 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.292698967 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.145419164 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.485681143 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.074102215 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.30274002 seconds)
  done (took 170.518042317 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.683792773 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.914285955 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.916027686 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.915640738 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.555987359 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.915035144 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.914281585 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.917593875 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.166116587 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.138651703 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.916157942 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.542893358 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.915716939 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.915936999 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.917880164 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.938174155 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.289915357 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.724738204 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.922514102 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.916315948 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.920434027 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.491310207 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.914679294 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.531079905 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.249133916 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.921614895 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.915867095 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.926128218 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.924051944 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.93494651 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.934078765 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.914967525 seconds)
  done (took 210.464869846 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.915666148 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.922643922 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.916701496 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.919285601 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.923214559 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.946712297 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.917710786 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.916051315 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.50578175 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.495393609 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.928337414 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.946218744 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.928096744 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.916842734 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.927942272 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.917367381 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.938148985 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.928487573 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.92232043 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.928680337 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.935047044 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.762120685 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.935458435 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.745181025 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.946878688 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.926567215 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.915702977 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.9317556 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.922842164 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.931938542 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.929906969 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.919386401 seconds)
  done (took 222.332908732 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.119020035 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.922320841 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.923006961 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.878869908 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.923705487 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.921278767 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.918931033 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.120621921 seconds)
  done (took 19.600956475 seconds)
done (took 624.778434299 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.345672322 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.192649128 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.108917114 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.949052705 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.156930532 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.985365073 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.944121438 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.008639059 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.676347693 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.055564223 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.580176406 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.964892619 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.672486033 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.97021186 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.074875868 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.004159404 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.506383513 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.598761837 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.127278998 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.001595631 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.114539629 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.908957712 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.02052486 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.692661454 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.699728713 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.952541206 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.134001989 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.515237145 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.956493561 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.111817486 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.675193505 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.347688091 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.956124858 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.944174252 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.996966649 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.978719878 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.292579698 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.954995355 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.067234792 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.709930307 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.989015084 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.553590313 seconds)
  done (took 105.349083688 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.915165425 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.913406164 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.914080433 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.914034212 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.91497431 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.914382706 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.91249583 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.915183607 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.912936669 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.909856754 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.914013612 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.916903637 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.913743198 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.91333597 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.9136941 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.915174367 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.913917788 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.917823377 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.913419459 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.915493325 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.913955752 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.913679 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.91532871 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.913989078 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.914768075 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.915382607 seconds)
  done (took 51.635273403 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.92880902 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.072114429 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.157157891 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.946774969 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.928999345 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.930944942 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.948171713 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.933489533 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.927496943 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.929776066 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.026911592 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.934416603 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.947128265 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.154506219 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.942864319 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.928850584 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.927790861 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.926317359 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.078215671 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.946125781 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.94767563 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.93328219 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.946657462 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.942755787 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.929894799 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.928388948 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.930469413 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.363365449 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.939597712 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.025626042 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.973692683 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.951431554 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.322065678 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.163179992 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.982871862 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.935825819 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.929292057 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.028869421 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.934480542 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.929804456 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.947627233 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.932933724 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.164710574 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.423482177 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.943363234 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.931181085 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.374189366 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.037639105 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.968920493 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.944262563 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.158718606 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.946210817 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.931551055 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.929824971 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.968259315 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.940661641 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.928861905 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.238382974 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.940028254 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.948152431 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.935617553 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.933073206 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.08682817 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.941660327 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.077195499 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.939744423 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.940419298 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.930721195 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.155672303 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.945205229 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.422766934 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.943117172 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.931227872 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.026502592 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.080020313 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.400050673 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.942853993 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.089982935 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.344331893 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.952348054 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.940660368 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.354901438 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.958289332 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.939350318 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.932487629 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.932707432 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.933399148 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.975842172 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.947566676 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.369381081 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.4277693 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.251777766 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.960365024 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.951368218 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.929719664 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.240526634 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.940686752 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.932778961 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.151168628 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.439229742 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.947013763 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.941260356 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.410088075 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.945038276 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.953711007 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.942621831 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.159801521 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.946799004 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.977134518 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.932696216 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.938432375 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.937388236 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.952598543 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.940490919 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.931431278 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.402209276 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.045622705 seconds)
  done (took 238.84702307 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.927281308 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.926928275 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.926764656 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.927362548 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.925212214 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.930793697 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.92498903 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.921651592 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.9320205 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.925106089 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.9263707 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.930444714 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.92973457 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.931387467 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.452552703 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.937950032 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.543861421 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.930368578 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.930981135 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.928373124 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.616678711 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.936807789 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.931944623 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.949314788 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.929349657 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.927561508 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.932615216 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.983174944 seconds)
  done (took 169.781452788 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.936690488 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.130474468 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.955671015 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.972436148 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.945327689 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.936562464 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.961352683 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.958373592 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.939563241 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.934410173 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.934894296 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.998766012 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.9486586 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.073273405 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.97171302 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.968581894 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.043578685 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.944285218 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.933144466 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.938037402 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.963894957 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.931647295 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.99941751 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.062770973 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.95839757 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.05478875 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.943987864 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.936124399 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.935032528 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.057026837 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.952091521 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.997260886 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.964380463 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.95585172 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.060304371 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.056870606 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.047864562 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.968286695 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.938532913 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.937472913 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.935319741 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.922919768 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.051364196 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.956505619 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.940516742 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.044562869 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.959020632 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.936973943 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.943001339 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.936349439 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.951086663 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.953736938 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.00284712 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.069372365 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.977029651 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.963088429 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.961485959 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.224390591 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.952246785 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.039558231 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.93800562 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.055046109 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.959900669 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.927347441 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.937590918 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.942717856 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.964300468 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.967381043 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.042065565 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.949426481 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.039370546 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.973886908 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.942419218 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.935504281 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.939966505 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.060977505 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.061222798 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.97535988 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.975683566 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.970580358 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.934282959 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.938118054 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.927821193 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.956367396 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.942591166 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.056312923 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.060480879 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.951163779 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.940220182 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.940704 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.943449873 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.965218193 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.065399077 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.979110399 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.03638567 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.014778492 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.01464534 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.953423847 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.952608307 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.940668661 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.003567968 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.954650058 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.95049932 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.272470091 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.014803772 seconds)
  done (took 210.00460969 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.405202997 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.997614298 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.995756689 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.233575528 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.364097088 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.719382115 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.988681472 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.987054597 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.018117533 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.147012117 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.045232889 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.003714375 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.977235491 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.962722926 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.989319357 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.009671528 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.993264999 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.269020115 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.108225558 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.11130125 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.972500392 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.271325478 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.31443327 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.375935713 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.02352838 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.302277127 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.668468969 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.234701835 seconds)
  done (took 63.367639278 seconds)
done (took 840.83309126 seconds)
SAVING RESULT...
DONE!
