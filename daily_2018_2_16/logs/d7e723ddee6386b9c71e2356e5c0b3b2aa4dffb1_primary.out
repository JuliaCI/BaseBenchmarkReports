cset: moving following pidspec: 18221
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.467711619 seconds)
loading group "string"... done (took 0.487627058 seconds)
loading group "linalg"... done (took 8.76540672 seconds)
loading group "parallel"... done (took 0.169138685 seconds)
loading group "find"... done (took 3.4320871 seconds)
loading group "tuple"... done (took 1.950372383 seconds)
loading group "dates"... done (took 1.380114969 seconds)
loading group "micro"... done (took 0.190520497 seconds)
loading group "io"... done (took 0.503113805 seconds)
loading group "scalar"... done (took 50.046071948 seconds)
loading group "sparse"... done (took 13.593482941 seconds)
loading group "broadcast"... done (took 1.179480889 seconds)
loading group "union"... done (took 9.251060101 seconds)
loading group "simd"... done (took 3.076154395 seconds)
loading group "random"... done (took 11.625807141 seconds)
loading group "problem"... done (took 2.186628312 seconds)
loading group "array"... done (took 24.336508236 seconds)
loading group "misc"... done (took 1.120060955 seconds)
loading group "sort"... done (took 3.744467815 seconds)
loading group "collection"... done (took 19.050046812 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.732006775 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.120070143 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.199902293 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.1998792 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.26987269 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.162841188 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.159606063 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.157657523 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.598363664 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.203499045 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.136223788 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.376002786 seconds)
done (took 6.02588166 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.301312662 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.059517036 seconds)
    (2/2) benchmarking "String"...
    done (took 0.190671603 seconds)
  done (took 0.912071518 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077368276 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.160335189 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107827395 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.093870515 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.092765282 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.112049646 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093885623 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108202699 seconds)
  done (took 1.427249523 seconds)
done (took 3.377508217 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.550860965 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.935820119 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.544856644 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.185745713 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.301690415 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.304415648 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.271214561 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.232108387 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.089761913 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.084678682 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.19630489 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.458717707 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.423341775 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.979451568 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.068568798 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.09711806 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.15944454 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.838724191 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079149816 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.109052886 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.510198053 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.216420358 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116469613 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.105724938 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185752003 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.126035679 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.141277502 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103854951 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.725344239 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.136921909 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.208443826 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.083685999 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.140100712 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.169671952 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.220738339 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.11108066 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.74934337 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.200223729 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095168752 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.099836106 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.740915203 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.123246378 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.207783142 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.10537922 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.067580797 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.167499254 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.111743013 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.079239451 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094374818 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.100426333 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.172607567 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.508548674 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105479521 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.195135665 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.094104081 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.764732563 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097126744 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.276393378 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.12812727 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.097751195 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090752931 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089494863 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.167567565 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.096418421 seconds)
  done (took 20.720677415 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.189056314 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.206740351 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096393852 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.145419293 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.142558974 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.082173911 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.089083967 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096565493 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.114319984 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.19664886 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.125455328 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.215002459 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.077988985 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.108187016 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.166979326 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.251815458 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.112450942 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.123490605 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.09016244 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.095190833 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.142983625 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.097027801 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111561791 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096270734 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171357782 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204636697 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114902954 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125679186 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.089902693 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099721104 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143415197 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.154769244 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092195833 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088903939 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173127775 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122614907 seconds)
  done (took 5.435726952 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.233942696 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.104509451 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.244691254 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.188627733 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.12911393 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.178051191 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.193361782 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.301481085 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.239359743 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163483237 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127684163 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097098001 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079780766 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080432441 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097241493 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.849553146 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.153750991 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.158797709 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.166916019 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115235715 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.097429321 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.214162268 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085427842 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.085487904 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113353171 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.122183275 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.680545888 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.221462305 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094328622 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.470858736 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.083841938 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097061104 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130980107 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19271666 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.134849296 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122907219 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110836702 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.085709364 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.211574751 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.100885098 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078618941 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.097014042 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117288912 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.130411463 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.10621717 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.105102704 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.133768968 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.086720164 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.109810759 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.077156695 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.195439207 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.086299392 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.178128331 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.085572993 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.277408156 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.107258085 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.117539817 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.091264774 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.805430503 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.123737164 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097936277 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081064726 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094738034 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.096815105 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.81636961 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106725763 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.551909775 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085215464 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.159637359 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09661665 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.114677744 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087183662 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086647099 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.124299948 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.087087694 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079977328 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.102985472 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081875813 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.10646607 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112307235 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086150721 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.09654487 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148222799 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.096660751 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.121189723 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109892917 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.105888764 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.086045466 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127445604 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084309245 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.089129144 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.203312684 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.11386979 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084483757 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111949285 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.102698306 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.096624954 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145293277 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.087423954 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.288005243 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.085506882 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122610839 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101744645 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126360882 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.097141673 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081828287 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101598087 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079937548 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083129076 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160619461 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.086564578 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081879528 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.105027644 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.094251942 seconds)
  done (took 28.200918324 seconds)
done (took 55.016878835 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.408146762 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077688403 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076133136 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.097840635 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077490046 seconds)
  done (took 1.45975776 seconds)
done (took 2.16814739 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.183024901 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.263924963 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.197879822 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.127837122 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.14987549 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.170041066 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.153489434 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 0.169023997 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.150864598 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.168807025 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167350755 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.107509613 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173110693 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.183059405 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.102093706 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.202902482 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 0.103458087 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.148132036 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085760955 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.187842201 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 0.103928927 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08649525 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088447643 seconds)
  done (took 4.19914013 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.104666964 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100539946 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.104611803 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.121370636 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087873702 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103735176 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120556628 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108832328 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103474709 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114877145 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08784917 seconds)
  done (took 1.872291126 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103177786 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098552841 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093909627 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.12002837 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088306778 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101155391 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118096947 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108775687 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101911498 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.115164904 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088732946 seconds)
  done (took 1.851934064 seconds)
done (took 8.632048613 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.196721189 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.937951261 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.182399085 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.248143474 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.329921329 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.295704786 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.608645706 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.203387161 seconds)
  done (took 15.823247807 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.115124897 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.201097058 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.093547637 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.092213228 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.110439001 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.097188554 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.094529829 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.11814945 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.092940515 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097978878 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.108530067 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.096158055 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.098034501 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.099012616 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.113746686 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.098325894 seconds)
  done (took 2.49539978 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.136482277 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118666121 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.116937136 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.100493289 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.096140841 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.118362031 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103041281 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.099196786 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.114759694 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.096828258 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.104227679 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.116443098 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.099867771 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.094980783 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.116619595 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.119877649 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.095882184 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.116324239 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.1183091 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.099701252 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.11715402 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098473841 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.098870049 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.116369909 seconds)
  done (took 3.394163208 seconds)
done (took 22.430283437 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.151497762 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.103196316 seconds)
  done (took 0.975995608 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.166593076 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.183113117 seconds)
  done (took 1.074246815 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.114721827 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092236209 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138509131 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.10422631 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.092694338 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.109323475 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117456746 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.109955507 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.093107783 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.094316816 seconds)
  done (took 1.796969094 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.096550598 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096947721 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.122996744 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.160585876 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.117895282 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094544624 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.097755739 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.114381572 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.098133768 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.092714075 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.114306453 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.109948016 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.097112777 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.128663681 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.097873851 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.098024103 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.11773341 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.096992473 seconds)
  done (took 2.68382963 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.092925304 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.094542901 seconds)
  done (took 0.919131681 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.095494636 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092886293 seconds)
    (3/7) benchmarking "month"...
    done (took 0.094825416 seconds)
    (4/7) benchmarking "year"...
    done (took 0.111135457 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092795257 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.091368457 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.108480648 seconds)
  done (took 1.417702251 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.516756977 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.237935934 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.369212462 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071880279 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120503181 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.311627677 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.121094047 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072907965 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.09165151 seconds)
  done (took 2.668896335 seconds)
done (took 12.266913046 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092934537 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.208151489 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.601209923 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.130825047 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.094179636 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.154929544 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.341848552 seconds)
done (took 2.359805025 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.34347226 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.177189959 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084404647 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.093443617 seconds)
  done (took 1.429680743 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083639147 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100957484 seconds)
  done (took 0.924476309 seconds)
done (took 3.095929784 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091239606 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.113271408 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.091028127 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.109610271 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.090738123 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.090752986 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.109374244 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.090897487 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.214772435 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.090569742 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.109298488 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.090658243 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091060258 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107199473 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09102815 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091258863 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.091997789 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.107291117 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090887542 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090625091 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107761636 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.091013516 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.090709858 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090056266 seconds)
  done (took 3.196310455 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.112643627 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.093389946 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.112253593 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.095590074 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.095663495 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.112675361 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.096092076 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.093606116 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.112234567 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.093903304 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096251137 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.111827031 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.093684711 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.096308536 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092159469 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.112361575 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.096467047 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093121733 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110373601 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.096857946 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.096460471 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110004905 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.095493094 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095554009 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.112027497 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096496099 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.092869939 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.110533929 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09520671 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095535881 seconds)
  done (took 3.759751012 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.100249231 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.089086847 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.09173799 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.116550326 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088652847 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.092666523 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.10559975 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.092524994 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.092973226 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.090818926 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.111324381 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091670972 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.091480301 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.109790654 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093079163 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.094561182 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.116970121 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.091848431 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.092407147 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.09282463 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.11140696 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.092332611 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.092696028 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.109099317 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.092866777 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.088839897 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091530774 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.109715598 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.093051623 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091518344 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.110725062 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.094960588 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.091902019 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.117310576 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.09562836 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.092148025 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097835756 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.10652964 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.092375826 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.08921701 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.105988125 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.091966174 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.092400813 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.096662374 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.109466284 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.092556012 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.092091048 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.11024958 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.09249324 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.095080818 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.106484091 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093384789 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094885645 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.093366094 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.111495045 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.089275904 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092548844 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.105997549 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.094060932 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.09212557 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.088540927 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.105912962 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098163221 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.093047517 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.124698446 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.097874384 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.091242092 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.113389235 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.09289818 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.09752948 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.112305316 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.102524183 seconds)
  done (took 7.825797475 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.115158929 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100888976 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.110957238 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093674554 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092574114 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092267156 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114243326 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092616012 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093769499 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11541135 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092730524 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093276705 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110161969 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093096632 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092981775 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.111090727 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.098047964 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093046391 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.092199188 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110524394 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093461833 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096786202 seconds)
  done (took 2.948465447 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.236163929 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099177683 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140601002 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.123143202 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109493285 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.122793577 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.097420483 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098697042 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11381825 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10145169 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102148571 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114507791 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109838689 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100990226 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.118260549 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102850482 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113475351 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103498167 seconds)
  done (took 2.860632954 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.105734665 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.096246892 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.155057276 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094461827 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.094856099 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.112079554 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099469088 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11288571 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.112362719 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094653084 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.10019101 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112307143 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.095120329 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094168761 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11379216 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.09563659 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.095017353 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093436198 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118139431 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100677355 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.117467973 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100583232 seconds)
  done (took 3.068374459 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106598765 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094283984 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.130251669 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097690358 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094298776 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.110793961 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.100889286 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.0949303 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.117701859 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.093998836 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09459269 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.093502146 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.125428169 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094687509 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.099181159 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11212647 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.095321959 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094111008 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111793345 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.094335567 seconds)
  done (took 2.810809363 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.18655279 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128765371 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110341037 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117049955 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128385754 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111410502 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135684238 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110348445 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110016141 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138051491 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110260839 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.11020485 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.1352998 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114825015 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127067015 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118034393 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117530181 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.13580571 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110640401 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127048393 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120758419 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113147221 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13645004 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111954344 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.126727662 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110821544 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110307676 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132756937 seconds)
  done (took 4.20210438 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093489046 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093474427 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.092784906 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.110517582 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.092676168 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.093203714 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.093264661 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.110369268 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092799286 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092732691 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.111231071 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.094882094 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.094049536 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.092341524 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.110849419 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.09304109 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092516504 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.110448675 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093714679 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092866907 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.094252898 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110594169 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.094026596 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092854173 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11008439 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.093720101 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095308881 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.093328198 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111503542 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093341463 seconds)
  done (took 3.697192871 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.105644349 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104152666 seconds)
  done (took 0.96969078 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.100463751 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107465015 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.092226107 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.111982219 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099534708 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.093642592 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118833701 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099840475 seconds)
  done (took 1.584497402 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.184415782 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.21118687 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.118070349 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.105728613 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.209887157 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.190167728 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131121679 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.098194538 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.112461259 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086638706 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.202939947 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.085321363 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.112082934 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090926955 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093675007 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118573882 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.09562441 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103154807 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.099436713 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.114746495 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099630632 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098209677 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113983375 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.105092675 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.088108192 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.114810079 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096951607 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.104470022 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110074389 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.09588599 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091183833 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.115327038 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.098116063 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.098571626 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.114114819 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.209902916 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100882122 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091286425 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.115091185 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100405755 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.125974878 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.115307099 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.095926968 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092846885 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116062873 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.098590098 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100037472 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.095293091 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.105526883 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.090597376 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094595953 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109028368 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095448236 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094764334 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.112946981 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100456344 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.096328689 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.109898665 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.090791921 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.090239707 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.111739839 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.091010537 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096188243 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.117627062 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095254636 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094684894 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111662505 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.095238447 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095592024 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.095321635 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.11230522 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109291144 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.113756786 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.099248097 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099483035 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.0949643 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110129091 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100015884 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092559963 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.11382647 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.09894997 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120876109 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114651646 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089868006 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089868981 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.120615545 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097012702 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.097608865 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.106037842 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.1027785 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.0967019 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.114102006 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.087489604 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092610767 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089460981 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.11770779 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.087707312 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094451305 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.113428458 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.10024935 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101413157 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111704013 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096102386 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100325647 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.119855676 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.094628042 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.165180889 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090877687 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.090497411 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096483856 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.120272911 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.089228004 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.093370652 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.113519945 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091741692 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.090976748 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.118470654 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094605929 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.096673304 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.117685774 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096057433 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.096084168 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.115843291 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.094469856 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.09209382 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.09880079 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.122010891 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.096692154 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.096928514 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.115352496 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096352973 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.094159444 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.118236311 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.09166209 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101561009 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111266837 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.09570906 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.09672819 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.11887685 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094791642 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.091240455 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.112099972 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.095552102 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.094045049 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.116288195 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.095865845 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.091367569 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08662214 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.115096426 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.090381846 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.096061127 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.123110818 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.092058965 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.096603141 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.111146093 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103943367 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.091604269 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.12076016 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097710435 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.099905689 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119998389 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.087808594 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09206697 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.096693224 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.115347269 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.091933861 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096143204 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.116109463 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.10295547 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.088438705 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.118803239 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.087462403 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.091409589 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.119754898 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098651426 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.098488952 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.089982755 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.152333226 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106743051 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.122560115 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.094605325 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095331957 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.09905637 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.114089157 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099734679 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100896627 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.120313453 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092786935 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.093877267 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.121471514 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.092058875 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097162791 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113933205 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097218932 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.088121382 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.11612537 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.088656274 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.099524654 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.095720345 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.11989447 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100940282 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09705789 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112832625 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103749591 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.091369897 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.119020885 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.087585586 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.100769204 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.1263107 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.1014711 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100634716 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.116055836 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092329659 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096756204 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.123758693 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098591512 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.095372502 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096072684 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.108526799 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.089262583 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101096823 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.118612128 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.091112292 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095474039 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115108322 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.097251926 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.09223875 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.108035652 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100590698 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099318649 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.111519896 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095377546 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.092456109 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.112937782 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102181737 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.088422536 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.09431846 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.116706721 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.099601052 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095655817 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.114544308 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.100212117 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101562882 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.119296923 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099248322 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092883448 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.12285228 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093695527 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.096616895 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091551172 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.117720691 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.088804501 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.09665953 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.115925068 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.093530076 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.091456347 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118649263 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101991147 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100411154 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113579703 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.111021612 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101565839 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.120889209 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09366733 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101473545 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.112323513 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.088892391 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.091663673 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087703606 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.118142712 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.091683073 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.10108502 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.114005449 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094092835 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.101643275 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117594061 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.092851964 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101005928 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.12534311 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.089860815 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.089132959 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.113659578 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094714202 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.092265484 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.112013367 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.097453043 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097507992 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.121098908 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097916549 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.093053236 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.096317612 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.121542228 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.092932012 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.101832272 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.121723114 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101691001 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.091916034 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.120628015 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.092227036 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108816291 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.109922304 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094403351 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094524475 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114859588 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.092420047 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.093670769 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.112337036 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.088573663 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.093068006 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102190088 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.114667695 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100336655 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.094696979 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.114197308 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.092756914 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091874432 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.122364228 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.093848413 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10198836 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.118820262 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.089208828 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.090757049 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.121563406 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095913597 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101429132 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.09016511 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.119342003 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102702524 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099681718 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.117063284 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.104793763 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10451108 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.122436703 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100960426 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.090091256 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.114133627 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100384088 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.096427305 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.119028274 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098244062 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.090267553 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098292868 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.12293487 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097241178 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.094160227 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.109832213 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097046301 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102302442 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.119459583 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098706446 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098685099 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115905304 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.09131371 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100437167 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.100568882 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.116577065 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102377905 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095693878 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.120499215 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.093063129 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102327426 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.118040494 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090285332 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.090359862 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.112679328 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.103132635 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.090035712 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.101504501 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.121428009 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.093439982 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.094260791 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.122843589 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092889153 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098734315 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.122305812 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093779674 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106918108 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.118601074 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.094613432 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100448546 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.122196669 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.089868564 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.094382859 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094420543 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.123700009 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094586031 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.10136735 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.116126219 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102123905 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099029717 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.122063821 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101010443 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101595907 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.110036935 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103773095 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.099161814 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.118997837 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.094809719 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094765358 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.090973579 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.114869264 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102831177 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.092797443 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.124439053 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.100815922 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.094358138 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.114119735 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.102026128 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094966605 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.123928432 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.092732019 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097379825 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.110429433 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.0982016 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.094662911 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.124263857 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.093266411 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.091003781 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101452853 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.122184886 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100959136 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.098252484 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.123586259 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.090352589 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.090529972 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.12007266 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.093402966 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106075104 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.119357711 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.094810559 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095023048 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.118623905 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.099355385 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103309124 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.091049407 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.11355383 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.097218232 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098474596 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.115316733 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.091165511 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101527376 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.115614091 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097848017 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.0947711 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.112140419 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.095575863 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.104008302 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.115260192 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.092460844 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.094071821 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.123525919 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.095705737 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.093354905 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.090765147 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.122491909 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.098164394 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103924712 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.11351794 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.096462176 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.09396842 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.120539343 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.104022946 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.095166839 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117449699 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.094789446 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103564856 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.1222872 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.089178265 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.094840092 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.126556286 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101438097 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.097849582 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.12132345 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.095563934 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103412361 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103078602 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.119661354 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.090849804 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.090869429 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.116142717 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.090565868 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.09932374 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121597909 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095415848 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.093766034 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.12122514 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101689505 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.100160414 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099063996 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.111423692 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103867765 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.093878351 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.120004511 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.090400758 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.091195204 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.120855106 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102071339 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096169248 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.117057029 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.098526978 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.099354639 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.090874779 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.116056778 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.099597268 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101026058 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.123090825 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096216155 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.095035164 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.121243937 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107223878 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098597413 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.11707675 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103517118 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103828114 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117686175 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.095779372 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101015865 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.123829719 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100088313 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.106822039 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.114977534 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.097234397 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104609738 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104126639 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.126565819 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096248164 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.090477043 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.122712479 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.094901069 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.090879213 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.12167637 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104225428 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105348453 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.118084276 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.094036213 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106624119 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.122422132 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096702715 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.095371326 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.115315719 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101616996 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094828314 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.121265429 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.094821723 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104711414 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103506148 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.124447343 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.105560027 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.091295831 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.123290863 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.099502316 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.10625853 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.120910529 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.091733737 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.091803854 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.120674643 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.10473337 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.103713076 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100840425 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.122746231 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.101846502 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097506759 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118560372 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.094248897 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.104210065 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.124362969 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.099406438 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.099843139 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.117550995 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097735632 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099968333 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102687731 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.125601983 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.098648937 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107585654 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.124203561 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.095855474 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.095443071 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.118092121 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.100853836 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.098264059 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.123737319 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.095666189 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.091924814 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.124350333 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105318145 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09684188 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.125912156 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105223142 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.096107839 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.100410989 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.125657314 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102810135 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099285563 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.119138144 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.10076635 seconds)
  done (took 63.110064338 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146858192 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106883398 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122281661 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100133445 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117507874 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123622955 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100369257 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101523496 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.122851874 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108857978 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.100724281 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120749085 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114744853 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119437271 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136768081 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109930395 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120531607 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101384738 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100235602 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100929147 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.134296128 seconds)
  done (took 3.227230407 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116167354 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.113809044 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.131954385 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113225264 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106514035 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.131750592 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111709618 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.132593673 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112610964 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108271948 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.134362339 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111329072 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.128265353 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108318462 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108136064 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.130735666 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113444377 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107716018 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.131711713 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111248761 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.128559156 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111161604 seconds)
  done (took 3.418988925 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.127551456 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103712434 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.098238283 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.121146944 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.103243898 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.100984447 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.124287382 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.101795309 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.109562987 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.115916284 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.092342301 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.097142782 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.099036897 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.121759909 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.094755176 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.100925681 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.128968426 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103862944 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10582563 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.100629107 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.111864678 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.100737967 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.101692946 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.11255619 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104781913 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106504381 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.124955065 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103724905 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.09157545 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104031616 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.122581548 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093756247 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.091596942 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.111876573 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.092713319 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.103659565 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103207654 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.122731585 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.101609452 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.091770748 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.122845163 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.104658753 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.09316426 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.12150092 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.101882129 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.094297438 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104677903 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.122394504 seconds)
  done (took 5.935031202 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.128914962 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.157648017 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103125072 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.128843622 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.136553817 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.109825825 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.104108696 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.153036335 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102769117 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.104482686 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.137170431 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.114395045 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.127433188 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107415409 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.106861513 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.126896178 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105867608 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10507321 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.128819089 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104004594 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108733872 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.127287298 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11317392 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.113456524 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.127144067 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104649619 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105133937 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.128277218 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.11272258 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.129885196 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107760877 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108958456 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.135847723 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.366192014 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105151591 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.126517672 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.115401867 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.105566199 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.127020173 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.103121551 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.105028797 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.130087152 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.10706077 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.114227821 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.126218381 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.106286541 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104237134 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.123190752 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.113071106 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.105025197 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.131578748 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.115093161 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.129443396 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104936394 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107077548 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.135273819 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.10544677 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.104048773 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.127245963 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.112659854 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.1031254 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.128369403 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.113641396 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104079697 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.130749956 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.115310714 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.128908606 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107022091 seconds)
  done (took 9.101694528 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.134555439 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.108421311 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137148093 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115456693 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107020311 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.130202563 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109367479 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.107431131 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.130763103 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113345368 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.129580252 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.217130275 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.1276525 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113639378 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.131447855 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108566239 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108022049 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130611394 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107817082 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108133862 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.129006072 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115389776 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107841008 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.136686941 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118541686 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.127459906 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109174171 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.108290806 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136576246 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108396347 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119508668 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.130241151 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.108240968 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.115376175 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.139622275 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.108572254 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.124754319 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10971745 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.108783051 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.130048751 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10552399 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115600922 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.130962764 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105534938 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109022671 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.129803877 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116996808 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.139372407 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116202731 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113885218 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.129705327 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116122298 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109175523 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.129329014 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115709119 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145649431 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116191483 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116170558 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130215125 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116239049 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.137511786 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.122052395 seconds)
  done (took 8.365371575 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103136454 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102852562 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.102450965 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.1230526 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.103087406 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.102056061 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.102039128 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.123266937 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102240203 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.101462244 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123066782 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102104576 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102929417 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101593942 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.122905501 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101623335 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102498116 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.122697466 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101895872 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103188249 seconds)
  done (took 2.982381337 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.111249892 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.119375895 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.125207636 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108689197 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.105389695 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.130809836 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103441691 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105451099 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104656065 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125431633 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112822016 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.13347103 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104328564 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109771619 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.132760431 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109481685 seconds)
  done (took 2.676247634 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.120310786 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119857828 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.203751898 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.106519095 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.127012976 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.111344114 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104241551 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.128102896 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102695495 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.109218792 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.130247613 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106006567 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104225135 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.104851372 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.126037269 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.106653747 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102615973 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.129395883 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104630863 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.206198927 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.107558772 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105344027 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.127595219 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.107338682 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105234055 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.132611455 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109849488 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104936321 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.128244044 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105042152 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105720419 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.132166434 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.104762702 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.108243735 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.126128544 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.105267696 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104387877 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.126248525 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.106725988 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104386487 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.105867053 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.127390634 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104713483 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105937476 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.124554765 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104712276 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.102679514 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.130923192 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.105258219 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.106038773 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.125228885 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109411658 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108206243 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.133415263 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.112445396 seconds)
  done (took 7.255355323 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114912948 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105406998 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.138331484 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102785852 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10516565 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.105403496 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.127495483 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107169202 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104629437 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.125093913 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105376519 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.106349638 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.126882687 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106622012 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105849722 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.126462392 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.102466707 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105574557 seconds)
  done (took 2.862325748 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107893745 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104107809 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.108256586 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.126469144 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.105381205 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103435251 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.125644578 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103378567 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103036484 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.12597479 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104041794 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.104328027 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102586494 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.126542012 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104092193 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104458092 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.126264995 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102779661 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103930396 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.123669971 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104406059 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103158727 seconds)
  done (took 3.266611244 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.1147798 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.229914883 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.109511037 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.237945744 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.124262607 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.100742229 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.110371647 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.124035381 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.116288985 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.100202251 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.12350473 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.100018864 seconds)
  done (took 2.435452922 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131172466 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140485804 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126651602 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104675914 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111993762 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13133707 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1082551 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109580486 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140144202 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118881763 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130095631 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116832877 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115873698 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138305721 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113125152 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135334493 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108739739 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109561868 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127132877 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121994967 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10809924 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138043445 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109321283 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107841238 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129842685 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115822835 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138266962 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119032537 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108497173 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137734038 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113512555 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130377086 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117264644 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119254065 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127091483 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116047522 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109030698 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143741607 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112822671 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138043211 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105080479 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112737336 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136766042 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114215614 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138157335 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108799154 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11376394 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131200752 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109443442 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151181101 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113412924 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116918386 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135140326 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116318191 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115873107 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150214382 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120710892 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138212908 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113770688 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141747351 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11685754 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134289005 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116442916 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120292826 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13545457 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116625556 seconds)
  done (took 8.95167234 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142012941 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106622455 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131432462 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119203014 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138573718 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108568802 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109840569 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130738199 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108796019 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106627051 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172523203 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109905721 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13707682 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116771073 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109638164 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131597437 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109870419 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117493257 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128657631 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130069897 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131766562 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116559777 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117023131 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139892706 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119700346 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134266558 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109325547 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109201692 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131019815 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109239969 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114104745 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131392887 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117032341 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106036624 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138012904 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110464658 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130897586 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114321113 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109359798 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136574706 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117608819 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123283987 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130980214 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110805412 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14159643 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109065147 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109322173 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128273152 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109358679 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106691026 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141653661 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120630638 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142784711 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117207377 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109456023 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131612768 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109957809 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109498202 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131165765 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114285102 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138431489 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112972491 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129958346 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132815671 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109907073 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138908661 seconds)
  done (took 8.923706688 seconds)
done (took 170.178460588 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.17537345 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.215139315 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.199413985 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.166966787 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094850749 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.163126254 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.128287638 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.200754489 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.095612255 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.095474463 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.118194635 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.097994922 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.162732626 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.117453739 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.095188338 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.098652416 seconds)
  done (took 3.072005 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.195906358 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.342037567 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.133920987 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.099277294 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102532283 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.100202802 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.121880451 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.103529542 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.100187417 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.127771599 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.103253317 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096302714 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.127730744 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096875382 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.100256549 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.122017201 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106299127 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100310732 seconds)
  done (took 3.140138712 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.11848593 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.151654715 seconds)
  done (took 1.131391999 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.130201255 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.214122005 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.295839752 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.172734756 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120391701 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.139085193 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.150489299 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.134912694 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.19007857 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134758519 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.113325515 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098188666 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.148245572 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105870412 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.138995682 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099019942 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12796323 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.137367338 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115625404 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.10253619 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.146721669 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103805514 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.105863983 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.13814566 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.179607773 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.135576195 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104649092 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.103570535 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.125796706 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115637781 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.10694419 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.138594239 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.112185875 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.179576631 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.104075622 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.175690752 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.106599857 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.124012475 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115111338 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.100635504 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.125590864 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.104084963 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.134654109 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.099429735 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105015976 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.128680601 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104518457 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.103052743 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.1318722 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.10768002 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.108118457 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.129623773 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.173717844 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.10711793 seconds)
  done (took 7.916287902 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.90686261 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.148573489 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100486344 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.057566463 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.143884794 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11443089 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.903577964 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.149100569 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249891272 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.899740678 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116482912 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107306082 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.262947109 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.25846186 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.272707206 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.360162377 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.764570702 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113428049 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.132647603 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.166280995 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105270258 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139840127 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.116817572 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.444499315 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101951955 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.1007239 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.127305123 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10902996 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177802159 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.102331406 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.103896906 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.199111041 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.292624599 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.212335394 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100991644 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.12205415 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100951452 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.18918228 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270394813 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218714655 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.190090571 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09882142 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099794128 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126653476 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116103418 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098623023 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180731008 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.193672495 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.192528645 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104874004 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.10891414 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130146757 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.10471942 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.180154434 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098859397 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.360891976 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.381704782 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100730345 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106473217 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.134449886 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266809893 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103150343 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.237748275 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.144071491 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215129487 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.101249139 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.795186906 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.188005111 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.101054286 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106445429 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.127169144 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107033892 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103990261 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.181047563 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.421658018 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107494435 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105576808 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123647543 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226666307 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.100847129 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101269036 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18003729 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101961746 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.128969015 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110155352 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107502171 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.189792271 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.273740618 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.108021538 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.129689997 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106592561 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.110430691 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.124031877 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.207086807 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.252878263 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.154930723 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.228333477 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.105155306 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.181142539 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.188545543 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105027307 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.19025654 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105829446 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.135420674 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104890111 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227256814 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.159563746 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.103736025 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.128875904 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.107613849 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.161253068 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10537737 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.106898683 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.189941113 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.483122541 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.188105866 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.099060804 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106465268 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128782079 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.157770029 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131130279 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262987283 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108732958 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.18828623 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.105625536 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.099293026 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.130000761 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.183936464 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109118657 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107291505 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127905728 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110497431 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.282343989 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222093311 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109886099 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.247908287 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.196759588 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.106256881 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195016865 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107256414 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.18770678 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134230723 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105393539 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102474233 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.784151729 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135907373 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.107085148 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.10614143 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.204782046 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101259506 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126595224 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.101927405 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099462553 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81606159 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105088124 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.123038309 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104287812 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.106517746 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.129255124 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107203698 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.106403304 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180262495 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245577345 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.133644837 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.105921598 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.123871812 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.157425208 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.125767151 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.105703561 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.101578714 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102558626 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.130625892 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106726065 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104460304 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188543167 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.180029028 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.234012011 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.580841206 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.125131765 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102555071 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24518049 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101851538 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.35040561 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108483221 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.23748395 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184448019 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100496397 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.358678204 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.185500047 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.204640995 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105402982 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.192357719 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101132386 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.108229352 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.180311224 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.125302223 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108939465 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.180582335 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.110618054 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.109240177 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.279191051 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102497524 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.246073779 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.100112612 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.191377123 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103655993 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107239933 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.351803314 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102615648 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113138553 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.181350326 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106710833 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126271229 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.884958725 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104135071 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.110872708 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.128604242 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.239688168 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.183213235 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107947448 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107745818 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.13243391 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.158858472 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.228729357 seconds)
  done (took 46.661744548 seconds)
done (took 62.775322608 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.255259508 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.167483246 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.352493511 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.148768692 seconds)
  done (took 1.855569987 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.258441516 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.166104127 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.243732654 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.099127124 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.24871493 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.098908898 seconds)
  done (took 2.003502659 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.171474038 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.165817808 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.144649341 seconds)
  done (took 1.371498301 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.208946592 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.208115577 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.346728847 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.234097639 seconds)
  done (took 1.947222707 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.274738489 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.122802371 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.130079082 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.225245567 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.242007493 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.207650461 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.12502133 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.176873182 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.131081453 seconds)
  done (took 2.557365044 seconds)
done (took 10.624088008 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.427975001 seconds)
    (2/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.143299338 seconds)
    (3/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.141620085 seconds)
    (4/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.363057954 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.268900191 seconds)
    (6/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.43471212 seconds)
    (7/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.135456813 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.210168775 seconds)
    (9/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.253936431 seconds)
    (10/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.420694739 seconds)
    (11/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.19013215 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.137432335 seconds)
    (13/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.300346034 seconds)
    (14/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.294926811 seconds)
    (15/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.386865094 seconds)
    (16/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112114963 seconds)
    (17/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.320185382 seconds)
    (18/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.078550339 seconds)
    (19/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.1815809 seconds)
    (20/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.153422496 seconds)
    (21/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.223189214 seconds)
    (22/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.230625282 seconds)
    (23/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.183107259 seconds)
    (24/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.240380457 seconds)
    (25/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112449836 seconds)
    (26/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.191201758 seconds)
    (27/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.201285774 seconds)
    (28/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.142202635 seconds)
    (29/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.307205529 seconds)
    (30/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.104245775 seconds)
    (31/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.155416267 seconds)
    (32/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.147905329 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.119297798 seconds)
    (34/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.078821981 seconds)
    (35/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.136825124 seconds)
    (36/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.144264908 seconds)
    (37/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.12267736 seconds)
    (38/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.170774342 seconds)
    (39/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.114685545 seconds)
    (40/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.250067562 seconds)
    (41/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.145201682 seconds)
    (42/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.114015806 seconds)
    (43/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.393045654 seconds)
    (44/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.219509568 seconds)
    (45/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.166892978 seconds)
    (46/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.085231169 seconds)
    (47/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.138054647 seconds)
    (48/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.084880044 seconds)
    (49/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.085699715 seconds)
    (50/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.109217141 seconds)
    (51/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.155723317 seconds)
    (52/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.108009002 seconds)
    (53/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.277502926 seconds)
    (54/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.118056357 seconds)
    (55/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.135594847 seconds)
    (56/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.077766023 seconds)
    (57/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.102517804 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.121442412 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.103658374 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.126679178 seconds)
    (61/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.176519705 seconds)
    (62/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.085421235 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.144983267 seconds)
    (64/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.114335779 seconds)
    (65/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.138639363 seconds)
    (66/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.107032749 seconds)
    (67/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.3065752 seconds)
    (68/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.084929531 seconds)
    (69/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.129472615 seconds)
    (70/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.085722993 seconds)
    (71/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.144979925 seconds)
    (72/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.079797287 seconds)
    (73/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.106336959 seconds)
    (74/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.12480323 seconds)
    (75/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.164221358 seconds)
    (76/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.15357471 seconds)
    (77/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.08732003 seconds)
    (78/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.113398686 seconds)
    (79/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.100850843 seconds)
    (80/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.131233103 seconds)
    (81/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.102266893 seconds)
    (82/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.194025556 seconds)
    (83/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.102904025 seconds)
    (84/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.086101617 seconds)
    (85/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.081692945 seconds)
    (86/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.232586551 seconds)
    (87/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.130096012 seconds)
    (88/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.110521483 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.10930945 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.125061747 seconds)
    (91/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.195860642 seconds)
    (92/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.085554592 seconds)
    (93/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.080872722 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.102126694 seconds)
    (95/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.106020119 seconds)
    (96/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.112670231 seconds)
    (97/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.07948851 seconds)
    (98/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.129738669 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.138299649 seconds)
    (100/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.147000516 seconds)
    (101/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.126815747 seconds)
    (102/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.112973741 seconds)
    (103/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.11159964 seconds)
    (104/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.086187217 seconds)
    (105/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.131245105 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.138816597 seconds)
    (107/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.081669178 seconds)
    (108/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.137592524 seconds)
    (109/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.083639306 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.131150028 seconds)
    (111/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.079275996 seconds)
    (112/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.112440194 seconds)
    (113/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.111203487 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.133183682 seconds)
    (115/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.132158442 seconds)
    (116/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.235762013 seconds)
    (117/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.104470444 seconds)
    (118/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.108496969 seconds)
    (119/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.081373492 seconds)
    (120/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.162751734 seconds)
    (121/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.165448148 seconds)
    (122/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.08844992 seconds)
    (123/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.109523996 seconds)
    (124/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.17050495 seconds)
    (125/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.134212241 seconds)
    (126/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.157024841 seconds)
    (127/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.152541516 seconds)
    (128/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.104967316 seconds)
    (129/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.147602693 seconds)
    (130/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.125551692 seconds)
    (131/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.082499118 seconds)
    (132/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.082065052 seconds)
    (133/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.170838041 seconds)
    (134/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.079513329 seconds)
    (135/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.112393302 seconds)
    (136/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.088960995 seconds)
    (137/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.081680855 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.130580571 seconds)
    (139/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.131501513 seconds)
    (140/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.086108137 seconds)
    (141/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.129097496 seconds)
    (142/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.136600433 seconds)
    (143/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.104613886 seconds)
    (144/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.078714455 seconds)
    (145/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.132594255 seconds)
    (146/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.11363897 seconds)
    (147/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.082018344 seconds)
    (148/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.081809525 seconds)
    (149/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.118888104 seconds)
    (150/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.115004623 seconds)
    (151/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.084836229 seconds)
    (152/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.084704835 seconds)
    (153/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.084353267 seconds)
    (154/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.104535864 seconds)
    (155/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.07954582 seconds)
    (156/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.112137261 seconds)
    (157/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.104092092 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.126779301 seconds)
    (159/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.083366864 seconds)
    (160/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.086424324 seconds)
    (161/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.081477545 seconds)
    (162/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.102927182 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.10601585 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.112637006 seconds)
    (165/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.136647118 seconds)
    (166/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.082505934 seconds)
    (167/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.079810864 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.126615661 seconds)
    (169/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.086219738 seconds)
    (170/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.104090144 seconds)
    (171/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.103756549 seconds)
    (172/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.079950014 seconds)
    (173/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.105307632 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.129508517 seconds)
    (175/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.103171843 seconds)
    (176/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.080668245 seconds)
    (177/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.085627955 seconds)
    (178/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.126169179 seconds)
    (179/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.124945652 seconds)
    (180/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.079393544 seconds)
    (181/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.081349577 seconds)
    (182/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.136514794 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.105581026 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.104617659 seconds)
    (185/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.129163152 seconds)
    (186/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.079603136 seconds)
    (187/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.082686176 seconds)
    (188/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.112501602 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.12962838 seconds)
    (190/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.086763943 seconds)
    (191/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.080143597 seconds)
    (192/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111667486 seconds)
  done (took 27.407121362 seconds)
done (took 28.304940687 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.224676689 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.1314062 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.112322259 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.111643496 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.233422103 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.120204253 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.15551685 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.1145673 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.122102197 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.137203857 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.102639071 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125441833 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.136633029 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.246065099 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.116048379 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.104101169 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.127685632 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.123871287 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.128296491 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.153376922 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.211029134 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.132234848 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.122825509 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.103181043 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.233461417 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130727074 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.112718512 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.114061621 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.124637406 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.138022682 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.11369224 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.103430257 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.154687471 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.128446057 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102514776 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.137085927 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103803063 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.086078392 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.136334439 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.115742932 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.126656147 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.113115263 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.137984 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.105026702 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113124857 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.136587457 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103348529 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.115932134 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.126931009 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.114203102 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105580427 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.152316448 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.112842388 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.102530019 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.126759849 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.105826459 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.123304154 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.127002126 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12757972 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103811116 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.12803919 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103920535 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.11479875 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102656276 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.137755286 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.104677865 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.113126429 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.139473593 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.112814562 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105722092 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.126489236 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113290253 seconds)
done (took 10.15023455 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108459892 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.147568171 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.247861685 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.2534131 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.15629751 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.120512278 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117086457 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.152999375 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.116642238 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.120827868 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.16513542 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.136092946 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.253625061 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.118668292 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.145562903 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.116049286 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115171258 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.136432361 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.250336424 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.128404567 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.125534797 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.145573195 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128309068 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.145651778 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.108308322 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.139415485 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.135743097 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.116788518 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.107530603 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.140654457 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.128461271 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.10796749 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.135560246 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.126228511 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.123833776 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.142297677 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.119955942 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11545392 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.135256938 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111266487 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.1130451 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.148015705 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.108872666 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.144522764 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.117268634 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.123203398 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.114830183 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.143720531 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.109243376 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.114750048 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.133742852 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132129684 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.118933267 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.147339485 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.120475517 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.119554156 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.146011022 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.120660028 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.110435391 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.144542857 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.108698525 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.106942653 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.133720942 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.127747938 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.13490087 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121008011 seconds)
  done (took 9.83931637 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127098427 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137082904 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.143467873 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.120251568 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113163627 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.126233593 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.10257086 seconds)
  done (took 1.813672242 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104072546 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.268659959 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.257980043 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.258240061 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.248701577 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.26796086 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126790001 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.10346288 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.166294173 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.114913457 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.268091088 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.323719099 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.141473539 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120756554 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.262164101 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.103887792 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.260057989 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.130963439 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119908828 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.262729141 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121458845 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.161891733 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.117069741 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.104033871 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.261892029 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.132485824 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.309955919 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122770624 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114246419 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.144213411 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119325176 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.207265436 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.264464466 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.119145297 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113056904 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.256434776 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.250574076 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117291522 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.333400813 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.109852345 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.248628432 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.1183535 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.146930304 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.119565371 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119019964 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.244665634 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.149824604 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.120590485 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117959257 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.270847082 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.140515026 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.263977522 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.1175007 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118757625 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.14051213 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121410353 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.126263695 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.145817603 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.243891494 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.151161175 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.260033059 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.260626399 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.253956295 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.25999923 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129784067 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.265537233 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.241663062 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118626453 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112803532 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.147089434 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.262278454 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.118550461 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115935633 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.249050449 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.149052039 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.263404826 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.262669661 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117319153 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.116939539 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.13515024 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.118253918 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.105566081 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.252207823 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117912429 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.144564959 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.124045027 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116629859 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.147987955 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.110297388 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.153716851 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.119562423 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116301634 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.149473553 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.119608367 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12043327 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.261442424 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.143475389 seconds)
  done (took 17.83177181 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.106661868 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.107112641 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.109974306 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.132703436 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.106948159 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.106624664 seconds)
  done (took 1.63792736 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.142932241 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119727693 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.154100559 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121376994 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.167975696 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.249842529 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.2607362 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.140510167 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.13904032 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.130866933 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.252809536 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.255865293 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.25527938 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122744529 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.257384278 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121218251 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.260686101 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.146445085 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128674128 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11703768 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.146093139 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.124258756 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116817254 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.243353822 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119540727 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.150053659 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.113629515 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.154593316 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128328086 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.113984216 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.150183065 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.120780109 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.111077424 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.138755297 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.257775637 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.112823792 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115863181 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.148783428 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.123216397 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.12054499 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.259940068 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116402883 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.153418975 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122484533 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.113220704 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.139641664 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.123087935 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.138867696 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.232987183 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.151029882 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.123009045 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.119696224 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.147745697 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.123058169 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.110947203 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141438455 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.123134856 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.259531328 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.123579785 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.139645731 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.121616167 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.11987148 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.140769566 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.125782997 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.119613672 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.170381034 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.113214873 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120642701 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.142961062 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.1215878 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.122199787 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.146562089 seconds)
  done (took 11.857249103 seconds)
done (took 43.916698252 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.569225826 seconds)
  done (took 2.538144832 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.087919629 seconds)
  done (took 2.0604584 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.369210107 seconds)
  done (took 19.373277625 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.420557324 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.349643335 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.998548949 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.17354968 seconds)
  done (took 2.914857953 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.09203626 seconds)
  done (took 2.077458969 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.408384716 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.276910749 seconds)
  done (took 1.662660369 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.716355551 seconds)
  done (took 1.69925553 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.885413751 seconds)
  done (took 2.865476399 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.269355933 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.245598176 seconds)
  done (took 1.503714663 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.665544061 seconds)
  done (took 1.656710048 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.855877944 seconds)
  done (took 19.851549505 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.256171438 seconds)
  done (took 1.255209271 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.290089828 seconds)
  done (took 1.287809454 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.683594565 seconds)
  done (took 4.680564998 seconds)
done (took 66.411909097 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.120684723 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.12337769 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.123007183 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.147230217 seconds)
  done (took 1.498720425 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.12516944 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120978746 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.122226057 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.144560838 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124925512 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.11877549 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.144133329 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122619706 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.11807478 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.146307012 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120117318 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118248549 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.147288189 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.119543895 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.117551802 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.147608359 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123578937 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.119002622 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.145937307 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120439713 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120946532 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.146810814 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12397124 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.123548892 seconds)
  done (took 4.079474004 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.116421559 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.111008129 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.112269174 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.135439526 seconds)
  done (took 1.476175369 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.127666547 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131915423 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.15434482 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126567005 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.133213531 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.156026556 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119759945 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117882624 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.143979428 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.128050864 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.134436132 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.158184901 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.131036816 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.120875202 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.156033191 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115240051 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.120861464 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.155649103 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.127269739 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127917086 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.148751377 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126744989 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.123718518 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.153826593 seconds)
  done (took 4.237583665 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.19459653 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.131552522 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.172519815 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.16569822 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.175309749 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.118771838 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.14672411 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.150849009 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.126559878 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.127864394 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.145940093 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.166929968 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.124895611 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.148127745 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.122381615 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.150296673 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.12904709 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.124903747 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.188434725 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.123889294 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.125864865 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.157195706 seconds)
  done (took 4.218337597 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.122487026 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.110636862 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.133794953 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.109889068 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122800137 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.137657444 seconds)
  done (took 1.739126114 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.110892585 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.105060576 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.105325347 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.130220582 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.109500245 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.104953081 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.12918265 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.10705662 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.106172323 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.10519513 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.130817788 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.105153143 seconds)
  done (took 2.350218583 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207600154 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14812927 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251674525 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.388232104 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191037308 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160939204 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.303973056 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186665421 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.178256483 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167260736 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181802854 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190371603 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154453115 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21520053 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142951567 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.185204983 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172709523 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240157745 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17151617 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213383518 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184769029 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.207660524 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191412969 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176763939 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140947052 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19331181 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.121548463 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129319156 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194741579 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191720389 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175613587 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179170917 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142271979 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215098029 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261447035 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177528314 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.321452767 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134494687 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.196830781 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.191528848 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257017397 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142455336 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219961976 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179878484 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13138101 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219941423 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15040297 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.212660633 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.134645755 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173446885 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184325773 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206874391 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.197190108 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138372026 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.326936046 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135530507 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.169205861 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176644688 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215920974 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22864119 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180201504 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.151902124 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197794585 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191189544 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242353151 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141366956 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.192324522 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124986216 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192185398 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.232885429 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183251855 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187124948 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.219120904 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132403232 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19917036 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164853169 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181759177 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207935196 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201217159 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.12015485 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179202703 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136915733 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126559664 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.217949855 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121908782 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245712382 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135431085 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.209633933 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205790265 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152754679 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190988524 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161126547 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191656241 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147962937 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.1013025 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173818767 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157156101 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186159905 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129320152 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179313538 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141793879 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.12623388 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180242686 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.122895489 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199414341 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.13449153 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188153207 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17063398 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.16116672 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179803377 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175963289 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.16643799 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196156289 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220990623 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131755336 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132525997 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24702104 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198128431 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.137663645 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199302441 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195659824 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.178273729 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13524722 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195131848 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192504887 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173130309 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228046252 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139164378 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134797936 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.16662417 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201095394 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159909542 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.186541918 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129004674 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.191729993 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187267934 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.155137634 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139655199 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210137754 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134099826 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12463696 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166047683 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137100309 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.17057494 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.151899445 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.140173952 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183493271 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166519967 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195298496 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186029698 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136235345 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202608584 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132188178 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.195367425 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148680074 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.118926539 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.201950344 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224987478 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130015735 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207240383 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.160538411 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206785122 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172508197 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157507897 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181776638 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158055487 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.122122788 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191657609 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170239139 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19144931 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.187072602 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20444684 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.191211588 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.16294007 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179327486 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195952015 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.184771463 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185048431 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139632807 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201232771 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168718002 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.151494269 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123474252 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.128388574 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167680998 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131531587 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136850121 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209381494 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191897873 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201456375 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170653885 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166146851 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191603342 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.154141034 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159917626 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.203731918 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139195527 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.217146256 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18924121 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208829864 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139586731 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191786761 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121440497 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154700629 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.135037471 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187984728 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138292509 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135926562 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170974669 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.216343234 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169107658 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176707184 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186684239 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191312346 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.228968267 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.121851771 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.160894007 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193990395 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19570665 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.184074342 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134374319 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.188186422 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191722955 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170591673 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220099918 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169157508 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208803642 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191070324 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.193736052 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130588232 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172282071 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159991358 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168031089 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160649698 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171563858 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132221542 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147421152 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.166275335 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140103104 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215329161 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17266317 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174527238 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.183177782 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172722209 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15470744 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14281221 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203193794 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146001604 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104654353 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193657265 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220698739 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150491036 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179425701 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16899836 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157967585 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.316835378 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209380183 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171473229 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166595128 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138727647 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200347001 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156827204 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18719193 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183752643 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171545893 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237091109 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170659463 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.138852303 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159908637 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147188256 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178600334 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.138020765 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.180890097 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.166558692 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.171973881 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186661303 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168495898 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169904083 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206304805 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.145750683 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.179422605 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139666982 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25484661 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197061283 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173033794 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.194456204 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.163034455 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212714057 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124980747 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127076071 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.161474336 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18439885 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160012552 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17773202 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.193311373 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207710825 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203408594 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161607059 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141199256 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.158506547 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166762461 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178936358 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209584592 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135995584 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.137466018 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212743723 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.126314266 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162087778 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159529907 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.313828751 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147376538 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195914546 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106266962 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.309523068 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129966783 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160960011 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1599451 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199290976 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.133896103 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.186034561 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198728268 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139662048 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187722099 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135513679 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205638237 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208872858 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16688531 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20414413 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.144040613 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19011366 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185931711 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171150576 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173857524 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.147878186 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158879145 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22322055 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.205175645 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.132303907 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197609367 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170057324 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200962116 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172707343 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168356593 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182909649 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157154668 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166712364 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167394561 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12475227 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15927393 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.193308989 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157902568 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171763339 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201266319 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132374606 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126964913 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176218098 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165296248 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169764254 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.13071339 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213873419 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.129382922 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212278705 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239704513 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131097239 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194396595 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142490034 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130124887 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168250463 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14467294 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16049233 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.174031148 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176246546 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.16232966 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173027818 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194357501 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192251344 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154514105 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141432523 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.292529514 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.127656304 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221486504 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149792374 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225932097 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177416091 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175008575 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20071421 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150740547 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195960008 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148335581 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.252304948 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165467354 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.196688543 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132663945 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172083326 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13923196 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.133914731 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180380409 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168600569 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171495832 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.137643147 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.196816717 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145378766 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.17540658 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142492247 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229849617 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150647195 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217159523 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185345412 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169326021 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174928511 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205243694 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128219223 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.194201719 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200627864 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145382151 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181513339 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.136476306 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.136710709 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244397555 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.12559548 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190756943 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174085352 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198889738 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172267799 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.164546529 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177179087 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171047921 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176323542 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156836573 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.151523014 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198200887 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135666994 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.155651764 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172530062 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189867151 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.166774222 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170789462 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.17590364 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197005099 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.153366622 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135304003 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314883319 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160337062 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222981179 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.131171903 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16864013 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145575438 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18852694 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.164023036 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204120057 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.131250599 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158064648 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.146562929 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.183297514 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138006123 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168825922 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209069212 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156144312 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21678257 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.134314348 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.286002293 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142637623 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201820091 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.11762358 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.159171734 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14179833 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135731571 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171674519 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20736375 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215703857 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.192777344 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.147598334 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166064431 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127612177 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130683536 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190217566 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150473167 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198800174 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148282198 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.131962568 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142702184 seconds)
  done (took 85.347938949 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174905717 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.173679997 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.188981496 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.23804654 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.213344327 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.307614898 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.248117967 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.261128444 seconds)
  done (took 2.893499054 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.120621595 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.162352643 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.142856721 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.145287387 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.111709604 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.510537961 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.162500646 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121704398 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.162187014 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.15523788 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.138470634 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.571745049 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.117696026 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.146625667 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.123388114 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.137587094 seconds)
  done (took 4.112655749 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.667842107 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.548573538 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.160778409 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.309006642 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.23719147 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.212262493 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.816609059 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.200103609 seconds)
  done (took 13.238837092 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.171736842 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.170024588 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.458585144 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.338235882 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.215132801 seconds)
  done (took 2.446151136 seconds)
done (took 128.629832243 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.125930301 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126520485 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.125852956 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.155746699 seconds)
  done (took 1.615262431 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.195443913 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092201548 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094218074 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.121496956 seconds)
  done (took 1.597092445 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.368906343 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.091770106 seconds)
  done (took 1.575088235 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.14599616 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.135246591 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.165753591 seconds)
  done (took 1.550497953 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.138377305 seconds)
  done (took 1.232755722 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.118386664 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.118143398 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.278199009 seconds)
  done (took 1.613082785 seconds)
done (took 10.28434255 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.143621009 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.930329868 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.435671269 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135686827 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.715025226 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.42986988 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.428034332 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.178559683 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.171696082 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.140858754 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13479801 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.69286584 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.440087439 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.879576315 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.39625924 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.912167882 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.697633953 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113673569 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.147438575 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113799766 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.407790524 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.140361248 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114714534 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113497567 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.723142568 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.422144424 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112035132 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.924100358 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111828178 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115786423 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.429958852 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112320548 seconds)
  done (took 21.054294684 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.15263414 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.169244036 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149349121 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11463402 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115602638 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.142949814 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123568391 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124588269 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203319173 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112185089 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.16364072 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111969981 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.117307987 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.141912602 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137286496 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11188637 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.144812548 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115286413 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119976929 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.142761799 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135341897 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112144625 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.143544676 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11500914 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112658568 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.163591318 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113065805 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123620947 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.141592088 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.117137473 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116995168 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.141752753 seconds)
  done (took 5.358495303 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.160634672 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.178282207 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.150332003 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.151283383 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.190677264 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.115371053 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.226970698 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.150953324 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205377099 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113402477 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135116109 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.141689316 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.154019743 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.113741955 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.168109262 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112959249 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.116200198 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.145794996 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120687727 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114234378 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.164507959 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.113500496 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114480037 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.144138688 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113791397 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13621835 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.143291953 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124925921 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111831424 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.14650795 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118958553 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113716321 seconds)
  done (took 5.614125382 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.128503135 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.130287713 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.136201804 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.167002709 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.124861591 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127498027 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.158250708 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123696766 seconds)
  done (took 2.206838549 seconds)
done (took 35.34009361 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.135920456 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130844706 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134678647 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.15916491 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.275783048 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.120987462 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.131762112 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.151552751 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.129785723 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.135172009 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.112031628 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.153819704 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.133085617 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.123628843 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.273742132 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.161139616 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.281645432 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.245129561 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.154669748 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.128985674 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121773689 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.279971793 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.158017965 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.122072816 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.270775093 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.117386909 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.268590066 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12466068 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.156145533 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.113801987 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.280017865 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.125099078 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.121410758 seconds)
  done (took 6.631796349 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.227394999 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.15509302 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.123230859 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.123111468 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.124294482 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.153217917 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.231072829 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.154190422 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.122652512 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.121144901 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.152808523 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.214691121 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.160300217 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.118276955 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.125202277 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.11202714 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.264500002 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.123262706 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.146372786 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.094377723 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.118655348 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.121448516 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.27743402 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.150165345 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.123348404 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.122706119 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.122673263 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.159997457 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.125437225 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.124087714 seconds)
  done (took 5.615497913 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.128708002 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135774112 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.141213168 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.219231261 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.153836784 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.165408989 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.138673478 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.133508881 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.17473807 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.116502041 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.130772316 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.183593701 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132666425 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126242052 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.146878516 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.132025102 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.130610718 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.146914762 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.124498113 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133451083 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.16498353 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.133252611 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137436228 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.153627652 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.115404502 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123234844 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.124836553 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.156291663 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123331717 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130218913 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.1476221 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.118743053 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.117136058 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.181988791 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.117251006 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.128633552 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.165933465 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129650034 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.128162803 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.178958368 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.117904079 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.116854809 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.173500789 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.172924442 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.117412448 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.157939828 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.117980785 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.129601206 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.14372424 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13431095 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.156875087 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.146552074 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.136163699 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.113636678 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.144184821 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124300509 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.116264154 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.149467283 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130640632 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.116942505 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.16479941 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124396963 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126531639 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.116974908 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.158077618 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.115112826 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.114369673 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.150103556 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143059624 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123401219 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.183568124 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.116051438 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.127372887 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.158519732 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.126663874 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126966782 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.144742245 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.128183321 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126917209 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.118599849 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.159122452 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.118755325 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.115958196 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.162515708 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.136977441 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.129178764 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.157877011 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.126284431 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.116233758 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.148016967 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133906056 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.11704107 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.149757633 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.129468183 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.116211382 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.118974462 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.156676702 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.124651729 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112858123 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.172065933 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.119594121 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.114303709 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.171927338 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.120182217 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.11869303 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.155063524 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.158519566 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114936985 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.154312735 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.127113152 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.115398123 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.152829612 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.11850316 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.115170421 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130542545 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.162681016 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.124696268 seconds)
  done (took 17.189613079 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.372228168 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.362988787 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.212760777 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.407987896 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.159932269 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.250903455 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.393829284 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.365963308 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.115897521 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.179802062 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.173181093 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.328700979 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.14865908 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.144263336 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.368385049 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.442361953 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.144043925 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.186832473 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.150271841 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.160460175 seconds)
  done (took 6.205189545 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.124426948 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.150804643 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.16765601 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.134916133 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.126419299 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.162507548 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.117017352 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137651769 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.126224221 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.155210343 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.120023449 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.12383544 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.159624699 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.132515436 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.129842035 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.178455005 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.126032063 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.120228801 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.168439719 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121321119 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.103081226 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.171548798 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.12623381 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.136727503 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.164628532 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.126854408 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.114495872 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.150505034 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.124688955 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.125049216 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.148708569 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.124856455 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.123962427 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.104577998 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.157956149 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.131619192 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.121744906 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.148802398 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.122566923 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.11879071 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129898282 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.159642369 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124219159 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.100441425 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.164849248 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.112514927 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.129880764 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.127644553 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.136948042 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.135873774 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127010839 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.160747372 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.124741042 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.137401793 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.151988057 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.13312695 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.126731765 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.159984443 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.121440262 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.115622422 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.114008196 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.148988239 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.125738431 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.129484633 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.157876452 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.125154474 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.124206022 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.144969083 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.120602293 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.119251306 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.117796126 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.158125975 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.136645237 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125274937 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.15364205 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.127148071 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.124196223 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.125204081 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.124646765 seconds)
  done (took 11.755766335 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.141177763 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.127405598 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.132878367 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.179603453 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.12884936 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.122230816 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.157354208 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.136500882 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.129435211 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.166414047 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.130617539 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.129619864 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.168632022 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.127333934 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12606993 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.163056738 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129055669 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.154158236 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.158747856 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.144167696 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.129769518 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.15267592 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.130490463 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.126999318 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.175369986 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.127482471 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.141762161 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.159140935 seconds)
  done (took 5.148053464 seconds)
done (took 53.660239945 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.26330368 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.4706718 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.242982398 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.242952753 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.256092734 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.293973283 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.242633176 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.244948599 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.729851175 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.216336496 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.244524359 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.241947404 seconds)
done (took 28.831859784 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.380289974 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.381710209 seconds)
    (2/2) benchmarking "String"...
    done (took 1.552676104 seconds)
  done (took 4.080353223 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.235523886 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.233657118 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.477872933 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.233266737 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.234155905 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.234635915 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.238955064 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.247841849 seconds)
  done (took 16.037359102 seconds)
done (took 25.871025749 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.236193159 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.500072589 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.470726452 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.222494669 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.235470679 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.235308436 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.237953032 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.289145843 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.251132838 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.226771568 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.663683196 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.514008326 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.249480092 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.633779612 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.223741849 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.247740666 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.25150352 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.55523474 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.235448738 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.270455832 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.215770944 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.21707697 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.257443504 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.239834897 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.248263174 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.249380737 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.231343364 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.238738454 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.503157609 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.253648383 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.271898392 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.23586693 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.224071029 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.255993187 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.251258952 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.23984054 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.50866677 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.251447464 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.224274636 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.242824285 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.506476285 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.249424567 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.237252773 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.243904103 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.221760642 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.236152306 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.217543781 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.356824286 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.270326769 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.242182874 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.296355399 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.637459553 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.237599553 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.238115463 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.249343137 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.538197692 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.264432049 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.331314245 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.263406837 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.238373926 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.237912868 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.237378889 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.268778035 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.255031351 seconds)
  done (took 146.325739212 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.238060816 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.238565379 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.23849074 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.244895492 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.238111667 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.237441455 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.238717487 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.238028829 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.23972242 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.261680926 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.239420392 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.237988731 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.242916672 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.199045372 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.248448895 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.263150143 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.243307364 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.25814295 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.268289171 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.237842293 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.259996076 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.2405395 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.241510313 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.239123414 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.28593322 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.333472923 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.257161117 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.242656842 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.250800797 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.239938956 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.248909528 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.244975168 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.242355571 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.113741694 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.251621148 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.27770993 seconds)
  done (took 81.964032991 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.239321696 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.240824704 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.24035832 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.275537178 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.240703972 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.876174072 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.883052292 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.306749999 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.30273545 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.808642677 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.50731507 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.242206218 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.335958164 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.255296322 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.241961188 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.338380646 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.266635918 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.245731388 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.240738887 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.856371085 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.255283955 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.241538724 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.426550514 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.258803329 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.278471156 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.636762371 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.800197736 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.245372686 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.279279069 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.582808035 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.296080061 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.243824309 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.641280391 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.347066103 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.357048945 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.245692926 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.278300093 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.242686964 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.529722588 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.244281424 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.24281283 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.246774898 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.90239131 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.244479296 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.881844108 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.24857363 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.233071334 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.243222449 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.243408322 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.286731969 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.92840288 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.243847037 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.242003031 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.244686031 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.246180037 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.24425485 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.243327379 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.279757484 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.314113515 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.142941879 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.246515135 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.24886188 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.280569741 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.244776023 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.826313649 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.249535136 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.692342527 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.303609088 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.341342978 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.859612876 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.245417535 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.341922308 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.366119784 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.244838473 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.244358955 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.245492339 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.246385816 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.360028377 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.245535309 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.976834296 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.431729907 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.264169225 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.812036145 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.349117853 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.246232554 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.61951089 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.248334441 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.246171526 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.999839633 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.34333167 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.246747408 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.246313568 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.24708634 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.246818888 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.98744333 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.247362734 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.888206449 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.567104968 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.250528377 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.92518752 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.249885821 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.154655237 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.85390903 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.907273761 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.247665107 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.362031089 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.436066968 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.265340696 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.247931111 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.81265861 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.251177498 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.3068516 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.247546191 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.651491089 seconds)
  done (took 383.646249758 seconds)
done (took 613.073429577 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.226840771 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.23020319 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.228932225 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.229298096 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.229584744 seconds)
  done (took 12.293216505 seconds)
done (took 13.441830089 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.466462408 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.456772239 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.453218387 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.316467856 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.469041284 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.475370638 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.377617145 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 1.321847349 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.447507129 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.472563782 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.459601981 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.288217176 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.474740588 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.438563532 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.267384758 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.367466756 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 1.397252256 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.396314782 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.33793626 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.365658309 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 1.496284174 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.2885538 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.285850945 seconds)
  done (took 33.269588275 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.559082733 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.261930679 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.31686408 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.526242318 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.296736526 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.546314104 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.586260371 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.261637707 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.419558256 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.274389356 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.272206502 seconds)
  done (took 18.472785283 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.553798874 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.26248987 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.338003868 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.530985129 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.29678012 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.563428079 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.595121341 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.262693903 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.438291955 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.276015402 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.272471319 seconds)
  done (took 18.541308495 seconds)
done (took 71.432789295 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.293422622 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.357671852 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.288355303 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.271352303 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.270100986 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.269331927 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.272222926 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.271298743 seconds)
  done (took 11.444834451 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.269489927 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.269688001 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.269323424 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.2689382 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.267780361 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.269395488 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.269717581 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.269130331 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.268764043 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.268629928 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.269934795 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.269037309 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.270124133 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.270675744 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.268909021 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.269499898 seconds)
  done (took 21.46214462 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.27123976 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.27104178 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.269840205 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.270660547 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.269495313 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.270934355 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.270619389 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.270117997 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.269721082 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.271260119 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.271351439 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.270697987 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.271941347 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.272529601 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.27098878 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.272406099 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.271021578 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.272362672 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.275389634 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.271512776 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.270258207 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.271406056 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.270532235 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.271914981 seconds)
  done (took 31.662804519 seconds)
done (took 65.721822168 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.25581021 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.295433852 seconds)
  done (took 5.705192134 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.330248843 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.328741721 seconds)
  done (took 3.81556504 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.280226733 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.27280698 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.273197056 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.271096367 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.273089269 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.272169972 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.272363314 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.271419276 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.271277463 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.274023889 seconds)
  done (took 13.886388949 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.272925367 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.273353877 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.272278349 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.272304785 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.272935644 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.274350523 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.273455323 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.273056333 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.273499462 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.272517837 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.271613676 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.271597928 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.273065635 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.273656584 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.274188199 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.271779294 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.272671064 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.273694726 seconds)
  done (took 24.068357044 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.28797062 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.29273838 seconds)
  done (took 3.735247801 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.400948683 seconds)
    (2/7) benchmarking "second"...
    done (took 1.314699813 seconds)
    (3/7) benchmarking "month"...
    done (took 1.379154279 seconds)
    (4/7) benchmarking "year"...
    done (took 1.369844161 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.316131413 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.294967 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.315266896 seconds)
  done (took 10.546862396 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.260841565 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.564823584 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.758914963 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.42149794 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.251510011 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.283272597 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.244540863 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.285458043 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.288074108 seconds)
  done (took 14.516001226 seconds)
done (took 77.427918817 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.260325017 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.286424313 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.277072009 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.277520035 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.614572961 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.31691055 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.265237218 seconds)
done (took 16.455339091 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.242335072 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.254595639 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.255929749 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.273284673 seconds)
  done (took 10.18458709 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.273835868 seconds)
    (2/2) benchmarking "read"...
    done (took 1.588814776 seconds)
  done (took 5.021726404 seconds)
done (took 16.364353879 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.275796704 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.276220357 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.277406302 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.276395053 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.278035985 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.278085528 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.275258314 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.275400034 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.27595588 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.27493653 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.277697946 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.278719326 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277025162 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.278629072 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278053602 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.278186119 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.280403455 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.277825905 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27755836 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.278286881 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.277725128 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.27738734 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.277417559 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.277697614 seconds)
  done (took 31.815018862 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.278506721 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.278797324 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.277363638 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.279249084 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.280470788 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.279665766 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.27951731 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.28007827 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.277980315 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.278914335 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.278086659 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.281151647 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.277546479 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.278234094 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279513765 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.278539813 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.280313941 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279107479 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280255081 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.279548166 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.278297751 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279672875 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.279092578 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.279077932 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.27971856 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.27866471 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.281872001 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.28061188 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.281542224 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.280115921 seconds)
  done (took 39.542409599 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.284018603 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.286016035 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.279112138 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.279535906 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.278988728 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.278243839 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.279101488 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.278080332 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.279452535 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.279387789 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.279250197 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.280436052 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.278929695 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.28019803 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.281346579 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.280754641 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.28014781 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.279486612 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.279683248 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.280715339 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.279420548 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.279298242 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.281024287 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.281309279 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.280398448 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.281122436 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.281687917 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.281374016 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.279857356 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.280294687 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.281306448 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.281028754 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.280525945 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.281341961 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.283204016 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.28144465 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.285812777 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.288064559 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.281867601 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.280334561 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.28291808 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.283126822 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.280293137 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.282232132 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.281421582 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.282576123 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.28343957 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.282535998 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.281698771 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.283680902 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.282585295 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.283771743 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.282083847 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.28250751 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.28236256 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.282602742 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.281914963 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.282693465 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.284467462 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.282374366 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.283019727 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.283086604 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.282860399 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.282985663 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.283847552 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.282236166 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.283723414 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.281857629 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.284555519 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.28406896 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.284076081 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.283836701 seconds)
  done (took 93.448760301 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.283800409 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.285826941 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.283141474 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.284683374 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.285146738 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.283936017 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.283065488 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285848477 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284949265 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.283941296 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285573807 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.28478433 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285254177 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.28477553 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.285167036 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.284104628 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.286273278 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.28331361 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.286450835 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.285036035 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.285610066 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.284913136 seconds)
  done (took 29.431796895 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.285648002 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.286005156 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.28694034 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.286595224 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.287045923 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.286590429 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.285066484 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.286161373 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285043835 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.286134863 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286919138 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286712975 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.287128761 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283982855 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286153784 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.286192875 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.285703744 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.287906695 seconds)
  done (took 24.318277233 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.285927314 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.285838901 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.286940958 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.288034901 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.287095906 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.28592455 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.287549054 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.287635419 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.286870134 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.286978219 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.286794692 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287714564 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.286276018 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286421048 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287065203 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.286728733 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.286012091 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287191571 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.28803066 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.287105935 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.287463844 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.287350159 seconds)
  done (took 29.481520315 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.287955725 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.288370529 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.28727029 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.288228351 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.287792005 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.287081179 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.290641292 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.289020152 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.29063507 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.287850525 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.287671944 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.28770215 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.289689032 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.287476969 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.288545071 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.287630696 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.28881727 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.290866358 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288487416 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.288647751 seconds)
  done (took 26.939886465 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.289142813 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289852692 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.290482035 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290640634 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.289867577 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.290303262 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.289982977 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.289388461 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.290715383 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.292228842 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.291245582 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.290386211 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290770727 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.290507526 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.291658449 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.290785269 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.290615886 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.290900034 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.291338758 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.291689479 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.292000385 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.292123539 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.291570771 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.290881149 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.290245209 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.290359661 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290456269 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.291704995 seconds)
  done (took 37.312428193 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.291554365 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.291226702 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.290969981 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.291112038 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.292626502 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.293463846 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.291154815 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.291285722 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.29148953 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.293945822 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.293595709 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.292810282 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.291544665 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.291575555 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.29246232 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.293080568 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292862253 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.292550029 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.291779848 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292344204 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.292847058 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292757953 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.293710044 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.292903883 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293054281 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.292853647 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.292891968 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.294284211 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.293679604 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.293645798 seconds)
  done (took 39.947506186 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.312602236 seconds)
    (2/2) benchmarking "in"...
    done (took 1.310700764 seconds)
  done (took 3.79649075 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.292980675 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.294662504 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.293622721 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.294229703 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.294412533 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.294239222 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.293627359 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.293612515 seconds)
  done (took 11.52528682 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.283761549 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.295087579 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.293942438 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.294898455 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.293999602 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.287511636 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.295041182 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.299648598 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.288427557 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.287789937 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.294267683 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.295119867 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.290294705 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.289338754 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.289652288 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.290146434 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.298762621 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.296007639 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.295698626 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.297835375 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.294979793 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.290377763 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.294135374 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.298953685 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.289921446 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.300231449 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.297144688 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.299989271 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.288232857 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.293769666 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.292182559 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.298695317 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.297408332 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.299706456 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.296455977 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.296839577 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.298951667 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.297175005 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.298658521 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.301952328 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.297363739 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.297337392 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.290848333 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.294710626 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.295728671 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.30198468 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.298617804 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.298470758 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.290097349 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.293811364 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.30443619 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.290532298 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.299346793 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.295538684 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.297132169 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.302402252 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.304588406 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.29402152 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.30068272 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.30230927 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.310319299 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.309558399 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.297036921 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.303474832 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.300262476 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.315729673 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.303727184 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.306532927 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.300796814 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.299291405 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.301063918 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.311745714 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.313243421 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.304972629 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.299698877 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.301160275 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.294029282 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.303519333 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.303905936 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.305670405 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.306057338 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.300237957 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.302327195 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.313681634 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.29593979 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.306010417 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.301418243 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.301274828 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.291655549 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.306933835 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.310207427 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.302138518 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.293916959 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.297674686 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.297561727 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.304383504 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.293965538 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.298096861 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.304474251 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.302700935 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.301138312 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.295884801 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.304702874 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.307701446 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.302967416 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.302798248 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.310067405 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.296696053 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.306614175 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.310310761 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.302236949 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.295089644 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.302269378 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.306997131 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.298067874 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.305154501 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.308242156 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.300079248 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.30747342 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.301404196 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.304645992 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.321046072 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.310036104 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.303328072 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.300199807 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.314693614 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.302977954 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.302698416 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.310661763 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.303715538 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.302570453 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.300851349 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.310894327 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.296662034 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.307687154 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.297893053 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.308689614 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.304039126 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.303733119 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.300994945 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.303927871 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.300118542 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.304775176 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.307671288 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.311306827 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.302566483 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.313265736 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.305172892 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.303948008 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.306544141 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.311082066 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.306556585 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.298591396 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.309909767 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.298864023 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.308158386 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.299170489 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.309594898 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.305801161 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.306899769 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.30692764 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.297595808 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.304347075 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.309551511 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.304495569 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.306623561 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.309305349 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.305596278 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.306280812 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.297343915 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.30819799 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.298692904 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.301998327 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.313476477 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.306141507 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.306600628 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.304887384 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.314741581 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.306286264 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.306433095 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.300807852 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.309011038 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.312448634 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.309270411 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.31616586 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.306841192 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.308255783 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.301248885 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.303242501 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.312037185 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.301772788 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.316404345 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.315662081 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.322890086 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.303998958 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.311455433 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.301302342 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.312825785 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.307527161 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.316081872 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.307550212 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.307924539 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.302163005 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.313560206 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.303200159 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.312442054 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.300886996 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.310778524 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.310351366 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.310132252 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.308024597 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.304267875 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.30813075 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.313121517 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.309942266 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.31016229 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.304060096 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.313671563 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.302093827 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.306814839 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.314073867 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.310131053 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.312663526 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.319613732 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.30745712 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.315635856 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.311700427 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.305569873 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.313865369 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.310746505 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.310942214 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.317710678 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.314400375 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.307157592 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.316803521 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.314796528 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.304972989 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.312510688 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.320982783 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.311293969 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.30602068 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.318652385 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.313470579 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.311734878 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.311937849 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.305968819 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.314937876 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.315561793 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.322671722 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.304703725 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.315798929 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.307033528 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.31675051 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.30960319 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.31499473 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.312346318 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.315836213 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.321126682 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.313439027 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.306354908 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.316184173 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.313414821 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.312668371 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.306775443 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.319223919 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.313975392 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.315560423 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.311893882 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.311255248 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.317557356 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.30685096 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.314402823 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.305911268 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.32666896 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.335922028 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.317595295 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.318276626 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.320098052 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.31777799 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.317786921 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.309639681 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.310304788 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.311542262 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.310019206 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.308487731 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.319812797 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.30820316 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.319062028 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.313649936 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.316537786 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.318309499 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.314004921 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.308352172 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.317917672 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.31509253 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.314467441 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.307943013 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.317727643 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.311738348 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.319617351 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.31712212 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.312524433 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.324325116 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.320811822 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.314879872 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.313795475 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.313204112 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.310502346 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.314597683 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.322428917 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.311515324 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.324359176 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.31013587 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.318738944 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.312760867 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.322397051 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.326901895 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.311444496 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.324176949 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.31789745 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.308396484 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.311982591 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.318130187 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.322788481 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.328685859 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.310810677 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.321536593 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.317658828 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.317079768 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.317044397 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.317896684 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.318119264 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.31778578 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.323670006 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.325335755 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.316099299 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.321999554 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.328725562 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.317683238 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.317886349 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.3091525 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.321553436 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.328480849 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.314166251 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.318168239 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.313376647 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.320551276 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.318776519 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.319567691 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.319891868 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.319173753 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.322842203 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.327477137 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.323131273 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.318615052 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.323929079 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.330101014 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.324604437 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.332522855 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.313331424 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.324272034 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.320006987 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.314008576 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.31592432 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.316941347 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.323078222 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.311565544 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.326942726 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.320790153 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.317669774 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.322804984 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.327406823 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.312207018 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.324797368 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.342315152 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.312611806 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.324053565 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.320553957 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.314091458 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.324818768 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.319628378 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.312314212 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.318016918 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.32272553 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.329457569 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.316183579 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.326734037 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.313936522 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.325805321 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.321345709 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.321528449 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.321664257 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.321437416 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.313602554 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.323490583 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.323212667 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.332258908 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.316606092 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.321948815 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.3171478 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.330006532 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.335167559 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.318288587 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.328601265 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.322785195 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.317427099 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.321668952 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.329162982 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.316390369 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.326035584 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.315305302 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.321241222 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.320739974 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.325391469 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.327375074 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.325789942 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.315590933 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.317704134 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.324930163 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.324027648 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.323623132 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.321528011 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.331029797 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.317535955 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.318871277 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.325107623 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.319333387 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.330036668 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.318510145 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.32502677 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.322170559 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.327466937 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.325452416 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.322861418 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.315545268 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.318399187 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.331801398 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.33261243 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.325873254 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.324941772 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.328246018 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.320022533 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.323309372 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.325681851 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.319939518 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.323097552 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.330316754 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.319327258 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.321291326 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.320518404 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.326720959 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.329771053 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.330955326 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.319148197 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.333938184 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.337635036 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.333370715 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.318527749 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.323547568 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.321989881 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.327797132 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.32723051 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.320561912 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.336010672 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.33552752 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.330833061 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.32625977 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.327666064 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.320153296 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.330884119 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.328415052 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.322656513 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.335046919 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.32380988 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.334507128 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.328005812 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.327875158 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.319698107 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.322676775 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.323940601 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.326709193 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.329339158 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.32856405 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.331970496 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.328108922 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.334247079 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.329846537 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.328351463 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.32864581 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.318829203 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.330504456 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.320741006 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.330130184 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.332663491 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.323072242 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.332767975 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.329129195 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.323354312 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.329354109 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.336671695 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.329178703 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.322666808 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.32723094 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.33533003 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.340472285 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.32930752 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.322901485 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.328036624 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.333696654 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.330407609 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.329567656 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.323132464 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.343304633 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.345345725 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.32474793 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.32819309 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.334341117 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.341931967 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.330601644 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.331008795 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.326498007 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.332082852 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.337989484 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.332462137 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.335609879 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.338220668 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.32789457 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.334965912 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.327163491 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.331066615 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.332979881 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.342214219 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.330964821 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.326883513 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.345463436 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.344493049 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.333708158 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.357300204 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.340542414 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.332395388 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.336230038 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.32439908 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.334714764 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.329127736 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.339446793 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.334553994 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.333255144 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.332114429 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.325813004 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.335324353 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.342006338 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.342275823 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.332746431 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.32607607 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.327955236 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.334895031 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.332194062 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.335644716 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.333813606 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.333971407 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.334212552 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.326876545 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.346425087 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.354998151 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.339567751 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.333048087 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.333445557 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.334260243 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.338861016 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.335732872 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.341375947 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.334373723 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.334252922 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.332004743 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.344181899 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.334736179 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.325790379 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.330173647 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.329613244 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.338404884 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.34235709 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.358048186 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.338999467 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.338889329 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.336873292 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.335321192 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.329400171 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.337933292 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.335153196 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.328664613 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.332517322 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.338660955 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.33736121 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.336085191 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.329983543 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.345240777 seconds)
  done (took 785.592126849 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.334971629 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.336483104 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.336504271 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.336099404 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.335721341 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.335716034 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.335519206 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.336010566 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.336942422 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.337600163 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.336602627 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.336575939 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.337804132 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.338528615 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.336372227 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.337221542 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.336625252 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.337755325 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.33645592 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.33830146 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.336119518 seconds)
  done (took 29.280482492 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.337194567 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.338364429 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.3389182 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.337962019 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.33907389 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.339325286 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.33788952 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.337706225 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.338433776 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.337739852 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.339832241 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.340226191 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.339638873 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.339089764 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.338680601 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.340035433 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.338649791 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.339563037 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.340194845 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.340271577 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.339524358 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.338086365 seconds)
  done (took 30.668198496 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.33959426 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.338472876 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.331590997 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.343722718 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.339645702 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.340105184 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.340621476 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.338061278 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.340308886 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.333030396 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.333075088 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.333741243 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.3377254 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.347092079 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.335580162 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.345247576 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.340932281 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.339922274 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.340117379 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.340137401 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.344743586 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.353790607 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.340933104 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.331342195 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.343031912 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.341480567 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.340399539 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.34027875 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.332922066 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.343705499 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.341737902 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.334201759 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.343889658 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.345190152 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.336167764 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.344566122 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.341643541 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.341772663 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.340179247 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.343414919 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.364044745 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.342878379 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.346059457 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.356803535 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.343258645 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.336469619 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.34989648 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.341501912 seconds)
  done (took 65.59996828 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.342413598 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.342628988 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.341879112 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.343420166 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.342405732 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.343548176 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.341759689 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.34340371 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.343562844 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.342222595 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.343051637 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.343313008 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.342736945 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.342869528 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.344251463 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.342925062 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.34434969 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.343485242 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.344777934 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.343982953 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.344726601 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.343577259 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.344665146 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.344972927 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.343875855 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.344216509 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.344154155 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.345118236 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.344888194 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.344779048 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.344839413 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.344547399 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.343812225 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.345571994 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.345163392 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.344187285 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.344771042 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.344705721 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.344901202 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.344792637 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.344836217 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.345905048 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.34653752 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.347216295 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.344533188 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.345517361 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.34701869 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.345091666 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.345620029 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.346516524 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.345854814 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.345083465 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.346212961 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.347116169 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.34556987 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.348013388 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.345603064 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.345809333 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.346736844 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.346562496 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.34746217 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.347776732 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.345370241 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.346980911 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.348229601 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.348104231 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.346808533 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.347613942 seconds)
  done (took 92.672221629 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.346931457 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.347381619 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.347437001 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.348384755 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.347543455 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.348173462 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.348039756 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.347624287 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.346628043 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.348773196 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.348035013 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.347877611 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.349176553 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.34947078 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.348146577 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.348894779 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.349035083 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.347616126 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.349170724 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.348241176 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.348770718 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.348735339 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.349345613 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.349341794 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.35011014 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.348628091 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.348841187 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.347842048 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.349311691 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.349421092 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.348882632 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.34850035 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.349184022 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.348889436 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.349245752 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.349420328 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.350250247 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.3502965 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.348985929 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.349326204 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.350059236 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.350274677 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.349666902 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.350361044 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.349997849 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.349432493 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.35071465 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.349032633 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.350847207 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.349990682 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.350874901 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.350460578 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.349674182 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.351707867 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.350906719 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.35226523 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.351061989 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.351090767 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.350810271 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.351446679 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.35131114 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.351569811 seconds)
  done (took 84.881882644 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.349940609 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.353197845 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.35135856 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.350722362 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.351531775 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.351200399 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.350850845 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.351253411 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.351457157 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.35210264 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.353615474 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.351654866 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.353283697 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.353781999 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.352060509 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.352270735 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.352167125 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.351533387 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.353408483 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.354047311 seconds)
  done (took 28.264811875 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.351439979 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.353648 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.352443463 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.353195627 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.353014862 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.352220613 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.353007029 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.352166944 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.35343997 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.353548471 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.354477666 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.353836533 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.352932456 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.353930358 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.35259503 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.354821217 seconds)
  done (took 22.875264174 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.354027166 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.35475667 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.354388766 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.353360127 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.352732283 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.353531407 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.354991801 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.354236545 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.354163661 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.354133816 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.355695814 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.354648976 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.355041108 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.354451233 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.354949094 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.355887338 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.354103509 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.35543858 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.356470217 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.354272519 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.355411786 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.354976201 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.355295566 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.355543328 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.356074191 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.356247461 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.356199262 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.355708966 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.355157719 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.35431442 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.356592098 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.35643136 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.35508817 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.354819425 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.355132222 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.355662921 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.355863195 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.357460421 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.356537911 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.356304937 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.35696038 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.356132682 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.355774627 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.357755371 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.356463079 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.35707445 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.356779577 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.358060996 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.357717262 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.357804541 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.357466301 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.357803618 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.357722975 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.358266664 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.358230679 seconds)
  done (took 75.793117718 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.357332989 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.359473598 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.358056272 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.3586003 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.358205826 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.35899741 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.359563152 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.360017726 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.356939127 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.359755074 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.358558624 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.359418496 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.357780088 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.359324307 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.358232184 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.359497708 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.357931314 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.360863722 seconds)
  done (took 25.688875568 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.35862832 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.358477621 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.360322624 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.357724436 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.359076997 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.359671271 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.3586375 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.359381934 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.359301321 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.360186569 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.359328697 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.35989176 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.358472272 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.359672543 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.360025699 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.359958821 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.360933303 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.359250782 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.360332543 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.360556765 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.360759663 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.35987365 seconds)
  done (took 31.139142241 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.348787004 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.349962882 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.349729227 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.367755138 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.369991394 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.349666763 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.350096574 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.350577524 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.372574554 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.392629741 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.388506319 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.369130694 seconds)
  done (took 17.590231206 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.360390225 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.36073135 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.360934056 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.362409615 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361032846 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.362176996 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.362047215 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.361191771 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.362474951 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.361908152 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360808437 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362663705 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361952957 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.362157634 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.361870008 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.36309116 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.361763356 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.362404006 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3632074 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.362680507 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.363488933 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.362144506 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.363164758 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.362319417 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.363623374 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.363416876 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.362357944 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362982125 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.363908383 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.363313578 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.363328639 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.363675497 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.364895963 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.363251363 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.364212284 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.363881173 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.363155457 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.362990121 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.364153184 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.363258301 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.363284577 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.364840604 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.363947951 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.363289264 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.363792068 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.363823115 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.364643039 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.363728822 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.363938634 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.365037931 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.365959591 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.365092109 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.365254196 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.365064814 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.364369181 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.364040209 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.36549486 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.364737371 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.364879085 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.364944698 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.365166082 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.365082766 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.365779108 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.36677921 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.36497187 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.364976596 seconds)
  done (took 91.220867821 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.364750764 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.365672428 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.365737102 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.36561032 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.365620373 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.366302386 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.366575132 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.365892295 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.366659869 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.365544767 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.366423841 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.367072837 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.365948599 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.36789951 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.367669971 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.366476631 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.365406455 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.366799465 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.367214554 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.366431421 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.366710147 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.367627176 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.366914645 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.366907076 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368829738 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.367684327 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367886532 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.36953579 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.368494213 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.368519835 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.36721507 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.366516153 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3677503 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.367846268 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.369019062 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368180832 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368377284 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368572561 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3696512 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.368442147 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.369583784 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.368210359 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.368504763 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.369328337 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.368973622 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369252873 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.369284771 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368577917 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.368682053 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.369324325 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.369839641 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.370365059 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.369620805 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.369494383 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.368902232 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370632571 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.369205482 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.370280489 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.36977837 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.369947377 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370153178 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.369628722 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.36988805 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.369952458 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.369286927 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3720762 seconds)
  done (took 91.532713737 seconds)
done (took 1841.517998064 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.530771112 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.481945406 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.359288361 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.391262334 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.359699104 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.369459556 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.371992536 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.360648965 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.361192757 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.360959303 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.359393027 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.554342928 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.387697756 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.361288756 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.359410356 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.45692469 seconds)
  done (took 27.665260258 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.390665342 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.370675015 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.502363536 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.370103835 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.391635707 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.58485281 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.433054073 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.366678046 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.572312786 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.391434743 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.36561303 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.391188097 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.366037895 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.367928381 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.39103979 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.582878494 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.659683803 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.370423948 seconds)
  done (took 30.108057979 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.908720456 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.393615002 seconds)
  done (took 5.54263172 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.388418078 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.366580041 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.368016412 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.363905977 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.358826392 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.358815218 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.365550652 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.358606287 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.362305375 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.51875276 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.368949618 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.379995299 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.365953936 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.368229993 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.374278571 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.415699289 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.518379182 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.376757159 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.375554484 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.373013406 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.366322097 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.470827239 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.415091009 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.378992094 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.517316733 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.372049399 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.374239892 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.373899814 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.499949365 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.377360832 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.367640544 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.368499649 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.369237415 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.361204066 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.934031255 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.379598487 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.394596883 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.375515723 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.377075835 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.527403309 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.368743121 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.37579562 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.361359667 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.928410476 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.481734228 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.500841525 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.366496937 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.369170301 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.371108367 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.439243325 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.369454329 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.371446106 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.433805347 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.208908388 seconds)
  done (took 87.525208868 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.404165472 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.361892191 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.55096826 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.381837753 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.364749258 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.387980827 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.362759792 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.704895201 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.388139825 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.36307713 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.712060138 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.038757934 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.371977225 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.408867249 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.384107095 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.389098914 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.366378799 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.362243619 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.363343648 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.365466347 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.965522275 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.370728972 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.363003579 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.518476929 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.407048741 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.96972129 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.372192897 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.362402544 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.367103846 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.364991802 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.007336746 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.377167807 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.398325806 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.363874659 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.678931666 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.82202167 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.779319924 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.369015889 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.374055093 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.366264637 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.401897635 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.972332926 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.801310149 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.365205138 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.367364739 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.974176493 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.36629714 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.36697319 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.37679334 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.636553644 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.366108 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.366685949 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.37332915 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.365421342 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.365000705 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.408623401 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.387701273 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.973447971 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.366462757 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.365869699 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.369809807 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.369294568 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.370568244 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.371328658 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.367573776 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.804858007 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.528257862 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.366548468 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.805198478 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.002058037 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.367617966 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.096447715 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.367033233 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.368823306 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.442069415 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.374423563 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.366503713 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.967910792 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.369337885 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.367672062 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.783737352 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.368773916 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.700557329 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.386794062 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.367723883 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.98657844 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.374369113 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.42002896 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.368102005 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.370745945 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.367440236 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.372326709 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.688724732 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.424995788 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.368239108 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.367520765 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.389035362 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.368992198 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.367322865 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.377752442 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.078433741 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.371357633 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.368975712 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.371280988 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.36974611 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.371284244 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.368864583 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.369965696 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.651729878 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.370216275 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.395194207 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.37245446 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.369696626 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.381303108 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.528510708 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.374932486 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.740212594 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.373716862 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.378181083 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.373066096 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.370339942 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.391901892 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.385294815 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.378089621 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.347302864 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.745837168 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.391389221 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.390417879 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.370206516 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.37079529 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.369284219 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.370321555 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.402774643 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.371426094 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.205169851 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.377188976 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.38675913 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.370086461 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.376080445 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.371497161 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.370521375 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.374213492 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.683570818 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.688804666 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.533058572 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.375070861 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.372549602 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.214996855 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.374440064 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.559908068 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.397627352 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.37265627 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.691323018 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.571305647 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.373002862 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.373002829 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.372501886 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.656759846 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.372116577 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.702064001 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.034785177 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.372863459 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.372742755 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.202969719 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.149082068 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.377765335 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.375183944 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.700118668 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.394679413 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.373615265 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.373107561 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.374477747 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.373780503 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.377170975 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.373253737 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.374411895 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.372300261 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.485570814 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.573039692 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.393279255 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.373998755 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.977488277 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.37939744 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.373976655 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.387559193 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.381702362 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.37398027 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.401928333 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.378261363 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.415746413 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.375037007 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.384326122 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.061919945 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.374779889 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.375701579 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.575602335 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.168818351 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.37458888 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.376166014 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.374539848 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.425397621 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.007799266 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.421748788 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.746781277 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.377796937 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.418766023 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.384852041 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.396339176 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.006622273 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.377943263 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.375513232 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.160689998 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.375345782 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.060729567 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.376514019 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.376874942 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.087090475 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.376629184 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.379940852 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.375292588 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.376255188 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.683123376 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.37844 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.411776054 seconds)
  done (took 508.335716171 seconds)
done (took 660.414779581 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.377731546 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.382030732 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.381336758 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.381793909 seconds)
  done (took 10.780214365 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.394440398 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.381902376 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.394292572 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.382715522 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.395649564 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.382388511 seconds)
  done (took 9.590820835 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.378033869 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.383128297 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.382513424 seconds)
  done (took 8.401578349 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.624168758 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.401043659 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.799488638 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.395182248 seconds)
  done (took 9.479678052 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.394469419 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.39916465 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.394887466 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.395340913 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.397611535 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.397205868 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.396537973 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.395798466 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.396472624 seconds)
  done (took 13.822701458 seconds)
done (took 53.332869041 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.929440786 seconds)
    (2/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.378824542 seconds)
    (3/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.497534675 seconds)
    (4/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.697634614 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.649709151 seconds)
    (6/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.893554034 seconds)
    (7/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.593750521 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.455395343 seconds)
    (9/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.380021396 seconds)
    (10/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.022356887 seconds)
    (11/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.462267887 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.417583397 seconds)
    (13/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.558614595 seconds)
    (14/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.501957291 seconds)
    (15/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.359747824 seconds)
    (16/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.411750688 seconds)
    (17/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.41153037 seconds)
    (18/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.520260848 seconds)
    (19/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.597739263 seconds)
    (20/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.469012459 seconds)
    (21/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.389857219 seconds)
    (22/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.359803824 seconds)
    (23/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.362211303 seconds)
    (24/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.619977448 seconds)
    (25/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.413749845 seconds)
    (26/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.779316296 seconds)
    (27/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.656479262 seconds)
    (28/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.609823273 seconds)
    (29/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.377824823 seconds)
    (30/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.770605944 seconds)
    (31/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.466279399 seconds)
    (32/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.468416651 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.513722964 seconds)
    (34/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.448502041 seconds)
    (35/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.415606018 seconds)
    (36/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.411594473 seconds)
    (37/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.381413136 seconds)
    (38/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.676482374 seconds)
    (39/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.458956681 seconds)
    (40/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.900953406 seconds)
    (41/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.706193088 seconds)
    (42/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.368638588 seconds)
    (43/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.369895469 seconds)
    (44/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.366516121 seconds)
    (45/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.362711307 seconds)
    (46/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.360632907 seconds)
    (47/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.46196936 seconds)
    (48/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.89721483 seconds)
    (49/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.19959661 seconds)
    (50/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.373807783 seconds)
    (51/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.790290705 seconds)
    (52/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.478735789 seconds)
    (53/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.361506115 seconds)
    (54/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.454259766 seconds)
    (55/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.412350918 seconds)
    (56/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.473291982 seconds)
    (57/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.362055444 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.492951422 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.491187416 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.516956715 seconds)
    (61/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.61172889 seconds)
    (62/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.719432444 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.55058052 seconds)
    (64/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.454321975 seconds)
    (65/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.454492011 seconds)
    (66/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.517685062 seconds)
    (67/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.692041611 seconds)
    (68/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.940965912 seconds)
    (69/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.486252631 seconds)
    (70/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.018437544 seconds)
    (71/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.660382146 seconds)
    (72/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.363679826 seconds)
    (73/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.68260063 seconds)
    (74/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.476512141 seconds)
    (75/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.36309205 seconds)
    (76/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.470766085 seconds)
    (77/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.363776554 seconds)
    (78/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.476521392 seconds)
    (79/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.597738147 seconds)
    (80/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.513313035 seconds)
    (81/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.473616614 seconds)
    (82/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.525643978 seconds)
    (83/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.513846493 seconds)
    (84/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.36377441 seconds)
    (85/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.3723375 seconds)
    (86/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.688246317 seconds)
    (87/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.470015535 seconds)
    (88/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.839779905 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.513423903 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.468846885 seconds)
    (91/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.47499586 seconds)
    (92/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.00870311 seconds)
    (93/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.490748815 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.521333168 seconds)
    (95/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.791077274 seconds)
    (96/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.420845851 seconds)
    (97/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.372979565 seconds)
    (98/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.483404983 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.518347879 seconds)
    (100/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.545262148 seconds)
    (101/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.471597207 seconds)
    (102/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.36489589 seconds)
    (103/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.445524305 seconds)
    (104/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.393889693 seconds)
    (105/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.476590787 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.550997763 seconds)
    (107/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.499242895 seconds)
    (108/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.365516068 seconds)
    (109/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.692900432 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.675905378 seconds)
    (111/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.423993519 seconds)
    (112/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.434463295 seconds)
    (113/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.427605277 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.558349406 seconds)
    (115/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.673677061 seconds)
    (116/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.371062909 seconds)
    (117/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.462244197 seconds)
    (118/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.51391988 seconds)
    (119/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.52185894 seconds)
    (120/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.553117583 seconds)
    (121/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.366997725 seconds)
    (122/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.392887852 seconds)
    (123/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.553574478 seconds)
    (124/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.567760178 seconds)
    (125/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.691325834 seconds)
    (126/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.533057165 seconds)
    (127/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.366486252 seconds)
    (128/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.426014764 seconds)
    (129/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.527075351 seconds)
    (130/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.478951411 seconds)
    (131/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.708336215 seconds)
    (132/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.709311606 seconds)
    (133/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.716996654 seconds)
    (134/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.368226026 seconds)
    (135/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.474207321 seconds)
    (136/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.368035483 seconds)
    (137/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.84970213 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.560967746 seconds)
    (139/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.564244925 seconds)
    (140/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.368716457 seconds)
    (141/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.396351233 seconds)
    (142/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.845021405 seconds)
    (143/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.493447862 seconds)
    (144/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.367854578 seconds)
    (145/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.463800208 seconds)
    (146/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.433243629 seconds)
    (147/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.970468824 seconds)
    (148/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.578156405 seconds)
    (149/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.842319165 seconds)
    (150/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.466855836 seconds)
    (151/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.611186296 seconds)
    (152/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.547920323 seconds)
    (153/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.556458677 seconds)
    (154/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.402454329 seconds)
    (155/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.500071407 seconds)
    (156/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.425382814 seconds)
    (157/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.398069278 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.465197472 seconds)
    (159/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.368670915 seconds)
    (160/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.24262333 seconds)
    (161/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.789459735 seconds)
    (162/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.373224726 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.668420441 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.435444809 seconds)
    (165/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.568123492 seconds)
    (166/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.784313995 seconds)
    (167/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.508172436 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.507808607 seconds)
    (169/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.754244479 seconds)
    (170/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.488999031 seconds)
    (171/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.527830633 seconds)
    (172/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.374935152 seconds)
    (173/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.404251974 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.504818147 seconds)
    (175/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.520129188 seconds)
    (176/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.376153288 seconds)
    (177/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.709649597 seconds)
    (178/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.474928486 seconds)
    (179/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.608488301 seconds)
    (180/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.486602981 seconds)
    (181/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.391842798 seconds)
    (182/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.439859426 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.569438926 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.524990037 seconds)
    (185/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.421045894 seconds)
    (186/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.376675517 seconds)
    (187/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.62737999 seconds)
    (188/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.435812321 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.571938716 seconds)
    (190/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.036497702 seconds)
    (191/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.376776188 seconds)
    (192/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.429547276 seconds)
  done (took 344.449852413 seconds)
done (took 345.709211362 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.424091746 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.488026994 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.402652831 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.402100313 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.404569724 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.393211951 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.430546908 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.403230356 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.417306536 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.418804892 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.393095856 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.436601711 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.418065652 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.413328922 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.438143503 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.403301301 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.403286357 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.414223721 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.420184337 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.419623587 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.405172133 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.407527906 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.431443273 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.403968993 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.413129665 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.412071992 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.409420359 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.397883526 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.411520109 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.419336143 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.399929177 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.410281594 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.421097035 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.416931504 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.407154601 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.414754653 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.406264413 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.491886315 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.426180123 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.416745641 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.413206145 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.421183467 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.411091734 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.409532214 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.418114092 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.434592873 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.412915206 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.419810478 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.397402031 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.406348207 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.425612507 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.418946201 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.414031736 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.405578767 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.397819918 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.422552541 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.417116179 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.428010105 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.413461549 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.409079079 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.441282532 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.426972488 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.417393495 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.41442545 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.414683074 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.421663963 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.416162872 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.42361407 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.415396284 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.410501499 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.409167832 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.415322134 seconds)
done (took 111.264419801 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.531371501 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.402800884 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.563023441 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.415180986 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.578057016 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.537062235 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.414649973 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.415154845 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.41569954 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.208654268 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.415923566 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.414759938 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.403850469 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.41526834 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.530324288 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.416172815 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.416159572 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.110711039 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.416220163 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.548111843 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.405167809 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.416863702 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.415850935 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.213883264 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.404936621 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.399143201 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.547136261 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.416925763 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.114657267 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.399323341 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.40272462 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.115853116 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.543584456 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.435349902 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.426544926 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.427235169 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.581908698 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.425016225 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.528713601 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.534178943 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.573429123 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.454595056 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.402177757 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.406329606 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.424989974 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.419055842 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.417100913 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.446553835 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.404567246 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.417377474 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.108627685 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.428403196 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.427347404 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.419427142 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.417994481 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.438561175 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.419657521 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.419375142 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.550757711 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.419683902 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.532889497 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.217661074 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.2113511 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.419853876 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.404860133 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.417034537 seconds)
  done (took 113.62204288 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.477788622 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.48580686 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.534237801 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.413233581 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.459457134 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.534749777 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.413572318 seconds)
  done (took 11.597919919 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.415386272 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.418469835 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.457752381 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.45846136 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.419805358 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.583429296 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.418913098 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.422056093 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.419589132 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.461033343 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.419468625 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.422137639 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.430297634 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.409439221 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.457829013 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.423340089 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.52713658 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.412137791 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.420591902 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.566881161 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.421194379 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.430198345 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.461204079 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.423046561 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.422007484 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.417593275 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.183925684 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.42128706 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.421141969 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.421198623 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.423131708 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.480491746 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.421969611 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.408872189 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.421784677 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.525679889 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.421498801 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.422342691 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.422050368 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.413573498 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.423619514 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.421495051 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.422934536 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.421819724 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.424125137 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.437284826 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.42264129 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.422761838 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.423513711 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.422283613 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.464123734 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.424217983 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.422446971 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.423268397 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.467085451 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.431790607 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.423097598 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.421755454 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.422741893 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.422225813 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.568219498 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.461394362 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.422747859 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.460352375 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.423635518 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.424675176 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.423904262 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.423476439 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.50455051 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.422445929 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.462322485 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.423853439 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.597258267 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.438482377 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.425731428 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.417179795 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.417848662 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.424258964 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.411510748 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.422168105 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.425144121 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.417091185 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.421890571 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.425063466 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.426452592 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.574933188 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.523166188 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.426433805 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.431553571 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.423319672 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.424441083 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.466948172 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.425477287 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.42472571 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.465829859 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.530934708 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.467840583 seconds)
  done (took 145.874825403 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.430153396 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.42883949 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.42171104 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.447054515 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.417533668 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.416865525 seconds)
  done (took 9.847293819 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.419183097 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.429397968 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.426815958 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.428583283 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.427488332 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.426945862 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.429162054 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.41962218 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.43340101 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.427112447 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.427847495 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.428941321 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.428974791 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.428261266 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.429610714 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.42818031 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.428615497 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.426807828 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.427860051 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.429121371 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.415056075 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.428309983 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.429084223 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.421474676 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.431655639 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.429700489 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.444026523 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.427914804 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.4293669 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.427315913 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.433206574 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.430147562 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.42130655 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.42647728 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.43260222 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.420752335 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.433338327 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.430585055 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.42908086 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.430826658 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.430681501 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.430582412 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.430509673 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.431766346 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.422419172 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.426655471 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.434599281 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.445593519 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.429640213 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.429246431 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.432044288 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.429865694 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.431204174 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.429824504 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.423123446 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.424608111 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.436108161 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.431208472 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.431383474 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.422979663 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.434821689 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.43155565 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.423841979 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.43471583 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.431075675 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.431363576 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.425549909 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.435203965 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.432647927 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.43200726 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.432390801 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.431185725 seconds)
  done (took 105.192609096 seconds)
done (took 387.410798497 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.984048405 seconds)
  done (took 4.274196027 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.662289629 seconds)
  done (took 3.953766417 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.749008556 seconds)
  done (took 26.049930143 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.480316328 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.420980933 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.434792696 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.419450441 seconds)
  done (took 11.045888122 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.999953428 seconds)
  done (took 4.290440529 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.443241602 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.430751551 seconds)
  done (took 6.168162961 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.717717828 seconds)
  done (took 4.007575161 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.326391721 seconds)
  done (took 4.626906906 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.441308048 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.430337119 seconds)
  done (took 6.169991217 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.396922118 seconds)
  done (took 3.687808223 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.824987853 seconds)
  done (took 22.117041156 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.432860883 seconds)
  done (took 3.727522432 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.451517067 seconds)
  done (took 3.742784972 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.600292748 seconds)
  done (took 6.890926166 seconds)
done (took 112.042741464 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.418037721 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.426067007 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.424848682 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.4225093 seconds)
  done (took 10.982396149 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.497351261 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.498533233 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.506873279 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.491117732 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.491288212 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.50078048 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.458071643 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.458886859 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.490025092 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.48613216 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.503531709 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.491283412 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.500310298 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.463952578 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.485053993 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.503177999 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.489673813 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.508206807 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.462025448 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.493193718 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.435818707 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.49341873 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.487692938 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.435073511 seconds)
  done (took 36.925754106 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.942861809 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.497337261 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.58055757 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.477946048 seconds)
  done (took 7.791031094 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.53896721 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.540175721 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.560135658 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.5983736 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.641224264 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.554916738 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.461633415 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.457988539 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.44285349 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.540282784 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.625663923 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.540121842 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.757659379 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.438042946 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.756792446 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.437072204 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.436114467 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.540527056 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.589737662 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.619562985 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.437456634 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.542109874 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.547307441 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.542116798 seconds)
  done (took 38.44116598 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.443745388 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.454965747 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.43763228 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.452467571 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.438796891 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.43864463 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.440199838 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.44521888 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.438494201 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.438119931 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.437661842 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.452289412 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.437628094 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.439344349 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.44458476 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.440634176 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.440883665 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.445250654 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.447471441 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.439013511 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.438190095 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.446374138 seconds)
  done (took 33.032722399 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.423325302 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.422066991 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.774547589 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.679371306 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.423084331 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.429310279 seconds)
  done (took 14.447109201 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.514894056 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.677727708 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.4337412 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.866112139 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.952061404 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.431667563 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.429879156 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.720221857 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.093621948 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.059582535 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.507154498 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.518429721 seconds)
  done (took 21.50375766 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515204557 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.43498323 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.432969518 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470407077 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436046986 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.43445306 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.472896031 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.96063589 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.442282437 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.71054603 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446129147 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519140853 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.684582417 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44088153 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.440352608 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.414703915 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667572896 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022001512 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443666489 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43565289 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47360539 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.437562587 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.452454887 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.690060097 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.443346017 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.436211789 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.699535315 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.436590133 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.778467549 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.759154129 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.756108126 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.438704946 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.712163634 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935414476 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548506965 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.686581157 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444978545 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.437495666 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.410002221 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.438596608 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.460954682 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.444632679 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.752275242 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439448062 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.436249372 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.45416656 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970682171 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.446203622 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.437777797 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.438667733 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.760279296 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52299492 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.444879268 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.437729198 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.532260051 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437389706 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.445614592 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.561873773 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077472599 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438136547 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456992988 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.44378939 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.444033549 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457008205 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.196482545 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.453175622 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.444746211 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.446013801 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438913498 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.439362816 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.465983753 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437948842 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.45924222 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439093375 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411160477 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.453168254 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446916219 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07996212 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446424513 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.447173403 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.666273572 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439745983 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440442733 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.440216804 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.438625898 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.343455128 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455411043 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.408371257 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480531322 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.966935371 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.694380414 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466981211 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471341693 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.663752198 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.409178144 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440252855 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.446957349 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447424799 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461362487 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.970896106 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441509821 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.447870733 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.690844257 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.653840061 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447812639 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.431020073 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980626481 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441930494 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.493279932 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.449189363 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.701433563 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.172595954 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.779082445 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450508982 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.484595677 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.442446229 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.415487422 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464505701 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.45234205 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.452489167 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.766746044 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.428366671 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449983573 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515922063 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.445993426 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.442872149 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.442467723 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45023134 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.442810854 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.674286903 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.452078385 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.77100776 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.448125202 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44191632 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.451455751 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457958379 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.451710649 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.665912446 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457968321 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.723055095 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444609318 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445133699 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444619316 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.664393517 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.444816065 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.4511798 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.787403383 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461020204 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.449913972 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.793263987 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480530741 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558063206 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47852846 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.444217192 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.701147772 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.450306889 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.451458411 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.447424653 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.448813951 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.451711596 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.454636914 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461717281 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174341371 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43940682 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.451019264 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.4465127 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.46236771 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521095045 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.455453159 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.703996128 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.452198474 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442917734 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.455103843 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.459555984 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.675111318 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.76910904 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.465653513 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.622402135 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.979178253 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.173214389 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.462406519 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.447895282 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.446139803 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.445840721 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449274952 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.445382077 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.446534512 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.693802591 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.7791954 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.453645427 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.181815693 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449510197 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.449272175 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.476501205 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.771512938 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.459511374 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448106524 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.451847346 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.453655228 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.489463341 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.77681899 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.671517976 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.465224707 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.448529745 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.010650509 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.457907971 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.450044076 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.449232641 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.476219485 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.44791592 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.062161776 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.792415378 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.448345976 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.777400179 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.470756417 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.4688686 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.450092781 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450055305 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465782317 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.45949935 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478716654 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.69959586 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.452725968 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.453720345 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.090185396 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402795187 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.12077958 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.468549214 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.464703883 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.456365289 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.985128211 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451162477 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.450069535 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.736577835 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.987955611 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451799874 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983709351 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.45151858 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.367802174 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.778194338 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.681384237 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.461508674 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.453704526 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.779285409 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.666081809 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480249161 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.468438748 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456669213 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.420230337 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062247282 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.456399738 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.632464496 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986116793 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452296994 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.455397452 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.497947903 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.452797707 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927493243 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.454222625 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453265205 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.456605721 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.458025483 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.068010982 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.459867446 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.454142173 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209138667 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.45989759 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.993560232 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454237202 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.709946599 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.785010679 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.755187486 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.454887081 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.463888195 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.700564163 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.78061295 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455506962 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.454579923 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.135829092 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.316610991 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.462184755 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456504464 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.439593367 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47701984 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.806694791 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.456909367 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.469981459 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459858439 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.455440812 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456074662 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.455466271 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.460983291 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440857943 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.044982662 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.463131825 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450734727 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.462612484 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461871429 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.707472704 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.472181198 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.193457213 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.693978404 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.468876937 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492924634 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.462721562 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456321755 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.43047436 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.456169379 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.458195774 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.550920449 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.680587946 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.475300749 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.431340655 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.538934644 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.672427759 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.458088808 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.45604937 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.732496414 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.463210272 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.461257812 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413035484 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490463251 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.456752997 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464001696 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.452034706 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492525786 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533415245 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.717624766 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.791081892 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.785982327 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949380174 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463280556 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.46007106 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.474269659 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540362089 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477604837 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.474588918 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.458990009 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189371259 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413656606 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.200213766 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.786835788 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.46108692 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469016947 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458867359 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.700412033 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.458640759 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.734341495 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459340237 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.459052106 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482208645 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462374207 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478277428 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6758178 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.735150187 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.460681165 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460350044 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4661561 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.460651102 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.793119465 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.675658595 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.055264258 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121874218 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467658761 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.473577069 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.006146355 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.739502372 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460100696 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.461630362 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461891971 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.471061866 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.462825064 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.475175802 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462311886 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.691288881 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.788582184 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979226709 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.79246235 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.480307066 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.335390914 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47637831 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.711809413 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.293595121 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.720947838 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.204693336 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.318596763 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.717615384 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536853112 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.720440318 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.468117621 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.699071012 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.479390221 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.462907374 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.46323551 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463607342 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.461755475 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.787525571 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.214603644 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.72329598 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.46852054 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.478977253 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492850665 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.714099512 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.687815712 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.341072348 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.685397811 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.794608094 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.47127427 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.462926884 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.2048054 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.79425391 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46598284 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.469958635 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.725517802 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.466578096 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.502006049 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.344245699 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.463624302 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128437228 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.683424808 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.484938371 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463419959 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.353896873 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.207109707 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.4675799 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047566363 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.46719143 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472319458 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.745328248 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.47404678 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.466239949 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.758942772 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.471047297 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.481877929 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.724837337 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.199763168 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.376607042 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.485900378 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469043563 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.47129881 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466297612 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503633337 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467077493 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.468256151 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.939375992 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.473057094 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46865038 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.481723392 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.472245186 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488680696 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.472386204 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467699055 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.474522066 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.456712516 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.44292207 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.470614726 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.617846408 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086104999 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47050784 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.086078597 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.80653172 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.71661737 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.467544868 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.463105736 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.473416356 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468752267 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468173496 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467024892 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.466680575 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.105030501 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.471590369 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.800615891 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.477611694 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.680449208 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.682943222 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.474141886 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.726043509 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490250574 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.494936557 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.438724656 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470804252 seconds)
  done (took 1025.722388181 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.518086676 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.493551278 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.507895985 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.522323596 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.475257854 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.490044232 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.539170848 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.487281217 seconds)
  done (took 21.360076206 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.460945959 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.470219427 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.474576367 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.46848933 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.460243052 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.023285816 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.472485912 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.470299926 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.490405047 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.474168066 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.474232832 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.181172112 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.472056547 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.481494662 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.479889082 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.473491362 seconds)
  done (took 34.168575237 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.671300279 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.693710775 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.083806444 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.480157249 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.461659732 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.474233356 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.898004937 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.494670009 seconds)
  done (took 28.586321205 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.475666698 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.476442937 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.478567445 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.478269524 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.477660575 seconds)
  done (took 8.715989663 seconds)
done (took 1282.970758777 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.476680499 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.477336112 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.479015047 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.477591696 seconds)
  done (took 7.240299272 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.442221575 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.443018253 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.441771064 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.455932725 seconds)
  done (took 10.113578051 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.89165185 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.1079616 seconds)
  done (took 5.331533915 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.473622139 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.237165307 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.222447058 seconds)
  done (took 8.26341301 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.781091345 seconds)
  done (took 3.111026261 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.914955577 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.970318511 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.463858003 seconds)
  done (took 7.679671738 seconds)
done (took 43.069870359 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.479703504 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.229946064 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.638738315 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.474972062 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.63315918 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.638142336 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.707520773 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.464165043 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.463079182 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.471296184 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.469572835 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.639283718 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.681090611 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.228302435 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.682133957 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.230755845 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.634821433 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.463333995 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.47075543 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.470409293 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.701578384 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.469231602 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.485537675 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.488235512 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.645115962 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.628694708 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.471099951 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.239525625 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.470221824 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.472937903 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.632313096 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.465398325 seconds)
  done (took 85.673680138 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.466240571 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.47068392 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.473267962 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.470471711 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.470692821 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.470950356 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.473323957 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.480738971 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.478201235 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.470273318 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.47062094 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.471649792 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.493627091 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.46936343 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.473776163 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.466340356 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.471783663 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.480935039 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.471514588 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.473038454 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.47275977 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.476211647 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.471409494 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.483933517 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.473190293 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.473460401 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.475951717 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.4790952 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.473377218 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.471911021 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.471451508 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.476330861 seconds)
  done (took 80.500034408 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.466605287 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.467770872 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.470573478 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.472612418 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.490402746 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.472741266 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.471747826 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.468516893 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.509379428 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.473149257 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.472809245 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.490472444 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.47509973 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.489921829 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.475862932 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.467946138 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.499022251 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.492187067 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.473374773 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.491889549 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.475872067 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.471895505 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.473227397 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.474768934 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.490710024 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.476133799 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.507442047 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.473850657 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.474767362 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.476278927 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.476472391 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.478589303 seconds)
  done (took 80.678449711 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.711959006 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.48561832 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.48953096 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.481269978 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.487957502 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.486700161 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.480211176 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.719181142 seconds)
  done (took 15.679084798 seconds)
done (took 263.863419293 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.481170619 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.504138561 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.513199558 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.490351967 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.501891867 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.508704958 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.71999814 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.51256693 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.710532181 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.486606048 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.497331025 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.483162519 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.491492732 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.635026384 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.474210195 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.487873863 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.476807807 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.481026392 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.497506571 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.747163716 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.515316313 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.48630425 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.487596304 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.487024435 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.457067208 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.557605918 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.559289836 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.648073822 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.612906557 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.557490336 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.473254023 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.489110064 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.487970699 seconds)
  done (took 69.858346695 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.480612969 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.490103379 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.489079571 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.489378858 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.489471876 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.489506785 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.479452952 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.489455256 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.489803899 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.49011509 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.490430058 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.490225828 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.490183848 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.489523731 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.490943845 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.463189257 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.481351499 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.490807278 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.480390603 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.46392288 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.490684768 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.490360962 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.491752323 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.490147033 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.492664729 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.490695983 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.490838702 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.491754511 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.491593774 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.490775188 seconds)
  done (took 45.962481211 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.490585777 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.475289929 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.511559384 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.493609912 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.482228923 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.487429181 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.838769595 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.49918027 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.48542162 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.487506242 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.476970908 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.500921896 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.539045516 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.490695623 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.491041619 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.493895422 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.492083654 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.485142164 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.477207104 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.507323126 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.853361121 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.500370476 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.841873743 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.506266501 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.487891206 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.486029448 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.48987448 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.485779433 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.492713892 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.477660836 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.458221562 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.839027501 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.502308284 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.483402028 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.472769679 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.500600039 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.494706073 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.478984576 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.494177003 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.48467591 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.837249731 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.492004037 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.493794597 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.48444916 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.492847389 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.494776528 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.478779036 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.485711061 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.786094816 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.498154315 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.489441924 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.494721044 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.496295528 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.490062689 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.782011048 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.494846957 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.487416068 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.479365084 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.498262337 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.841555885 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.501455854 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.487942291 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.480907564 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.493423793 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.479084913 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.517409835 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.501682241 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.490636638 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.50084467 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.495101094 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.481312871 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.494518866 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.496908416 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.481277638 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.487964446 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.512718894 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.494639825 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.481506183 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.487075511 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.842335831 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.498295967 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.482551781 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.8592375 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.49698975 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.501233806 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.500021002 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.498370899 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.560654685 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.838114024 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.477796503 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.509173651 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.488834064 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.856436642 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.503678509 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.490038132 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.483470351 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.50381839 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.500160927 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.499137964 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.487535745 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.4971272 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.504989736 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.485045681 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.498136012 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.852057411 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.501737293 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.502699225 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.496780264 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.562789562 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.500592901 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.504993931 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.495580035 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.860008296 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.49913827 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.500331047 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.483378262 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.495252633 seconds)
  done (took 218.966653521 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.486732865 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.490701585 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.48571272 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.514118151 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.48454099 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.493341581 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.48637731 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.487830845 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.492128689 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.487492002 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.489477045 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.495690002 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.494250925 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.487013445 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.509987833 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.494159115 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.485159596 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.515731692 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.496297841 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.484548863 seconds)
  done (took 47.210191552 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.500423126 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.176340136 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.139768994 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.508592678 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.500887006 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.494195388 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.560679787 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.50398866 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.501847878 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.865695274 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.713738082 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.509575706 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.50145457 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.502132111 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.142382205 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.480579485 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.867710757 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.186706709 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.508849293 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.18453943 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.479913489 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.504240177 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.493763965 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.185176146 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.885949482 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.856895259 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.5708726 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.193067571 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.508805123 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.503836428 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.186787378 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.510012764 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.494856085 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.175753702 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.509789988 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.51732587 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.503601296 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.567135493 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.567896256 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.873654611 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.205173117 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.86716324 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.521710419 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.676016697 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.507688867 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.475849394 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.202653897 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.510281063 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.475887143 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.507053657 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.510832383 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.155555896 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.502085642 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.153251055 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.511687045 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.505666404 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.187199429 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.161096324 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.151881244 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.713316702 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.501333803 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.850739401 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.513347225 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.192398376 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.512733931 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.507173948 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.506671463 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.710931231 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.185521304 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.856265636 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.871980683 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.874089362 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.513320672 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.581631584 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.511209034 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.86889411 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.584904265 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.932663214 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.872169371 seconds)
  done (took 138.242681556 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.819547249 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.634962232 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.949894733 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.144652093 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.08554816 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.657206456 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.631722927 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.780272889 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.514710753 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.610773832 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.279451736 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.606025609 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.351752903 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.583292653 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.619987927 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.640092775 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.972285788 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.498889676 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.231796371 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.247301643 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.527668452 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.619612149 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.333276522 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.931078712 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.499737842 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.318547441 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.500639017 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.097212318 seconds)
  done (took 58.043395615 seconds)
done (took 579.621680342 seconds)
SAVING RESULT...
DONE!
