cset: moving following pidspec: 14613
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.001688736 seconds)
loading group "string"... done (took 0.549968872 seconds)
loading group "linalg"... done (took 8.973601618 seconds)
loading group "parallel"... done (took 0.172078637 seconds)
loading group "find"... done (took 1.45763643 seconds)
loading group "tuple"... done (took 2.114555978 seconds)
loading group "dates"... done (took 1.391814564 seconds)
loading group "micro"... done (took 0.219584217 seconds)
loading group "io"... done (took 0.634831398 seconds)
loading group "scalar"... done (took 44.439427542 seconds)
loading group "sparse"... done (took 13.931236546 seconds)
loading group "broadcast"... done (took 1.117781327 seconds)
loading group "union"... done (took 12.876621191 seconds)
loading group "simd"... done (took 2.715458161 seconds)
loading group "random"... done (took 10.344983336 seconds)
loading group "problem"... done (took 1833.01925833 seconds)
loading group "array"... done (took 25.852471668 seconds)
loading group "misc"... done (took 1.139236345 seconds)
loading group "sort"... done (took 3.816254638 seconds)
loading group "collection"... done (took 19.097762143 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.633152109 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.119370003 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.168753008 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.353384692 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.215711798 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.149657621 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.162885303 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.561823379 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.022498624 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.217209772 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.147255852 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.559019447 seconds)
done (took 6.038655797 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.263118302 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.434580298 seconds)
    (2/2) benchmarking "String"...
    done (took 0.114892383 seconds)
  done (took 1.20780075 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.095590444 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.179464212 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094452914 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.109844633 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.111295103 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109738661 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094832341 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110150611 seconds)
  done (took 1.471428665 seconds)
done (took 3.708227745 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.492726275 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.858953507 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.512266934 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.129773512 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.158157988 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.147740602 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.305611276 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.163752178 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.123809865 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085553099 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.169092454 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.379488261 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.472805036 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.958939421 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.08574904 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.128024426 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.08282295 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.714640282 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.082602626 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.142304411 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.523451099 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.117747542 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.118926587 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.143933345 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.190605484 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130353647 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.163166606 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.095888201 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.671976709 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104694097 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.186040151 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.098998421 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.161213641 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.250705582 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.095732285 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.098180134 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.686927223 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.177154908 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.11308022 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101110589 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.683113504 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083005943 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.199496277 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103318339 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.10888312 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.187947829 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.114605851 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.078906471 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.10308355 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.090645116 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.161145136 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.489693236 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.108926479 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.147498355 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.108754112 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.697060406 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099427048 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.158493314 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.142592295 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.107598345 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.09949053 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.107584232 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156505339 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.110420866 seconds)
  done (took 19.633172064 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.117590042 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.139739135 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.093957261 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140898882 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.141064809 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.096669284 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084011371 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095190352 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124011392 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.183918005 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.122096031 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.143149489 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092039777 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.080731388 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117297537 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.250220716 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.110643462 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.124457254 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.082677475 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.10768008 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.139717785 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095645479 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108398959 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.109163344 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167994868 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204276803 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111730117 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124643141 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09571265 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099455019 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14344718 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.161456169 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.0767524 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.096649306 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.18437854 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121801761 seconds)
  done (took 5.164609365 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.20181869 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.116545903 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.190791492 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.178524756 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146814013 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.166348704 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118197628 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.26752215 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.255404225 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.180171149 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114079215 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111369422 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078505806 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.096873788 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.078728818 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.676091502 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.179062827 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.150343671 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.126757061 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104857872 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082168161 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.398313711 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099604533 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082100323 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103085074 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.073001259 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.176951239 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102925063 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.293650967 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120558579 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088629648 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133294479 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.217137603 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.17138183 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.134156615 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.1215355 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10524594 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.099516836 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.215417585 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.109499503 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078133541 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.12870555 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133886955 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119298132 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.102838491 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.112071787 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.227029058 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.10268666 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.120497609 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.097614331 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.201556925 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.096847672 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097537582 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.3530715 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.117769564 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086454334 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.101502929 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.304056878 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13414215 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085536663 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.096524816 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088922562 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.099972989 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080356747 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.40642481 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110979157 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.906825058 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083577253 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.15961875 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099628794 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105260297 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085343938 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102406859 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.10134 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.099706611 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079794426 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.100341075 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.07982229 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.104259113 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11556268 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085879824 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.098442451 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.082617709 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164809787 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.116290854 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.100868171 seconds)
    (87/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.098785849 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083931797 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.098415728 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126373195 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115531153 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099861561 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083855526 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.149498831 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106796519 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.11765287 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085976671 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145169703 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.099734191 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.205034395 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081830721 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126343831 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100580217 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114059211 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.122986936 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098855654 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085490257 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097878641 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081884487 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164060288 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083498023 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081146435 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.104057617 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112553357 seconds)
  done (took 23.907276746 seconds)
done (took 49.363724918 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.465551279 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.094278142 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.111636279 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.112630492 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.110905098 seconds)
  done (took 1.629222297 seconds)
done (took 2.337975348 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.351590563 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172325365 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101790198 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.195929922 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087713879 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.201789678 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.165930927 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.117186376 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.198720303 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.099364768 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.175343981 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.099037631 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087158646 seconds)
  done (took 2.791817022 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093494447 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117440082 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082042067 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110265698 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076105167 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110260145 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093718184 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.137220654 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091574559 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.102702179 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07511611 seconds)
  done (took 1.795930813 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090245909 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114027435 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080882269 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108413715 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075927818 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090317254 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108850659 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117891081 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092404861 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104675098 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077291857 seconds)
  done (took 1.768192353 seconds)
done (took 7.056479425 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.051637201 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.437580801 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.118560431 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.168229111 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.352336005 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.215142348 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.534280494 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.134978636 seconds)
  done (took 11.909199072 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.114711544 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.11578427 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.083405253 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.103358547 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.082071597 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.098563874 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.081588318 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.100370334 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.082776026 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.095534707 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.083268906 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.097718175 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.079921822 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.09985249 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.080554433 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.095387434 seconds)
  done (took 2.266051714 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117376552 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117933016 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10386367 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108120752 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.084066671 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.101626851 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.086534299 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.101551054 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.083544677 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.100258911 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.105953002 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.089745259 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104495711 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082180772 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.102446059 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107344692 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08323879 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.102814436 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.087344725 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.102822533 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.08976263 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.102545873 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.106545748 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.091408229 seconds)
  done (took 3.181527361 seconds)
done (took 18.065730988 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.168290894 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086645181 seconds)
  done (took 0.966943706 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.101223787 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.119821522 seconds)
  done (took 0.942610027 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.10642177 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096412757 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.134844118 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.114514947 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081832437 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097617154 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.113644494 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.098450713 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083730413 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.100402248 seconds)
  done (took 1.747458792 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084931535 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.100959316 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.089875348 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.119816192 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.111052452 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.085287634 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.104634724 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087197382 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.10593255 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.082479403 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.107842804 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.118396058 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087884706 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.119794156 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.088010418 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.104096791 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.109959646 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.087720765 seconds)
  done (took 2.516282334 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080353073 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.083541975 seconds)
  done (took 0.886163496 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08396064 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095067793 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083688444 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099449966 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080417043 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.097572638 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080865978 seconds)
  done (took 1.341897891 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.506200036 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.257304349 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.336532607 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.099645241 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.152338464 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.370148024 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.135304794 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.112706598 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.113261533 seconds)
  done (took 2.845820687 seconds)
done (took 11.966209206 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091641243 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.188325808 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.555348581 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.121349212 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.08101589 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.161445408 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.268356067 seconds)
done (took 2.189217426 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.353601925 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.12429284 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.090819056 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081051051 seconds)
  done (took 1.368884992 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079806017 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102769254 seconds)
  done (took 0.910630512 seconds)
done (took 3.009836568 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080096439 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.078648046 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.09221968 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079929241 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.094684101 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077014342 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.129568677 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.078365501 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.096255869 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.078314715 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.096862332 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079024743 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.093644515 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076964908 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094132134 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080031265 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078805509 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095163516 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080809355 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095650037 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080822246 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.095558912 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079107349 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.080392374 seconds)
  done (took 2.854581257 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.218302691 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096519347 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.084714368 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.101553694 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.08322529 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.101707381 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101570981 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.079429681 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.104198148 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.082727683 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102682283 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085505845 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100131301 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086228517 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101817953 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102867422 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087884887 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09933355 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083505726 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103257166 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.086974427 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099899323 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.085728697 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103894006 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.102568546 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086156428 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.100877256 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.081838203 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104678553 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085397207 seconds)
  done (took 3.676391137 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087715146 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.07628258 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.095333778 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.089019289 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.094442526 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081355846 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.095652374 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.079331341 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.097815423 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.079005689 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.097870269 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.078492982 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.096286643 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.080479602 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080379943 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.104312296 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.115708341 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.07957055 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.07851177 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.098587059 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.085469251 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.09690406 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.082779379 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.09780469 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.080014362 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.097188412 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.080483884 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079320083 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097952293 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079198007 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.102296662 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.08632107 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096077996 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.092867525 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.102907325 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.07758756 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.105010667 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078182972 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.098887109 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.079477966 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.096951069 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.079723984 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079665152 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.1093646 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.082970456 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097980053 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080726157 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099051776 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080099413 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100299153 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079636398 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097182875 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082442252 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098662679 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.086867687 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.096902036 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.080413218 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078669072 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098573375 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.07910683 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096336126 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079057257 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.104070362 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080820795 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.121122137 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.091864201 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097201957 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081403238 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.101020845 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.087923746 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099493285 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.098846927 seconds)
  done (took 7.244793658 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081686891 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104667189 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079976291 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096336099 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075736217 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.078184962 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101628441 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094474056 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079896753 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116813207 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080338083 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09950366 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082030345 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101510392 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080174063 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099294399 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.090949449 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095677799 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080337658 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101730029 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081158446 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.10592216 seconds)
  done (took 2.745947538 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.222401208 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10325523 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144165198 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.113933387 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096735476 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.112063601 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103477106 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088033591 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104598424 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08991603 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107732127 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08786389 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11880735 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107810251 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089966439 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109461301 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105167102 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091374683 seconds)
  done (took 2.733172562 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09317614 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097857381 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10483896 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097386107 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.080821771 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101793426 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088743271 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117040924 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.103230098 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.083602242 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.112016146 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085610618 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103409091 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083435396 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103109602 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083578747 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103580995 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082768467 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111506063 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106975493 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089906527 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111941035 seconds)
  done (took 2.887305984 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09733259 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100258168 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.111335294 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101983009 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.076642057 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096912718 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088048643 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.097937283 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107032683 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.085117597 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101555012 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082043078 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.108790194 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083173772 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.108158146 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083872435 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103511878 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084101107 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103581807 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079417016 seconds)
  done (took 2.639906543 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125041329 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114661345 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097008196 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124470005 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114985221 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.097560827 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.125349446 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114811577 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.097170483 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127644338 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096942565 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.114625131 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126634211 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.10455795 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116854784 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127873887 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11028125 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128534209 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115953622 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098841252 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.13076429 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119394507 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110877343 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.117472673 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.103129619 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118554815 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115853122 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.104512284 seconds)
  done (took 3.944096121 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081145903 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.080962846 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.095349366 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.078148817 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.095959054 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.077664507 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.095547961 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.078574331 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080843482 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095333041 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.08064959 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097666457 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080846575 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098743219 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081261763 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099965483 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081135878 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.079875083 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098619795 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080898887 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.101128704 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08318096 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.101321321 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.080786815 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098492946 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.083352139 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081014709 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098173943 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081821838 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096591741 seconds)
  done (took 3.38962207 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089008943 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104791693 seconds)
  done (took 0.937428674 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078529303 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115309821 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078888011 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102166424 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086720464 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099515061 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.091211687 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104393256 seconds)
  done (took 1.500996283 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.106348821 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.119346855 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08666591 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110783791 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.100984536 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.118116241 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.167222747 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.087173716 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.106250149 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081609244 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.118870598 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08137072 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.109812449 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104011342 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09106122 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113928437 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.079110171 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.109284262 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.088912293 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101380053 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087231852 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116124027 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092548928 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.107122481 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083751338 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.110556818 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113897466 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.094257543 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105115567 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093727477 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.106907829 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.075386392 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.104601729 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.086952835 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.097378907 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.099768742 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117862927 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086955318 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108375325 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10487678 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09140313 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094928555 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092381599 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106381739 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097441332 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.104829343 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.088029799 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094486654 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082440051 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.103255156 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.077672413 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102650946 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.076062303 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10950355 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091274999 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118378318 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.084713911 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10410581 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086049617 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102282287 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088905924 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.104532516 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109541762 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.085973207 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108888125 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.092015873 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108135189 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077049613 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.092781827 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080394115 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.10909574 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107355385 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.111982146 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086859149 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105677526 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080508582 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105549536 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087815735 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107306768 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110432276 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.087023909 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107645707 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092724939 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102819504 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.086433726 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.106823373 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.084697142 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.10194647 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082844577 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120796539 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.08394728 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097413007 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083236662 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110330471 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086507219 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.103807336 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083727994 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110073465 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.076085102 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.10586866 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088105147 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106746874 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111781683 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088569016 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10527796 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091039136 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.111948267 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087149205 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.104503626 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.079165411 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105442025 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084053043 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.10863442 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076717634 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105202526 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086677569 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.105177655 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092743388 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.101936322 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.087575181 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110785799 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.093745141 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.103211603 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.079096887 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.104983353 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.086834239 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109516513 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094894629 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.103665277 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076972134 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095002899 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.090768693 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.104425415 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088533259 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105881894 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.1049732 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076264898 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.079834565 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.105111096 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111016054 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085705774 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.106164021 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092126212 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.106439743 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.08591023 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.110028893 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085735025 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100146328 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091831509 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.104270305 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077675626 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109353092 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086001258 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.102181268 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087727025 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109213935 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085951329 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.105924066 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084261299 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105715311 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088056146 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.100944642 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086704173 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.10319721 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.120625851 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087153843 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095227187 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.079175576 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088505189 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.101575354 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085811892 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.100430615 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086115643 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.106316641 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.08049983 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.102647175 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086520842 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117375223 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.112534652 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088579241 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.107412193 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094273007 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.103957702 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.088877805 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.104353272 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088431135 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.105337353 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091852663 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.108201762 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088697704 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.104374258 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.079175012 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107099212 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092888162 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.100434257 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081381207 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100942205 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.087350992 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.111875932 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087220987 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.105865278 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085669688 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107055991 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091293278 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.105088645 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.086118259 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.100649334 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.087409585 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.110152796 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.088798691 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107000627 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094122486 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106812239 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077847422 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11024154 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084101978 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109906556 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.077955605 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.102281444 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083093253 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.108186777 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.086255653 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104642926 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077892476 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111503983 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093373763 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.106407474 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082936929 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.10593258 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114710793 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086422243 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108789475 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088453257 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107697083 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102813433 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101597119 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087566661 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.113339382 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.086936745 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.09607439 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090247933 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.104300119 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.081848034 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.10352822 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.085617368 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106320686 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090049411 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.10720831 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076290299 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.106367416 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.085531228 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.101332397 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079251972 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.110862204 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089223139 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104938883 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114000552 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089473329 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.105722963 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089382331 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.104837475 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.0887085 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.106642549 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091465508 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.105726328 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085847104 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.100856435 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088279638 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100991133 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081404331 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104331066 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.087964993 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.105754638 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090080205 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.104469219 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093196313 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.105592908 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.088167653 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.124059008 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102518167 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084184987 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106915693 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090341073 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.104470089 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087693201 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096888045 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093528196 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.104925267 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093491919 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.105456642 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.079677492 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.105784067 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088343236 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.10704072 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.089235336 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.107552742 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086259506 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.106088436 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087813991 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115200461 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.08490286 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112907842 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08973156 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108260972 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.105138314 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.088795484 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104838991 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.083689993 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.10517552 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.089159597 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.106674311 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.087445176 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.107411327 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089372704 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.105600374 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086128189 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.107385682 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.088855259 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.108042069 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.078072748 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.101060891 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084460848 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10592168 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091972483 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.106619505 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086898797 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.104452727 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090718751 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.104829938 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.080402303 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.11046646 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090635132 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.106992645 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098190527 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.101914428 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088712177 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117782773 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078026964 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.10476688 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082213816 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.103236001 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094668497 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.10751918 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094381159 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.107800188 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.084728932 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.099494925 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.090251316 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.105127615 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.078504659 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100191385 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091651035 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104478498 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086846027 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.108282601 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.091304767 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108431106 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092380231 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.105223885 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.0888668 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.107941912 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.080832177 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.103409683 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.083992447 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.106971667 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.090634183 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.102668662 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081612804 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.105840804 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088785382 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.106866919 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.087925209 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.105189544 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094373828 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10591242 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088593693 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111465948 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.079297468 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.107302702 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.087907144 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.109143142 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.08890899 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.113314582 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094498506 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.113649517 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.098040238 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.111701004 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095705905 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110479181 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.086822533 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.108593119 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.089954043 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.107943917 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084331087 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.109001955 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097527711 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101563607 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090397872 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109139739 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.089246385 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.109679878 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.091610469 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.107859391 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092704926 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.108200461 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087990847 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110984717 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087368254 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108278205 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107561268 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.087230671 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111108201 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084553499 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113988014 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.090101027 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.108175806 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087498882 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.10296734 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088233408 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.106242354 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087798704 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.113143451 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.090126325 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.103010191 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.085052262 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.10115999 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.090754168 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114607128 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098291755 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.108350814 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092699858 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098760235 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.082156628 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109178487 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.08923554 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.111899617 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.09712767 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118084841 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.094012671 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.110360217 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.09168204 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.118529312 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097660663 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.117113787 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.10909378 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.096492499 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.114733386 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.094384527 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.111046819 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.093002419 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.113565586 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.09650688 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.11183406 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089959097 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121860253 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.098300472 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.114934055 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092155973 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.115352789 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.092504663 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.104116063 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.095359352 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.11294632 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096900117 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.115627127 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.092512351 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125651279 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.106961388 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.093598759 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.117073522 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092899653 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.118111533 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.085653919 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.113577824 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096085079 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114848658 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.084821706 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.108674343 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.090686606 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.114258897 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089795573 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.103978683 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105614328 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.119446948 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.094373902 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.112579554 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09293887 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.104390885 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.08505758 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.109178269 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096530289 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.113422318 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.103095159 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.110191358 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.090079932 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.104428157 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094412532 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114767044 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.097023357 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.106197525 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.084746116 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.109472583 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.095603904 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.120804782 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092645569 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.113018048 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096198751 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.113993538 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.08879138 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.118799664 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.087376051 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.115310862 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106049174 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.115245002 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096658204 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.119111264 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.119508143 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.095645419 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.104402374 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.095641935 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.113803754 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095357457 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.114666884 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.096505831 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.130128543 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095124556 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.110140853 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.0925773 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.113594028 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.089864563 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.122106422 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095376824 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.116493971 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.096423183 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.112742538 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096613172 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.12191062 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116178466 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.095493957 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.114535013 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.094038805 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.114229442 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.093128396 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.112575236 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.097036638 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.116121969 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094693579 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.117678017 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.09071042 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.125747306 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.101413684 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.116667749 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.085654067 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.110637668 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.09059085 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.10564132 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.096449049 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.10806024 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.092910827 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.11172842 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.094099081 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.115406174 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093928105 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.10829073 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.091239851 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10768765 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.080534887 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.116029087 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.092485748 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115206432 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.089568644 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.114204936 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.097485574 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.119104254 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100442418 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.112513688 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.095080222 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.113865866 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097890152 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.106179834 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.097966747 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.11300056 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.093543459 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.110720525 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095110705 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.116930548 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096955325 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.116134278 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096816179 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.115409119 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.099627195 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.118648939 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.087139473 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.107622236 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.098369154 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.108729866 seconds)
  done (took 59.973191671 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.152643299 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087335646 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098768745 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081337149 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128478738 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087180507 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105684136 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.087574046 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10659946 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.100159786 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106926265 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085468771 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.127701728 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133598526 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131368016 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.121370327 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086680523 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106458182 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085749384 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106544438 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107638652 seconds)
  done (took 3.031188918 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.107019878 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119142706 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.121695302 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108139136 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.119789513 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.124183942 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.103044886 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.126443208 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.128004341 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.118710582 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.108764733 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124981888 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.118481511 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.099121579 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118359891 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.121434822 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.109054624 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.117115684 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.125255043 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103649062 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.121478263 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.123600358 seconds)
  done (took 3.363792609 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.093837183 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.09290706 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.120373815 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.087951276 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.114284691 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.088521259 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.119971684 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.090460659 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.120227076 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.095103131 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.112390787 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094547979 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.121054625 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.088493411 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.11282136 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.090816481 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.11957242 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.094695706 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.116724881 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.08841677 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.135859941 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.108514302 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.089399617 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.091175841 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.126033043 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.115279583 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.094967107 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.09422759 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.111898457 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.094448114 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.111425058 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.097532771 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.11864431 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.091706659 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.111541035 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.094258517 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.115156373 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.088732767 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.111678119 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.098670798 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.10995046 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.096282965 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.121980215 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.091283353 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.111137142 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.097178676 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.114981062 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.088424047 seconds)
  done (took 5.793500203 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.12309875 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164823654 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.094301472 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.156286185 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.130159545 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.119500508 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.093306699 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.14982753 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.106397428 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.089552711 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.126603485 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.124242909 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.089985211 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.117632861 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.089690882 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.109909527 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.112563433 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.094593898 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.119721532 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089513222 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.117645692 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.112115462 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.104603784 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.12294801 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.114709141 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.092423893 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.110833286 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.104849321 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.121481317 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.114156118 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.095185278 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.121345057 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.13846356 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.09689092 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.112001593 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.111425187 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.106237606 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.109918199 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091866027 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.107517572 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.110531494 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09940324 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.112419751 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.124996937 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.090544068 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.110996203 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.093540824 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.111319093 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.127543033 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.096244419 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.118843224 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.122093923 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.095320559 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10923058 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.095769301 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.128683364 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.109679339 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.088531961 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.112966915 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.120333741 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.089989191 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.119525937 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.109622687 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.115460478 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.118386492 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.104240185 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.113387637 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.115210907 seconds)
  done (took 8.519158058 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096965157 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.133981718 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126471539 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107167265 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119733585 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.120923994 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102108224 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.122173042 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101845832 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.13034469 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121296427 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.17477733 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.095170673 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.127768009 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101108485 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.125351761 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.120596473 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101683166 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.121466621 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100773057 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.122325033 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.131939831 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101317857 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.133814046 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135560199 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.114553976 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101930582 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121787073 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133541803 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.102438949 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.13525477 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.122452514 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100978748 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.130207509 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.135325383 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.102085924 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.112338287 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101884464 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.122730298 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.117197561 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.088747874 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129659355 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.121556961 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.095379666 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121766977 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.102704253 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.134160276 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.135654093 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.127986209 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110172623 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.122546673 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.134016467 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102595818 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.122457941 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.134213751 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.142123422 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114153191 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.134884232 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.1223763 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.133969149 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112756425 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.142250798 seconds)
  done (took 8.221097773 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086632033 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085427355 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.104249132 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.083889184 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105662982 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083833528 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105535808 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.087882661 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087493521 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.106341702 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08707235 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104535374 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084622845 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106226095 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085721058 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105693809 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086853271 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085478649 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106973248 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088397381 seconds)
  done (took 2.689264125 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.096255368 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.126975749 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087246479 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114765581 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.092068012 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.116091279 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108720159 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091257516 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112898159 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094284088 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.123414948 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103776267 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108605414 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113537806 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10025818 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.115240815 seconds)
  done (took 2.518274511 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.10789092 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.121974085 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.133773777 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.093264575 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104639863 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.094583422 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107552911 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.082931927 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.103127105 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.096211494 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.113322771 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.09956847 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.109156609 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.088804196 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.110290938 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.094271295 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.103216935 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.090923234 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106682036 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.114070505 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.118586779 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.116086679 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.092424443 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.113968829 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.091986864 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.115300856 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.094556072 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.108073169 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.092078885 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.114703463 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.096387116 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.123827788 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.089400046 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.120333493 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.089665441 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.111500502 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.092644044 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.115051794 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.099594697 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.110738498 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085307658 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.111363711 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086630001 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10925521 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082355526 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.108414881 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.08249442 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.114930398 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.108375059 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090913745 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106332005 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.096293205 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.113905175 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.099432961 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.116965308 seconds)
  done (took 6.506414655 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101945981 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110216185 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092974329 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104306282 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090826287 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.115652761 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.090822016 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.109673377 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08928832 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.106167201 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092440103 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.114327582 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09313936 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11319082 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093282293 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113575773 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083426491 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109296874 seconds)
  done (took 2.638844093 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.093174254 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106552889 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095149665 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106463292 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087105419 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108777944 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08329584 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.0852434 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106529856 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.092226893 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110912398 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.095572606 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111767137 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.095829001 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114763579 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093542374 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.11719518 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092701194 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.114724999 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090005925 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.116921493 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092628662 seconds)
  done (took 3.028189924 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.106227021 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.14835654 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.108764656 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.15987315 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.120530788 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.098335948 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.130530738 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098641477 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.139442282 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.119143012 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.099542892 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.118853012 seconds)
  done (took 2.271042621 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114513182 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148025006 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085468274 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111113679 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123593445 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096754028 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118448695 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097086313 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132057553 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13461915 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09966133 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134296608 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13394847 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132409037 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107869703 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132217696 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114856733 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093547578 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109799145 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139238861 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098684314 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134600621 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119854473 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100460101 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12031908 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131507356 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108579671 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131408469 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114177976 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104303267 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122387087 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112871674 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106714726 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127567688 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111007366 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124486413 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093928742 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136949912 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121294006 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102730241 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111502599 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12020769 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105042942 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120794787 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127063276 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097141235 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123700352 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115240967 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096106741 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144369833 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128446492 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132291118 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107808532 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133386108 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127876341 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149669485 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135267204 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133348398 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109577845 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135739422 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133184888 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129195945 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110608869 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135212502 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129692423 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132591387 seconds)
  done (took 8.730677345 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128940525 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107472242 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094518985 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128761926 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124670406 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11259989 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093666215 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112341183 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092457898 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11100104 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.160382922 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113014222 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104612897 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125647282 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113638072 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096768636 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118814097 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127212651 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091437505 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14445236 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113947491 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124269474 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104916784 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125157176 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127111209 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121787104 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093430488 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113346154 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093272983 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113834092 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12117717 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097901941 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131218858 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109566355 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110319229 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12140197 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099933142 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130359822 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12202193 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108002401 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135711415 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14245836 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122269957 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101809488 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136369339 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122438028 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101285314 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118904868 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101052258 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119185356 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135931088 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136280787 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114523163 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135759589 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122338325 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101585081 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121558225 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121264993 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100396489 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128192354 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126047231 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094486663 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144217217 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115329773 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096950506 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125224237 seconds)
  done (took 8.537596317 seconds)
done (took 161.102182975 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.107319867 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.145331485 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.104603327 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.172768206 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088595552 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.14491772 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121976704 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.126803854 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.095589536 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.11883426 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.096360008 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.11918335 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.159566633 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.110036235 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.089215641 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.113458375 seconds)
  done (took 2.736213003 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.183942816 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.301452835 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.11643138 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.123474176 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102784292 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.120885071 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.099055054 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.118280001 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.091010845 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.123142162 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.110059556 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.091727196 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.121975307 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.091669726 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109821371 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.092205871 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.124186661 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.091071199 seconds)
  done (took 3.044727682 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.11468348 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.159108378 seconds)
  done (took 1.108194319 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.125232509 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.188999913 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.31135344 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.173309949 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.123677908 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.142864945 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.177664721 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.138652794 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.210149001 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.141511622 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.119454622 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.126540598 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.150382231 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.110034462 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.129621609 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.103312307 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.153707427 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.125565338 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.105627405 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.126921333 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.125758439 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.126427104 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.127669255 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.099783461 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.188056132 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.132541567 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.117149147 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.099216813 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117448482 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.097357556 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.122301942 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.130609119 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110092551 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.195591514 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102326892 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.192064018 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.104669147 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.115997895 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.097046755 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.116950764 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119427947 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.099318385 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.13192365 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.115022707 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.09746339 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.124096558 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.09635761 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.116416157 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.102262013 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.126805103 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.123208902 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.101142531 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.192105536 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.126354108 seconds)
  done (took 8.007532269 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.851107881 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.159227525 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116492913 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.957995728 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148651961 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130228966 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.856223655 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116295788 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.27434625 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.092540881 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134774248 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.134814315 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.238830488 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.265101008 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.158586959 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.344712403 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.726895042 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.129612015 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.123341916 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.161711096 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124003978 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144137097 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11334228 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.468996897 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095606011 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114446227 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.099946366 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128421574 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170956838 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.115067463 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097701444 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.211166962 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.276591788 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.186376955 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119098425 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092688823 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114457461 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.175000979 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.279756609 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.229917412 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.19018065 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097226992 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.118497154 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.109549767 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.137838677 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.115312646 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180856692 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.191293467 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.213998959 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104493666 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.135729139 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108428041 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131760278 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.178134124 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.122785092 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.358766117 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.36045925 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.101986106 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130536951 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12106917 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.285249695 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12011251 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.238248231 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127357441 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.225416418 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.120666232 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.782620419 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.176233342 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.121846082 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.131006882 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.110234211 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12600003 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.135678548 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.185399192 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.39794727 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118599816 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.127844707 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101182646 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.262582971 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.10098803 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117653565 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.178076546 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118930546 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10273758 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132839598 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.128871042 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.181631619 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.260349283 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131440129 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.124596848 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.102912355 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131662033 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.097163363 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.246019585 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.205527417 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.189988222 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.227753258 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127907983 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.17583092 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.173583384 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129724681 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.186142863 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.13001193 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.142233434 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116190166 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.231478438 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.160118354 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123131285 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104120028 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.129991684 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.16329593 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105876756 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.127144405 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.182534529 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.496785298 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.185336743 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097824026 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12103968 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102696188 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.193387502 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103540971 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.27860322 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125159994 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.177986543 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101767138 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.114056459 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123666839 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.176906898 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.135525937 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109511864 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131752088 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126264056 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.270675949 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.238189541 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119252414 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.251067979 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.195833965 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.130599365 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.19367964 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110472038 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.213030575 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112778047 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137130261 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124941945 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.775968287 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.130535953 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124448155 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098229454 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.2039167 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117054556 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.096750095 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.115367105 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091531226 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.823958049 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.098094667 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.113937554 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.095410583 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126654657 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.102764504 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123177761 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.120699323 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.173020521 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246474676 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114416988 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.133226371 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.117003861 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.173359826 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.09763468 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.117264411 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.093213035 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.117537716 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.102606327 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.122742846 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.097482971 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.207176635 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.17765584 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.234772792 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.541816208 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.125067519 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.092588818 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241604225 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119968708 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.317871327 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101596131 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.23898414 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.181729738 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.117613866 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.356691514 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.190012322 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.216948596 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104213807 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.206363241 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093964682 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.124361807 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.176155613 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.119639614 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103719354 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.166910386 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.138261317 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.132809127 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.166631315 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094256462 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.240456156 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.116862535 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.179323282 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117824753 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10520341 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.321200384 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11758616 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113184461 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.195364683 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098971484 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.116854359 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.670332687 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.116791387 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.10416831 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12837686 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.235989854 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.179400284 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.125556357 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122787962 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.109778321 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.17127942 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.244103201 seconds)
  done (took 46.80220829 seconds)
done (took 62.52401085 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.327242802 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.276215485 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.311996033 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.203638556 seconds)
  done (took 2.060103097 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.187293315 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.160842034 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.131025205 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.115129951 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.163314931 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.096288197 seconds)
  done (took 1.714948059 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.507402283 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.39228917 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.357880781 seconds)
  done (took 2.122051943 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.277148532 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.293756655 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.367772215 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.46376904 seconds)
  done (took 2.376175222 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.221042931 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132391724 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.105534587 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.14541475 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.178813111 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.184024708 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.149438225 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.158896124 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.135063882 seconds)
  done (took 2.324298961 seconds)
done (took 11.461880651 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.13379537 seconds)
    (2/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.291582602 seconds)
    (3/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.152759125 seconds)
    (4/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.20949364 seconds)
    (5/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.257654996 seconds)
    (6/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.290652352 seconds)
    (7/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.298813309 seconds)
    (8/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.244885306 seconds)
    (9/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.166115826 seconds)
    (10/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.254720907 seconds)
    (11/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.112783173 seconds)
    (12/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.167314472 seconds)
    (13/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.206286436 seconds)
    (14/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.216584622 seconds)
    (15/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.246407442 seconds)
    (16/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.258212948 seconds)
    (17/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.128372303 seconds)
    (18/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.280467025 seconds)
    (19/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.135066417 seconds)
    (20/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.109416584 seconds)
    (21/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.205443772 seconds)
    (22/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.195539284 seconds)
    (23/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.240747944 seconds)
    (24/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.263629946 seconds)
    (25/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.182155363 seconds)
    (26/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.161785133 seconds)
    (27/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.099872856 seconds)
    (28/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.207492177 seconds)
    (29/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.132600912 seconds)
    (30/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.165657466 seconds)
    (31/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.080267894 seconds)
    (32/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.185086626 seconds)
    (33/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.094848312 seconds)
    (34/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.208472933 seconds)
    (35/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.249076944 seconds)
    (36/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.136561188 seconds)
    (37/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.137642407 seconds)
    (38/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.176869609 seconds)
    (39/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.133378869 seconds)
    (40/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.132729292 seconds)
    (41/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.21869582 seconds)
    (42/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.112120824 seconds)
    (43/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.129252529 seconds)
    (44/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.157558759 seconds)
    (45/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.148741254 seconds)
    (46/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.198545308 seconds)
    (47/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.19808156 seconds)
    (48/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.119413878 seconds)
    (49/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.119356443 seconds)
    (50/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.14923581 seconds)
    (51/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.125859539 seconds)
    (52/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.119143229 seconds)
    (53/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.148881855 seconds)
    (54/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.265938105 seconds)
    (55/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.089984812 seconds)
    (56/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.109510787 seconds)
    (57/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.173544283 seconds)
    (58/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.122316033 seconds)
    (59/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.09844893 seconds)
    (60/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.19920473 seconds)
    (61/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.102974529 seconds)
    (62/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.110657202 seconds)
    (63/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.151824762 seconds)
    (64/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.21705362 seconds)
    (65/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.160491891 seconds)
    (66/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.080496157 seconds)
    (67/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.140629371 seconds)
    (68/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.081195501 seconds)
    (69/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.198703811 seconds)
    (70/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.200964365 seconds)
    (71/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.164409141 seconds)
    (72/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.09848078 seconds)
    (73/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.121445182 seconds)
    (74/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.113406016 seconds)
    (75/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.147819628 seconds)
    (76/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.104763643 seconds)
    (77/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.104365864 seconds)
    (78/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.153479667 seconds)
    (79/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.197292036 seconds)
    (80/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.102699341 seconds)
    (81/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.134765719 seconds)
    (82/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.151363126 seconds)
    (83/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.143028068 seconds)
    (84/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.081368243 seconds)
    (85/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.101980146 seconds)
    (86/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.106912538 seconds)
    (87/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.118025797 seconds)
    (88/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.101806608 seconds)
    (89/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.101967141 seconds)
    (90/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.137776477 seconds)
    (91/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.110143582 seconds)
    (92/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.10004358 seconds)
    (93/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.101533597 seconds)
    (94/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.081047713 seconds)
    (95/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.079126808 seconds)
    (96/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.136957221 seconds)
    (97/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.206150017 seconds)
    (98/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.127828501 seconds)
    (99/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.141495114 seconds)
    (100/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.115222703 seconds)
    (101/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.0997082 seconds)
    (102/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.121137529 seconds)
    (103/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.123141703 seconds)
    (104/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.119382429 seconds)
    (105/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.144096926 seconds)
    (106/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.081717727 seconds)
    (107/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.091735944 seconds)
    (108/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.120128179 seconds)
    (109/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.09595734 seconds)
    (110/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.13751501 seconds)
    (111/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.080721529 seconds)
    (112/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.133071286 seconds)
    (113/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.168342744 seconds)
    (114/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.099518561 seconds)
    (115/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.103626331 seconds)
    (116/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.113570352 seconds)
    (117/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.130701708 seconds)
    (118/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.099276817 seconds)
    (119/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.134522382 seconds)
    (120/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.098669706 seconds)
    (121/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.169501419 seconds)
    (122/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.121220812 seconds)
    (123/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.09120064 seconds)
    (124/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.079546286 seconds)
    (125/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.10505905 seconds)
    (126/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.088170292 seconds)
    (127/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.180415584 seconds)
    (128/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.104566316 seconds)
    (129/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.081935451 seconds)
    (130/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.132109097 seconds)
    (131/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.081415973 seconds)
    (132/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.086939194 seconds)
    (133/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.157916763 seconds)
    (134/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.131047515 seconds)
    (135/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.098847712 seconds)
    (136/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.104912464 seconds)
    (137/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.096449387 seconds)
    (138/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.211026337 seconds)
    (139/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.116896473 seconds)
    (140/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.096846333 seconds)
    (141/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.102908009 seconds)
    (142/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.093866889 seconds)
    (143/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.087203788 seconds)
    (144/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.14256215 seconds)
    (145/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.160278458 seconds)
    (146/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.097609304 seconds)
    (147/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.198428741 seconds)
    (148/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.123028863 seconds)
    (149/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.120829089 seconds)
    (150/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.129450666 seconds)
    (151/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.109018403 seconds)
    (152/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.131404024 seconds)
    (153/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.103079083 seconds)
    (154/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.200383705 seconds)
    (155/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.104743495 seconds)
    (156/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.097435892 seconds)
    (157/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.103511715 seconds)
    (158/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.100940858 seconds)
    (159/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.080864782 seconds)
    (160/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.148826572 seconds)
    (161/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.102813067 seconds)
    (162/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.082990123 seconds)
    (163/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.089677923 seconds)
    (164/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.116288278 seconds)
    (165/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.13513182 seconds)
    (166/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.119793834 seconds)
    (167/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.079936028 seconds)
    (168/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.128328041 seconds)
    (169/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.095622385 seconds)
    (170/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.104603529 seconds)
    (171/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.080864879 seconds)
    (172/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.12121408 seconds)
    (173/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.100547448 seconds)
    (174/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.112044643 seconds)
    (175/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.226642704 seconds)
    (176/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.079974677 seconds)
    (177/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.103822112 seconds)
    (178/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.081512042 seconds)
    (179/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.087348372 seconds)
    (180/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.104385057 seconds)
    (181/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.087621749 seconds)
    (182/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.135716498 seconds)
    (183/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.080943312 seconds)
    (184/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.10321317 seconds)
    (185/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.093278982 seconds)
    (186/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.10370872 seconds)
    (187/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.093423521 seconds)
    (188/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.118928843 seconds)
    (189/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.099620991 seconds)
    (190/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.102286829 seconds)
    (191/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.097211389 seconds)
    (192/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.130243219 seconds)
    (193/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.080777821 seconds)
    (194/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.120093434 seconds)
    (195/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.099999235 seconds)
    (196/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.121900593 seconds)
    (197/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.107705381 seconds)
    (198/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.122341744 seconds)
    (199/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.081261342 seconds)
    (200/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.199406379 seconds)
    (201/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.122558826 seconds)
    (202/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.100887081 seconds)
    (203/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.136331203 seconds)
    (204/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.096767408 seconds)
    (205/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.103621757 seconds)
    (206/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.080626345 seconds)
    (207/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137594647 seconds)
    (208/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.088467074 seconds)
    (209/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.103708795 seconds)
    (210/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.107954947 seconds)
    (211/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.127187989 seconds)
    (212/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.100930915 seconds)
    (213/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.120982838 seconds)
    (214/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.096291463 seconds)
    (215/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.131359737 seconds)
    (216/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.080181968 seconds)
    (217/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.123226033 seconds)
    (218/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.119163377 seconds)
    (219/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.118345095 seconds)
    (220/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.080806049 seconds)
    (221/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.104411861 seconds)
    (222/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.096132259 seconds)
    (223/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.12335588 seconds)
    (224/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.080974927 seconds)
  done (took 30.940158803 seconds)
done (took 31.806112565 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.415605611 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.146414377 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.131713401 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.105909563 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.149787361 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.113679263 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.129785082 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.10664482 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.128644863 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.093593279 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.119819916 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.128758753 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.106110119 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.147962682 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.107284254 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.121664745 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.097122915 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.130810574 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.129517811 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.108406162 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.14949839 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102551515 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.127667482 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.095733506 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.151879248 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105411288 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.129994356 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.106921765 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.12838183 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.097373314 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.130172449 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120244741 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.108067543 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.131890227 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096675573 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.119959549 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09518213 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.110686858 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.096905077 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.121671682 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.103524521 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.120448042 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.106055687 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.121841846 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.100437082 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.119658035 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095982242 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.132617015 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.093869311 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.129982594 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096773708 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.13307882 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.117341199 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.095269681 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.117980318 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.097415147 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.128425304 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095232853 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.128741072 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095517318 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.120656047 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095346679 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.123184936 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095165882 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.119648395 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097635495 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.121427501 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.098430264 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.118059433 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098136088 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.118119829 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.097926763 seconds)
done (took 9.489459594 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.105546305 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.192228887 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.156463074 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.159994726 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.154586566 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.115735929 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.132075491 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.152511902 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.104288727 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.150934547 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.151922662 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.143111928 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.133967782 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.129336243 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.138046265 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.103705264 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.12743825 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.137661322 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.13909331 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.150275618 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.15407443 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.12915064 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.127347094 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.147901658 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.126851348 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.125560685 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.13116019 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.127217438 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.107558478 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.144234963 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.119460187 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.132672952 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.129658346 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.115332598 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.135372868 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.100886471 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.139530605 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.123448689 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.103802325 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.128645526 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140634762 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.114976573 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.125659626 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.136765632 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.107663012 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.132472189 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.104212531 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.127686943 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.105756436 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.123671856 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.13285749 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.144199792 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.1272479 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.129757025 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.109637855 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.127313179 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.104994648 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.131364188 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.130037634 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.108102583 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.128477688 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.106187716 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.134631472 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.144653951 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.126474353 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.109332816 seconds)
  done (took 9.441974639 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.120944942 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.160454257 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.134649758 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.111758091 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.131859778 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.093970876 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.117601576 seconds)
  done (took 1.79231828 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.096973095 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.148405395 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.129030549 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.153598471 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.142155853 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.131825643 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137815034 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.093901516 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.144688842 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.129239525 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.122543311 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.176784117 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.121212503 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.106915363 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.157920305 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.120138113 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.133921709 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.119475791 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.103915711 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.155438518 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.128399193 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.119734163 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.133689994 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.096556523 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.145663849 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.101200308 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.192124466 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.13553337 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094624395 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.125725778 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.100647559 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.217147296 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.121687435 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.129902555 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094078972 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.151878289 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.12089468 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.127274504 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.145388071 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.100723234 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.144497587 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.104488794 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.128906855 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.12631343 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.105214801 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.135038571 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.109848882 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.12930713 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.100477687 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.152441651 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.138036857 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.120532241 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.121110995 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.099881391 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.130770063 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.102843296 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.135226972 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.101524225 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.153367255 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.131111979 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.124455383 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.150274097 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.14686299 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.12641111 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.139712881 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.118643297 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.14479835 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.126509862 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.10531906 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.128022726 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.123028762 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.125408004 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.129749851 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.114348044 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129083764 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.124108935 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.151759602 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.103265067 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.133579426 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.099254599 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.124635354 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.097505171 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.13858965 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09863295 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.124366991 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.137840366 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.107977672 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.125402313 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.100239491 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.143750637 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.123589009 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.107204313 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.131882702 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.101144811 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13682734 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.151465558 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.108900225 seconds)
  done (took 13.210883822 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.100344576 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.096312713 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.128039481 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.121681828 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.100217635 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.0964739 seconds)
  done (took 1.57862962 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.131389297 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.125480107 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.113668802 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.129070626 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.166135473 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.121490855 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.149893963 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.137848815 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.118589703 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.137710567 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.122003411 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.151415332 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.156138325 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.106298419 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.148290622 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.10680096 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.147573207 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124442668 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.114066319 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125052248 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.114329248 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.129575477 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100698241 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.148353308 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.106910293 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.132865323 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127708112 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.113695825 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.137356093 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.106278127 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.129913553 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.103822733 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.13181032 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.131628824 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.121634343 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.130806528 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099305106 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.132008074 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.129009334 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.105547656 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.147894002 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10095894 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.136008143 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.107582633 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.132602657 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.129703928 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.109017576 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.128088706 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.123264529 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.130958299 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.106089167 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.130668932 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.105164142 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.132134965 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.103188373 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.133902708 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.130769351 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.121503724 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.129069827 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.103982586 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.127925394 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.103957655 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.1327611 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.129024404 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105942895 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.130495474 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.104572264 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125534219 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100907858 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.129147367 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.106805928 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.127363305 seconds)
  done (took 9.869926901 seconds)
done (took 36.807755641 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.130992115 seconds)
  done (took 2.060171291 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.891267177 seconds)
  done (took 1.823465153 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.344780669 seconds)
  done (took 18.305694993 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.544297137 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.626165806 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.989294485 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.170890226 seconds)
  done (took 3.255566795 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.976805204 seconds)
  done (took 1.923031463 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.322822154 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.274706421 seconds)
  done (took 1.526398642 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.840014126 seconds)
  done (took 1.781163981 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.609728144 seconds)
  done (took 2.551700273 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.371094735 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.210744149 seconds)
  done (took 1.534499183 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.606848967 seconds)
  done (took 1.553424025 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.593655673 seconds)
  done (took 16.548001101 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.241329505 seconds)
  done (took 1.206122059 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.310848747 seconds)
  done (took 1.261160567 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.618209128 seconds)
  done (took 4.571507048 seconds)
done (took 60.840062134 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.110931576 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.134592102 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.110558225 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.132403497 seconds)
  done (took 1.432843907 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.114219435 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.128329843 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.1073433 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.129053041 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.113201779 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.130675395 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.10434253 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.139297708 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.106128083 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.133824316 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.129533286 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.106745941 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.131060998 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.104872996 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.127518568 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.106443028 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.133821345 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.106058409 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.129973637 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.105324273 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.131286172 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.130263702 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.109006089 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.130509188 seconds)
  done (took 3.839657033 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.110500183 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.100820131 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.130143036 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.099438631 seconds)
  done (took 1.396170599 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.116659485 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.144856048 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.11891294 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.138191073 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.144955128 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.120620041 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.126327026 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.100999389 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.130924151 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.112922947 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.127741499 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.120075676 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.145781911 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.121077169 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.11317711 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.119571897 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.097101529 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.145466092 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.112301523 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.139712207 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.100578937 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.138159946 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.108926953 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.141982978 seconds)
  done (took 3.946400939 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.17921868 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.142760579 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.150744917 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.175338106 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.129842156 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.126574316 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.12727992 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.134878663 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.130444462 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.101290812 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.126127269 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.157644327 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.133150522 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.128367293 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.102927495 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.132032975 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.107322176 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.131502418 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.102392599 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.142250083 seconds)
  done (took 3.624539872 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.111354765 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.125663906 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.099564107 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.12574753 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.110717557 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.128717926 seconds)
  done (took 1.664734611 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.101277684 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.095383018 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.123766573 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.097920088 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.127494519 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.097855771 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.120157482 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.09947225 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.094611738 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.122559315 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.095446663 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.121648425 seconds)
  done (took 2.256299602 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.231377736 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.129782051 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.12611523 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.101707545 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.130969191 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.101999202 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.141207704 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.101079276 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.182576629 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.127192101 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115114761 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.181250738 seconds)
  done (took 2.633962476 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223463674 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106090804 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28955729 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.387559788 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167247691 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175889197 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.285770854 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181150085 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198284154 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150405553 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217748373 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171055741 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166055197 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191436408 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126169424 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.198307886 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185952704 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241440516 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136595724 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254336562 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179821794 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177150561 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205285395 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162783171 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1239962 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169011161 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.129035695 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1134053 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182340765 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181112948 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211350811 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133725345 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149440702 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237420602 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230052978 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190798945 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.324566772 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146313901 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.201309154 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.208146492 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.293369471 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151155107 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20638851 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168162669 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144101984 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196216228 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168395764 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.191840784 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.113627925 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154794992 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195743718 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185587359 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.220628828 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124273226 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.335471476 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131488444 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.156666936 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191833134 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199906391 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237502479 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181685704 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.107873429 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19820408 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227756546 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194806535 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.129446182 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.177111045 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137169596 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187193726 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.215906286 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187033283 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205912162 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.194615325 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145235782 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175022556 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192106441 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16660411 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163873283 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172180915 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.132210028 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162004172 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120372754 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139038384 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.197899624 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106646061 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252371183 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120051183 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.303113721 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248556632 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16968505 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170081344 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1766584 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181015528 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129556951 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.130667244 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159525836 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.181805154 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171023936 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114678204 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168626885 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157095241 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.107415801 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164667179 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.133745119 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169595522 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.115760087 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176879933 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173804715 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.139465829 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175825689 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159637134 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.143450855 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209666017 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207411422 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116370302 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143261208 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215795506 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169813569 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.145424871 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197099282 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.210765845 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.186673864 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147019229 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179524718 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208151223 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152812475 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212767172 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153667763 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116538031 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.161370929 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170314991 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167600322 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.16634608 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110642252 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.162693022 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212473773 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.140807498 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145835273 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185742229 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109585778 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139658215 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156253705 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117357698 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.153581606 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.161254684 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.147430317 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137304288 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169490261 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164312304 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170055112 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155046715 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201841667 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142914322 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.171189918 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128807221 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.128898173 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.192140397 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205277956 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141873107 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199696181 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.180171166 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211525302 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17205123 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142227176 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193197537 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139142351 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.104605425 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175191513 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170864357 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173991708 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.201865931 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230991929 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.178813291 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.133930001 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161494457 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177394811 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.194202206 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164974537 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.156362321 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173583496 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177838497 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.102337085 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.135007987 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135808487 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121869983 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141967816 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142081726 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193418413 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174952418 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198190892 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169448658 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149498966 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20390815 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.106863306 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175801498 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.210765657 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121909731 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.204724084 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23128956 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150478218 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153232908 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179579156 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.130752824 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106948892 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143897822 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17762682 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142093877 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118211881 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154630054 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203196791 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186362342 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160328873 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23958249 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178561071 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213882242 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.102802691 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.175833947 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190850905 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171117382 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.197543223 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117253953 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.169614683 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197827273 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15624307 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203502135 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172830995 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180140408 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241812102 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.14135688 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142126377 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160750275 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179223804 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148158259 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182202665 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129866463 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146517093 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164183385 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.144453234 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108640016 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190607591 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153263097 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189646113 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.176138014 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212060254 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110593671 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15456372 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170182528 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126999935 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.129087745 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179612188 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206314598 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154527688 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16920277 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194564737 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140965539 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.32460607 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207408948 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195784969 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147406479 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154531617 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171811764 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178457023 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17372261 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194030238 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123429738 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193301068 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171046801 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.153629535 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143919023 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129315268 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15995115 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.161541047 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.142323025 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.162357129 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.123956452 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221670608 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126279756 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170355478 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177020313 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.159021455 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.163705835 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121255919 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219759797 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168336027 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189181711 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.167736773 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.186356595 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19870198 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135183505 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109020621 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.137798598 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192035756 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142124675 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170298825 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.193239399 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207674193 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167472781 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180839769 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147777723 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.10410384 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169179372 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159352003 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20906307 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150715716 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.147507698 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209906739 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.162361377 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11107616 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175879958 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.320517546 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126274967 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193608644 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.132872602 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.287346267 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134407576 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113161289 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180302454 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183345504 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.141438878 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.166726596 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172842486 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157445495 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182009993 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149253067 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198981839 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21752632 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17891315 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214557849 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.126912146 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1696814 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172783836 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196711457 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155049531 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.156326326 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14294924 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233684463 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.209590535 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.114553111 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176091934 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172818833 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170356557 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184299056 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145906526 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198926532 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142595727 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178409808 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148830097 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109933462 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167978704 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.19334973 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141887385 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196804071 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16963969 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112080527 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137723837 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162374035 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171293077 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124093081 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.140094875 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190135792 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.138134157 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173798931 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190487242 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112340891 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166529762 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155948832 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112344839 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154053817 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153452205 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115892402 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.182613239 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200440866 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.141423354 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196328946 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182261914 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175085637 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1696554 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155083894 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.641681618 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.139924353 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202959622 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158964963 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197883816 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159428502 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177418109 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171186721 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133046607 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177829373 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159820757 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231349671 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175881195 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.169571929 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140593501 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126944228 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157347092 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.139887534 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132917963 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173820885 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152217251 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.146534505 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.169988565 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127615108 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.155465823 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14912221 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206362806 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157547808 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193155834 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196346207 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147842598 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147637683 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217341833 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110086761 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.171443095 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181947735 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15439185 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161392901 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.111089945 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.146737623 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192390277 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.104519282 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17269977 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170923421 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171468617 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174612451 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146229498 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169986645 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123357477 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1712165 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135818247 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.165120571 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167322831 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114109339 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.137422466 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165437425 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168772557 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.139666772 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138250834 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.156576741 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225550885 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.107788039 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144179947 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29206442 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168573338 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205853678 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.163429527 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114755814 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154995189 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163689874 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.163637011 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170253096 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.110987946 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143263258 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.111570945 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.193479122 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.173960609 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169075025 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193963315 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172677685 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201050675 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.147693414 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.274185359 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11970124 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167076083 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.14106116 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.109731694 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152711358 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143411034 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126018495 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.231324678 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189657027 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.134461716 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.15704 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138453401 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.104575002 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144015432 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182296808 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164588053 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168391258 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122959986 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.129963803 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154215404 seconds)
  done (took 82.439946321 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162181384 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.151400016 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.158891986 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.207950671 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17732541 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.26741679 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.215174532 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.236781011 seconds)
  done (took 2.623358506 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.113030517 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.144619451 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.153683423 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.133389449 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.132995018 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.36176547 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.150015501 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.10666592 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.196595105 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.151443904 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.131616297 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.64429933 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.108259274 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.138450214 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.121201655 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.13543193 seconds)
  done (took 3.961979932 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.264045635 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.541016453 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.882023802 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.253780374 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.234168875 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.162821987 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.744083806 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.194299404 seconds)
  done (took 12.320518575 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.142219219 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.154289753 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.278950501 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.19629703 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.179184978 seconds)
  done (took 2.00725321 seconds)
done (took 125.092803814 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.108520482 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.133845585 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.107758392 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.137768968 seconds)
  done (took 1.529556573 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.12240503 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.09623662 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.121477781 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.087797421 seconds)
  done (took 1.477896377 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.515563393 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092392736 seconds)
  done (took 1.697747753 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.133516565 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.147961524 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.127278092 seconds)
  done (took 1.473229884 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.116106041 seconds)
  done (took 1.175175993 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.120827098 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.111419862 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.154226871 seconds)
  done (took 1.443187164 seconds)
done (took 9.853899153 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144723008 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.446188326 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.396365509 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150667075 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.731123106 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.389613497 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.051853349 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.167752284 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.176094605 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.102821581 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14792743 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.680109364 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.037421777 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.348797015 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.021287985 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.443315944 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.712401825 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.103013797 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.137767823 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.1015024 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.032473102 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.10041939 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.13217593 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101216952 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.708906115 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.404213971 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.130855831 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.482513517 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.102197623 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133115362 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.392951851 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.128134976 seconds)
  done (took 17.385612781 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.148499697 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.191633525 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.138469055 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105675119 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.13248694 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.104816709 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.139282293 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.113278387 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.189862212 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.130625226 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.121261751 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.130230118 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105302798 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.132133631 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.124312155 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.130151831 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.102714624 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.133783141 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.107368068 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.134324163 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.122690992 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.131076733 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.103522681 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.133073903 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.102067307 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.14396905 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.102508232 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.143654972 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099516303 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.136073243 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.133402843 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.105302846 seconds)
  done (took 5.130063504 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.154792433 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.201655387 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.141260518 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.139867975 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.18614696 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.135145954 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.219181611 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.143195959 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.196728985 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.131694708 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.12100021 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.130978187 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.168596349 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.10578828 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.154256868 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.102641814 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.134472898 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.105320404 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.138376837 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.102930513 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.152901776 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.103635899 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.132795682 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.104306008 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.132190412 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.117366402 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.131828548 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.14143311 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.103754036 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133114969 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.110614293 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12872034 seconds)
  done (took 5.474320365 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.112884128 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.136464299 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.12136555 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.147269567 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.106134595 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.137240392 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.109517393 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.133177111 seconds)
  done (took 2.064245954 seconds)
done (took 31.114262053 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.12700851 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.143875294 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.118499004 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.139074869 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.140282627 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.127341193 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.116392744 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09896535 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.142382725 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.116398771 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.133339146 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.10164179 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.146385751 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.107091397 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.150244367 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.113914042 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.155457995 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.117940184 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.134830771 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.110782999 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.133624534 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.124420048 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.139555399 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.101537204 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.158593855 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.136569497 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.122839306 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.134740153 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.110604007 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.102259669 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.151258877 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.106237208 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.134472518 seconds)
  done (took 5.251504061 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.135732211 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.18025645 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.104329853 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.12989307 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.171599844 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.106269486 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.160714629 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.103022845 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.128087007 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.104211729 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.09740866 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.160566518 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.163866696 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.136071446 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.186729598 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.173528229 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.132195844 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.172122816 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.159444808 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.141533366 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.166244904 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.103546172 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.167054294 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.174784703 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.104070821 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.130264548 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.146579862 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.171555499 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.176173447 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.167915596 seconds)
  done (took 5.428035329 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.11343937 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.146926071 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.133222088 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.20561087 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.173280413 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.118412487 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.146912046 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.121939609 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.163017079 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.102228146 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.144508307 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.163896191 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.123833987 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.142792927 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.111992602 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.145550339 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.12605601 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.134273417 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.109330397 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.153654215 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.123528799 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.147263361 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.118687921 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.145540176 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.102930298 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.143068278 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.109523624 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.14933569 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.137233313 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.115591363 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.133837819 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.109695457 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.133182205 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.116618679 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.133999456 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.114063323 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.156223464 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.113942915 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.14843611 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.170004655 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.116537013 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.135693108 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.128242651 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.182731497 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.105369149 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.142455898 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.11575434 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.144851408 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.103563326 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.154243328 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.11908555 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.135254791 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.14981289 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.106070951 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.130229507 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.113785781 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.102209867 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.138041299 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.11050107 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.14198964 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.153765421 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.113351893 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141140824 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.106578671 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.13988625 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.103509414 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.130000107 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.112095741 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.159140328 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.110817184 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.167705646 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.104118831 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.141007414 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.112115512 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.141710055 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.113646176 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.135814471 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109971619 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.142069065 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.106984872 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.143982247 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.106294403 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.13822763 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.119987291 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.148671377 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.141763151 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.110274092 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.139864797 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.106961321 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.135884833 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.118760921 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.136783387 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.108626091 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.145289341 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.10705476 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.137539564 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.111586148 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.140475204 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.10429246 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.156248413 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.111042043 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.134020472 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.122127566 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.135168731 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.107209043 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.143523305 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.11614531 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.134233794 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.109719673 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.14034357 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.101527045 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.140961389 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.108866265 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.133979663 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.116420592 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.14734023 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.110577624 seconds)
  done (took 16.274663379 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.262196121 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.240438921 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.208725648 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.326635625 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.160239654 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.128948112 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.233130777 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.188427442 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.134967362 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.175030128 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.191325912 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.196378347 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.101507694 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.169210548 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.237482914 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.330022993 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.167303686 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.179141942 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.146240825 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.158543824 seconds)
  done (took 5.024690895 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.122501763 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.173550651 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.163576294 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.129206468 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.135056174 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.116384895 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.137258669 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.149943018 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.104589848 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.1405024 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.102561631 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.143903717 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.105630317 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.137090744 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.120172145 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.15357055 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.109065337 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.142237541 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.15155037 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.108768449 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.135558657 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.155947415 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.113505763 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.164280587 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.11061997 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.150653514 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.101438774 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.143364395 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.099666988 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.136943675 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.107826075 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.15074435 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.14148287 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.104245633 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.140292184 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.103066023 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.130471568 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.104783872 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.135519556 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.112453946 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.151726439 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.105966322 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.133638223 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.106866063 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.141622268 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.103927054 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.137995069 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.111389071 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.139748099 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.112713517 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.141369029 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.107557686 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.14349149 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.11543189 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.131701283 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.112350625 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.149147657 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.137261157 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.114236097 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.131985345 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.105832004 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.106788054 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.13453982 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.108416696 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.142862505 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.151188635 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.111957513 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.134954761 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.108730137 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.139784221 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.106728037 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.153878213 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.154438585 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.101716673 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.130071173 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.126970297 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.130222424 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.094524758 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.112401966 seconds)
  done (took 11.169768229 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.136376673 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.134476811 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.12272669 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.171291513 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.120416933 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.145000186 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.103249486 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.15709437 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.109260345 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.146435962 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.11120204 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.15141008 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.164409706 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.123073681 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.134828057 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.123294679 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.141397847 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.146839855 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.155282637 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.169378741 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.120370631 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.140645442 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.119267027 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.148013887 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.139397377 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.149651418 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.170724973 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.114652772 seconds)
  done (took 4.972528912 seconds)
done (took 49.18232411 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.221623463 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.386681893 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.160431117 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.16498815 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.184678699 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.190076565 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.161786222 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.381041482 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.904672664 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.155294541 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.167093807 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.171327723 seconds)
done (took 27.334397497 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.173303906 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.758210631 seconds)
    (2/2) benchmarking "String"...
    done (took 1.482713516 seconds)
  done (took 4.320624453 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.163563295 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.162970653 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.410455737 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.163070362 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.185602704 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.176829864 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.163761071 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.171285794 seconds)
  done (took 15.518632202 seconds)
done (took 25.259885739 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.202834654 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.333100241 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.42563684 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.177400379 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.16139267 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.161343897 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.153341856 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.185213652 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.161987811 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.169708276 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.16120793 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.44971205 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.146746608 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.558044024 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.146039402 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.174258011 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.174649605 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.374286683 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.175301608 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.203038809 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.145226731 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.179049651 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.184858537 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.203976144 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.184363288 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.17425088 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.15848829 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.148627913 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.340680627 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.171821336 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.214349611 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.162763734 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.166220699 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.167519753 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.272143726 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.195215575 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.336047438 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.157263693 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.149773552 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.174502905 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.348066723 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.575574256 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.1785023 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.165132311 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.173587625 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.225198502 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.155960116 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.897113108 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.174083655 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.152387942 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.220549328 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.543528666 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.166982267 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.165860386 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.174628884 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.376940277 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.193316057 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.1899879 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.195909934 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.167735218 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.163124359 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.16438877 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.181411055 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.182585957 seconds)
  done (took 140.799748318 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.168920911 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.174064926 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.17264579 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.194167547 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.17296942 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.170406392 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.169916837 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.168675231 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.174050114 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.200313666 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.17375033 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.16635768 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.174369597 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.158405482 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.170466374 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.192680011 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.173179857 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.174237128 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.193352348 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.167796191 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.17869283 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.170782634 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.179620204 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.164982382 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.211742499 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.265037229 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.222854411 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.201238898 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.174400476 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.172887704 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.203288739 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.198812382 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.782947806 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.026536269 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.172936089 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.18797445 seconds)
  done (took 79.114859376 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.171702173 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.1727432 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.171690459 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.207968274 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.175911104 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.737832679 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.746754123 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.904757518 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.547820817 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.505316871 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.45881668 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.168584421 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.266736715 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.178379824 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.165595416 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.185078337 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.191363759 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.166896752 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.171152781 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.740022285 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.184592615 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.177703167 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.333576022 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.179760311 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.199963746 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.570357342 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.16152093 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.200852643 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.500009309 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.211182277 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.161397112 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.523470232 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.00148195 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.17437916 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.284226658 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.163412903 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.201294131 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.173040587 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.451969582 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.163323139 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.173444681 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.173657175 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.824633735 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.169636496 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.722681417 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.171229564 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.106148405 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.175250454 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.171770607 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.137800083 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.798253447 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.1936105 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.176572409 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.173981876 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.172414577 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.170530677 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.204217946 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.155997451 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.265139361 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.176454914 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.175671218 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.202782058 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.173301227 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.172960602 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.202723534 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.182495815 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.964848734 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.246178991 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.378647584 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.725593908 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.178355304 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.270983554 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.284462216 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.163278887 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.175287082 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.174829263 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.175069621 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.285093304 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.165432152 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.582947285 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.336042357 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.182734647 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.173752864 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.480343312 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.275471129 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.163938187 seconds)
    (87/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.17552293 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.176020049 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.174086316 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.53865052 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.890939772 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.262759198 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.166039006 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.172140036 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.177813145 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.584099063 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.719605705 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.390430202 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.179551003 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.441143747 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.176064132 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.592988612 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.703021184 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.848339875 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.182751811 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.287637278 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.338507079 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.18639977 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.179091917 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.480373169 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.179816412 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.235130498 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.179844409 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.578638819 seconds)
  done (took 364.152286044 seconds)
done (took 585.15101771 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.902574145 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.845743655 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.982397884 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.877022158 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.841442519 seconds)
  done (took 10.53748545 seconds)
done (took 11.624821483 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.363935382 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.367684587 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.238215545 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.371875578 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.212135216 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.387675697 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.347549404 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.201400126 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.279082627 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.260879331 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.283581119 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.232826647 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.217191601 seconds)
  done (took 17.852718321 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.438161826 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.169747201 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.249430003 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.412390638 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.207229079 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.437043045 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.478551648 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.168893326 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.319883059 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.213393361 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.196241484 seconds)
  done (took 17.381218912 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.443780899 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.170488305 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.239182814 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.417364274 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.210360353 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.437820555 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.461011121 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.171107053 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.318073107 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.216617218 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.193403777 seconds)
  done (took 17.371884201 seconds)
done (took 53.697339899 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.219904998 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.349535461 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.20988096 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.189348286 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.186815961 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.190554112 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.196146844 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.187439284 seconds)
  done (took 10.821011166 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.185195885 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.189013035 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.189895942 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.188077928 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.181679967 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.186285706 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.182723703 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.187916353 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.189073393 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.183264641 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.189198147 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.187395036 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.18776148 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.190245898 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.185551281 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.190143752 seconds)
  done (took 20.085511446 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.190416872 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.190181244 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.188713229 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.188750793 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.190721642 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.190553617 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.191390341 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.189134071 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.188356524 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.187409168 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.189360121 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.19041507 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.188392952 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.188685591 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.184526494 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.18869409 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.187075312 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.188976021 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.191917787 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.186651589 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.188120676 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.184896538 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.189400174 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.188512641 seconds)
  done (took 29.627828349 seconds)
done (took 61.624027552 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.185995837 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.187161442 seconds)
  done (took 5.465989386 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.248875842 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.252718397 seconds)
  done (took 3.598220244 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.185336487 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.192120315 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.189611138 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.191939772 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.187812791 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.18975751 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.19256495 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.187165349 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.191437755 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.190265051 seconds)
  done (took 12.992431222 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.193391676 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.193225693 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.185065522 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.1922175 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.192276959 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.189026939 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.190533161 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.193125992 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.195349145 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.191688676 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.19501095 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.191303287 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.193547796 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.192010984 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.192148125 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.191836445 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.192839267 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.192235619 seconds)
  done (took 22.552010231 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.204810301 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.21607571 seconds)
  done (took 3.516256023 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.332699302 seconds)
    (2/7) benchmarking "second"...
    done (took 1.235588787 seconds)
    (3/7) benchmarking "month"...
    done (took 1.309050942 seconds)
    (4/7) benchmarking "year"...
    done (took 1.298378252 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.233550818 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.213783887 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.233763234 seconds)
  done (took 9.953876484 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.189369383 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.382845747 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.492723413 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.735636511 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.198111781 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.199270066 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.981077705 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.200133895 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.202080666 seconds)
  done (took 13.676199133 seconds)
done (took 72.845525511 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.183889881 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.223931698 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.20648971 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.201280467 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.485787861 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.191863926 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.188778008 seconds)
done (took 15.778844151 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.17807635 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.173982055 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.166849112 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.188756412 seconds)
  done (took 9.80540275 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.188361931 seconds)
    (2/2) benchmarking "read"...
    done (took 1.541545532 seconds)
  done (took 4.82903678 seconds)
done (took 15.729932943 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.194930756 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.196569614 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.195630163 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.196970634 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.194526758 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.193700171 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.194058233 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.194106036 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.196317308 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.195327134 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.195614614 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.194571987 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.192298897 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.192069212 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.192801736 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.193236709 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.193558787 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.19345941 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.197588681 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.195655054 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.198086775 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.195258691 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.195167122 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.196533026 seconds)
  done (took 29.778355299 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.197502704 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.192065628 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.198491572 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.197422611 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.195592674 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.198012976 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.19791565 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.194604443 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.197629334 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.198190792 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.194527838 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.194836061 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.199664489 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.195540943 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.199081283 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.195367924 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.20239328 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.195133159 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.199383729 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.197573651 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.19983706 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.195962798 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.19841649 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.196693832 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.196181696 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.197586635 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.199773387 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.197305259 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.200069179 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.197374453 seconds)
  done (took 37.020856884 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.20141848 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.205952509 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.198872274 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.199485741 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.201378348 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.202160023 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.201450138 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.202350029 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.202363904 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.201658952 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.202280965 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.200302131 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.202020739 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.203256496 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.202808045 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.201251525 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.202099093 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.202588889 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.202608933 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.201357178 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.200714366 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.203001375 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.202424285 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.200806902 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.201443204 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.197196072 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.201773626 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.201984636 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.199945841 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.202178605 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.200343346 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.203739807 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.202936097 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.201338862 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.20220152 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.201471435 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.201799834 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.210972494 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.198477862 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.199607388 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.198020221 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.200548371 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.201736305 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.202569026 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.203824557 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.202334048 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.202832334 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.202069841 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.202065423 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.201659558 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.202302237 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.198887788 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.19826374 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.20133578 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.202302356 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.201671181 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.203697824 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.201639657 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.200106282 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.20217277 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.202714564 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.201075541 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.202586816 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.20283965 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.200050093 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.202478493 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.204061834 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.201084097 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.19910421 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.199514657 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.202353516 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.202962177 seconds)
  done (took 87.628245272 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.205495013 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.199177733 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.202784026 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.202932084 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.19522513 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.205303473 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.200923941 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20416256 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.197086318 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.199921454 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.201296435 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.203490145 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20064742 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.204284615 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.200251476 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.196805205 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.202400532 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.202053473 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.19803588 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.203783402 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.203552174 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.198578146 seconds)
  done (took 27.534059441 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.198392767 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.197569861 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.200631991 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.203080244 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.198424772 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.205644599 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.202494434 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.204557427 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203424903 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.197321114 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.198986205 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.205197894 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.205234825 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.199015594 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.201405897 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.203212637 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.199012211 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.205338357 seconds)
  done (took 22.737499431 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.198192517 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.20051036 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.20538723 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.204013073 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.205251708 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.208411618 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.202006161 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.204639099 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.207394934 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.203748242 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.204860909 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.205981296 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.209337363 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206998893 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.204947963 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.201696948 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.204677089 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.202962572 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.207663995 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.204301186 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.203813645 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.205039109 seconds)
  done (took 27.609692988 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.201214919 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.205672495 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.20364092 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.204460261 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.200265326 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.206317945 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.206739709 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.206229028 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.20739298 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.207879457 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.206204153 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.209301123 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.209599477 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.204204029 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.203376351 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.204461416 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.208149174 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.198831857 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.203395101 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.203409014 seconds)
  done (took 25.208617017 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.208465617 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.203222602 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.199583599 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.209754582 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.20711391 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.208073942 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.206306581 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.199748579 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.203572192 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.207766049 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.20891325 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.210258162 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.210213046 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.203989498 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.204165667 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.21064743 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.200118179 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.201400549 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.205049855 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.201763265 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.202454418 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.202899777 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.201038972 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.204232727 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.202503026 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.201338864 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.202539026 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.208115877 seconds)
  done (took 34.845339711 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.211988922 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.205323915 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.203495805 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.207780904 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.207036592 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.210038269 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.207618427 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.2034258 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.21002775 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.204545015 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.204444896 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.205816891 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.208871646 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.209496852 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.210655983 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.210053031 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211092175 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.206005333 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.205977635 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.201973277 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.213160817 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207307396 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.208452288 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.208894014 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208119337 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.209385206 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.210154744 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.209197578 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.206053407 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.209546645 seconds)
  done (took 37.347633057 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.254249167 seconds)
    (2/2) benchmarking "in"...
    done (took 1.249842242 seconds)
  done (took 3.615627693 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.203455622 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213432417 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.210182509 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.211594416 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.206565189 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.21038208 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.207115408 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.20992504 seconds)
  done (took 10.786648778 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.210429736 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.207377661 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.207143337 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.208406204 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.206735474 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.205384895 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.218636384 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.226928957 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.206587888 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.209983829 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.213092098 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.215718675 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.210947446 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.213707167 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.209387387 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.211419128 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.205908565 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.206368459 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.204059734 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.206475679 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.212944198 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.212351085 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.217378169 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.206568995 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.211596142 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.218569441 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.212039051 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.211137012 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.212976699 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.216047528 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.211058699 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.208416141 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.209720755 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.208259847 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.20868161 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.211927234 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.214789483 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.227017229 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.221621603 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.207014221 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.207449 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.210408939 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.217327667 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.218182535 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.212669182 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.209046227 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.209449682 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.211721461 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.214346112 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.215672636 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.215366148 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.213539196 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.205063576 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.212532868 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.211966247 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.217217691 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.224750049 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.211117412 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.219986039 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.222971118 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.224804745 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.228615851 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.218710017 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.216993187 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.223308411 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.238510177 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.227334597 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.228650106 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.216045819 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.219040165 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.220604784 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.222057576 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.232743796 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.20851533 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.208063355 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.210478335 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.212236512 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.219783733 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.222404084 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.237411742 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.212709895 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.208706503 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.220025004 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.24110813 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.214084872 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.20674172 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.209893258 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.208325913 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.213088034 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.220765953 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.230047558 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.209590428 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.217338463 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.211718867 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.211233125 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.215402154 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.211086935 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.214037029 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.211000873 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.21914466 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.210554157 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.216022989 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.225472219 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.220820116 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.211635674 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.219837272 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.216517319 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.215907384 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.220138396 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.213394559 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.217801616 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.215219507 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.222375453 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.211057028 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.223808476 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.227081432 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.213235543 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.213108064 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.213943829 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.212940122 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.225146648 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.247800955 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.217644076 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.214265391 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.224841436 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.229497946 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.212667919 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.216079312 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.2157129 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.212196883 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.21392251 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.223299763 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.220811054 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.223714572 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.217790082 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.212128452 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.21335793 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.221623318 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.216359782 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.214903492 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.217032946 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.216773864 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.221921828 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.217671535 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.223228282 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.2134086 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.225417462 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.217439202 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.217217343 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.220251461 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.216035566 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.218315006 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.219381611 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.214983568 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.213318429 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.214326257 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.215207284 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.219209018 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.218728348 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.217727587 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.222980063 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.221875238 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.221017434 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.216994892 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.21846879 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.22255376 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.220972513 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.216896325 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.222968843 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.216672947 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.217661653 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.216965394 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.221435952 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.227117986 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.217292192 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.220091532 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.219106115 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.220456768 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.214857148 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.215161807 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.219951371 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.228321345 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.227247979 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.224431529 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.217618613 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.216178497 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.220916567 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.221498226 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.220389567 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.221232945 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.222033254 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.231926455 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.233497742 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.239037766 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.218497249 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.227591415 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.222103597 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.227616646 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.221796537 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.221262954 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.217312035 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.225440762 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.219609321 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.218096248 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.219073651 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.217623598 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.21639361 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.21747499 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.220491278 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.222568023 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.219507872 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.226458394 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.224942059 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.222336946 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.225744497 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.219160632 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.219443409 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.219813031 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.221604092 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.219618078 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.220535743 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.21837716 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.227959365 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.220290879 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.22299793 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.226022275 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.219721293 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.22033139 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.221262301 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.228599711 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.222299763 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.233698325 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.239253446 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.219925215 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.230347858 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.238190283 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.221331417 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.223236428 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.221303651 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.2231095 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.226704014 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.229963943 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.229611632 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.227072671 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.218543174 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.222319991 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.221401267 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.229487968 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.227789393 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.222866052 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.225955368 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.224391803 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.227179031 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.222566593 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.224013226 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.227185052 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.225917168 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.22633501 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.229960826 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.233477915 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.225779536 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.220827591 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.219885051 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.225580264 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.234792699 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.226891867 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.227513736 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.226439672 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.223345218 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.229045905 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.230341438 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.219608318 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.223197182 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.237798952 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.246497235 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.2273608 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.249020474 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.226925621 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.236334281 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.250218333 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.23168112 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.225257492 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.228974987 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.232779964 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.221683714 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.221296331 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.226236385 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.229299197 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.227290744 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.230365104 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.230595695 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.232152615 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.228306208 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.2226702 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.221849829 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.225509184 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.22586171 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.227694671 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.234388607 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.225207867 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.224911015 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.228144718 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.235857451 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.244713101 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.228926528 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.227142808 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.229659684 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.23114941 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.227435725 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.225439546 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.230728164 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.233946289 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.230365764 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.237690109 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.237527007 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.236830571 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.234619527 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.229991633 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.238191187 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.223876579 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.231639019 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.228517005 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.226867968 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.234888718 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.24649054 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.22914766 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.234424289 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.228655281 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.22873132 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.227534059 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.231382961 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.23001889 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.229045557 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.235329477 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.251976664 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.236204728 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.230072212 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.225279937 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.229147253 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.227360444 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.228638358 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.22981169 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.231503071 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.227343823 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.232760254 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.234641008 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.227738403 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.229656715 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.228103036 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.228495547 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.229841615 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.244954924 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.248157761 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.234088063 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.230155432 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.23775679 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.227739097 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.23583561 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.248984942 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.228632599 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.225253906 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.227256299 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.231905449 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.227306943 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.229562765 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.226946309 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.228116583 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.230720204 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.227763302 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.228153596 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.229623582 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.227054227 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.228361899 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.238710323 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.255968198 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.230061693 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.231307394 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.228175395 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.234842858 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.232387513 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.226753123 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.227106304 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.230215536 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.242095882 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.24048735 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.239359607 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.232869673 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.229204772 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.233100608 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.230940954 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.236089636 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.726149542 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.229165847 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.232768545 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.223319824 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.234130333 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.240037102 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.22836639 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.238588057 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.231366619 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.243048787 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.228480826 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.22733158 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.229625911 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.230456878 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.232622802 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.235043677 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.227817369 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.23156633 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.229357124 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.239230606 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.236624188 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.235817602 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.234818597 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.231533943 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.233200386 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.230821803 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.230460646 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.228779219 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.231824482 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.229778949 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.232531833 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.23475145 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.229344197 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.230487773 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.232815039 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.232809043 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.23204736 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.242879565 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.235753813 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.234199231 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.227410417 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.232094162 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.237468687 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.231837269 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.228742799 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.237999206 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.234002057 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.237569339 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.240097452 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.235342988 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.231755449 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.234545316 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.242344132 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.230923391 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.232569029 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.230556019 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.229548038 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.231080529 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.233753496 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.231458608 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.236106073 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.237251621 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.229362018 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.239158079 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.254837782 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.232498491 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.233372258 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.240184807 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.231434425 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.233622871 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.231792539 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.235200758 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.237434626 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.256584178 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.235053826 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.232708589 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.234904361 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.233527089 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.237591 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.231813034 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.236622352 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.229250851 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.234000254 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.232251023 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.229491445 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.228511184 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.229874767 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.23207103 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.234827417 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.245552613 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.232212324 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.237724666 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.23611954 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.23393018 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.23381435 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.23510305 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.232209662 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.235150464 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.234245888 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.234198351 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.231860796 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.238732168 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.23410949 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.237712133 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.234059493 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.235767802 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.235278568 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.248691426 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.24365193 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.233021432 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.240193676 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.233115419 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.239170044 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.233840761 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.23279152 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.23405204 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.233865703 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.23742653 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.236808177 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.232807262 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.243588863 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.25243883 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.259313428 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.243082981 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.237355033 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.241843462 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.24092483 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.237848636 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.236731232 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.237293961 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.242913552 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.242988813 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.233934715 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.244722778 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.257333472 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.235591391 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.241253833 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.24517815 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.244300876 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.240388004 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.233935044 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.235577489 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.241728019 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.255907212 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.237890267 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.250096359 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.271764729 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.260738709 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.235768261 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.23778281 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.233316188 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.234788006 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.237036516 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.237936621 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.238345406 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.241462844 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.238101673 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.238037842 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.241467497 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.242467601 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.240721966 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.237572693 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.237383305 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.239377089 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.237731212 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.237632488 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.238776144 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.237578097 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.237811009 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.236631638 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.238420832 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.249419896 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.26806473 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.240562282 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.237559361 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.237593333 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.252569471 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.246637785 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.254152483 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.254958943 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.240935923 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.237333576 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.242811102 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.241206165 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.240522319 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.251378889 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.243670644 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.240407224 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.235715432 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.253335589 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.268745131 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.24340617 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.242972632 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.239641847 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.238745404 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.241917077 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.242787535 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.239788917 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.241806857 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.241185069 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.244576996 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.240589151 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.245821276 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.24421361 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.246027141 seconds)
  done (took 733.577056954 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.239837138 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.240258574 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.238785915 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.239394678 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.243518428 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.240506611 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239372777 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.239449981 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.23908423 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.242385141 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.238398163 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238360136 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.241044092 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.242249976 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.241536386 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.241681745 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.237822302 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.238073607 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.239865151 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.241697751 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.238148316 seconds)
  done (took 27.19078888 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.241868304 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.240879016 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.242155141 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.241366108 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.24191232 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.244943388 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.242183873 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245018489 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.245215217 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243248145 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.247419355 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239361277 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.235915899 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.241853592 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238193973 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242570636 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.241269363 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.243619444 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.243299885 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.244183884 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.241438143 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.239561156 seconds)
  done (took 28.479262684 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.245472075 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.243128621 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.243787241 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.240118317 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.24638229 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.241524852 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.243310955 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.242718546 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.244732581 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.245765608 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.245811547 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.246365295 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.250939212 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.247789475 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.247692147 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.246019264 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.244407583 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.24350438 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.240860633 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.243158585 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.249441711 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.264182404 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.242567167 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.242976929 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.245524109 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.243613215 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.245337347 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.242974919 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.244061948 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.244111913 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.243590693 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.243329498 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.245714179 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.244417403 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.248002112 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.251782498 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.242523669 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.242139503 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.248010007 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.257992496 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.273199993 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.250303884 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.248181133 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.2708727 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.247804772 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.249614945 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.252132331 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.244058315 seconds)
  done (took 61.015184634 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.83447997 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.850059899 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.854703115 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.857830057 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.862026367 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.860374086 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.865860118 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.866542095 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.851816793 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.853640263 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.857307214 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.852861091 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.859753031 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.852039395 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.853868236 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.851613807 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.848880542 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.849733054 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.860682688 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.867508112 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.858896571 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.85947949 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.859054775 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.852043039 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.854766562 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.854185312 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.853272438 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.856867853 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.856071236 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.856157911 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.858926518 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.86463306 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.863900173 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.849549625 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.858905046 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.857752308 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.857104047 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.859891824 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.857172169 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.858525757 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.859756576 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.861193715 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.859612227 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.864631034 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.870703681 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.853392494 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.858318968 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.855208181 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.850262888 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.857038697 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.854506429 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.855424932 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.859279045 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.854656996 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.861265465 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.861901309 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.863012045 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.868480065 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.863298086 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.857154001 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.859343554 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.864397579 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.861723519 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.86302609 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.861056979 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.85749595 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.860347621 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.862116791 seconds)
  done (took 127.490370521 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.248346211 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.247928467 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246875969 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.247900722 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.24654165 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.248276708 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.248675569 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.24628909 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.250105485 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.249900484 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.249369038 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.250421005 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.250802038 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.252014164 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.249190456 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.251112555 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.249685307 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.251521825 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.250174098 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.251058952 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.250022336 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.249697193 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.24872448 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.251882506 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.252654733 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.249926985 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.248146955 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.250421416 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.253351144 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.251392625 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.251161376 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.249718744 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.249263195 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.252372832 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.252833011 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.253269643 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.251352491 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.253137214 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.253009292 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.248945268 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.251856785 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.249398816 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.251662227 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.248917648 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.254075117 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.253361167 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.252184469 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.252062591 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.251077507 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.254552416 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.254341087 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.252764639 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.252193312 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.253656473 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.250302831 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.252951253 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.253072812 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.25296417 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252536386 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.25294664 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.253998084 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.256957431 seconds)
  done (took 78.726699972 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.254812558 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.254174159 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.25560253 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.249230549 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.254617228 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.251925769 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.253882467 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.254673804 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.253688466 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.25650047 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.254708902 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.253325933 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256543365 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257563835 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.255000089 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256138302 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.250462095 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.254034462 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.254712674 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.252680975 seconds)
  done (took 26.243499987 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.255318989 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.255791222 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.254384428 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.251095498 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.259607862 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.25713274 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.260653092 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257563013 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253654713 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25939348 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.260361157 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.259169786 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.255663575 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.256317806 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.255266625 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.253890957 seconds)
  done (took 21.267952729 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.256335921 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.255792161 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.256647405 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.256053969 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.255356107 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.256750703 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.259224952 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.255395903 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.258076135 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.256218723 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.255620067 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.258759362 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.258160567 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.256956965 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.254222039 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.260748866 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.256189514 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.259210859 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.259787397 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.258025324 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.25626303 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.257362259 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.259772296 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.261029932 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.259187537 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.256760517 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.257123509 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.258625995 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.256187258 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.261250559 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.255542645 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.255831901 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.258554891 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.256840867 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.263602557 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.25305082 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.258967869 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.260022911 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.258039764 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.259701258 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.26210643 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.260174549 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.262072567 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.264104827 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.260898547 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.264137135 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.260870036 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.261662986 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.261776892 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.256824366 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.260422232 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.259102264 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.260926786 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.263716745 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.26343865 seconds)
  done (took 70.394669942 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.262536469 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.260543672 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.259112003 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.264726229 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.263604666 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.258298547 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.259727808 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.26123529 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.260043085 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.261784476 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.25909705 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.265873572 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.258593781 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.265755954 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.260876531 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.265350873 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.25997686 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.266327401 seconds)
  done (took 23.881317193 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.261054096 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.266235042 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.263776202 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.262016397 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.262485795 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.264522754 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.262220851 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.264034115 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263552167 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.2596377 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264655343 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.263896597 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.264697319 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.264724006 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.264967766 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262665167 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.26512349 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.265098474 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.261288786 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.264427972 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.266425194 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.266514005 seconds)
  done (took 28.972203542 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.26630764 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.264379868 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.264312172 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.278452184 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.287555517 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.264851197 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.263348705 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.265600319 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.287952599 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.322549037 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.316349301 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.289513985 seconds)
  done (took 16.540360258 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.263627284 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265783288 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.266407416 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266116554 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266460593 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269010854 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26149935 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260548732 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26896791 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264127191 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263415216 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266623278 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267123006 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262277887 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26895861 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265321437 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261953328 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265153888 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262101591 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265109778 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263261011 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266145262 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266447775 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266520316 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264518245 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264391537 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265868991 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263937074 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263493019 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267234942 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266060373 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26683028 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269612774 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267793788 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26752824 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268167859 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264143048 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268924038 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267538852 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267034523 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.266692364 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271141293 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267953322 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264889911 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267504956 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267633657 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268273739 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268723991 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268049032 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270246861 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270537399 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268420266 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272242521 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268179423 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269431956 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268019022 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266478918 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271308057 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266723021 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265850074 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267188016 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269167561 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274015718 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269491138 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272266284 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265800992 seconds)
  done (took 84.78390783 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267891169 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.263708476 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271632787 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268888389 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269645544 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269385801 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266247911 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268315927 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272343672 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268693397 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273264225 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270563172 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266904985 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267554315 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26778519 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26926953 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271254987 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266000717 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265796253 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273808077 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266702076 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269153968 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269600838 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271791544 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270967939 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275530885 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269604612 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266517038 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269971654 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270383245 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271800584 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268778126 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271541496 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.271846656 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270639533 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273784563 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269739186 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269953807 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270419257 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270979894 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27030736 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270186863 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27156385 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271631841 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268377344 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268906332 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271365959 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273160375 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272869296 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270089605 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272172378 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272050682 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271154347 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273620931 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272754985 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272276842 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27018188 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273421936 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271743454 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271803981 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271256576 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273366192 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273557288 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271877852 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269981469 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272546207 seconds)
  done (took 85.027704709 seconds)
done (took 1758.799992596 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.437290435 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.392265674 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.271650446 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.28822844 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.270381463 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.269815406 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.282770872 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.271432767 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.272640663 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.272064602 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.274355363 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.459204915 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.269497005 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.269792274 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.273058161 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.370594209 seconds)
  done (took 26.124702104 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.304718758 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.281081567 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.395236367 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.301375707 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.304275457 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.467189181 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.338697557 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.291680217 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.459741334 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.32620881 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.283569579 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.300483009 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.288594672 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.274119617 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.294610078 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.467883515 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.540919334 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.289632067 seconds)
  done (took 28.390788547 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.745684598 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.303520867 seconds)
  done (took 5.224909689 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.301457962 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.276811944 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.280268592 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.277491882 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.269451215 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.268020822 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.278498436 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.289464991 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.267170949 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.406039081 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.287538695 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.291335091 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.299020844 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.281874241 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.276367761 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.32165707 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.439010547 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.277757806 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.275483255 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.286595077 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.279867309 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.371210016 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.324070521 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.27894668 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.412584562 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.277106885 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.277894118 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.284725872 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.437298491 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.282023132 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.283870041 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.279236466 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.28485865 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.223912974 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.848485259 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.288656035 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.305205699 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.292050471 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.27901302 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.456945631 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.284668886 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.288848557 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.269729825 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.84563423 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.433391419 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.403813559 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.29739566 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.278048783 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.283944627 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.348411444 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.283172525 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.284178209 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.325116927 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.142561496 seconds)
  done (took 82.681480621 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.281690136 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.270971258 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.45555823 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.297118342 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.269411342 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.273863435 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.272607415 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.57268887 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.325641617 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.273023487 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.614452497 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.867738822 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.294158848 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.319831335 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.124497165 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.331284166 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.273988183 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.292311844 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.279315474 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.27656683 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.836021947 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.28333858 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.271861888 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.440675936 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.312568768 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.802729779 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.273583285 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.280828317 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.293852259 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.270884469 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.818042197 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.294544031 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.333879859 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.271881584 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.56170713 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.686538392 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.644737251 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.282543532 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.305037235 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.274118247 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.283313481 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.808307185 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.665711721 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.279173595 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.274721994 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.813749981 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.278877251 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.276751943 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.283936401 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.525964635 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.283167862 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.278851222 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.299179474 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.279530217 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.277656213 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.347795833 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.352822779 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.822712452 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.278819199 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.276471479 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.300378579 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.278664512 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.282703398 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.280778073 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.275820127 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.66318407 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.42970134 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.279981359 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.665361055 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.819520445 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.298621129 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.888607133 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.300931542 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.297134976 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.502841537 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.280159594 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.27729643 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.815469084 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.314265125 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.274494021 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.625680579 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.275234893 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.619724785 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.299390676 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.275952555 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.860820163 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.289023845 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.285104889 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.278783657 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.283012598 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.281713792 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.279990539 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.571887117 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.338683627 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.28010174 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.277932981 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.296317093 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.274376 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.284844979 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.2861867 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.880535827 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.300810545 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.281645552 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.287134422 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.279240661 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.282860766 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.278394424 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.280022748 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.551883862 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.295885395 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.284176497 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.279619298 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.275716029 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.283710869 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.467306896 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.284517693 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.599111145 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.279000933 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.278855218 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.303967564 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.28438319 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.291844889 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.278206545 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.287504472 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.174017693 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.581696944 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.313945811 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.277003049 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.28591339 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.279868666 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.304022635 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.304356185 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.348327865 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.283912319 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.060822611 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.305319012 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.290390077 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.280781729 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.285187881 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.28164918 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.286550174 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.284360619 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.580726289 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.574062274 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.436194408 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.282985327 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.28254826 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.067298088 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.301760927 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.464499936 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.311723885 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.282363297 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.5352485 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.522120813 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.285305179 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.276913256 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.282625769 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.583316376 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.286977799 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.600443265 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.854652935 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.304650154 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.286647983 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.072198621 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.992667449 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.287392889 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.284453528 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.628261133 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.303393874 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.287844095 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.282690966 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.284396288 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.28900913 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.28723945 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.287212758 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.284345565 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.289867391 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.324827328 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.478290336 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.301972766 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.289263016 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.823538064 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.350143335 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.289128169 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.293339459 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.284303637 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.286777889 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.352950063 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.290398314 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.340782884 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.288314042 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.283318088 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.875018684 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.285728816 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.293395057 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.476939145 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.996450294 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.308750628 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.287620747 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.309215845 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.188154262 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.853621898 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.347677704 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.622162226 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.296961086 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.329067102 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.288378057 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.369735888 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.844449616 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.292790546 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.31506007 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.977950207 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.308478632 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.767070881 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.281890357 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.292721066 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.919679718 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.306247323 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.293562927 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.284104911 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.313954062 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.633978298 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.295373321 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.309483402 seconds)
  done (took 488.00785979 seconds)
done (took 631.603968645 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.289058371 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.285684251 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.276679863 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.292388882 seconds)
  done (took 10.340843144 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.298662896 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.293257338 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.294656968 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.289818659 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.295310412 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.295790488 seconds)
  done (took 8.965596491 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.288955075 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.284721191 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.29291883 seconds)
  done (took 8.066769109 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.511599459 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.321994215 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.632030482 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.321993916 seconds)
  done (took 8.988754398 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.290361633 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.288000031 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.287729149 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.293041409 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.288488121 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.289952422 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.289984168 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.289199145 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.290615692 seconds)
  done (took 12.800165054 seconds)
done (took 50.355689386 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.295355438 seconds)
    (2/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.278911905 seconds)
    (3/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.296312465 seconds)
    (4/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.461846712 seconds)
    (5/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.386769475 seconds)
    (6/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.329537908 seconds)
    (7/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.37281475 seconds)
    (8/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.365188245 seconds)
    (9/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.309703409 seconds)
    (10/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.364076785 seconds)
    (11/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.325668757 seconds)
    (12/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.425607397 seconds)
    (13/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.388549367 seconds)
    (14/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.351229513 seconds)
    (15/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.040323064 seconds)
    (16/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.540262039 seconds)
    (17/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.302503008 seconds)
    (18/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.632030405 seconds)
    (19/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.309088542 seconds)
    (20/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.409573916 seconds)
    (21/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.174250928 seconds)
    (22/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.317643754 seconds)
    (23/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.27357444 seconds)
    (24/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.298403918 seconds)
    (25/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.43229821 seconds)
    (26/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.358939967 seconds)
    (27/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.388712053 seconds)
    (28/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.940441837 seconds)
    (29/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.296860985 seconds)
    (30/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.356572881 seconds)
    (31/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.482535241 seconds)
    (32/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.390898455 seconds)
    (33/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.301345861 seconds)
    (34/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.414174068 seconds)
    (35/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.297896181 seconds)
    (36/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.275677414 seconds)
    (37/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.312179258 seconds)
    (38/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.114551405 seconds)
    (39/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.306944143 seconds)
    (40/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.300433291 seconds)
    (41/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.991323969 seconds)
    (42/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.4989308 seconds)
    (43/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.274173605 seconds)
    (44/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.451281075 seconds)
    (45/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.319343073 seconds)
    (46/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.315200722 seconds)
    (47/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.453109622 seconds)
    (48/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.397759807 seconds)
    (49/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.302386651 seconds)
    (50/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.389900249 seconds)
    (51/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.402544624 seconds)
    (52/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.299165731 seconds)
    (53/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.307323867 seconds)
    (54/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.367909254 seconds)
    (55/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.433774064 seconds)
    (56/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.441342715 seconds)
    (57/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.950674477 seconds)
    (58/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.327089013 seconds)
    (59/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.36571698 seconds)
    (60/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.03572561 seconds)
    (61/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.320903316 seconds)
    (62/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.321761842 seconds)
    (63/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.3076619 seconds)
    (64/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.467300441 seconds)
    (65/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.343554503 seconds)
    (66/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.172977392 seconds)
    (67/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.52138365 seconds)
    (68/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.633261637 seconds)
    (69/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.046198491 seconds)
    (70/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.423017318 seconds)
    (71/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.359350966 seconds)
    (72/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.299170922 seconds)
    (73/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.304314824 seconds)
    (74/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.390081181 seconds)
    (75/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.319360086 seconds)
    (76/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.298001233 seconds)
    (77/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.996932264 seconds)
    (78/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.29766382 seconds)
    (79/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.000478241 seconds)
    (80/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.943645701 seconds)
    (81/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.374117872 seconds)
    (82/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.342083391 seconds)
    (83/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.372513074 seconds)
    (84/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.289198807 seconds)
    (85/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.397680671 seconds)
    (86/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.329625131 seconds)
    (87/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.301782315 seconds)
    (88/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.302305433 seconds)
    (89/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.36147501 seconds)
    (90/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.349376513 seconds)
    (91/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.445926997 seconds)
    (92/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.295479866 seconds)
    (93/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.039493015 seconds)
    (94/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.300629394 seconds)
    (95/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.996880336 seconds)
    (96/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.503441368 seconds)
    (97/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.435615269 seconds)
    (98/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.338865542 seconds)
    (99/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.414382694 seconds)
    (100/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.379977714 seconds)
    (101/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.458289327 seconds)
    (102/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.391663425 seconds)
    (103/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.323859395 seconds)
    (104/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.300802614 seconds)
    (105/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.315215891 seconds)
    (106/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.047607256 seconds)
    (107/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.407877561 seconds)
    (108/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.477345765 seconds)
    (109/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.326836233 seconds)
    (110/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.320784173 seconds)
    (111/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.948833629 seconds)
    (112/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.341171196 seconds)
    (113/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.336389741 seconds)
    (114/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.39387589 seconds)
    (115/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.289990665 seconds)
    (116/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.398568111 seconds)
    (117/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.298225823 seconds)
    (118/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.459557333 seconds)
    (119/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.306623446 seconds)
    (120/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.343185834 seconds)
    (121/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.444746889 seconds)
    (122/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.37355497 seconds)
    (123/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.311877574 seconds)
    (124/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.34383496 seconds)
    (125/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.479583198 seconds)
    (126/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.572198604 seconds)
    (127/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.179359519 seconds)
    (128/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.440516454 seconds)
    (129/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.390168954 seconds)
    (130/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.304094606 seconds)
    (131/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.276786514 seconds)
    (132/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.422610083 seconds)
    (133/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.304334336 seconds)
    (134/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.355820876 seconds)
    (135/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.340571118 seconds)
    (136/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.047237863 seconds)
    (137/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.328283915 seconds)
    (138/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.378617463 seconds)
    (139/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.349525179 seconds)
    (140/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.304110958 seconds)
    (141/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.410838852 seconds)
    (142/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.444013734 seconds)
    (143/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.348259408 seconds)
    (144/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.674172062 seconds)
    (145/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.284971491 seconds)
    (146/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.323193589 seconds)
    (147/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.047297245 seconds)
    (148/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.411948782 seconds)
    (149/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.313118541 seconds)
    (150/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.304647262 seconds)
    (151/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.387114824 seconds)
    (152/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.321055784 seconds)
    (153/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.485635769 seconds)
    (154/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.450563266 seconds)
    (155/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.356822871 seconds)
    (156/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.424785878 seconds)
    (157/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.48775772 seconds)
    (158/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.402393488 seconds)
    (159/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.431095349 seconds)
    (160/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.509914298 seconds)
    (161/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.428703451 seconds)
    (162/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.527040549 seconds)
    (163/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.328037091 seconds)
    (164/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.401190533 seconds)
    (165/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.317481458 seconds)
    (166/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.300393086 seconds)
    (167/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.123738675 seconds)
    (168/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.620398018 seconds)
    (169/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.312959413 seconds)
    (170/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.284562452 seconds)
    (171/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.431578542 seconds)
    (172/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.328099023 seconds)
    (173/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.293541027 seconds)
    (174/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.487214089 seconds)
    (175/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.94763701 seconds)
    (176/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.442483988 seconds)
    (177/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.062596035 seconds)
    (178/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.983422118 seconds)
    (179/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.341906018 seconds)
    (180/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.178280276 seconds)
    (181/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.365369674 seconds)
    (182/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.508564065 seconds)
    (183/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.285339978 seconds)
    (184/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.493642122 seconds)
    (185/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.40908226 seconds)
    (186/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.950764157 seconds)
    (187/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.333926368 seconds)
    (188/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.310478132 seconds)
    (189/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.302254335 seconds)
    (190/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.349186513 seconds)
    (191/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.307679191 seconds)
    (192/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.309407428 seconds)
    (193/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.374123078 seconds)
    (194/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.32940189 seconds)
    (195/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.354029253 seconds)
    (196/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.363365103 seconds)
    (197/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.339577491 seconds)
    (198/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.350631926 seconds)
    (199/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.405613438 seconds)
    (200/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.281722855 seconds)
    (201/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.409099692 seconds)
    (202/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.468384509 seconds)
    (203/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.517339148 seconds)
    (204/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.317875986 seconds)
    (205/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.375990915 seconds)
    (206/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.382845502 seconds)
    (207/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.332087273 seconds)
    (208/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.435641033 seconds)
    (209/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.957068333 seconds)
    (210/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.48003729 seconds)
    (211/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.492177031 seconds)
    (212/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.302233328 seconds)
    (213/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.30218715 seconds)
    (214/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.321997749 seconds)
    (215/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.310793866 seconds)
    (216/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.288978558 seconds)
    (217/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.411187503 seconds)
    (218/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.324949271 seconds)
    (219/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.335836299 seconds)
    (220/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.447035359 seconds)
    (221/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.414109901 seconds)
    (222/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.328152221 seconds)
    (223/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.411138051 seconds)
    (224/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.383768472 seconds)
  done (took 359.964897701 seconds)
done (took 361.15630117 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.353409785 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.480913925 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.322252306 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.323618416 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.35001279 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.303064016 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.346436652 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.323401876 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.309335929 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.308819046 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.303393601 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.310429378 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.327450229 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.339444227 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.419033818 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.313198648 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.324033846 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.304580567 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.345755472 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.36381213 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.34938257 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.350762371 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.317894488 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.324508588 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.35220588 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.353068432 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.328251504 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.296125595 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.306466097 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.346934056 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.296608273 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.327674143 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.356802403 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.356502873 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.350822253 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.310982008 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.349332342 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.483636316 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.341812276 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.34035251 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.311284496 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.35535306 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.319357415 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.318611369 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.359937263 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.319164173 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.355431479 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.431374252 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.298662908 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.297606072 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.355375225 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.369093541 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.311055483 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.298331341 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.300606184 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.450170631 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.309233804 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.356083416 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.310985009 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.352097261 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.423349812 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.356641213 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.371454568 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.356260587 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.310926442 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.33042447 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.309326383 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.367685604 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.308535502 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.352321782 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.353210953 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.314372304 seconds)
done (took 105.752032913 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.370057895 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.307319537 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.409364455 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.309990887 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.409940508 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.409683615 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.306372924 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.306072316 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.307656795 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.68385876 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.308073752 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.305532428 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.307601456 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.307004555 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.392511031 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.310881331 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.305804482 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.655345355 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.308353247 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.380632662 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.311068428 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.307138405 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.30901031 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.698546015 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.308566324 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.304632919 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.384525137 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.315059799 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.711048543 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.305446017 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.308159329 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.661053516 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.400362144 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.328679968 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.320283792 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.317207239 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.411793543 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.329787967 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.390608739 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.391777694 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.412206531 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.349506723 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.30810784 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.309162611 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.314417818 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.310874912 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.310345999 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.337441923 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.310908413 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.310317372 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.650831081 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.321999477 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.308748656 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.308883452 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.30915124 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.339460957 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.310442833 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.310918084 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.401373906 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.313392452 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.375136289 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.693478026 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.69730657 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.314861854 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.311988142 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.311852944 seconds)
  done (took 102.982782007 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.378790832 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.387904822 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.42881046 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.33120077 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.365327895 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.431313848 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.330753713 seconds)
  done (took 10.867888193 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.318832808 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.31524355 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.36319872 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.363488392 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.313352326 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.528474905 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.314950529 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.325454771 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.311098625 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.395392791 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.31513802 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.315703702 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.321609395 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.311732899 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.363133932 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.326434396 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.431601445 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.318005264 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.314327152 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.468924069 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.312284107 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.322207661 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.39528424 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.32716365 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.317057775 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.321430947 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.262824337 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.313955904 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.313712504 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.314764292 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.311903868 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.423890554 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.316150876 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.313957516 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.313137992 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.477799977 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.315740869 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.314637894 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.315911922 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.308935687 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.314027414 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.317525354 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.31667311 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.313937123 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.317209864 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.341590587 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.319107345 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.31949161 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.317450316 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.316258832 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.395269802 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.317467421 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.314606465 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.314244766 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.394746561 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.323969109 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.3168171 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.314939501 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.317918314 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.314750946 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.470983229 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.365095978 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.318517706 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.365312729 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.317986874 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.318955284 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.314905602 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.316710316 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.409607617 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.318139698 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.366989288 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.315111808 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.538499668 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.34171949 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.32121509 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.320568366 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.321412981 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.317804056 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.314833422 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.326738213 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.31604652 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.318829947 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.32476094 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.316580291 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.315275662 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.504264557 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.477644147 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.317046377 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.331985851 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.328161757 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.31771752 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.396644953 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.3209752 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.315605623 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.370955782 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.435684232 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.398459661 seconds)
  done (took 136.49162229 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.325621294 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.329023972 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.325055254 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.343041006 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.32278325 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.322009016 seconds)
  done (took 9.187007471 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.323073633 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.321872819 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.321743375 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.320600571 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.318971725 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.323012212 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.320157322 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.323993965 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.325363407 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.321529968 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.321471779 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.323374699 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.324190821 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.322335589 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.32100886 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.322870007 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.321025596 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.319173438 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.321062584 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.322564067 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.320566243 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.323144024 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.322888204 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.324703217 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.327723092 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.323164043 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.332848741 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.324204021 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.321889374 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.331962027 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.346706783 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.323123929 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.326756538 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.329334937 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.329220444 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.327928208 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.32955838 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.324751106 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.322794263 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.326612846 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.325713369 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.3231976 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.322853419 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.324050019 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.327350538 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.332965013 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.331697245 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.332575378 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.326291922 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.327013454 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.328191348 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.3266036 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.326685556 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.326517034 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.326989569 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.349961771 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.330751701 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.32539526 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.324819901 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.329484153 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.32707387 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.324399714 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.326840688 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.328481398 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.324972386 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.325233358 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.329258444 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.327566601 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.325820918 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.32662646 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.325694936 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.325316673 seconds)
  done (took 97.690553008 seconds)
done (took 358.426673322 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.155868077 seconds)
  done (took 4.382541014 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.419583998 seconds)
  done (took 3.646710373 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.116644603 seconds)
  done (took 24.351716621 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.353523568 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.402607825 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.3394908 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.324617443 seconds)
  done (took 10.646028401 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.663670894 seconds)
  done (took 3.889197825 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.326703477 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.319245145 seconds)
  done (took 5.869672268 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.64532367 seconds)
  done (took 3.874186936 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.745180658 seconds)
  done (took 3.97726821 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.342623685 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.337009607 seconds)
  done (took 5.916730663 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.308866367 seconds)
  done (took 3.535523441 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.59602634 seconds)
  done (took 17.824251713 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.321188773 seconds)
  done (took 3.554489803 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.34685231 seconds)
  done (took 3.574331116 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.161571737 seconds)
  done (took 6.391121512 seconds)
done (took 102.652769419 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.323215616 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.328990682 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.323456313 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.323470707 seconds)
  done (took 10.52044936 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.381355103 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.382895403 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.382454816 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.382353051 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.38115861 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.38227894 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.356559375 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.355783537 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.381091176 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.381182945 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.383214792 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.381904233 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.381289847 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.356284801 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.38184669 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.383650028 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.3807726 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.382494809 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.357449997 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.384741366 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.331259327 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.383893665 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.381957669 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.332466508 seconds)
  done (took 34.200389635 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.827331511 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.401210093 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.48537051 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.381813158 seconds)
  done (took 7.321293206 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.410567606 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.409184435 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.421905765 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.460021359 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.472760958 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.42266335 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.358336745 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.353430764 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.338623495 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.40854951 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.462605496 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.403157205 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.489575156 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.334316467 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.54267586 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.336633944 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.337402959 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.413067806 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.464025328 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.471094468 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.336950591 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.41255536 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.417502794 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.403277955 seconds)
  done (took 35.110950688 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.342941007 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.348687489 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.333214731 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.348773647 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.333193452 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.328841018 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.33208203 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.338544342 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.334294798 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.333339653 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.33422994 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.348904457 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.339593009 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.333944297 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.343399273 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.336101622 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.339340035 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.337911447 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.334232925 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.340657541 seconds)
  done (took 27.990896572 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.331569167 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.330502125 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.681655286 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.585452013 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.328336476 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.32870064 seconds)
  done (took 13.816666093 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.411613178 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.585364888 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.341187541 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.72157802 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.814068395 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.34133438 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.337329388 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.606060082 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.952760987 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.920659812 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.403000542 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.42131321 seconds)
  done (took 20.087122528 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.343598041 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.335382562 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.340005122 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.352065737 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.395807309 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.361701007 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.343593966 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.333679365 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.403304749 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.422854138 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.363310353 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.400668733 seconds)
  done (took 21.630889824 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429850521 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.332282357 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.340127021 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387200044 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330762345 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.176321406 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.351744989 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.099339276 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.361308732 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612651591 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353283147 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438568542 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.596457692 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340054172 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.342008354 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.323192857 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.571633813 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869903446 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343601502 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337958279 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376063977 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.346185838 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.341915773 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.571046159 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.343410417 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339379374 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.60310495 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.339841468 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.646983776 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.355348298 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352450446 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339579528 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616383555 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030400288 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462135063 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.564670493 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346424678 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.337975532 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.344042432 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.3628588 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347722928 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.345282025 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349476814 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336920374 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.338802622 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346752211 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13893239 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.367872383 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.339791155 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.34068856 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.621960783 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442399832 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.346228288 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.340808927 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406315018 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341362021 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.347478765 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441553281 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920121788 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353591626 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347465611 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.342678005 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.347331069 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337969384 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005653533 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.350730608 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.345483687 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.344606761 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343854352 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.34173812 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.360933735 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345523397 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.363450591 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341606783 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114875268 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.341075156 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346572246 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940787778 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348741371 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.348349518 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.577445011 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343191241 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345092125 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.341195055 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.342852727 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.105264701 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353646036 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.329648814 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.367971008 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.107765736 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.592187856 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361047464 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373615438 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.565064608 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.322794305 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343591625 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.340797654 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348050473 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359101263 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.125210679 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364693787 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.34112373 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606591166 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.551049306 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342722392 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.33428528 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87508433 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362051199 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.360368236 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.34268289 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.577175003 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.977337736 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.360905211 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353957411 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360872721 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.342744467 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14387904 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347510432 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.448632855 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.345176083 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627098071 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.183077802 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351700382 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411098657 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348555012 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.344058679 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346539612 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348247891 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.345753632 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.563813543 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36417007 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.358289781 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.341526445 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345992889 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.349352626 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343479389 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.350151377 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.568962326 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338609241 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.624577394 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345347877 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344205794 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343920065 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.568327357 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.347342123 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.681759863 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.609770025 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341222088 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.349270287 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.35905869 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360417109 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447868088 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365054986 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.344619042 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.603632748 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.352192951 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.349482938 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349661048 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.351015339 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344925109 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.353246838 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343203909 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.972118025 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322505201 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.354508278 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.239735742 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.365160058 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41840161 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.356038212 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.57702281 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.35259567 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359968769 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.370222689 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.361837493 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.579240456 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.359559663 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.347568781 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.426371805 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.860273865 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.995269104 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.366696863 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.350887505 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.347488834 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.346611714 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351337086 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351237405 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.34844637 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.578027109 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.369036097 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.366029033 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.982763205 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355345911 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.354047505 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.360739036 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.366410021 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.354500582 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351178465 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.346469972 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368868094 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355291828 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.366575276 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495581981 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.365675389 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.351598977 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.867406131 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.356010918 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.352617649 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.348898606 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385515837 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.35530361 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296424046 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.617558 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365801868 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.63474883 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.358436232 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.369464099 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.35210977 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350610273 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361310017 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.370976406 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357729445 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.363811942 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.354011509 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35784254 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931245759 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.178687104 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933587988 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366375833 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.359518977 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.355624909 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.151310672 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377689225 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352235789 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.602945797 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.144229837 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376659645 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871583025 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.388454061 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174481769 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641839573 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.591357199 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352067665 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.357668636 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.644169672 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.570687612 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38735682 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.363664309 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35684293 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.337918704 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938092187 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382815173 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.435932588 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.133872537 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374391523 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.35833082 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.355815484 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.35512393 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795642724 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.37671588 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353698289 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.358976487 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.35932527 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.200087308 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.360788491 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352893403 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024923044 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.356554838 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.887250429 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380911903 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.58955218 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.37282575 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.362965015 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.358942236 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.3602414 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.61778327 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.64230999 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363362134 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.373020379 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9457908 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.232482453 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.360440414 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354332657 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163529162 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367663174 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.671403991 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.360830566 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.360987938 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362664099 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.356127072 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357211859 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.353439165 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.367116851 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323733845 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896792315 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.371416408 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36153339 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359531679 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362357527 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.613482252 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.370654494 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.987915043 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.591412512 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375959102 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381099469 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.357454822 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361001757 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.348492017 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.358661773 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.357697481 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430876121 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.58012031 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.357124171 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.367718709 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.432616847 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.567513624 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.355473324 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.362886955 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.625536179 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.360722137 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.382830569 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.186689732 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396919006 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.358510938 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364739819 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.369366896 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.380476348 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429954682 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.590777093 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.37449278 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.368235012 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795723773 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381078994 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365372598 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.37408261 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456114819 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361558244 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.369196528 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.134347304 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.991035965 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.14944588 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.008085072 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.651491444 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.362952846 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372502421 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361936586 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525373482 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361141286 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635428231 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361423772 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.361698589 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382624647 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364944732 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368046924 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.577229749 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63438683 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360456705 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36858163 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364632009 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.362344995 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.375352205 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.575986901 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901399628 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963635474 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361601147 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.366838714 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.134572109 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657135652 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36421118 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36307409 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364984726 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.362960521 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.365283853 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.37292154 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374115758 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513278967 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.649163432 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065552388 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.396494512 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.38962316 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.882353227 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377226512 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.624895548 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363971376 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.602714565 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.005544991 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.115245334 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.63021639 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430389232 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.595815142 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.369145927 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525841766 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.36738241 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.36619901 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362609525 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366804175 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.359993592 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.376017888 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.011730133 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.634620064 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.368660136 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.370194966 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399658287 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.373839521 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.587788735 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142549358 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.5936455 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.37508825 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.370470169 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.363805968 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.012479526 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.6557507 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369527397 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.366732072 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.625509712 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.368792829 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.388395872 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.880689716 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.364426987 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974873644 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.342014286 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387281395 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363641135 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.124015582 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012978044 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.380926142 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914649257 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373618086 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369260283 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643375878 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.374288483 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.366458508 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646911144 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.369905777 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.367056456 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607724247 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.002334338 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.207715649 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.37160756 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374706232 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.37148512 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368388233 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438943833 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367961582 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364349675 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.817014937 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.391051597 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367780366 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.379364971 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.37761356 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37118582 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.370960027 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367771242 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.37382176 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.360190921 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.360310495 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.382239404 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469312424 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98909522 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389655661 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.03914961 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.693677299 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.630021725 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.374165741 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.358640976 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.373603272 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36732664 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371335728 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366537406 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.374747833 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980194576 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.380888233 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.384165262 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.373663999 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.374280723 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.583810372 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.378614854 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.610719932 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381452614 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390208928 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.356713824 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37436512 seconds)
  done (took 970.31880452 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.390117044 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.407952182 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.390671432 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.390827025 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.412586835 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.475248662 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.429953626 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.380065581 seconds)
  done (took 20.550551901 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.369647683 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.387912641 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.380470467 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.391097409 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.385787975 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.8917176 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.396404264 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.387446381 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.390373749 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.378819714 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.385106208 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.361383499 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.405410481 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.385958423 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.379299499 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.387995183 seconds)
  done (took 32.942725386 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.51955321 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.562289668 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.632768757 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.381386203 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.412698405 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.387157997 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.663499144 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.390130985 seconds)
  done (took 27.226255409 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.384230992 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.388449484 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.388031746 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.386434995 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.384091631 seconds)
  done (took 8.204590851 seconds)
done (took 1231.145617442 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.377533935 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.381509627 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.378249114 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.380334384 seconds)
  done (took 6.78410183 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.3622174 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.356163637 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.359492543 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.379815973 seconds)
  done (took 9.72976846 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.150283602 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.058565735 seconds)
  done (took 5.478968445 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.879355284 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.868462422 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.87131041 seconds)
  done (took 6.891737085 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.699051755 seconds)
  done (took 2.97567649 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.305946975 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.376198211 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.043727068 seconds)
  done (took 7.99956193 seconds)
done (took 41.131931025 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.374495326 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.620710434 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.531207819 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.381468862 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.533566724 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.531563218 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.141398301 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.384378392 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.3788071 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.388781258 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.373049732 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.534596905 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.117954187 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.617699284 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.120181683 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.713179923 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.538565077 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.387594252 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.387440111 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.377839382 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.139197959 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.382719261 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.377548186 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.387362005 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.539784281 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.52028306 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.376304382 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.71704712 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.373116896 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.374277596 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.534525505 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.390816565 seconds)
  done (took 82.815733844 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.378281532 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.372777548 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.374194344 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.393960578 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.375237195 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.383520773 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.397214149 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.388345574 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.376274254 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.37707498 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.375732569 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.383312073 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.382065952 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.372938561 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.389935802 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.374676115 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.376107432 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.385010058 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.375884744 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.374509958 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.399388342 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.375499253 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.375718597 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.396929317 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.398340885 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.378944312 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.396827906 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.393364901 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.409719443 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.376180884 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.377835159 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.397487883 seconds)
  done (took 77.557226875 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.376159518 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.395559074 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.379548829 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.375716033 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.399591726 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.385318193 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.37903086 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.378758579 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.37703015 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.390294853 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.385171868 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.377192064 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.378397753 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.386534952 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.37897857 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.389231711 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.378431321 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.382022641 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.375072913 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.391776417 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.379796892 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.391584014 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.377163723 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.38283502 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.390668684 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.380095295 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.376848613 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.376747729 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.378778239 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.378592595 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.391854353 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.378966999 seconds)
  done (took 77.52095314 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.661802793 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.388468109 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.388372841 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.380477783 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.385770457 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.386829982 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.381236542 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.66312742 seconds)
  done (took 14.917359477 seconds)
done (took 254.078601772 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.394240437 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.597105073 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.415844787 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.380827401 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.409640372 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.407485416 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.626497627 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.428990929 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.619828154 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.40253438 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.411144353 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.379636074 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.675295205 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.544595311 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.34119714 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.380186887 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.745253398 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.40895573 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.662611416 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.685551333 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.411434303 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.388173999 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.335961608 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 1.769832675 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.390792434 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.476999775 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.500990945 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.621945714 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.552221924 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.475133871 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.621627901 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.385071744 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.382804571 seconds)
  done (took 62.505611736 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.387032544 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.50777472 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.388407263 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.390630241 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.508315627 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.390396906 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.389588156 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.393113406 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.394137308 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.394244583 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.388687848 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.389568385 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.393637265 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.438697756 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.513219222 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.41226823 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.39402551 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.506883393 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.392787322 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.382359878 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.437434283 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.390036454 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.39353179 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.434172803 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.39345886 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.392843432 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.512392308 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.395142715 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.389401159 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.507236532 seconds)
  done (took 43.886563028 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.392095543 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.653296836 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.85118171 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.403723269 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.393724684 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.397380353 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.480582992 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.398751733 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.397474114 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.399331012 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.56028561 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.399830996 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.431960937 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.883146882 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.40235788 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.392260518 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.392928012 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.394327301 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.664685037 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.408087902 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.498299447 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.398952755 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.47696209 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.409908552 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.416750192 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.396625874 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.400133198 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.978856114 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.400709905 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.559754748 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.243565603 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.481007533 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.956271535 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.867068467 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.247184391 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.402823555 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.395849236 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.563721199 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.401982734 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.397110424 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.480216351 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.402461201 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.858916793 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.069951081 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.419535199 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.397928686 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.005326524 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.566658657 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.664619955 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.412717539 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.886987297 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.404579913 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.398280219 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.401368762 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.667239546 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.401547523 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.40038224 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.032843725 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.421663883 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.48053239 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.401927722 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.399146762 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.667037049 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.40251232 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.662487638 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.404180149 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.408765508 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.419401364 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.863392984 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.403818205 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.07929109 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.422447283 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.401317723 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.560520784 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.664873256 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.045021947 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.420034576 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.675452229 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.966302812 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.48278296 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.408797111 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.973481268 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.49053165 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.407550868 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.40154116 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.403308933 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.402690127 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.448287752 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.480875057 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.026667399 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.083017259 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.0454998 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.499629724 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.411231653 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.401876066 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.020946858 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.420018713 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.400600241 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.865300628 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.087101215 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.427629575 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.414144899 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.095455201 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.42670059 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.487261203 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.412075665 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.874005876 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.406298221 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.45050898 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.405808521 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.410970967 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.428080969 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.487669315 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.413821921 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.404075542 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.071705037 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.595005277 seconds)
  done (took 185.290633369 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.398768928 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.39488709 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.403082493 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.395662893 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.398988545 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.402934513 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.397176924 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.397740097 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.404725355 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.397608469 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.398806114 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.408637171 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.404917148 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.399421752 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.395750867 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.394118522 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.394420815 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.403177882 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.41407375 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.393992463 seconds)
  done (took 45.292125213 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.408343405 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.033428744 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.549626659 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.431704053 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.400888964 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.404655701 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.468534491 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.406761341 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.404903085 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.744978222 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.598787512 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.429734873 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.405212054 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.402996091 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.551917833 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.418156639 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.745566039 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.037872804 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.408594304 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.035454242 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.397525138 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.407234353 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.404219227 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.039617955 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.7498687 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.491331687 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.473475317 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.018733274 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.400214113 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.403766646 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.006587447 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.40409796 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.405201705 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.998990439 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.4207721 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.41229759 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.405696486 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.472472242 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.473384128 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.747219425 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.084768876 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.486535257 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.421937329 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.761614542 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.403840386 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.394596638 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.009614822 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.428926053 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.392911526 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.406338301 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.411704911 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.569643833 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.412800871 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.566567702 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.410157494 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.410361171 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.008467291 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.56895207 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.55616301 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.621384096 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.426791982 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.491543096 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.411345757 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.012560465 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.424356956 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.408646809 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.411274732 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.599076541 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.027778096 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.489176662 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.735526561 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.727997512 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.406634009 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.475577305 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.428872452 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.79935723 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.470448611 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.841065693 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.731236918 seconds)
  done (took 125.75686932 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.662163891 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.524947361 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.581794205 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.041150567 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.400059772 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.537061156 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.525865339 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.686872817 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.408800428 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.498299604 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.6360525 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.492570528 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.160618058 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.485383506 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.509276123 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.567546539 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.558865514 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.411090421 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.083943318 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.611491394 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.448763084 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.52206663 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.00939374 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.606121951 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.421317206 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.977499622 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.374583161 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.10018817 seconds)
  done (took 53.139779509 seconds)
done (took 517.146327596 seconds)
SAVING RESULT...
DONE!
