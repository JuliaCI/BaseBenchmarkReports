cset: moving following pidspec: 10959
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.013617232 seconds)
loading group "string"... done (took 0.551959776 seconds)
loading group "linalg"... done (took 8.965009267 seconds)
loading group "parallel"... done (took 0.172061108 seconds)
loading group "find"... done (took 1.454178814 seconds)
loading group "tuple"... done (took 2.119285316 seconds)
loading group "dates"... done (took 1.386425284 seconds)
loading group "micro"... done (took 0.220361506 seconds)
loading group "io"... done (took 0.632022454 seconds)
loading group "scalar"... done (took 44.444452324 seconds)
loading group "sparse"... done (took 13.725135469 seconds)
loading group "broadcast"... done (took 1.092248232 seconds)
loading group "union"... done (took 12.834017092 seconds)
loading group "simd"... done (took 2.531188635 seconds)
loading group "random"... done (took 10.268646867 seconds)
loading group "problem"... done (took 1831.800216314 seconds)
loading group "array"... done (took 25.796343882 seconds)
loading group "misc"... done (took 1.136839621 seconds)
loading group "sort"... done (took 3.789469599 seconds)
loading group "collection"... done (took 18.939560475 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.628430235 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.11977083 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.168692493 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.350489759 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.217945269 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.151408695 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.167039963 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.563232558 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.979718489 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.216040539 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.147857938 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.555699542 seconds)
done (took 5.990784599 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.25611678 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.435456031 seconds)
    (2/2) benchmarking "String"...
    done (took 0.113117719 seconds)
  done (took 1.201324733 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.093071991 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.178695297 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094809177 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.110902705 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.111285709 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.110069079 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094524104 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110799594 seconds)
  done (took 1.465417898 seconds)
done (took 3.67879232 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.488286814 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.856260669 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.492588787 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.133719469 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.158441086 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.151953129 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.315141498 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.16012366 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.121565478 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.086565571 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.171124329 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.36742941 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.477107327 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.954995275 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.085739661 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.129313139 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.083314752 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.705751104 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.083346696 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.145208248 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.527848576 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.11790467 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.119326166 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.144142073 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.191375537 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130731493 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.16779836 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.097040157 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.671582356 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103278868 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.187402514 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.102451083 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.166541025 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.25164824 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.096162097 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.094277283 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.676908516 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.180968936 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.11257044 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101776471 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.683822319 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081616514 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.1933236 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.1033032 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.109557105 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.193634501 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.115584509 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.079413032 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.102221185 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.090679217 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.158843933 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.483598045 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.109545886 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.150323365 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.109026283 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.696475513 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097713346 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.155991263 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.140333209 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.098644744 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.100365132 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.107637623 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.155734603 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.112028576 seconds)
  done (took 19.595392914 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.118180291 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.140414976 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.094758458 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140115836 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.140054115 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.096864586 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083026808 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.094668629 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125875224 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.18651851 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.12150529 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.144112583 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091859779 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081045187 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117314397 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248179322 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107798301 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.122179932 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.081555164 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.107469312 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140534842 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096036646 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109388885 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.109166742 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168279016 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204984136 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11064379 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126531758 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096200149 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.1016185 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145175672 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.164824829 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.077364341 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.096778678 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.188978843 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121248952 seconds)
  done (took 5.180822623 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.199370455 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.115578322 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.192393412 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.17881254 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.147672243 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.166934592 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118466457 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.266393366 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.257721749 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.181891142 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117263606 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112625815 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078815873 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.096808794 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.1659273 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095641836 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.698599475 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.137841775 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.165123299 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.126826331 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104152414 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081764705 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.39660777 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101879362 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.097090186 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086072298 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.089738232 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.176619023 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084021833 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.317519953 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.099182388 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.110428982 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131863086 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.192549346 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.130788447 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122454701 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103183598 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080849318 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.234505651 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.108066672 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.082767495 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.094600946 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.108248101 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133259852 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132984518 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098774117 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.093266267 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.239722276 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.082810239 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.120126189 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.097192926 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084329737 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199038793 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.110314617 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096447169 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.355033053 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.101715971 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104282919 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.09658307 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.292435036 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132823631 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098695415 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079032168 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102746252 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077909473 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.405535974 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106580934 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.148824603 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.095504032 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.15765381 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099961122 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105846016 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085575356 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101964156 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.10216232 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.097130078 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079183659 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.096676242 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078835381 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.100933428 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.114055262 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084515191 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.095364335 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145945391 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.117087118 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.101180566 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126054876 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.102406406 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.079765848 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128650582 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082431128 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.099856917 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.146467055 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08593564 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.115950402 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100431337 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143187618 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083473926 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.198903438 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082900335 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126995449 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101211204 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113543309 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.120647197 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097653781 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084165204 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.09602199 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081078531 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162337564 seconds)
    (110/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084104613 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.096881741 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.08558267 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.098509983 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.097424105 seconds)
  done (took 24.043570305 seconds)
done (took 49.474000208 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.460962653 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.099433835 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.117833221 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.11635479 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.114759881 seconds)
  done (took 1.65261225 seconds)
done (took 2.370104447 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.353495599 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.173659791 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102728665 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.196286092 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087909653 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.203472219 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.164923087 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.118421323 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.200040347 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.100049944 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.176443917 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.100336238 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088276157 seconds)
  done (took 2.798512583 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095180224 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119604547 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084197211 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11324531 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077089272 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11220847 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093980027 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.141920973 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092198187 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104285475 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077634359 seconds)
  done (took 1.817386665 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095377676 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116851978 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083408108 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110036263 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077625629 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091411812 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109792404 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118973214 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092154032 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.105485592 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078371033 seconds)
  done (took 1.791471437 seconds)
done (took 7.102984733 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.047897677 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.395903819 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.119529564 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.166939917 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.343069541 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.215355889 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.536040974 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.135750363 seconds)
  done (took 11.860164008 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.13389597 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.103302352 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083836758 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.104121511 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.082939422 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.102438852 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084202873 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.100007322 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.081525444 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100332148 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085247639 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.102585196 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.085888729 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.099987583 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.084792115 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.099942002 seconds)
  done (took 2.305941412 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118558189 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117767309 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106872705 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110976397 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087089002 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.10595621 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.089697227 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.105360206 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.085634386 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.1033118 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.109929463 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.092627575 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.107521775 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.085811932 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106365216 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.110511203 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086662606 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.10612418 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.090333249 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.106919601 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.093188918 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.103517205 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.107901025 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.092264532 seconds)
  done (took 3.249863935 seconds)
done (took 18.130021298 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.16933619 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084763992 seconds)
  done (took 0.963382603 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.101374902 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.122216194 seconds)
  done (took 0.941503353 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.107569423 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.099126521 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.139554653 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.118179213 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.084658691 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.100538883 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117251298 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.102485936 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083944181 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.102575326 seconds)
  done (took 1.776597757 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.086605244 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.101808545 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.089882107 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.122578117 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.112148959 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.086377319 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.106497116 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.088270908 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.107478963 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.082527616 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.108064102 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.119839309 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.090943521 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.122235048 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.088795616 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.106656753 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.1108652 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.088297438 seconds)
  done (took 2.542734036 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081005183 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.083225017 seconds)
  done (took 0.886738769 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083892313 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095869484 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083156107 seconds)
    (4/7) benchmarking "year"...
    done (took 0.101724219 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081749217 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.09878942 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081700674 seconds)
  done (took 1.34772642 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.520540434 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.262382809 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.337882584 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.098430528 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.154241834 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.369144549 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.136885287 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.113165804 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.113451799 seconds)
  done (took 2.872917228 seconds)
done (took 12.049605314 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092010578 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.188728745 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.555488032 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.118382932 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.079766164 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.159208381 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.270859457 seconds)
done (took 2.185903439 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.354370641 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.124568856 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.091046734 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081987237 seconds)
  done (took 1.37023164 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080394035 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102527453 seconds)
  done (took 0.908087076 seconds)
done (took 3.010716789 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.115270999 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097354722 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.0770819 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.099968606 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.078518354 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.099816364 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.078241392 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078722324 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.098921908 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080452991 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.09921536 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.080772473 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097808545 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078353842 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078052339 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098063699 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079087346 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095650419 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.08060301 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.09630931 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078966936 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098404836 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.079046916 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079452872 seconds)
  done (took 2.882681814 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101097072 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.22218325 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.087607432 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.104774367 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.086119647 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.105493216 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.10446676 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.082243411 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.104933909 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.08407383 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103693007 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085728348 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101326909 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085618702 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102218463 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.104089529 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08774968 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099054883 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0852236 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103226806 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.087645482 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099916157 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.085188987 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10441527 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.103618972 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086105769 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.102016997 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082477518 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104746778 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085693421 seconds)
  done (took 3.712309431 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08794761 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.075931188 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.097018708 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.091301047 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.097278732 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083326952 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.096499681 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.07992193 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.097850494 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.07893245 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.09877285 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.079710134 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.09570074 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.080520656 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080509321 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.105541192 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.116117611 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079962161 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.076584305 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.096230665 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.084410214 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.096310114 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.081539209 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.097513181 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.08015619 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.0968635 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.080405512 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.07871921 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09854692 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079298197 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.102801728 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.086420563 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096537798 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.092967786 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.104849636 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.079455449 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.105929105 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.07856635 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.098074945 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.079127431 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.096644246 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.078982908 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079557679 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.109276861 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.082423671 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098057314 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080518853 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098296218 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079602924 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100327151 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079597726 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.09725796 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082238433 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.099007491 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.085643958 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.096640939 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.081345528 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079257854 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098559731 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.080101788 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.097193285 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.08037158 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.104024433 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080525828 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.122148657 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.092980479 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097252108 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.08138018 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.102501351 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.088131131 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.100029627 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.099667485 seconds)
  done (took 7.255036193 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082746775 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105544638 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080271082 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096859206 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076327519 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.099057498 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.087075763 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098166579 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082885719 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117072354 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081285031 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099500782 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082126716 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102141513 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081057245 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098621958 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.090887408 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095504926 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080945466 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101046439 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080642296 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.104501504 seconds)
  done (took 2.760175059 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.225029413 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104211562 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.146262245 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.118305716 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100501563 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.115740859 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.105731439 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090270735 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105904044 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091695068 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109154143 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088508609 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.119112899 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108126943 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090896342 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110067333 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105634437 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092299091 seconds)
  done (took 2.764044148 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093728187 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097888976 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105630632 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098629983 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.080426775 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100977328 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086890204 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116574868 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.102489346 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.083638316 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.112445028 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08516307 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103090478 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083400062 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103696829 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083383355 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.10403255 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08392904 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112195652 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107618037 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090785496 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10955553 seconds)
  done (took 2.888250297 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097265792 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100175008 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.111211255 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102553059 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.076284303 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097159899 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.087708168 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.097856813 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106460988 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.082590394 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097544055 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08017164 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.106901882 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083356679 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.108421468 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08397172 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.1036173 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083888159 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104223994 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080011498 seconds)
  done (took 2.631620352 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123585039 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11614304 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09698511 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125820473 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115231671 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.097466406 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.125259892 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114534549 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.098573283 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127811675 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097229073 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.115102083 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126264205 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104250582 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114988275 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127021898 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108671496 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125603226 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115009327 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09813691 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129026889 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114164142 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109375119 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.115992615 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099312235 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114632101 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11553099 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.104761862 seconds)
  done (took 3.919404584 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080875104 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.079990943 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.096726319 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.078126447 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.09636514 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.07801748 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.095531823 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.078024046 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080326053 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095485131 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080289157 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097804186 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081086901 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097549258 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080021916 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097780212 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080115309 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.077776144 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095100296 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078299618 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.098179894 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080680433 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.098368742 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.078598959 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095054543 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.080967809 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07838606 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095533884 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081071946 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095396643 seconds)
  done (took 3.353044673 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089458278 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10572985 seconds)
  done (took 0.940103919 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.07899842 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116016243 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077858687 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102577121 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087234104 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099763856 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.091207317 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10439335 seconds)
  done (took 1.503063538 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.106139287 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.119930094 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.088627271 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.11249403 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.100220652 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.118747137 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.166565492 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.08719957 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.106722143 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081550693 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.118988035 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080635928 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.109392444 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104288848 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090510541 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113769755 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.079668637 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.108745778 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.088673131 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101885596 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087883364 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115997865 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092538709 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.107518918 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084336399 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.111843516 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113074489 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.09442883 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105217444 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094891834 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.106857702 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.076457915 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.104336689 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.087538122 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.097785099 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.101261665 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117388416 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086381157 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.1099699 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104993715 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091231577 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094758701 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.093344168 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106648048 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094725729 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.10753659 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.087775634 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094326533 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082642692 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.104598751 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.077704626 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103021694 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.075968241 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109843724 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.090912818 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118961675 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083554876 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104181135 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086172937 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102143746 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088728136 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.104259213 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109575292 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.086544335 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108956197 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.091985922 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107931016 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077431605 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.092982153 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079708842 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108471797 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10713574 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.111825375 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.087730895 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105893921 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080047612 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106489632 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088541792 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108633427 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110605659 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.087604939 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107519616 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093818881 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104074833 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.086277047 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.106447921 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.084890274 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.102980343 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.083160044 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120312203 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.084052394 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097848021 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082851737 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.112343239 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087321872 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.1044719 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083721517 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109546151 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.075681015 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.106182716 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087486645 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106494016 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112866207 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088407886 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106190053 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.0914929 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.111556505 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087251372 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.104167893 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.078420096 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106099571 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084209045 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.108928478 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076902272 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104941262 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086698744 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.105072523 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092634391 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.102079994 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.087462508 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111199454 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.093751802 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.101869222 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.078432929 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.104773211 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.086769552 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108762453 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094358462 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.102639043 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077323677 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094921216 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.090933036 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.103815382 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089549885 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106114111 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105569979 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076826484 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.080488336 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.105520477 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111608113 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.086324559 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.106422259 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092564271 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.107149159 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.086307563 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.110888373 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085411781 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100269546 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092422896 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.104845334 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077475147 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109671185 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087352718 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.102539062 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087011809 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109738843 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087289928 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.106783557 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084277435 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105814015 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087811148 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.100461153 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087984212 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.103061017 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.113016036 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.096281888 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094998029 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.079623702 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088766754 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.101751183 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.086276022 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.100920685 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086549489 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.106659932 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080368927 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.103403475 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085883249 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116925346 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.113306122 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088898522 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108961637 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094805723 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.104543515 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.089151903 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.104580651 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089284993 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.105944719 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092465017 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.107159595 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089491693 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.104624507 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.079506804 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106959693 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093177471 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.101065606 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080300256 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.10076761 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.087517782 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.111993607 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087882486 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.105710534 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085433584 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107998664 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091934151 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.105716817 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.086484995 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.100519483 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.086616966 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.110270569 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.089136765 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107347634 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094084232 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107650294 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077822547 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110301444 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084031371 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109652228 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.077494012 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.102172943 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083633453 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.107638044 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.085615734 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104166078 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.07624902 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110696002 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093037872 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.106135912 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082937526 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.105903781 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115269363 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086192683 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108998972 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088557603 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108692396 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10158105 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101537456 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087456403 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.1134787 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.087742967 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095794614 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090198929 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.103994871 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.081830906 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.1035237 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.084455056 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106556544 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089890596 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.107262119 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076347128 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.105691752 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.085448209 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.102018091 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079840366 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.111524947 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088428238 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.105857732 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114906624 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089818874 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.107035851 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089589377 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.105656038 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.089168558 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.107325817 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091436324 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.106531581 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086729546 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.101906338 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088118777 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100875326 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081587219 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.105286287 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.088671409 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.107275293 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090438303 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.104285518 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09300485 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.106594967 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.088828219 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.124471822 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102427238 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084541465 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106711937 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092377105 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.105642895 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087415231 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096615187 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093017802 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.1050319 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093905513 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.105539591 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.080190743 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.106986938 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087467363 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106960954 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.089275309 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.107559607 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087173831 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.104927937 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087880292 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115451052 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.08347733 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.11325131 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089225255 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109166029 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.106135736 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.08881317 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104674516 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.084566672 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.106077134 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.089233926 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.107157859 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.087633462 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.107907601 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088720943 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.104677142 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086199265 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.107387369 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.090057961 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.108308991 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077781213 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.102020713 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084115933 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.106713037 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092189722 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.106646563 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086508506 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.103901623 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089737873 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.104989553 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.080151924 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.111146447 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091535817 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.106855698 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098755713 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.102605712 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.089039291 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117043451 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078270951 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.105298621 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082191995 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.103620685 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09400872 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.108278024 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093903969 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.108366063 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.08391295 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.0994134 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.090164453 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.104804795 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.07810844 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100204825 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091939929 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104342736 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08723495 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.107745549 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.091627999 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107943048 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092100344 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.10555462 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.088545666 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.107084538 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.080764072 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.103325573 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.084611438 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.106438765 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.089834068 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.102686134 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081365183 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.105944661 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.08852369 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.107258384 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.087925755 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.105130745 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094080733 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106071116 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088994703 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112362702 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.078563594 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.10723204 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.08785542 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.106056056 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084638813 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.108212298 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091442314 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10872555 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.095355169 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.106862204 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091553972 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107308378 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082117387 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.106729683 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.08786608 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.107751883 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084524519 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.109099948 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095198925 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101389196 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.088669837 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107474687 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085623605 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.109823393 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.089271533 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.107998287 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092294399 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.108126059 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.088138035 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.111059211 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087983326 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108848226 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108111817 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.087944832 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111501279 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084672256 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.112980414 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.090304116 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.108435263 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087998525 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.103260808 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08872328 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.10555775 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087702531 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.113108988 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.08988723 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.102942147 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.084776062 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100372 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.089326342 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112382857 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095062918 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.107704784 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08895809 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098530107 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.081320699 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107648191 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.085510411 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.106474763 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.091387649 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112130615 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088949411 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.104778816 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.087543805 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.112790783 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093146731 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.110821861 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.103962814 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.09157313 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.108854782 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.089814851 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.105072252 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.089035385 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109028969 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.091999172 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.106082304 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086017415 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116916979 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.094307631 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109729949 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.088426792 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.109977402 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.087838176 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099140067 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.089932166 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.107920812 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091627698 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.109031525 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088517156 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11853661 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101646427 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.088560274 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111580424 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088420788 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.112964426 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.08033224 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.10769895 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090656036 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109643588 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.080149442 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.103446109 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.086702873 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.108027248 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.08572182 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097985243 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099924584 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.113029906 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089648572 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10601316 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088124369 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.098964108 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.080162311 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.103582697 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090798852 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.106587769 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096693069 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.103371422 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084858867 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099151857 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08908509 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109397832 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.092472605 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.099943193 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.080733292 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.103823381 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089532755 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.115167938 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087283767 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.106657818 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090489257 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.108432369 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.083617912 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.11358863 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.081516702 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.108692053 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100053771 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.109108482 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091536822 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.112598028 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113015039 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.090424494 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098864499 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.090942607 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.107348917 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.091153928 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.109621977 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.092073798 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124336027 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091071694 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.104309235 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.087806615 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.108117983 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.085553725 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.116125517 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090724439 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.110369072 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091380052 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.107769833 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091111674 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11636697 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110350234 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090915058 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.109347838 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.089438768 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108409368 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.087716038 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.106660588 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.093326787 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.109817817 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090088028 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111615993 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085580115 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119751252 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097069281 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.111168334 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.082283997 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.104878638 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085932403 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099818795 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.091533857 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101713427 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.087878763 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.106200783 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.088288993 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.109989413 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09177886 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.108594398 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.091654011 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.107797913 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.079274145 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.111781411 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089746971 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111670802 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.084905251 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.108050742 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.091018855 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.112545284 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094718018 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.106426025 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.088887648 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.107498459 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092165294 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099518177 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092413283 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107603605 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087275924 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.1042878 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089442809 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.110248476 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092096501 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110922303 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091882206 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.109328325 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.09451083 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.111495979 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.082137577 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.10218039 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092989268 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102996498 seconds)
  done (took 59.11847688 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.152182617 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088081321 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099645179 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080885592 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126296527 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082610165 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099747102 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.082339842 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.100714004 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095110227 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.100518369 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080125976 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.122547772 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127960126 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125695027 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11508425 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08109619 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10008152 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080712295 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10037855 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.102815953 seconds)
  done (took 2.937219893 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104986243 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118479966 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11709001 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103564159 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112197513 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117136982 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096583569 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119361921 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.121453822 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11123875 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.103441038 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117663346 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.112585502 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.094094393 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113514746 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114118787 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.10286736 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111048871 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.118986788 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097242758 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115191426 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116517296 seconds)
  done (took 3.234951576 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.094275384 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.087471184 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.113790388 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.082278357 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.108192965 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.082622112 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.112670407 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.085119518 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.112155088 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.089276257 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.105669526 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.090018727 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.113916216 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.082841543 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.106224117 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.085722776 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.112589959 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.089463527 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.109866729 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.083817274 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.128620111 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.102232725 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.086226224 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.086847486 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.118777466 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.109707388 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.090002407 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.088553839 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.106160538 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.089007597 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.104730435 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.091244645 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.112207755 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.08624736 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.106008685 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.089033778 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.108489173 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.083088475 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.105477811 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.092563713 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.103592679 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.090475193 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.115611382 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.085977272 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.104564614 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.091254372 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.108326553 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.083326312 seconds)
  done (took 5.51126686 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.123644292 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159169546 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.094378352 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.156926805 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.130004976 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.119271781 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.093099427 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.149802899 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.107635479 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.089043764 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.126513947 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.123921087 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.090497368 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.118197756 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.093273464 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.11058431 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.11353021 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.094462165 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.120399606 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089458547 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.118558585 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.112229431 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.103922978 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.122081576 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.114126166 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.089079932 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10835871 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.098513645 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.120897387 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.114684227 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.094908899 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.118770327 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.129787542 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.093496351 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.112047959 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.110571526 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.106476359 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.110460725 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091486996 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.107661473 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.111014999 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.099042768 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.113286163 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.125899553 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.091163632 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.110633213 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.092340976 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.111249927 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.126956499 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.095781218 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.1186868 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.123571064 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.09542737 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.109578788 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.094772039 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.127796828 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.109073022 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.088923948 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.113753579 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.120811841 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.09035123 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.11894867 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.109402543 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.115368756 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.11782668 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.103569242 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.112826767 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.113219655 seconds)
  done (took 8.487141461 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096920466 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.13339779 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125462643 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106046557 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.115237666 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.114363701 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095735932 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.114410447 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094477446 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.122402148 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113885186 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.165448765 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08859245 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120289362 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.09451155 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.116093329 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11405409 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095808132 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.114483996 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094907715 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.11542409 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125201773 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095732834 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.127104078 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127212265 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107436162 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09528715 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114412263 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106227862 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.115799596 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128226189 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.113761236 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.095779478 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.126085683 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.128586237 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095462914 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105561125 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094274805 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.114889246 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114406629 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.089916736 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125634805 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114691823 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.089061927 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114479554 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.096495622 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.126471364 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127922041 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120762618 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.103036375 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.115110834 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125984553 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09645044 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.114663638 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.125703146 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.133805922 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.106619198 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126633855 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114997329 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.106998481 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.127066051 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.13483795 seconds)
  done (took 7.825030938 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087323193 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085971843 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.104326588 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.084230651 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.109279947 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084585191 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106496347 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.087613264 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085418222 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.107506752 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086330467 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10406066 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083935277 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106190669 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084580318 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103217861 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08432359 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083538997 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106756982 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08394948 seconds)
  done (took 2.677263572 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095690506 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.126739313 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087274482 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114214371 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089374396 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.115339021 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107786085 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090002373 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107083797 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091288382 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.119305565 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099361703 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108491283 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113920298 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.100775427 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113789045 seconds)
  done (took 2.490981253 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.108613545 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.121024956 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.133347115 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.092439827 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104858978 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.095123555 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10715498 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.082890199 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.104217749 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.095688815 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.113509983 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.098055379 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106494437 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085508627 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.106940507 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.093887749 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.103408437 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.091599967 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106722814 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.112678999 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.114092132 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.108436689 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.089220553 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108793488 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.090296026 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.115279913 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.094104731 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104784452 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084648521 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107237591 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.090683379 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.115644319 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083153816 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.113647703 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.084526694 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.104667545 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.086512475 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.108030459 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.092343487 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10759703 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084477423 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.111276492 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085761997 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.108913381 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081843385 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10831121 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.081594179 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.114583722 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.10824353 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090757076 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.10623915 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.097420473 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.11386852 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.099984821 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.11716456 seconds)
  done (took 6.388691544 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103116337 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110308626 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091722387 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104462501 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090299675 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.115008203 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.090645323 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.108748235 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089310699 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.104336765 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089520239 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.111824292 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089493682 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.112224151 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09014139 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111362824 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082079352 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109167286 seconds)
  done (took 2.617403687 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.093610775 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107313991 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095726523 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107542982 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088353337 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10910976 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083646294 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085130807 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105901354 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086577065 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108121901 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088970416 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105542664 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089826647 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107131292 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087265709 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.10965923 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085768295 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.107128244 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08385989 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108756196 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086418223 seconds)
  done (took 2.947129709 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.106003511 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.140502071 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.101396032 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.151264028 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.111941394 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.090835071 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.122452655 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.091591332 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.131052569 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.110374278 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.092523593 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.110462237 seconds)
  done (took 2.179983186 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113982717 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14578621 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085071125 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110418467 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120057276 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093089884 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112654502 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093760994 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125134824 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126965397 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092449082 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126165892 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125240465 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123770795 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10005978 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122864085 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113260439 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094388162 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108913969 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134585443 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093735825 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125313002 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111782506 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093494717 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112923585 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124033775 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105803941 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127011324 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11288984 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104504607 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122406463 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112605502 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104729455 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12682714 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110155097 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125023614 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094792932 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135526491 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121180992 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104443654 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110963107 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121145658 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105277027 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120503022 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12531119 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092999754 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121474191 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112296301 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093259513 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141529165 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122104704 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124017207 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100448867 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126822024 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125330925 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140616218 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125732739 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123999631 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100782543 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126598952 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124217603 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120549146 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104580188 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126902652 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121178787 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124617932 seconds)
  done (took 8.440811273 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128889629 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107585225 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092359384 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128049449 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125396568 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11306066 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093674522 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113055486 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092568715 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110881574 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.161770711 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112645272 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105247085 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124738503 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112726678 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092968761 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114622057 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123729582 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089926473 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141659922 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11380253 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123798961 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105102174 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124671398 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127081967 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121333433 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093678604 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113631974 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093579667 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11357813 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120126796 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0935924 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125580924 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105374166 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104816535 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113166178 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092435928 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121663635 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113149341 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100449259 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124966018 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135377206 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112936811 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093468117 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127886457 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113217018 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093267651 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110077032 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092487609 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110813692 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127219121 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126336095 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107382867 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126456041 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113427096 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094402962 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11464861 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113668301 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094720666 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12184861 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124799002 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094416373 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14343807 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113641655 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09403942 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125404413 seconds)
  done (took 8.280303086 seconds)
done (took 158.470716109 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.107110765 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.145109417 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.102808081 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.172166209 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088259529 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.144176845 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.122410253 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.124850463 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.088218611 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.109583431 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.088403085 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.111632176 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.154963922 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.108866356 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088345098 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.111665239 seconds)
  done (took 2.692016288 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.183210779 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.28649487 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107750218 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.113743867 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.094628747 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.112564647 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.092020014 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.115971168 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089111237 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.121733085 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10995019 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.091961048 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.12143963 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.091985012 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.11001393 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.090871258 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.121712842 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.090946598 seconds)
  done (took 2.974738484 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115195908 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.157424286 seconds)
  done (took 1.105141879 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.125799359 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.189858794 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.307642346 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.165117292 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118370342 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.132579199 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.166911485 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129313146 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196654142 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.131719705 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.110320101 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.116663349 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139991762 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.101667086 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.119648326 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.095107673 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.143520877 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.117135391 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097443951 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116624615 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115916965 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.117595028 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.120520047 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.098336967 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.186002205 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.132102057 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.115893089 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.096927081 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116764135 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.097956254 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.121831327 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.130377385 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.108938219 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.193460683 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10022189 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.189537373 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.10226708 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.115820858 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096211891 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.116430068 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119587319 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.09943174 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.131483111 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.114595602 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.097951662 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.122746878 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.096108344 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.116662914 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.102240084 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.126697008 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.124303152 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.100427507 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.19074796 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.124369263 seconds)
  done (took 7.790397921 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.828635299 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157977143 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114959656 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.937338615 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147421578 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129793051 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.83179972 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114246852 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.26780154 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.066804983 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132910258 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.134293035 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.237132777 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.26054326 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.155057336 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.344470625 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.711704332 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.12876246 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.122289118 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.158640867 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12278401 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143662791 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.112964268 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.46395802 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095006727 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114325879 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.099968337 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127453774 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168739055 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.11435403 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097982688 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.207937054 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.272846161 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.186885534 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116183057 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091416173 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114705809 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.175403714 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274815641 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.224092617 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179673182 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089593538 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113740013 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.105890356 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13552167 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110495118 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.173131012 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.181646577 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.20179047 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097835487 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127688571 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101253711 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126638276 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.167777371 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.11287026 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.344705713 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.347318189 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093300181 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123128113 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111604677 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272033787 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.115455176 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230567929 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120862872 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220730652 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112863801 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.772888801 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.175536594 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.115297152 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123273149 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.101074269 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12030187 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124481558 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173017558 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.389087805 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108508979 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.118442828 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092700815 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.256043506 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.092645062 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114369376 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.171476819 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116212163 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101928342 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131199022 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.128409574 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.180037351 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.258077243 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129761705 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122784263 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.099370423 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127034354 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.094385364 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.240442301 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.203821779 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.187334974 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.220621545 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128500152 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.172957445 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.173369912 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127129016 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.178976955 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123037116 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132704843 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1071088 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22209179 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.148959999 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.114426483 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099497638 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121291706 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.15268489 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.095954859 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121904771 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.176712828 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.493134039 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.17380172 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.089712455 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.119587112 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102283126 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.190287636 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100882808 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270675834 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124200447 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.17720422 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099809509 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.113503698 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123112799 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.172881481 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129244249 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102860801 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128040286 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123224826 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.258767366 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227602563 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109988232 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243475222 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185228655 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124969076 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.182411731 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100908296 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.201573112 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103071464 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127252974 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116333824 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.764015786 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128895462 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123305641 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09870078 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.205233847 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115114788 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.094901841 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.114437705 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091218592 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.820577159 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.096454555 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.113047109 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.095148786 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12545726 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.100884672 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122258347 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.119804438 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.171153295 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240341397 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106280051 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124199225 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.115261298 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.171082474 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095223503 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.116458105 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.093799482 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.115836837 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.102842927 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.120750233 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.096139346 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.202359064 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.168354257 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.227702873 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.531449279 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.116301432 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.09298179 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237413176 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115106924 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.312979626 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102346094 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.232674671 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.174768373 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.112913421 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.344627122 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.179227282 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.205188185 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.095550928 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.203842809 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09038426 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121934518 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.169752945 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11486579 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102656186 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.166016224 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.133213978 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.130365059 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.160958616 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09371582 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.238463257 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.113995596 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.177715658 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117087925 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106054838 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.318919753 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.116208076 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.114835069 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.194001126 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097686293 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.116549365 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.650884039 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.115907185 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.103302576 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.126578597 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.231089756 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.174398248 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.124212384 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122235635 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.108629661 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.169889039 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.241596125 seconds)
  done (took 45.689523213 seconds)
done (took 61.078848881 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311745359 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.276863715 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.31285982 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.203610615 seconds)
  done (took 2.0370968 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.185236053 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.16086011 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.131691896 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.114991427 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.162173177 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.092392697 seconds)
  done (took 1.706030467 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.494200935 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.384595682 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.351969039 seconds)
  done (took 2.09268121 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.269996872 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.293431006 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.368316575 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.459720751 seconds)
  done (took 2.355732975 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.212568334 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131396319 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.105238575 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.14547238 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.177952383 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.184996699 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.149274457 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.15938034 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.135424844 seconds)
  done (took 2.307943131 seconds)
done (took 11.360439542 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.323706442 seconds)
    (2/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.282915648 seconds)
    (3/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.201644984 seconds)
    (4/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.274179796 seconds)
    (5/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.28057068 seconds)
    (6/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.134001754 seconds)
    (7/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.224554719 seconds)
    (8/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.242099673 seconds)
    (9/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.123760687 seconds)
    (10/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.21487855 seconds)
    (11/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.096001139 seconds)
    (12/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.237151133 seconds)
    (13/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.112092171 seconds)
    (14/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.211256912 seconds)
    (15/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.08070335 seconds)
    (16/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.168550767 seconds)
    (17/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.216335363 seconds)
    (18/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.121300483 seconds)
    (19/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.144314087 seconds)
    (20/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.160853001 seconds)
    (21/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.122228254 seconds)
    (22/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.194193656 seconds)
    (23/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.17622761 seconds)
    (24/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.290570494 seconds)
    (25/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.122294448 seconds)
    (26/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.132561918 seconds)
    (27/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.118832269 seconds)
    (28/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.091625265 seconds)
    (29/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.1730354 seconds)
    (30/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.096561909 seconds)
    (31/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.153292904 seconds)
    (32/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.159582548 seconds)
    (33/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.208754282 seconds)
    (34/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.107629026 seconds)
    (35/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.215208149 seconds)
    (36/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.12214314 seconds)
    (37/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.232626282 seconds)
    (38/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.123728721 seconds)
    (39/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.308901919 seconds)
    (40/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.126382219 seconds)
    (41/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.132347151 seconds)
    (42/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.212858753 seconds)
    (43/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.221046958 seconds)
    (44/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.086013065 seconds)
    (45/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.114122158 seconds)
    (46/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.095767072 seconds)
    (47/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.133378613 seconds)
    (48/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.081786872 seconds)
    (49/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.113892344 seconds)
    (50/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.092199976 seconds)
    (51/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.166699576 seconds)
    (52/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.08790243 seconds)
    (53/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.20650671 seconds)
    (54/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.10158222 seconds)
    (55/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.106197618 seconds)
    (56/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.120541357 seconds)
    (57/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.264708281 seconds)
    (58/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.149454919 seconds)
    (59/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.112154204 seconds)
    (60/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.102150585 seconds)
    (61/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.133360886 seconds)
    (62/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.168357393 seconds)
    (63/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.230454813 seconds)
    (64/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.081774852 seconds)
    (65/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.102988276 seconds)
    (66/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.257409211 seconds)
    (67/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.121594351 seconds)
    (68/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.197496237 seconds)
    (69/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.096841154 seconds)
    (70/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.132257741 seconds)
    (71/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.082155303 seconds)
    (72/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.149199948 seconds)
    (73/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.110097383 seconds)
    (74/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.169960756 seconds)
    (75/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.121849784 seconds)
    (76/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.099644711 seconds)
    (77/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.221482108 seconds)
    (78/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.130473511 seconds)
    (79/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.080487461 seconds)
    (80/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.129144475 seconds)
    (81/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.110415448 seconds)
    (82/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.104052056 seconds)
    (83/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.198158092 seconds)
    (84/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.093122585 seconds)
    (85/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.159584882 seconds)
    (86/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.157096132 seconds)
    (87/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.17849078 seconds)
    (88/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.198732836 seconds)
    (89/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.130657795 seconds)
    (90/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.153016319 seconds)
    (91/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.08006732 seconds)
    (92/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.16045363 seconds)
    (93/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.080104065 seconds)
    (94/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.125471212 seconds)
    (95/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.080856036 seconds)
    (96/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.128779502 seconds)
    (97/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.080812112 seconds)
    (98/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.097093549 seconds)
    (99/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.128627431 seconds)
    (100/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.102736755 seconds)
    (101/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.080328341 seconds)
    (102/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.121573406 seconds)
    (103/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.080605384 seconds)
    (104/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.120051471 seconds)
    (105/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.089423762 seconds)
    (106/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.169944362 seconds)
    (107/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.096303691 seconds)
    (108/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.114513301 seconds)
    (109/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.097326149 seconds)
    (110/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.079062175 seconds)
    (111/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.193841044 seconds)
    (112/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.199985006 seconds)
    (113/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.2091166 seconds)
    (114/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.130752979 seconds)
    (115/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.0974326 seconds)
    (116/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.144205187 seconds)
    (117/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.112223451 seconds)
    (118/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.113853216 seconds)
    (119/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.096204985 seconds)
    (120/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.124218952 seconds)
    (121/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.204534672 seconds)
    (122/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.099550818 seconds)
    (123/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.1614284 seconds)
    (124/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.122421437 seconds)
    (125/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.122962904 seconds)
    (126/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.11892588 seconds)
    (127/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.116028152 seconds)
    (128/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.118609834 seconds)
    (129/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.097304408 seconds)
    (130/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.122872447 seconds)
    (131/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.099369168 seconds)
    (132/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.121885679 seconds)
    (133/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.107963457 seconds)
    (134/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.198714609 seconds)
    (135/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.133649381 seconds)
    (136/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.095768577 seconds)
    (137/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.104341474 seconds)
    (138/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.119163392 seconds)
    (139/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.12535668 seconds)
    (140/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.142740464 seconds)
    (141/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.080836349 seconds)
    (142/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.079078007 seconds)
    (143/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.114235497 seconds)
    (144/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.195212915 seconds)
    (145/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.211535676 seconds)
    (146/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.081115603 seconds)
    (147/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.122334814 seconds)
    (148/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.081319307 seconds)
    (149/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.119217672 seconds)
    (150/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.080645669 seconds)
    (151/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.091889076 seconds)
    (152/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.13473581 seconds)
    (153/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.103025756 seconds)
    (154/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.081927066 seconds)
    (155/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.109109629 seconds)
    (156/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.151575899 seconds)
    (157/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.194667694 seconds)
    (158/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.119437512 seconds)
    (159/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.107645456 seconds)
    (160/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.132303422 seconds)
    (161/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.198328646 seconds)
    (162/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.081668612 seconds)
    (163/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.079218586 seconds)
    (164/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.149581603 seconds)
    (165/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.079623161 seconds)
    (166/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.113231871 seconds)
    (167/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.080584442 seconds)
    (168/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.118026822 seconds)
    (169/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.089120579 seconds)
    (170/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.159892669 seconds)
    (171/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.080741996 seconds)
    (172/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.122590618 seconds)
    (173/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.151650983 seconds)
    (174/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.104447289 seconds)
    (175/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.080790273 seconds)
    (176/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.103844836 seconds)
    (177/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.100082407 seconds)
    (178/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.152889276 seconds)
    (179/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.080091911 seconds)
    (180/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.103198354 seconds)
    (181/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.100300179 seconds)
    (182/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.135875191 seconds)
    (183/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.144650176 seconds)
    (184/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.100961714 seconds)
    (185/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.121941857 seconds)
    (186/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.095566504 seconds)
    (187/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.122459432 seconds)
    (188/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.094125524 seconds)
    (189/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.12564452 seconds)
    (190/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.105808725 seconds)
    (191/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.102412662 seconds)
    (192/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.143702364 seconds)
    (193/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.115650496 seconds)
    (194/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.080471782 seconds)
    (195/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.117220331 seconds)
    (196/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.096840315 seconds)
    (197/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.102252841 seconds)
    (198/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.120271934 seconds)
    (199/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.103040636 seconds)
    (200/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.081489488 seconds)
    (201/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.130108283 seconds)
    (202/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.080070602 seconds)
    (203/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.080925961 seconds)
    (204/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.111428225 seconds)
    (205/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.089182787 seconds)
    (206/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.103539989 seconds)
    (207/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.097471061 seconds)
    (208/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.103274172 seconds)
    (209/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.080929559 seconds)
    (210/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.103303686 seconds)
    (211/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.144048528 seconds)
    (212/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.122354194 seconds)
    (213/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.081101647 seconds)
    (214/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.080504271 seconds)
    (215/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.137781805 seconds)
    (216/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.079704677 seconds)
    (217/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.132199668 seconds)
    (218/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.080787257 seconds)
    (219/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.104257217 seconds)
    (220/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.079509297 seconds)
    (221/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.120616875 seconds)
    (222/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.111154792 seconds)
    (223/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.103778938 seconds)
    (224/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.080831857 seconds)
  done (took 30.707391415 seconds)
done (took 31.570397999 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.409297965 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.134642445 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.128221955 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.104492296 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.147490263 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.107213989 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.129185962 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.106785452 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.12724919 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.094647662 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.118302392 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.12765367 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.104855224 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.145040942 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.106401424 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.119799993 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.096581771 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.129171756 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.127437102 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.107256317 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.147669294 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097373785 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.126109844 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.097167117 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148232263 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097057963 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.128330172 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.104529238 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.126922751 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.094964496 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.129099961 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119322868 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.106456139 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.130984022 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095107878 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.119729363 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095186271 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.110833876 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.096451198 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.121391925 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.103708529 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.119586296 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.105779947 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.120455317 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.098192421 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.118245749 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093857512 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.130314752 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.093937089 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.128217188 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097037043 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.132349778 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.11775808 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.095374456 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.117268077 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.097958986 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.128508926 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095270022 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.128251628 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095650402 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.1200134 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095464818 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.123054973 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095553227 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.120253489 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096783727 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.121037451 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.099084141 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.11751243 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098498657 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117880207 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.097593072 seconds)
done (took 9.390271482 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.104079031 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.191078201 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152641815 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.157219817 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.153280782 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.114393706 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.130846763 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.152791524 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.104336671 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14977965 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.149722074 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.142598592 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.13443967 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.129146463 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.137323788 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.10386144 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.126463405 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.136754438 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.138528215 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.148411147 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.15278184 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.127792694 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.126004999 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.147347597 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.125544977 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.125265087 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.130480033 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.126273179 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.108018942 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.143448511 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.119881167 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.132422527 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.129481143 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.115545319 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.134962884 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.101354011 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.137772824 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.12301857 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.103630542 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.127385702 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139136723 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.115222213 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.123890025 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.133973789 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.10518146 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.131606199 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.103330341 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.125720158 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.104000348 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.122484562 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.131937318 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.143027286 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.125495076 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.128326435 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.108196742 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.127243877 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.105237465 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.130398005 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.128880246 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.108011079 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.127484902 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.105855369 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.133701245 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142740952 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.126325281 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106092757 seconds)
  done (took 9.380171653 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.119292158 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.157176786 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.133893946 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.111471057 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.130864245 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.092978529 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.116267981 seconds)
  done (took 1.776022793 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.09465831 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.147964344 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128122682 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.151426416 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.139978438 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.132244887 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.135555077 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.093686858 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.142844762 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.128464446 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.123629096 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.174448135 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.119131897 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.106768202 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.154730882 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.117994276 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.130915064 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.117920639 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.10291456 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.152008591 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.12347425 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.117730137 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.132039533 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.095730627 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.140853465 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.096836629 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.187352 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.13068068 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094442175 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.125585873 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.100457102 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.213762976 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.118523224 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.12944945 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093303778 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.14772171 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.116288735 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.125352377 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.144435106 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099862206 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.14218247 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.1019255 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.12623776 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.124508176 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.103158658 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.133826132 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.107147616 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.127428785 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.100654466 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.148587307 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.130199877 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.118134446 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.12098793 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.099456155 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.129016171 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.10124907 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.13366457 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.09971597 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.147764515 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.12619349 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.121714737 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.146805774 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.141414692 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.122975447 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136282458 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.118488435 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.143207657 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.124431787 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.103211124 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.127456841 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.122435203 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.122979321 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.129419685 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.111192824 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.128136791 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.124475077 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.147383336 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.10000434 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.132028125 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.099539548 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.122238521 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.095066091 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.139003638 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122872525 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.097872548 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.136763872 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.107776013 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.124708531 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.098558718 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.141873666 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.123512761 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.106313125 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.130593628 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.100172802 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134814348 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.148089436 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.105793203 seconds)
  done (took 13.006347663 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.096831005 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.096546281 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.126800412 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.121304671 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.097319546 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.096307 seconds)
  done (took 1.562960512 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.128198322 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.123399606 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.111401014 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.127457427 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.164171204 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.12072935 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.145883291 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.129690033 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.116888952 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.135602055 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.120079653 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.145918838 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.150352463 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.104234939 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.145326177 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.103585877 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.145386198 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124020756 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.110851924 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124538707 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.112373117 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.128127051 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100067258 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.143835516 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.104012984 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.130073976 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126271995 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.112461211 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.134938605 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.105274375 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.128072254 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.103027731 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.129554316 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.1301191 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.121666377 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.12803943 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098142303 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.130692231 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127920928 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.104068592 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.146937097 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100315721 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.133681381 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.105809115 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.130311051 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.126926929 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.106484138 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126419988 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.120880416 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.129690282 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.105999172 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.128407731 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.103568142 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.130794724 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.103641799 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.13178043 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.130210585 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.121861116 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.128323552 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.105110807 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.124859016 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.104525701 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.131573951 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.127984706 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103718278 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.129425135 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.105420822 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12395621 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100655315 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.12776602 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.106031226 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.124514025 seconds)
  done (took 9.733168701 seconds)
done (took 36.367118835 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.091583662 seconds)
  done (took 2.012727311 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.874237319 seconds)
  done (took 1.797624635 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.347492216 seconds)
  done (took 18.303933797 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.525155908 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.615241543 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.979240491 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.170852422 seconds)
  done (took 3.216221908 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.966806193 seconds)
  done (took 1.908018087 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.319075109 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.268359714 seconds)
  done (took 1.516739474 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.836411477 seconds)
  done (took 1.772474175 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.575876697 seconds)
  done (took 2.515834019 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.36028722 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.205789398 seconds)
  done (took 1.510659999 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.588921573 seconds)
  done (took 1.528452428 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.59137635 seconds)
  done (took 15.534931768 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.235624221 seconds)
  done (took 1.189171253 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.308974363 seconds)
  done (took 1.250630398 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.605327804 seconds)
  done (took 4.549176796 seconds)
done (took 59.535476346 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.10695305 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.134446681 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.110510731 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.131307931 seconds)
  done (took 1.422014326 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.111773925 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.127191183 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10841277 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.128913442 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.113166035 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.12905033 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.103278718 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.135789008 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.103896669 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.131927319 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.127984803 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.104022203 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.128712924 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.103435091 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.127113293 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.105430627 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.131437994 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.103909015 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.129077058 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.10487775 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.129431772 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.129244163 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.107035262 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.129314277 seconds)
  done (took 3.798434281 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10663555 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.100766877 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.127795361 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.099897297 seconds)
  done (took 1.381511653 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.112418247 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.144350572 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.118561794 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.136865787 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143611446 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.118165602 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.125321142 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.100689336 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.129806545 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.111526698 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.127043192 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.119634933 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.142750718 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.119915368 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.113596264 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.117897186 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.097490513 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.143817869 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.111188216 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.138175176 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.100129809 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.136549794 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.108300428 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.14128077 seconds)
  done (took 3.910909802 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.176393928 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.139730319 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.148832307 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.173541646 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.126223542 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.124178758 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.125935613 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.133701853 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.129003402 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.10067465 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.123886833 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.156573526 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.131375356 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.127175883 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.100698891 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.131038032 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.10728111 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.13024752 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.102799113 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.13957236 seconds)
  done (took 3.584270232 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.107640434 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.125056464 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.09696676 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.124263428 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.107415394 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.127420705 seconds)
  done (took 1.645177489 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.09751578 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.095242854 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.120728044 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.094942591 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.125194132 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.095441495 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.118005424 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.09590118 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.095204891 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.121328912 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.095335616 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.119304338 seconds)
  done (took 2.227227986 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.223833527 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.123320171 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.126148983 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.101464496 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.129861609 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.099269544 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.140929257 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.099916594 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.181096849 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.126376445 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115605158 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.179284733 seconds)
  done (took 2.601770984 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217217875 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105783386 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283591071 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.38331704 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167842719 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175450538 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.28283295 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176895112 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.195975631 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145372491 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215104545 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165755166 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137308227 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189165888 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149813829 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.193881104 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183666521 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21020557 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157702459 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249012693 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175513188 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175699171 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200376026 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160495592 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121558827 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167113864 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.126293403 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111220979 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181692449 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178664274 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207227912 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130594339 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148489808 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233530282 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223305215 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186356373 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.314256776 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143301478 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.200166677 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.200469001 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.286820153 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149563826 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205627574 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16503807 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140002662 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190147808 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166075269 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.188884122 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.113836356 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151030048 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192746146 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184305295 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.215514751 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120259623 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.329580261 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1296038 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.154548597 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188839324 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19784763 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234215066 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176046088 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.105797784 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196360328 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22538948 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190620536 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.126380321 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.175681564 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134235604 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185430167 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.213345899 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211754566 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177511413 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.190128611 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142537591 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171841328 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186890339 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161862377 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161880246 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170602372 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.129358718 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158858181 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118890083 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136541212 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.193330726 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105676134 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247545254 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118015326 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.325579568 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215080014 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167363017 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169171705 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171559552 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176687259 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1282653 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.127971065 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155692542 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.179327488 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165417763 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113359591 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166219142 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15441793 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.133398824 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134762409 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.131930541 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168037782 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.116586322 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174978495 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173135758 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.137356697 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173190792 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158624602 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.142736419 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207262684 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20480203 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113934297 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141684587 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213166086 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166825035 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.145019045 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195618966 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205349576 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.182470332 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145275477 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178853486 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20560809 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150373783 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207693551 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150717171 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115981283 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.15998384 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168025657 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165996757 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.164011896 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111118735 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.161415091 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23797238 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.110284001 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14546039 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183610689 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107469389 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13716639 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153230939 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118112891 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.15127832 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.159479506 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.146873029 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13738742 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168663797 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162013978 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166883232 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151250688 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199258559 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142493121 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.169542065 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129364047 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.128919747 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.189123134 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202501152 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139953514 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19663996 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.177550516 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206064155 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171874228 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140186814 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190859583 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137589069 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.101734136 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174341278 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16892514 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171208677 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.200246973 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228155861 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.177760893 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.133861504 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157986305 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175561081 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.194258829 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163566969 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.154094889 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172072939 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174659327 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.131169117 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.105343566 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135642138 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12158995 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140098555 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139653536 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191263127 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173593842 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198596256 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16924361 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148974613 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201955823 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.133366315 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174055576 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.181178925 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119352669 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.201920208 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227352566 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174785249 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124255677 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179603466 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.129573107 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106728618 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141709717 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17586347 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14117159 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116431249 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152906938 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201505273 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184385073 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15885689 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237881246 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179313826 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212903974 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.101975367 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.17322614 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189939846 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167718907 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.196083317 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117588989 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.16887382 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197025759 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153277579 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202063211 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171146218 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177711665 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237244856 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.164810059 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112816382 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158909941 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179855626 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149043976 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179903509 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127502941 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144745466 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162874017 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.145155511 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107245556 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188965667 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15322673 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187764348 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.17664074 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20971765 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111176279 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153128113 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170095407 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155223125 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.099551071 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179646599 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204425402 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152950187 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167982042 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193489236 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140201156 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.323296591 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206448572 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193471641 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147741737 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151895346 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171743804 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179000442 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17389117 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193041525 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151491666 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190470102 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139900779 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.152797815 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143631221 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128733757 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15997574 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.160493304 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14213414 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.163411913 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.123779117 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221677854 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126185988 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168798812 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174512271 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.15633462 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.164116284 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121771865 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247333575 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140417203 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214181546 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.138088112 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.18544871 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197241735 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136240275 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136532567 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.108022552 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192112209 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142834495 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16914313 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.192506152 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207589396 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167299219 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178910415 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14746968 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.104878777 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168867007 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158427466 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208137195 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151396168 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.145988629 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209887499 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.160461754 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139707836 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146554186 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.320002251 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126833917 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1916824 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.131284705 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.287471833 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134859046 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113233414 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17965741 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18023761 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.14142364 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.168175677 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170596772 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15409376 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180719115 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147596933 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199078919 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216529273 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179563397 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212523733 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.125566662 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167891821 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172317583 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195573643 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15412481 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.154599416 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172009115 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201682822 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.206083402 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.14144057 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144022706 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17180821 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169831033 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183047954 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143951017 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197352449 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141125161 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17570276 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147646127 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10550958 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168088935 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.193217572 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141977911 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194677021 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168588624 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112642707 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13609521 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161358498 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169777296 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152346386 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.111201619 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187594609 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.137571767 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173183004 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189971149 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111815324 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164149585 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155214919 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113106615 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152006397 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15386986 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142895828 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.152334163 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19956546 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.140954117 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196158507 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180016959 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174292251 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169105133 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154222568 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.641642579 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.137331719 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200929486 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157741076 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197547008 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160155597 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175450987 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170649642 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130949982 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175638845 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159492359 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230780448 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175101385 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.16876691 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140109559 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125366776 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155342241 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.140477075 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16067596 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143728463 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150478594 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.145768472 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.168759092 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127277266 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.155006127 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148933225 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204367532 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157531207 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193744151 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194708599 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147552636 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175653284 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184689891 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110866127 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.170236245 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181392084 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152436141 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15974468 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.138559802 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.117219004 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190630024 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.131953609 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142654526 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170512938 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170096257 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1727655 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.143921722 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169733948 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122808236 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171172602 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136228542 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.164228135 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167117549 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112582775 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.137031448 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164190205 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169304363 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.140324135 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135121611 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.179009578 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201874419 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.106122414 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143492322 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291579572 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167804608 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203911233 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.162524352 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115268857 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154378138 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16401102 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.161908929 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169965932 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.110549095 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14240322 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.139863708 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.188459949 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.1471392 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167612376 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19469174 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171052946 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199323527 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.144829316 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.274680668 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120233249 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166029114 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.139934957 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.11004393 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150590328 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144707337 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153312927 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201283878 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190032619 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.162398531 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.126238891 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1366443 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.105699421 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143067679 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181638612 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164873058 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168010928 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123266479 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.127326827 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153752923 seconds)
  done (took 81.649301461 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166392916 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.195310636 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.174770223 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.209470172 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177476201 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.266186395 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.215114793 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.23720567 seconds)
  done (took 2.680056268 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.110358648 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.14437169 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.150292568 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.133921551 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.132546617 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.3577708 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.144237697 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.107106084 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.193058668 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.144327598 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.131171078 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.62706693 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.102395736 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.135266907 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.121331314 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.13137934 seconds)
  done (took 3.897811926 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.214277208 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.541449458 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.87876254 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.253949971 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.235572123 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.163022467 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.760430683 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.192368236 seconds)
  done (took 12.277120345 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.138962847 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.152099738 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.268358904 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.185517829 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.17028563 seconds)
  done (took 1.961920465 seconds)
done (took 123.978039296 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.10432818 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.133496885 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.10586852 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.135080054 seconds)
  done (took 1.513745836 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.118068769 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.091814423 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.120264555 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.088806879 seconds)
  done (took 1.460126173 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.498442565 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.088120972 seconds)
  done (took 1.666340442 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.12971456 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.145484508 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.12815399 seconds)
  done (took 1.457503896 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.112392079 seconds)
  done (took 1.163395229 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.115802329 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.111850807 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.151924062 seconds)
  done (took 1.431182461 seconds)
done (took 9.73638439 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141874938 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.53559105 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.398236898 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.14935724 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.729234527 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.391838207 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.05950319 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.163778994 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.173483321 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.101147617 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.146444499 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.685314022 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.045491353 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.446739184 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.03074111 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.447210081 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.726113946 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.101442072 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.135194512 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101493194 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.029406472 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098915113 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.129683963 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101634536 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.707746282 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.405392596 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.129872753 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.481995813 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100226881 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131910188 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.390625016 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12708896 seconds)
  done (took 17.585253679 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144479597 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.189598343 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.136308451 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103347254 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.131590351 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.103120765 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.138275787 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.113524192 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.188319373 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.128183228 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.1203954 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.128553437 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105432734 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.129164559 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.122555047 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.128376288 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.103091538 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.131076372 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.107530495 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.132672839 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.119888086 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.127616345 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.102278916 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.130230815 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.099884632 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.140959179 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09972814 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.140428348 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099830108 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133404992 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.13280241 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.101643661 seconds)
  done (took 5.065736686 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.15047573 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.198546619 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137969419 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136135449 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.178111118 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.130241695 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.214915948 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.136405181 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.19191478 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.128853302 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.120672693 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.128828288 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.166562505 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.101348464 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.150969518 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.100594289 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.131927619 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.102774289 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.135905129 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.102227835 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.148790859 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09969779 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.130696674 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.102136983 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.128701432 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.114834083 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.129726531 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.14040723 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101589179 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132597182 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.10747984 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.127772459 seconds)
  done (took 5.370031229 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.107902315 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.135634244 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.118521534 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.146232463 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.10423062 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.135131155 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.108995055 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.131149572 seconds)
  done (took 2.042303502 seconds)
done (took 31.115314415 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.123072468 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.142672853 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.115342363 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.138137492 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.137311002 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.126550977 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.113281461 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.098535426 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.139623566 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.116383855 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.12970461 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.101645727 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.143541295 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.105618335 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.145503021 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.109950602 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.150819959 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.11598168 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.130238581 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.110885086 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.130656637 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.1214655 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.13546284 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.101958504 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.156582142 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.131164339 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.119061375 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.133463378 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.106814743 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.102877148 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.146844582 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.106157219 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.13007594 seconds)
  done (took 5.167849971 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.129661426 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.17581829 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.097440229 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.127301284 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.170063497 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.099653232 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.157120553 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.098522589 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.125997236 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.099905263 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.098289586 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.156963684 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.16090843 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.132878077 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.177148106 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.164679178 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.125674849 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.166682004 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.150707272 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.138414622 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.158527957 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.097440853 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.163151508 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.171649873 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.098056538 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.128000893 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.1432313 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.162824673 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.173028674 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.162090507 seconds)
  done (took 5.279138858 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.110167051 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.146596401 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.128760348 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.204039746 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.172316432 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.117354964 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.144336585 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.120184648 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.159057538 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.100930641 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.141987485 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.162844199 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.119336562 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.141799657 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.108558228 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.14527796 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.12161141 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.132643883 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.108954193 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.150381059 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.119265081 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.143734071 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.116228526 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.140885443 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.101192054 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.140008506 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.107025343 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.144643556 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.136823143 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.111751143 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.133512015 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.107587703 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.132911217 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.113050319 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.133846302 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.11062789 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.15398265 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.111552794 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.14468231 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.166265357 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.112180339 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.134680253 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.125225641 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.178619798 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.103690459 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.137569042 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.113536796 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.140953369 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.100145758 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.151287632 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.117397354 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.130935183 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.14622436 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.101516489 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.128616272 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110184455 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.103057007 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.133925751 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.110495649 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.137212552 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.150445318 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.11101901 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138621101 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.104699752 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.136335356 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.101575685 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.128685159 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.107440811 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.154738893 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107967805 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163398719 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.102376687 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.137429984 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.110928665 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.137432138 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112139377 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.130856917 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109358145 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.139774654 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.107981434 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.140374733 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.105058959 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.134630348 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.119875718 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.145640575 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.139384513 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.107741968 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.137436509 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.105299647 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.13370863 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.11674156 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.132746432 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.106157379 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.141800221 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.103150365 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.134292837 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.109455775 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.136424768 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.101235624 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.152505869 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.1084651 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.131225263 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.120243748 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.132764054 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.105645597 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.140385916 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.114809883 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.131688501 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.106818166 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.137966411 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.101296681 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.138222113 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.105415845 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.130390406 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.115641028 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.143559517 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.107749755 seconds)
  done (took 15.967090912 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.253184821 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.233153715 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.203793945 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.318773967 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.154626882 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.128290053 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.228646126 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.184472706 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.132863253 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.172079381 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.189343834 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.19489668 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.102964289 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.165538015 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.233412399 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.32422405 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.165351164 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.175615764 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.1433179 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.155538579 seconds)
  done (took 4.939971866 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.119295124 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.172740902 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.162747538 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.128792145 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.135305179 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.116248625 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.134116459 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.148386857 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.103444371 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.139331878 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.10261965 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.141203063 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.105316592 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.13537065 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.119873721 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.150227124 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.10751235 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.139703275 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.149724549 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.108912098 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.134534726 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.154268123 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.113177485 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.161724629 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.110350544 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.147675291 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.101364847 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.139793923 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.099266657 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.132619914 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.108349093 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.147603702 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.139475082 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.104325113 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.138707912 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.104075674 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.128407297 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.10498044 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.134516782 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.107072836 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.149154222 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.105982454 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.132836762 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.104091247 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.140620684 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.100663222 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.136884162 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.110112858 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.137288363 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.112290915 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.138544574 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.107711987 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.140617609 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.11548739 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.130121367 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.113535874 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.144922921 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.136927045 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.110287776 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.132144191 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.10234811 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.106525482 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.132074808 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.108009599 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.138386773 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.15001427 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.11177832 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.132653654 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.109084552 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.137407403 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.106395564 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.150758612 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.152641886 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.10166481 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.130076222 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.125629722 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.128866287 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.092614403 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.112801644 seconds)
  done (took 11.048343208 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131848677 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.132782246 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.122806124 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.168704376 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.117496366 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.142453502 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.103767345 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.153638229 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.109665468 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.142306515 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.110139077 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.149208558 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.161270325 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.116604124 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.132891212 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.119523395 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.137523458 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.144686395 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.152712054 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.164244757 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.115226912 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.139000292 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.117462283 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.144354331 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.136204618 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.146349428 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.16682881 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.109140118 seconds)
  done (took 4.880187581 seconds)
done (took 48.336818695 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.169640605 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.389761966 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.154046162 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.153917035 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.169313286 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.197927071 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.157318209 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.350220385 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.858396716 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.145304172 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.153418095 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.152774086 seconds)
done (took 27.132363712 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.253605167 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.741069234 seconds)
    (2/2) benchmarking "String"...
    done (took 1.471407991 seconds)
  done (took 4.295812954 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.150969416 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.152729901 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.399657388 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.1540271 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.171760572 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.169839851 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.154373477 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.176059677 seconds)
  done (took 15.456489383 seconds)
done (took 25.235279589 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.195794431 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.356237442 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.423150347 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.17403392 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.154626604 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.154449769 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.141774298 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.186949688 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.162786419 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.145865475 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.18043997 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.443928488 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.146741541 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.550495862 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.141868485 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.166224182 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.171841798 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.417147901 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.159774428 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.19875214 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.154848161 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.142289336 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.191254065 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.19647335 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.171490915 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.168925843 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.166878431 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.15163787 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.36744881 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.163682179 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.200380469 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.162658882 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.194255706 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.158181165 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.264579447 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.183751897 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.354944918 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.14774128 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.145604967 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.156879438 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.39765613 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.556050237 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.16980408 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.15222092 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.162319417 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.237275702 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.149705227 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.872954725 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.16212032 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.145476906 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.222879422 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.547394767 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.160134345 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.160648854 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.166735353 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.421850542 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.188201869 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.186103021 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.185274031 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.171540658 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.158751954 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.157752818 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.186874131 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.159322921 seconds)
  done (took 140.677029276 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.158160023 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.162807042 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.162336965 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.182986348 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.15944198 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.162999151 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.15873843 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.158327774 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.16183418 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.185042612 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.159253724 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.160403548 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.163015632 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.127875175 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.161304522 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.181806506 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.168610115 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.159912235 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.165936845 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.160549093 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.181148867 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.160570613 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.180546765 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.163741449 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.197697759 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.254819914 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.198127247 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.188002983 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.159121296 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.16051401 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.205572197 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.227529709 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.769906368 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.018449913 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.173288851 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.178370074 seconds)
  done (took 78.761893089 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.159988869 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.160997747 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.163657513 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.192637602 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.160682014 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.73380849 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.734834215 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.916341745 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.466077613 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.574326962 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.416487334 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.161201624 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.255102618 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.177251302 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.162158157 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.162540441 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.176971137 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.188128558 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.164611536 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.161082458 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.731947748 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.17796242 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.209993939 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.337363493 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.180349031 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.194394102 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.557263681 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.163112592 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.193294904 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.494945905 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.212078247 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.163472305 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.564062788 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.228715419 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.276911791 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.165063865 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.194368623 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.163472925 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.443877575 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.162950409 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.163449221 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.16316996 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.165799998 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.854740363 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.168294317 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.735238397 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.167698695 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.11177317 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.164254264 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.162922826 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.569429933 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.190280631 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.805643292 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.179430926 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.162587065 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.165604531 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.164295231 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.16438175 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.196262393 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.603949865 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.281439639 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.165010976 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.167670925 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.196308257 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.165452169 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.384267712 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.164829794 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.49462554 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.224344548 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.378989733 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.736746901 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.168347385 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.261536736 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.284121275 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.16654958 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.165343848 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.165160457 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.164152201 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.275337863 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.16562214 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.586484804 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.343107398 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.184597629 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.53909369 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.264694667 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.164891702 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.561890123 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.170513834 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.16696 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.910737115 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.263535248 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.166378141 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.167269848 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.166294248 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.587634409 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.740438121 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.46342541 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.16952038 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.046530413 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.170119366 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.59801403 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.719053468 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.866907223 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.171960317 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.279668946 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.341416138 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.185037641 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.165944285 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.578090092 seconds)
    (110/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.172136135 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.167662608 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.16567418 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.22908095 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.565855754 seconds)
  done (took 362.469262563 seconds)
done (took 582.985023901 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.886535899 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.829486106 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.96191336 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.86118941 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.831601671 seconds)
  done (took 10.46080828 seconds)
done (took 11.548138848 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.357259493 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.356884675 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.227432361 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.358930949 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.200643369 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.378577348 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.342810961 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.193766076 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.278323004 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.250328442 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.27443323 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.223210187 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.202410818 seconds)
  done (took 17.736080224 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.445114389 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.170747909 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.255451685 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.4183733 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.209307474 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.43753343 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.47291666 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.172872798 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.310517941 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.18228465 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.183494188 seconds)
  done (took 17.350274081 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.434725787 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.170438975 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.239104786 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.422555007 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.213055281 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.432505975 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.473659155 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.170773392 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.312777491 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.183370622 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.183313824 seconds)
  done (took 17.327160802 seconds)
done (took 53.501368163 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.208825929 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.337611974 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.19920682 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.182938756 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.179316393 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.181433322 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.185533973 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.180678086 seconds)
  done (took 10.748081651 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.179156787 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.179418022 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.176294178 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.178298149 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.175430288 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.176572468 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.178621676 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.176816901 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.177019983 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.1773914 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.178960375 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.178534024 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.179344994 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.176131683 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.179525921 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.175689062 seconds)
  done (took 19.936210788 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.179213932 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.176918044 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.177200737 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.176653412 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.177154454 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.177834542 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.17981395 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.177644313 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.177308082 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.177598932 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.178500213 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.176656527 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.176897351 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.178177675 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.178399987 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.177848498 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.177757321 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.178132446 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.182831634 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.178700262 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.178460954 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.178491568 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.179980491 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.180004966 seconds)
  done (took 29.37484577 seconds)
done (took 61.149315368 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.172846225 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.199916498 seconds)
  done (took 5.466923216 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.241986301 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.241447591 seconds)
  done (took 3.58027121 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.182276281 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.181962376 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.18254043 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.182585084 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.18089746 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.181513437 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.182979903 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.182034055 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.180762684 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.181939769 seconds)
  done (took 12.915187168 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.18241062 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.182982556 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.179099146 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.183701347 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.182060863 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.180286064 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.181584345 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.18234361 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.18261516 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.179152666 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.182740765 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.180448001 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.182158866 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.180257411 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.183125962 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.180356632 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.179728159 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.181438376 seconds)
  done (took 22.363105982 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.196932263 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.204784882 seconds)
  done (took 3.498348221 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.321846417 seconds)
    (2/7) benchmarking "second"...
    done (took 1.222165947 seconds)
    (3/7) benchmarking "month"...
    done (took 1.298298593 seconds)
    (4/7) benchmarking "year"...
    done (took 1.287147568 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.222167283 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.201644665 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.222206503 seconds)
  done (took 9.873376946 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.184558462 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.371471454 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.478167419 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.722722874 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.184741729 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.186918374 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.034798658 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.185692487 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.18933006 seconds)
  done (took 13.635756498 seconds)
done (took 72.425303002 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.17505626 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.206579697 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.193616228 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.192667109 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.47405212 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.193600554 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.179212057 seconds)
done (took 15.710462716 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.162718015 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.182504754 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.168143502 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.193684842 seconds)
  done (took 9.804703171 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.178543436 seconds)
    (2/2) benchmarking "read"...
    done (took 1.529640013 seconds)
  done (took 4.806644239 seconds)
done (took 15.707850159 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.185094765 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.185519827 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.181649729 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.184508218 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.18270317 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.18578324 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.183217184 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.183179246 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.18589451 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.18689836 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.185859504 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.186258907 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.185827707 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.182388566 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.183009222 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.185755659 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.182541861 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.18384204 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.186241465 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.183598306 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.18284407 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.185709081 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.182825344 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.183486839 seconds)
  done (took 29.524691272 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.187180969 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.185419325 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.187347355 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.187658338 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.184536731 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.187393777 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.186988854 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.183095994 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.186793237 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.187190948 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.182927379 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.184716531 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.188463945 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.184703116 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.187721255 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.184232573 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.18705314 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.184448287 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.186419468 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.184569283 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.186933987 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.185320266 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.185385284 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.187775618 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.185084477 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.185735242 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.188279857 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.18411056 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.188769752 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.185427891 seconds)
  done (took 36.681741082 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.194643649 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.195714077 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.188088679 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.188447089 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.189057959 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.188872329 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.189875382 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.189379191 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.18833447 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.189478193 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.18906084 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.188479708 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.189790992 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.188822826 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.188535463 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.189290104 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.188902756 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.189479251 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.189968559 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.188391726 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.190190471 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.18822389 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.189294995 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.190858512 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.189373992 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.190456201 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.189641527 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.190296205 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.190973322 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.19174712 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.19212072 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.190082449 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.190608698 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.190883392 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.191152581 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.191737414 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.195519098 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.19853432 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.191800325 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.190319928 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.191364404 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.190975491 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.19081185 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.190518021 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.190250002 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.190956206 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.190622809 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.191548649 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.191236954 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.191008773 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.191953717 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.191872908 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.191460495 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.191954191 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.191629678 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.192777045 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.192351555 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.192428227 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.191551272 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.192064645 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.191850992 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.192660368 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.191865867 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.192016401 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.193429995 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.193026753 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.191521146 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.192307577 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.19272696 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.194513249 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.19322666 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.193909648 seconds)
  done (took 86.862635484 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.194600161 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.192216982 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.189872914 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.190562478 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.191109122 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.195375437 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.191211175 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.193144741 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.190638612 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.193296108 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.19400326 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.191987545 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.190336656 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.193772262 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.194477756 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.192010297 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.194730347 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.190802 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.194321431 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.194388505 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.194260971 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.191286731 seconds)
  done (took 27.344885599 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.193853831 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.195228658 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.191354015 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.196787928 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.194319382 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.197715121 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.195072214 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.196287602 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.194935605 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.191948895 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.192463207 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.195557995 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.194439644 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.19418499 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.192466981 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.194534995 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.196247468 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.195374787 seconds)
  done (took 22.610235036 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.194524717 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.193870554 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.1948494 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.192496429 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.194349805 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.196817596 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.19367222 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.197034207 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.196615985 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.195144879 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.198023464 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.197059772 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.197272318 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.193754254 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.197602683 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.193688109 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.197437512 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.194192189 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.196722779 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.194278627 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.195628057 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.198305898 seconds)
  done (took 27.412525346 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.196852178 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.197873406 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.194711303 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.194176663 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.195441525 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.197813613 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.197425176 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.194961445 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.198664326 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.197023373 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.195249821 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.198783549 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.197310696 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.194912665 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.195969273 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.195909347 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.198838329 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.195955757 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.197390982 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.196334763 seconds)
  done (took 25.04199749 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.199470668 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.200204892 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.200455898 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.201448383 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.201124513 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.19949372 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.200831475 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.20118141 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.200595904 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.201179709 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.200765874 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.200959837 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.202353902 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.201572221 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.20138372 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.20143986 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.203350958 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.201660553 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.201541376 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.201403055 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.201224943 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.201690619 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.201902672 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.20173088 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.202514307 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.201773932 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.202355039 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.202444358 seconds)
  done (took 34.749901837 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.201574435 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.202308809 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.198626851 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.199098749 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.199235334 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.199336915 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.199079693 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.200230699 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.201725683 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.199044023 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.201383063 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.201977402 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.201707931 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.202557629 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.201277596 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.201531589 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.202112698 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.200365503 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.200317137 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200715154 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.203434374 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.201316121 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.201981005 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.199537965 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.200401476 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.202692866 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.200051152 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.200132934 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.203574118 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.199522411 seconds)
  done (took 37.140798888 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.246876835 seconds)
    (2/2) benchmarking "in"...
    done (took 1.245665096 seconds)
  done (took 3.60701613 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.199681369 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.203549546 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.2025534 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.201692651 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.200575737 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.202801478 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.203460508 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.202201979 seconds)
  done (took 10.73180313 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.203548219 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.203369833 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.203024508 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.204394548 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.204630234 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.202246181 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.210360726 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.224298879 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.204408729 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.204519198 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.211721751 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.212331249 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.206474895 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.204736443 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.204049748 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.206659882 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.204559301 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.204856055 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.205296999 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.205681679 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.205067702 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.207562785 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.207678266 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.203861614 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.205757949 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.215769291 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.20756352 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.206020126 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.205411352 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.208847269 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.206034369 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.20375978 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.205865577 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.207604825 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.206220134 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.208094672 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.21410647 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.227498667 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.212985068 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.20636578 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.207213154 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.203143836 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.206992356 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.208148549 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.207455952 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.206440507 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.207403719 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.205401826 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.207190904 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.212003554 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.213187745 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.205495901 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.204119736 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.210910338 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.208587944 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.214409032 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.228424472 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.212694571 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.218307182 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.217546844 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.220144418 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.232213692 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.210244133 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.209884144 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.218834915 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.231844594 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.215701053 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.2264874 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.206285088 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.209603864 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.215785829 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.220891715 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.235105207 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.209015508 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.210690855 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.208873199 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.210335634 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.209261412 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.215187539 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.232042674 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.209348621 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.209967597 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.221681651 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.231866015 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.20996813 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.210206632 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.211574085 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.210420454 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.212413384 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.21965643 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.229321424 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.210931604 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.209508123 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.211050076 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.211604257 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.210946759 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.210687357 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.211248133 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.207801792 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.210864965 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.209849249 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.215396531 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.219918162 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.210636755 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.211251434 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.217774563 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.212039798 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.210312917 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.216789682 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.211130447 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.211249536 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.214383727 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.217873958 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.209241402 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.215833675 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.220553235 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.212637841 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.213501155 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.212111362 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.214564434 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.223511337 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.239943273 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.220472574 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.21419796 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.220045695 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.225201846 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.213528061 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.216456763 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.21480118 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.211673518 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.211135285 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.214663614 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.213713935 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.214003702 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.213393732 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.216204165 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.211907544 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.213325274 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.213631173 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.214519539 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.216109552 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.21445272 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.215494451 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.216483892 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.214468701 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.215642503 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.221043657 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.213039041 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.215788301 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.215006191 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.212133266 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.214095555 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.213794601 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.215021408 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.214561814 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.214997294 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.215254594 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.215148753 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.215001292 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.214682863 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.214152616 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.216537658 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.220016927 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.214465269 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.217830177 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.214226827 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.212030803 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.214566346 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.21652005 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.215053952 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.214816356 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.215579203 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.218372493 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.223180375 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.215817457 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.21576808 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.217800021 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.21515013 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.216695549 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.216190852 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.220481185 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.224864016 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.215707707 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.222988859 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.215995627 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.216205792 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.216834309 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.217350493 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.216502409 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.215767973 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.220904814 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.224263957 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.22882485 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.241353279 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.218256488 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.220427163 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.218885231 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.221207968 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.221223755 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.215810769 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.218431842 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.217275033 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.217393037 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.216094556 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.220432356 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.217725359 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.21747686 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.21861002 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.218911887 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.217144257 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.219524793 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.219124657 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.218230287 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.214961214 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.218635757 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.218488204 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.218899909 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.215715852 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.218062372 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.218103107 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.220230529 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.218815031 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.224303124 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.215542267 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.219596379 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.220030099 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.21984248 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.21887775 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.219159171 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.220546747 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.218142878 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.227099007 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.23843799 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.219912412 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.226616692 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.238224114 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.218765357 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.223383259 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.221402745 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.217938135 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.223428312 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.227454257 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.219499452 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.219845316 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.21914608 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.221202381 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.220323313 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.22781658 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.21633515 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.221812067 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.221219559 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.221445172 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.217873114 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.222236382 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.221135768 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.221599514 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.224795755 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.221599002 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.221063631 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.221044973 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.221816002 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.22201271 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.221981669 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.225557148 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.230184121 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.227046073 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.221792668 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.22301554 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.223928744 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.226247641 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.221365787 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.221851214 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.222780888 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.235835085 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.246440217 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.228481932 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.241477965 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.223061874 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.227787968 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.242909668 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.228312186 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.223877101 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.223055116 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.222501149 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.222570863 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.220150718 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.222938994 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.224428979 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.225379346 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.22398485 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.227601708 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.223952532 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.22271419 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.223033158 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.223766044 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.223854795 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.223818796 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.222236102 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.224907428 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.225533841 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.222744921 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.224156019 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.230283244 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.243778871 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.222983437 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.224227758 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.223402975 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.22436847 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.22445454 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.224404165 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.227871948 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.233311882 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.228698519 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.2341265 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.22817152 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.234348445 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.225694458 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.229679732 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.234012606 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.223810131 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.224984408 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.225800472 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.227472782 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.23353272 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.245066054 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.227758935 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.23098608 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.226495495 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.226137506 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.226316583 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.224492612 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.22654937 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.226231717 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.234724513 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.247854589 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.230820141 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.228078791 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.224541225 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.225569714 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.226116896 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.226586499 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.228454139 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.227007805 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.22763203 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.2266077 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.227244847 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.226063091 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.225811123 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.228363385 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.224282927 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.22731655 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.234223751 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.248636899 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.231355568 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.227274069 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.234289352 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.228619693 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.235713548 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.249298644 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.227937478 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.228667521 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.227135416 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.22935249 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.226730321 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.22820935 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.228085456 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.229885734 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.232870029 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.228500866 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.229753052 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.228231016 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.228038431 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.229574812 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.238877471 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.253051726 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.231356548 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.23340373 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.227299528 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.231019972 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.233451233 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.229564648 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.227615545 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.233235453 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.241294459 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.23880954 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.230302706 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.230429228 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.231740911 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.22925038 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.230432386 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.231340778 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.230278026 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.231397545 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.734701264 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.230687442 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.234563694 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.229887899 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.23133564 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.232912223 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.233093104 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.239943782 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.231119831 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.232292206 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.2317613 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.232113015 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.229835712 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.231178302 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.231352412 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.230741009 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.230947816 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.232889526 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.239830594 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.238399224 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.233263247 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.231061196 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.232468589 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.233108279 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.233957347 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.232524112 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.232269884 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.233318062 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.232829689 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.231803478 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.234157618 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.231372644 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.231814574 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.231251203 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.232532779 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.234771422 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.239758099 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.233006916 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.229409467 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.232067776 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.232118046 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.231356786 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.233709092 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.237327209 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.235681016 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.242578078 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.24293274 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.238099407 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.233656132 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.237800236 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.241884711 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.231358699 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.231690136 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.231070276 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.234706883 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.233789799 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.23610384 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.232235945 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.239420493 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.231862356 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.232109874 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.240280903 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.25644573 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.233356825 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.234655151 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.237326001 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.232903597 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.230876566 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.233976142 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.233631093 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.24078798 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.253541726 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.233972152 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.235864574 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.233427625 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.23584179 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.238237696 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.234927881 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.235993028 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.232375209 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.234875943 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.234774477 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.235180771 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.232150547 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.234496182 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.234786938 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.237370574 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.242385773 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.231639928 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.235436849 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.234283016 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.236756834 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.234168322 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.235689403 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.231905317 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.23235909 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.234654601 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.235592011 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.23712108 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.236956549 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.235738241 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.236784583 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.237137763 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.235055761 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.239429312 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.245247618 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.243509278 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.233020964 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.234327861 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.234918569 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.237057003 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.236763179 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.236165339 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.237123081 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.23669208 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.235513432 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.235528305 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.237590483 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.240016306 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.254196874 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.259762073 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.237143055 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.236793373 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.239620938 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.238484659 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.23456519 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.238490809 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.239347423 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.240934179 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.245608948 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.237797608 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.244560489 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.256938643 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.238333417 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.242136674 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.239975383 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.245436049 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.240068826 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.238730004 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.239783245 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.24445662 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.256630521 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.239522184 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.249027727 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.269416937 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.259338667 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.239335247 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.238311686 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.239847436 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.239210401 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.240515741 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.239120185 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.240418211 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.23973371 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.239741417 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.241510908 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.245557056 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.24037466 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.240223131 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.240539088 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.238842244 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.240995133 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.237779863 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.24075271 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.240340321 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.239784051 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.239027187 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.241005405 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.240665686 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.253720318 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.268391562 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.240653251 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.240242406 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.238826846 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.243551482 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.246705633 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.252281889 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.248467849 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.241579819 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.241389009 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.242662605 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.242013734 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.242752346 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.241323521 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.241071907 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.241086546 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.240778287 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.256107789 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.26753745 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.248408722 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.241611142 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.241333434 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.242060796 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.242866907 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.243191209 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.242530279 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.243540423 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.245397065 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.247556994 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.243263914 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.243049813 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.246828762 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.251147393 seconds)
  done (took 732.559383966 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.240153511 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.239421185 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.240489294 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.240645005 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.241267019 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.240428384 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.240266072 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.241200861 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.240874588 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.240863073 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.240820297 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.241618361 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.240240163 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.241522807 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.241244081 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.241743256 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.242017559 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.241692546 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.242048032 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.243309189 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.241061657 seconds)
  done (took 27.213562432 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.24360269 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.241515423 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.241420808 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.244942566 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.243769816 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.244905146 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.243337822 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244972102 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.244817067 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242347595 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.245929612 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245594842 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.243333652 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.243407482 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243254041 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247773002 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.245534711 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.243327396 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.246998019 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.243185625 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.246113691 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.243262701 seconds)
  done (took 28.526999671 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.245631498 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.247212695 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.245538681 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.243676304 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.246667532 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.243704999 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.245691079 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.24772766 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.246195744 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.247163863 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.245128369 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.248973801 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.255521339 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.254133111 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.249494117 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.247620444 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.248039938 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.247709496 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.248475566 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.245843298 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.252304326 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.265710436 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.246368473 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.247461942 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.24813119 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.249019274 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.249954668 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.248309635 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.250561395 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.253970832 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.249720683 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.248496514 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.252029039 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.248582926 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.249934443 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.253875707 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.250900482 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.247138369 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.247962186 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.260315248 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.271303251 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.251325645 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.257594784 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.270647972 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.250595631 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.25361944 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.258337202 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.247768229 seconds)
  done (took 61.187436927 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.844113894 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.867736182 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.866085507 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.873756154 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.872690295 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.871871104 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.8780171 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.874751439 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.865510351 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.865558665 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.869614742 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.864283009 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.870588504 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.867346305 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.868116641 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.867418997 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.865733441 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.870789777 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.876152727 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.875671701 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.867913882 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.874263796 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.871261696 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.869091376 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.871855539 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.869556487 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.871265651 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.870475501 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.86882022 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.86651446 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.875634228 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.875961565 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.875090787 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.86431256 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.8642535 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.867879878 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.874231559 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.866439618 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.868050598 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.864787206 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.86836227 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.870657358 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.873075172 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.874062941 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.883348514 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.869926728 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.870746452 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.865281723 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.870814262 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.86947698 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.871580968 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.870367849 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.869408152 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.8669382 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.870826821 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.874909313 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.875888337 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.880011622 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.86847517 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.868291238 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.868657857 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.874935055 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.874369086 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.868869959 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.872129483 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.872035558 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.873500865 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.877370135 seconds)
  done (took 128.347231612 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.254954575 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.25385848 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.254814643 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.255335316 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.256096114 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.254836865 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.253888506 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.25448626 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.254862191 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.256338287 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.257571658 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.258191793 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.255240231 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.255374661 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.255455654 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.254767288 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.255633856 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.25561712 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.255733324 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.25653927 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.255977154 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.255654471 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.256846185 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.256385134 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.25719537 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.256152607 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.255790251 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.255092601 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.256886825 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.258069418 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.257640711 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.25589694 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.256097461 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.257718435 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.257360171 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.255903791 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.2548956 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.259811264 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.26019568 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.258920657 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.260962004 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.262611748 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.259670936 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.261131413 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.260175109 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.260874496 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.261347912 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.26120239 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.260463214 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.25904941 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.25859412 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.258074989 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.257148884 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.25802967 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.257634885 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.258082718 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.25826387 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.258097725 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.257887395 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.260344936 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.259692061 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.259912124 seconds)
  done (took 79.12079692 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.258797917 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.260736997 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.256452003 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.256654899 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.258909039 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.257186619 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.258508126 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.259888298 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.259532103 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.258155283 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259743292 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.256832467 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.257621671 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.259222753 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.258377018 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.258210148 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.258584378 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.257412526 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.260912801 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.257414284 seconds)
  done (took 26.336536068 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.256538204 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.261241061 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.258125306 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.258970227 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.261392834 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.258230667 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.260823368 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260396029 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.258869142 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260911833 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.260020953 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.260691287 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.257240557 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.258412637 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.261629684 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.25829788 seconds)
  done (took 21.318417692 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.258944897 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.261209513 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.260768529 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.262822313 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.257349703 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.258153388 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.261494956 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.258000467 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.25907828 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.263084703 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.261792742 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.263101852 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.261382756 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.261300607 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.259805121 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.261497795 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.258431201 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.258906105 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.260631609 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.262061246 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.260947125 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.260373054 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.262933516 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.262484459 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.25935387 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.26046613 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.26003846 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.259470803 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.259587028 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.262569684 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.260253198 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.261177228 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.260366139 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.260743854 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.263994238 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.260945239 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.262059291 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.263959653 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.263762037 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.263749981 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.264100211 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.262225279 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.264297302 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.263537675 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.26169473 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.263808071 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.260517588 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.262309423 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.261435152 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.263198552 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.264556723 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.264579014 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.265223673 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.263744911 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.265181557 seconds)
  done (took 70.556940804 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.263824426 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.264793793 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.26123756 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.263935355 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.265097476 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.263189604 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.264939141 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.264975584 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.261883943 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.264651115 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.262459549 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.266956898 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.261755018 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.26442245 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.262414318 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.264637315 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.26177872 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.263499451 seconds)
  done (took 23.915888554 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.263539285 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.26531512 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.266484954 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.262917434 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.262954354 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.266408119 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.263377767 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.265193307 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265908005 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.263454009 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.262189268 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.265897093 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266514705 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.266723091 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.264544358 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.263362848 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.267196747 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.26573523 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.263631526 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.264118701 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.26812207 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.265734997 seconds)
  done (took 28.999605797 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.264892033 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.266021859 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.266190236 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.283356306 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.28822267 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.267076517 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.26723018 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.266070611 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.290181297 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.323092977 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.317822825 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.289228362 seconds)
  done (took 16.561127095 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265247359 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267627707 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.264745934 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268852278 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266706876 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265667629 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265130089 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266065084 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268454456 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267294692 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269077798 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270652871 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272077475 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271168511 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270968235 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271808027 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268568553 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267941088 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26590896 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269396783 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267058284 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270638295 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26641427 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267264703 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266879446 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267284361 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271053788 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267673388 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266929398 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269589633 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269937382 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267475894 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270530994 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267945704 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272559322 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269628065 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268143668 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270827264 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269631868 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268876722 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.269890923 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270781277 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272055873 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268685245 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27117635 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266707709 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268345308 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268454379 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268776758 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27168293 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269564683 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268884499 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271858357 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269932601 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270148415 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272811874 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269876605 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268569661 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272399398 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269876537 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269251018 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270813481 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26900377 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269026415 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271251601 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269149289 seconds)
  done (took 84.932373235 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270734359 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.269124366 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268999691 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269380256 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269214055 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269199012 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269028028 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268950355 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268978154 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269180657 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271585051 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269203269 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269926661 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269852048 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269741083 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270055608 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269695461 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270149041 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270380539 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271944062 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269528314 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27003585 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27075788 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270352027 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271010836 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273771925 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271530427 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270410305 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271199382 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2702542 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272134882 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271033563 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271643566 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.271314701 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27187571 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271043217 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271300543 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272252783 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271733227 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274485602 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272161199 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274614604 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270993206 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271575394 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271485442 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271165249 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272733623 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271960744 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272377281 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271648016 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273721786 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272372862 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271428419 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272393588 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272515747 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273260344 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274128557 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273398063 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272962299 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275529176 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273285276 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272608252 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276464213 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273108013 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273242381 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272912932 seconds)
  done (took 85.095405869 seconds)
done (took 1757.476990623 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.438698898 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.392951112 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.27459516 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.285367015 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.275111121 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.298041596 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.288132581 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.276534989 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.276046353 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.275748178 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.276252446 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.462648701 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.2707952 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.275469046 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.275960474 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.372492956 seconds)
  done (took 26.195083509 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.305791963 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.281404021 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.402453815 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.303439072 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.305214398 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.475721711 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.341955699 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.284267866 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.467733859 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.329007081 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.286868562 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.305297804 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.280123104 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.280769907 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.300487098 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.476426099 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.551018193 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.290367722 seconds)
  done (took 28.449727863 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.77098674 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.319465638 seconds)
  done (took 5.271745389 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.302117592 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.280680178 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.283157304 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.280345495 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.272053008 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.2762964 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.280958074 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.272848511 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.272079803 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.420094111 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.288644311 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.292358186 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.30214296 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.282980802 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.278407922 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.321475458 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.441830559 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.279942646 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.278734681 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.288671871 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.282520327 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.403170575 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.325512354 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.282548735 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.414764765 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.278639668 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.288786141 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.290045177 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.44234914 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.281281081 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.281777876 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.281529382 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.284447381 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.23116983 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.848201812 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.278657915 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.328951023 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.293156647 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.279910308 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.469907596 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.283035763 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.288872084 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.273861734 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.844626506 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.451626232 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.419135516 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.297402809 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.289394762 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.285142066 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.353473331 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.284082453 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.284840866 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.329891801 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.158835156 seconds)
  done (took 82.897203378 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.283460475 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.274769672 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.459405598 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.300409498 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.275986268 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.279401255 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.280358969 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.592025047 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.320426618 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.276289825 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.624095962 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.897491982 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.303067636 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.323364806 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.125645576 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.339291113 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.277164006 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.294900297 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.282025453 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.279801299 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.850223761 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.283006051 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.297631113 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.440966581 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.31816889 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.833083398 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.28807482 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.280823126 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.302184458 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.276988169 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.839044625 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.302047059 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.336135898 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.280339332 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.564417764 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.702921175 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.666264377 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.286152079 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.31255788 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.280813615 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.290508409 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.819428563 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.681163491 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.283594409 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.277605625 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.833100377 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.283795235 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.290868064 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.281701029 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.532119091 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.279669342 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.281072558 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.302714935 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.284610793 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.280382428 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.373415068 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.35223897 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.836978731 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.285694937 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.279622487 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.304310149 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.278725297 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.285026677 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.283830609 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.283640255 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.681681646 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.4353458 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.288382055 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.680590195 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.838119083 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.302192155 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.894159391 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.302863265 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.308723988 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.497409372 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.282118375 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.281650587 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.852465539 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.298432116 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.281422338 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.664354977 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.287847549 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.621224112 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.310233144 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.281045463 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.864802335 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.288997199 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.292387613 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.282748489 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.281902263 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.301269557 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.282782334 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.574948261 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.338962604 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.285596774 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.281841108 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.298100206 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.287536201 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.284623898 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.287578639 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.897339165 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.309563264 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.281427216 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.285235056 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.282184675 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.306823858 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.282726523 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.286250907 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.568200744 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.295711839 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.292284337 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.285127658 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.28369638 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.291473288 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.462027631 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.28883137 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.632576779 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.29054748 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.282762591 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.308566928 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.293317319 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.343199383 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.28491412 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.293083194 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.193178638 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.588021746 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.305865774 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.285940412 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.28679312 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.284166438 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.319848323 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.282615131 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.320174816 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.286516251 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.081878142 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.34344522 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.292608632 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.285447241 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.290860839 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.291000568 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.289232573 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.286435599 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.582888043 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.569902558 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.433211284 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.291618182 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.284899171 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.091864412 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.354907395 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.46912568 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.309212599 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.287461623 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.5375172 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.518585327 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.287101998 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.286172553 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.286540439 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.5494202 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.284851527 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.596814808 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.868675441 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.309729078 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.288620223 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.090995686 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.002720205 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.287080783 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.288456501 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.634044735 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.307064592 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.287592993 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.287254957 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.289551989 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.287482298 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.291097582 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.293877408 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.288034335 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.287257632 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.336306792 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.479814935 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.306454923 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.297210563 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.839419442 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.303940847 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.288625437 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.311403084 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.291738986 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.288510073 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.351262061 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.288362368 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.298857626 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.288927872 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.293197438 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.88935856 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.293539351 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.292325543 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.481418496 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.007253984 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.311959421 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.29055407 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.306328337 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.189245932 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.864709186 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.351043092 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.638324676 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.301031896 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.329456987 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.290062703 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.332893464 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.864784744 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.295673487 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.309285641 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.986983444 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.312051935 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.760288673 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.289515452 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.288930225 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.937146057 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.314075614 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.293937197 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.290802977 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.314475726 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.591507497 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.292867937 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.331204906 seconds)
  done (took 489.277264239 seconds)
done (took 633.268345932 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.289362197 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.291442602 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.280024158 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.295287176 seconds)
  done (took 10.355172012 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.299914364 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.300232907 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.301127851 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.296309052 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.299960505 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.299734026 seconds)
  done (took 8.998137444 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.291750717 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.293153342 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.297316744 seconds)
  done (took 8.081856634 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.518241096 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.320034094 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.655615484 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.31709651 seconds)
  done (took 9.013339213 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.30204086 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.301216925 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.300540021 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.300711133 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.301331078 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.30295547 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.301607904 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.30188228 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.303619658 seconds)
  done (took 12.914330113 seconds)
done (took 50.559002234 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.27824655 seconds)
    (2/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.296358303 seconds)
    (3/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.345991862 seconds)
    (4/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.450126386 seconds)
    (5/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.488285159 seconds)
    (6/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.355184651 seconds)
    (7/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.279365661 seconds)
    (8/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.380494392 seconds)
    (9/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.387817664 seconds)
    (10/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.478474515 seconds)
    (11/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.332587122 seconds)
    (12/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.449352116 seconds)
    (13/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.419429242 seconds)
    (14/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.280276592 seconds)
    (15/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.392294025 seconds)
    (16/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.435915978 seconds)
    (17/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.462294883 seconds)
    (18/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.352350602 seconds)
    (19/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.477512782 seconds)
    (20/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.370857656 seconds)
    (21/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.400093977 seconds)
    (22/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.320008095 seconds)
    (23/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.491736072 seconds)
    (24/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.446202702 seconds)
    (25/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.502631871 seconds)
    (26/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.307582697 seconds)
    (27/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.311854077 seconds)
    (28/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.319041766 seconds)
    (29/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.357222016 seconds)
    (30/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.314038647 seconds)
    (31/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.327806481 seconds)
    (32/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.350258406 seconds)
    (33/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.961960846 seconds)
    (34/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.31305566 seconds)
    (35/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.431818078 seconds)
    (36/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.378469532 seconds)
    (37/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.399921958 seconds)
    (38/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.342541625 seconds)
    (39/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.661260502 seconds)
    (40/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.432401012 seconds)
    (41/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.315933012 seconds)
    (42/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.484914111 seconds)
    (43/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.467458882 seconds)
    (44/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.301125563 seconds)
    (45/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.398271408 seconds)
    (46/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.309205291 seconds)
    (47/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.307690012 seconds)
    (48/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.058082242 seconds)
    (49/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.408098244 seconds)
    (50/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.358781392 seconds)
    (51/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.343770488 seconds)
    (52/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.39799005 seconds)
    (53/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.37865505 seconds)
    (54/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.300000855 seconds)
    (55/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.382081231 seconds)
    (56/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.410702128 seconds)
    (57/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.384825515 seconds)
    (58/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.408448555 seconds)
    (59/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.313782209 seconds)
    (60/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.380629035 seconds)
    (61/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.298625948 seconds)
    (62/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.467748508 seconds)
    (63/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.504744041 seconds)
    (64/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.176105295 seconds)
    (65/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.405665436 seconds)
    (66/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.389649738 seconds)
    (67/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.329845989 seconds)
    (68/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.05822257 seconds)
    (69/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.335778253 seconds)
    (70/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.307367703 seconds)
    (71/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.956702779 seconds)
    (72/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.371578104 seconds)
    (73/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.308999088 seconds)
    (74/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.345280436 seconds)
    (75/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.332394074 seconds)
    (76/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.372221032 seconds)
    (77/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.407426105 seconds)
    (78/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.314024373 seconds)
    (79/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.402316213 seconds)
    (80/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.344734108 seconds)
    (81/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.512842038 seconds)
    (82/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.488036767 seconds)
    (83/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.449974528 seconds)
    (84/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.403522725 seconds)
    (85/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.304923104 seconds)
    (86/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.369575593 seconds)
    (87/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.022489409 seconds)
    (88/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.451815259 seconds)
    (89/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.331516778 seconds)
    (90/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.325040063 seconds)
    (91/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.31737223 seconds)
    (92/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.37124356 seconds)
    (93/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.378059484 seconds)
    (94/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.516328823 seconds)
    (95/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.487021074 seconds)
    (96/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.350093447 seconds)
    (97/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.065235333 seconds)
    (98/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.418292885 seconds)
    (99/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.335566147 seconds)
    (100/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.946863726 seconds)
    (101/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.010780689 seconds)
    (102/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.3578755 seconds)
    (103/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.957084566 seconds)
    (104/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.312423714 seconds)
    (105/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.454831627 seconds)
    (106/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.576032926 seconds)
    (107/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.316598525 seconds)
    (108/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.398926646 seconds)
    (109/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.320769845 seconds)
    (110/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.436052512 seconds)
    (111/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.080283999 seconds)
    (112/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.076674378 seconds)
    (113/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.984767859 seconds)
    (114/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.308997183 seconds)
    (115/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.316495124 seconds)
    (116/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.404899914 seconds)
    (117/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.519650933 seconds)
    (118/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.186149396 seconds)
    (119/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.367428939 seconds)
    (120/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.306769987 seconds)
    (121/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.290098887 seconds)
    (122/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.466537229 seconds)
    (123/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.410390857 seconds)
    (124/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.371464423 seconds)
    (125/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.513402309 seconds)
    (126/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.314058265 seconds)
    (127/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.636428725 seconds)
    (128/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.323140945 seconds)
    (129/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.316769718 seconds)
    (130/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.479367203 seconds)
    (131/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.417795981 seconds)
    (132/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.364903992 seconds)
    (133/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.356801706 seconds)
    (134/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.34301151 seconds)
    (135/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.336382512 seconds)
    (136/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.317815178 seconds)
    (137/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.063979711 seconds)
    (138/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.355396199 seconds)
    (139/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.301437796 seconds)
    (140/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.331469963 seconds)
    (141/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.37799552 seconds)
    (142/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.288119107 seconds)
    (143/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.431041288 seconds)
    (144/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.417275049 seconds)
    (145/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.539989552 seconds)
    (146/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.394587476 seconds)
    (147/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.363839644 seconds)
    (148/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.290249172 seconds)
    (149/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.320589563 seconds)
    (150/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.389987086 seconds)
    (151/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.385707536 seconds)
    (152/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.303532193 seconds)
    (153/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.207324772 seconds)
    (154/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.378302095 seconds)
    (155/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.529463884 seconds)
    (156/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.317098834 seconds)
    (157/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.384259761 seconds)
    (158/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.313716382 seconds)
    (159/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.328825291 seconds)
    (160/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.400086888 seconds)
    (161/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.460295995 seconds)
    (162/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.691403988 seconds)
    (163/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.330685118 seconds)
    (164/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.701365009 seconds)
    (165/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.440041953 seconds)
    (166/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.39238813 seconds)
    (167/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.4621113 seconds)
    (168/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.317623845 seconds)
    (169/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.412876066 seconds)
    (170/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.385327412 seconds)
    (171/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.145689705 seconds)
    (172/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.3600742 seconds)
    (173/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.291651873 seconds)
    (174/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.295091561 seconds)
    (175/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.290895127 seconds)
    (176/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.427879229 seconds)
    (177/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.414732411 seconds)
    (178/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.384759866 seconds)
    (179/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.350777292 seconds)
    (180/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.388842279 seconds)
    (181/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.417012325 seconds)
    (182/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.450701377 seconds)
    (183/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.333199231 seconds)
    (184/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.486020515 seconds)
    (185/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.373137212 seconds)
    (186/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.317436284 seconds)
    (187/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.324202826 seconds)
    (188/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.346137921 seconds)
    (189/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.392711397 seconds)
    (190/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.531660643 seconds)
    (191/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.445218117 seconds)
    (192/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.358616821 seconds)
    (193/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.464913411 seconds)
    (194/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.44430953 seconds)
    (195/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.341376344 seconds)
    (196/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.322457124 seconds)
    (197/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.987005097 seconds)
    (198/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.337972557 seconds)
    (199/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.304290639 seconds)
    (200/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.296383716 seconds)
    (201/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.396248727 seconds)
    (202/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.31326379 seconds)
    (203/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.028592395 seconds)
    (204/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.467429212 seconds)
    (205/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.473077446 seconds)
    (206/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.969550566 seconds)
    (207/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.321831776 seconds)
    (208/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.52363498 seconds)
    (209/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.077627136 seconds)
    (210/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.526735641 seconds)
    (211/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.334148527 seconds)
    (212/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.315994556 seconds)
    (213/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.067869577 seconds)
    (214/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.315321712 seconds)
    (215/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.308171936 seconds)
    (216/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.089606279 seconds)
    (217/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.498512568 seconds)
    (218/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.96302903 seconds)
    (219/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.207271475 seconds)
    (220/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.352208914 seconds)
    (221/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.324203367 seconds)
    (222/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.329653958 seconds)
    (223/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.424191311 seconds)
    (224/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.142635757 seconds)
  done (took 363.04865414 seconds)
done (took 364.247511821 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.363220488 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.493976877 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.333798233 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.336925475 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.360670532 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.308089894 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.358042013 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.324873779 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.320917779 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.320935335 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.308521311 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.327960607 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.341973311 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.352047319 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.431003492 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.323548372 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.336452091 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.318432269 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.359019637 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.378205935 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.361574094 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.362446653 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.329107825 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.334654535 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.364653835 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364713585 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.339668209 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.320486401 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.321260318 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.356615139 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.319869618 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.344815813 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.366106445 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.370979877 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.361775111 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.319849152 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.361864987 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.496113369 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.353855658 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.3523594 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.322610731 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.367333036 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.330867103 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.339526475 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.37006629 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.330886335 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.367927035 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.443988144 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.315221861 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.328077392 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.372945829 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.381157968 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.323174403 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.324832891 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.325432772 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.446630312 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.320889495 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.368805642 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.322698061 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365422889 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.434188251 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.36786343 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.382035274 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.369341305 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.323208651 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.341446635 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.322234083 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.380164155 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.32045964 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.366208949 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.366717641 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.32802033 seconds)
done (took 106.688322323 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.384589679 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.32040303 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.423510635 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.321236134 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.423525196 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.423242538 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.319551743 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.318516494 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.321131257 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.697191695 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.320322715 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.319464728 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.321400658 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.320817424 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.40482817 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.323550111 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.320304389 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.685338044 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.324546894 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.394351311 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.322909441 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.321232558 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.324050032 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.732060717 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.321202697 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.318362301 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.404413458 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.323311007 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.673982724 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.318202709 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.32054024 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.695085363 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.427916133 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.341268706 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.333951525 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.330193115 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.426520829 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.342082161 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.413615594 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.406228325 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.424604212 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.362561642 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.319713356 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.322785475 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.328709489 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.324255943 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.323596421 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.351420887 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.322402498 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.323432147 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.662504016 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.334670044 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.322420899 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.323923466 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.323189075 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.354300571 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.323680114 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.326174265 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.415330679 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.325937139 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.39595168 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.709569192 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.726875566 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.326563174 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.323878527 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.324629879 seconds)
  done (took 103.929863528 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.391701512 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.401675166 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.444054882 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.350904688 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.377950267 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.449432999 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.350681844 seconds)
  done (took 10.990443898 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.334477892 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.329124301 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.377617629 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.378934037 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.326723071 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.541689501 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.32645454 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.340061721 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.324368832 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.40441245 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.329665114 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.328004615 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.333109912 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.322333791 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.376647322 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.340850265 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.445121963 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.330564166 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.328277233 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.483463104 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.3255971 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.334595152 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.405556957 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.339818751 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.327733681 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.334171773 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.272567106 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.329631063 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.325646001 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.328025636 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.325107076 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.436030643 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.330063735 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.325002194 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.326879409 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.489132232 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.329982629 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.327189168 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.329114661 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.329435836 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.329215573 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.328424079 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.330207207 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.326749816 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.327790024 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.353943962 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.329236397 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.329264591 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.32875204 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.331157939 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.407633651 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.330387461 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.327022531 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.326626769 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.410964258 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.337312944 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.330176648 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.327746837 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.330393774 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.328009174 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.4864081 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.379701518 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.329105775 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.377772322 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.331950328 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.331177087 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.332068068 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.332458002 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.423916244 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.33199716 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.380208779 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.330101106 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.553323957 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.356688634 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.333243098 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.335465117 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.338426742 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.332763149 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.331131181 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.339952231 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.330582081 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.33536368 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.341906834 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.331323586 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.330155957 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.516928478 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.490965483 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.331075999 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.344149336 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.339813425 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.329681082 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.409016955 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.335349262 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.330625444 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.384913508 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.449537169 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.41290882 seconds)
  done (took 137.804171623 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.340241363 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.342257087 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.338523139 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.356098068 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.336159281 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.335465508 seconds)
  done (took 9.279022107 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.338193597 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.336029036 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.334888952 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.334367939 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.334227777 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.334784292 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.336062636 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.339684187 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.340999124 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.335551558 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.334882219 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.335975066 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.336416247 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.335188641 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.335464917 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.337541 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.334717053 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.332845543 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.336580444 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.3346197 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.335305725 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.336098357 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.336644616 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.339099048 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.339989468 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.336593057 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.343706944 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.335561748 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.336072824 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.34547725 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.358466476 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.336547454 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.33850992 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.343856645 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.341013765 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.339911086 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.341339835 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.337338605 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.335045264 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.336672217 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.336455743 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.336721053 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.338321105 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.337076681 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.340921574 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.345460503 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.341369227 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.346057354 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.338565249 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.339015604 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.338941176 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.338745075 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.337914822 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.337590538 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.341719713 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.3618576 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.341627683 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.339244048 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.33927041 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.339846722 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.34134504 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.338761995 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.340850128 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.34162693 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.336903748 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.338469584 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.341947703 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.3451705 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.338881358 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.342179858 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.338409558 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.335682568 seconds)
  done (took 98.643122928 seconds)
done (took 361.864975819 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.381936918 seconds)
  done (took 4.616676294 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.480300849 seconds)
  done (took 3.717723216 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.002809841 seconds)
  done (took 25.245571259 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.332315523 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.374648689 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.350839341 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.334639971 seconds)
  done (took 10.629668087 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.670011723 seconds)
  done (took 3.908392427 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.332596828 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.346219112 seconds)
  done (took 5.918694724 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.691110419 seconds)
  done (took 3.928851884 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.770142484 seconds)
  done (took 4.017983597 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.350555427 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.35412727 seconds)
  done (took 5.95216621 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.330890079 seconds)
  done (took 3.56776257 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.020850602 seconds)
  done (took 17.258854332 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.333936702 seconds)
  done (took 3.573699319 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.420545787 seconds)
  done (took 3.658304031 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.329772686 seconds)
  done (took 6.566920135 seconds)
done (took 103.796261736 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.332960035 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.335302296 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.334337958 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.330507332 seconds)
  done (took 10.570207365 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.393875643 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.393452329 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.392103599 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.393863548 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.392488857 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.395132904 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.366818348 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.366324209 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.393453769 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.393265847 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.401371748 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.393147524 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.395579524 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.368895319 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.39440624 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.39448706 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.39416971 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.393747859 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.382804682 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.393839505 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.342696977 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.394159279 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.394456772 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.341664453 seconds)
  done (took 34.50495462 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.837685943 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.416222578 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.499675969 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.399566045 seconds)
  done (took 7.39380142 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.420404217 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.421196642 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.437470081 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.476065039 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.486933483 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.435238011 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.368065925 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.364188322 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.35069861 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.421335891 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.471764381 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.423681808 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.506546245 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.341467685 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.550780082 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.344400282 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.342308663 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.421451763 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.47283173 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.492393756 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.344302762 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.422631531 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.426955939 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.413263404 seconds)
  done (took 35.395986491 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.350385714 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.356381344 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.34266888 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.358628064 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.342716172 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.343534164 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.342969658 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.349691463 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.342733788 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.343438226 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.342971137 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.356794978 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.345781856 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.342604252 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.350492721 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.345910296 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.349420891 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.347057165 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.344855121 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.351193007 seconds)
  done (took 28.190055854 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.338869734 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.337290761 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.69050572 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.595625683 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.33959323 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.338434037 seconds)
  done (took 13.883407373 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.423088663 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.605607993 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.35078647 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.751675377 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.842612487 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.351190858 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.347012454 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.625951619 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.988897508 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.961595439 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.413926032 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.429403419 seconds)
  done (took 20.335316495 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.355506442 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.344017617 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.35361646 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.361239962 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.40780957 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.373687007 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.354838152 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.340212731 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.413679259 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.436177946 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.374500792 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.410106591 seconds)
  done (took 21.770390578 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436652086 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.342992479 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.353938384 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436102927 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346166992 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.191943245 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.395905384 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.084215697 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.365651931 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614546643 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339713368 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444721044 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.601126011 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345950567 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.34695459 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.338945439 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.579661019 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880449373 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34645702 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344208622 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381293033 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.35375182 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.348969291 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.582424762 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.345701572 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342757868 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.606463805 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.343805849 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.660012645 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.363043528 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354365778 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344311006 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617943314 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033873021 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463383515 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.575557829 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343240816 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.366272654 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.337738373 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.364436031 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353214286 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.352237325 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35682841 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344294136 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.342291076 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350873757 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099138858 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.371484551 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.342495891 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.345891689 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.636680204 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448172953 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.34847963 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.344562455 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344542159 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349837392 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.349421182 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444528686 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926635569 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357680364 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355074186 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.350030349 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.346678634 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346317638 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029831064 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.355559832 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.349926865 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.350631892 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3462081 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.346221419 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.366934424 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34550529 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.370920741 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345887244 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179108925 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.365676465 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353191618 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94183307 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348698766 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.351355176 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.580982484 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347198168 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348471511 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.347557064 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.346332572 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116765524 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357561802 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.332688456 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.373216854 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.087282978 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.599519585 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364617138 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376444426 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.570542979 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.330363946 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345582164 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.35747722 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352333229 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366404643 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.090378509 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365615864 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.348927566 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.605954825 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.55672413 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345109061 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.334206362 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.880355077 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366582079 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.385587793 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.344536428 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.583846546 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.997145372 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.367757714 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35200275 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369096278 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.346742281 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.153769891 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347775493 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.453779232 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.359119649 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645792755 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.221512954 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350005027 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415377716 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352077933 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.347166716 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348649772 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353122082 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.347348185 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.572933248 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366861594 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.363970853 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.34821638 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348114021 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.347056282 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352746475 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.375083154 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.573016332 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348278411 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649316962 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348892406 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347981804 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347957009 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.570622339 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.363782033 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.690707966 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.613885767 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34756568 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.354018175 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.367747415 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368548002 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453996904 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372433857 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.349366251 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.610092161 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.355405604 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.354052454 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352220606 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.355982518 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356432226 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.357007247 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349384039 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008974918 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331933601 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.360264324 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.246735406 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.368417768 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420931174 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.360529764 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.588966391 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.358199606 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367462126 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.364269011 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.351580511 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.583828276 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.3637629 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.355582172 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.435255069 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.862773289 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.022780496 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.371459712 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.353232552 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.352384876 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.349780843 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354965646 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35402019 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.354592048 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.59144264 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.373280927 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.36141794 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.018172236 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363632742 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.360048047 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.366034604 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.368557934 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.361180478 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354531659 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.354233216 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360447847 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360979434 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.371652251 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499388559 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.370877663 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.354898656 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.874305642 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.361768461 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.357324461 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.356315003 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390532349 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.355300434 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211213225 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.622011573 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360915946 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.67624941 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.361973581 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.377101464 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.356435445 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369451964 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360629525 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.377084326 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370593714 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.367891415 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.357207046 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360221295 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933984973 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190448078 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960953117 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368694142 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.358097656 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.362787736 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.109000497 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377595758 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357243703 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619697897 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.130237015 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377114759 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87168881 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.38838593 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.212545237 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.662086841 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596457655 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35814834 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.376788316 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.663741617 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.573752914 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394095836 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.358192179 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362608104 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.343703108 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955615513 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380093344 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.441485995 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.115492881 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39242297 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.367733033 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.371564381 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.364441028 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810331899 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.384189635 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358586293 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.35945829 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.376335746 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.22277206 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.366441109 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361458214 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050155986 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381698348 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.877698724 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381689524 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.603356154 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.377677038 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.364934556 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.361779044 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.366229601 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.624003979 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.66547562 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365988362 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.375066404 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971104619 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.23972002 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.366997776 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363085868 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.205602305 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365306812 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.692982571 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.371106573 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.364045609 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364176683 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.363067062 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362603731 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.363224551 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.365116151 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332373649 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925994629 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.376163662 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38950851 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369202749 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368067764 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.621241752 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.377038153 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.013108713 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.60193631 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372603003 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390695563 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.367464953 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374712882 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.355187354 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363850236 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.36339876 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368909012 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.594030243 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.364293104 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.348513038 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.458349853 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.579542221 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.364854058 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.375918349 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.643120964 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.365957455 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.384428559 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.216929586 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402675995 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.377818822 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370141894 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.370227487 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.388647094 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435230262 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611973879 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.382689999 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.377090606 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819794764 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404243721 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371370871 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.38098489 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465578577 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365492245 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.402239458 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.144074519 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.016287062 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.226013932 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.020427814 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.673057277 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.373551074 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377834719 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368372802 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533057381 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368989031 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645640248 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370512379 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.377309059 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396184143 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373189637 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378910902 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.582649604 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643570748 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368134788 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369117235 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372115208 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.368694651 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.379296036 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.578923028 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929603243 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002624789 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373774892 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.371598186 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.155907331 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665821861 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3681236 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370024896 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369818037 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.388768515 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.385517258 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.37740042 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379314997 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522413363 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.672586314 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09257051 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.405920388 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.397772139 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.888337991 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371619699 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.631222855 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367498768 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.643179474 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.015855819 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.156691403 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.643754798 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442652347 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.617943747 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.373154836 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537197184 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.371968751 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.375459675 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37255576 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371423806 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.368071911 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.381739788 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.022458067 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639064243 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.375260289 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.384329337 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406167176 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.381865081 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.597186166 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.187560974 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.59855431 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.382381127 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.376772061 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.371385224 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.015102527 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.673818648 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37853283 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.375744793 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.642172945 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.374078246 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.39586706 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.890459788 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.37059619 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996369688 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.352928304 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396613283 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389810982 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.156686663 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.019619445 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.383744134 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93914814 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378638517 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372344514 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650365701 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.37847676 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39103934 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653230922 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.377046376 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.373949569 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626899693 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.01148104 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.243241633 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.388171216 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387541847 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.37900574 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375055063 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424719266 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380354814 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374157679 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.853038851 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400979312 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375613961 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.387008264 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.378365775 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376751182 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.378600437 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374930355 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.381586132 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.38517339 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.394767399 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.377190728 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497262203 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983666155 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399075165 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.045553946 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.702303429 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.634447491 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.376013516 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.365025515 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.379857439 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375416723 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377854923 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378075307 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.398828229 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986880958 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.378598553 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.392461898 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.382483548 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.378123938 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.587255013 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.377602309 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.646066291 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378411675 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.396268175 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.362459754 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375831241 seconds)
  done (took 974.186581411 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.3936192 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.4098594 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.425254491 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.489606505 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.420718294 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.516620465 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.430028589 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.422603274 seconds)
  done (took 20.784384729 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.377289449 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.391193386 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.393020953 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.392055067 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.381530753 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.899726397 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.398173635 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.389606889 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.395380985 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.385561347 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.378664965 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.365799036 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.390244201 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.386238669 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.367808 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.389879019 seconds)
  done (took 32.970694456 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.594187459 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.683390614 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.848615869 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.404539792 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.44138818 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.395913204 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.777855252 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.415372111 seconds)
  done (took 27.841100638 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.390877192 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.391875645 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.392057169 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.393801859 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.395414322 seconds)
  done (took 8.242822833 seconds)
done (took 1237.305810821 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.384372045 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.38628721 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.384943819 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.387512104 seconds)
  done (took 6.819657276 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.363627352 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.366438748 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.371686635 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.384329657 seconds)
  done (took 9.765807154 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.17056244 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.108095647 seconds)
  done (took 5.558674728 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.889312331 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.884817883 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.884211077 seconds)
  done (took 6.941475166 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.7082415 seconds)
  done (took 2.990754109 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.298811411 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.385842584 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.07203417 seconds)
  done (took 8.040779359 seconds)
done (took 41.39590586 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.384140077 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.726547461 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.551509345 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.390802341 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.55588486 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.554013608 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.109650795 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.383274207 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.396416261 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.381337006 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.409668454 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.553376786 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.126037439 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.730028643 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.123905907 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.731411082 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.570696589 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.397417475 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.3837014 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.398029372 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.116871779 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.389254014 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.393527162 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.388962557 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.574787345 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.535908162 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.382950672 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.750771954 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.389227414 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.381955463 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.539054767 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.386047182 seconds)
  done (took 83.371638565 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.386110071 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.403318992 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.382255416 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.409283897 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.383232561 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.386725954 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.40952905 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.383695992 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.398588338 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.393912106 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.391097969 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.385282087 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.394844329 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.401431244 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.398059863 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.401235676 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.384336207 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.38518348 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.384689243 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.407246255 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.392778692 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.398241949 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.385254565 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.398721011 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.386547825 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.386969794 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.411927657 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.386088073 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.386873431 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.396476858 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.387829673 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.406117512 seconds)
  done (took 77.879272426 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.395091106 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.386389718 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.397109199 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.391919975 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.387438559 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.394727824 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.387282229 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.385896483 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.403362686 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.403862286 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.393877361 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.387079184 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.392563503 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.401912256 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.390417632 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.393819579 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.428162321 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.406466405 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.387951503 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.409737719 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.391999363 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.399746779 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.38937805 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.403879853 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.400347 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.395646634 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.390848786 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.390545158 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.4056434 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.389685216 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.397888147 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.389471418 seconds)
  done (took 77.958399418 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.670005574 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.396502227 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.39792297 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.39087352 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.396002455 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.398657421 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.390498569 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.673385977 seconds)
  done (took 15.002330825 seconds)
done (took 255.494974402 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.38784365 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.630726859 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.420502842 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.387920579 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.422253456 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.416401038 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.632383121 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.43676382 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.632952809 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.411482737 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.416010548 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.389878536 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.692103528 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.55209128 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.385085482 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.405782492 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.752147889 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.414644491 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.672862428 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.690681718 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.421132631 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.396943402 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.348595341 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 1.786003646 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.418125961 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.485881516 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.511033074 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.628717675 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.56921558 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.489464712 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.634825436 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.395654548 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.392783925 seconds)
  done (took 62.917949796 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.395972988 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.512825034 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.396438043 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.397830473 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.51753486 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.397346508 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.398379932 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.396449936 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.400561136 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.401468425 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.398378367 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.40298421 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.402493201 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.442798449 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.520895182 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.414670022 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.397942678 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.510484835 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.397023968 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.392002014 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.442191446 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.400980374 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.40097284 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.439686144 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.398054486 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.401136273 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.514403739 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.403413273 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.39614931 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.514833976 seconds)
  done (took 44.097775254 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.401784284 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.659335828 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.855964761 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.407591617 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.401768921 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.406396534 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.489278657 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.402313562 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.406622855 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.407555107 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.566909384 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.40426629 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.439681368 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.891276941 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.40566111 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.401987778 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.405334682 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.405833309 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.668344569 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.412851919 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.514048285 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.403306488 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.490949792 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.412571516 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.432541836 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.403742042 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.406091664 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.984458985 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.40501728 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.5658635 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.271754156 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.489972676 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.96029187 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.869095957 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.276608844 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.409941918 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.402799095 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.571252972 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.404134731 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.40416493 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.48888074 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.405021018 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.867861386 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.080302538 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.424989624 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.404830449 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.005642612 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.567812919 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.66755684 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.415201028 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.894099811 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.406103147 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.404942706 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.402677852 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.671702435 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.410193534 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.406071277 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.04065665 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.427357173 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.489785524 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.406521835 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.40690474 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.670267405 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.405582725 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.667147794 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.408420333 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.414894288 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.430168315 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.867941995 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.410326455 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.099916673 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.426214777 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.408466413 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.570650078 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.664470023 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.039790749 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.429122034 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.675781585 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.973202649 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.494207609 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.408567619 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.981854685 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.492935908 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.415944904 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.409780995 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.408759735 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.406079652 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.456449605 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.490893758 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.037830895 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.094116206 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.062621241 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.513104639 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.419745335 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.41018522 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.047449639 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.419436696 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.404774317 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.869416638 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.100707047 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.42409536 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.416210137 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.11649221 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.429846787 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.495203571 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.420566318 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.877473646 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.413913358 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.459320224 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.413217966 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.419465546 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.429371382 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.497709837 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.421159624 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.41101985 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.095294301 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.601042749 seconds)
  done (took 186.162090871 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.407607901 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.40234262 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.406203844 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.399498316 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.40105648 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.409687631 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.399082095 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.403202203 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.407425896 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.401557796 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.401733256 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.414939172 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.409419619 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.403134431 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.405407517 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.406030821 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.403605123 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.411508001 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.401168056 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.403921441 seconds)
  done (took 45.398838247 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.410842288 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.065390893 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.55949346 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.436272395 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.409243049 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.414868502 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.474848194 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.412365842 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.412216808 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.763336359 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.610265388 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.43698046 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.411438883 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.409190555 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.564904631 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.428962818 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.757777784 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.053350901 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.41682348 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.052642198 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.405808205 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.411734006 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.414033757 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.05521244 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.763034484 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.502198178 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.482761046 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.043158713 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.415397198 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.41237659 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.047232516 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.418505204 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.415527157 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.045713126 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.430633645 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.421815196 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.414594812 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.481877289 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.474316095 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.757788831 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.119223205 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.500779426 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.430246457 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.795640972 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.418943175 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.402782683 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.050671354 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.439958581 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.40068574 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.415899376 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.422992947 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.581149724 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.419472025 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.58127293 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.417487866 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.418689113 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.060211024 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.58621803 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.564161011 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.642930705 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.431821524 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.500904498 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.419791065 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.066176598 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.4396347 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.418843394 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.418525017 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.618335296 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.080806971 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.507098883 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.768033349 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.76791314 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.420341091 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.479854324 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.430789755 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.833705675 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.481872683 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.877715878 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.767474759 seconds)
  done (took 127.019771344 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.680582724 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.539778995 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.57617633 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.09186 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.418518845 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.542311614 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.527641336 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.693773106 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.415003056 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.508958841 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.653837391 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.503295368 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.184126724 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.497180908 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.519528516 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.571530299 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.56624349 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.413972631 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.138435498 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.623561509 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.445679029 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.538991916 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.003616273 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.610693987 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.42696354 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.965117787 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.420542775 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.162623541 seconds)
  done (took 53.551177125 seconds)
done (took 520.429700955 seconds)
SAVING RESULT...
DONE!
