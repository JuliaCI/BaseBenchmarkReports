cset: moving following pidspec: 5935
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.38442053 seconds)
loading group "string"... done (took 0.511044784 seconds)
loading group "linalg"... done (took 8.442386703 seconds)
loading group "parallel"... done (took 0.17251383 seconds)
loading group "find"... done (took 1.371183566 seconds)
loading group "tuple"... done (took 1.942640357 seconds)
loading group "dates"... done (took 1.324826388 seconds)
loading group "micro"... done (took 0.20506171 seconds)
loading group "io"... done (took 0.576580201 seconds)
loading group "scalar"... done (took 40.789199793 seconds)
loading group "sparse"... done (took 12.867072903 seconds)
loading group "broadcast"... done (took 1.031240718 seconds)
loading group "union"... done (took 14.16546243 seconds)
loading group "simd"... done (took 4.854590637 seconds)
loading group "random"... done (took 9.756692797 seconds)
loading group "problem"... done (took 2.070332859 seconds)
loading group "array"... done (took 23.385958194 seconds)
loading group "misc"... done (took 1.071091591 seconds)
loading group "sort"... done (took 3.540034492 seconds)
loading group "collection"... done (took 20.940968379 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.580768655 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.132718595 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.14528017 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.173255609 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203189137 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.137110114 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.154035251 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.459290469 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.043689454 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.225891811 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.123815684 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.529340345 seconds)
done (took 5.654163587 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.225829713 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.072438828 seconds)
    (2/2) benchmarking "String"...
    done (took 0.125951749 seconds)
  done (took 0.891747591 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.072967611 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.171435718 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.091548383 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.108432415 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.107874615 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109143584 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.091448219 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.106851036 seconds)
  done (took 1.482120785 seconds)
done (took 3.375533605 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.762701361 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.807170083 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.534939631 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.123398621 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.1551615 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.128163544 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.308279419 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.167115372 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.10357455 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.112303467 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174291119 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.396722702 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.423336631 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.991816691 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.093691303 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.127329328 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.078411733 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.706424465 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.07922178 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.129837802 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.498922549 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.109753403 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.118744403 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.123397459 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.206325272 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130481862 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.179159864 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.100276762 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.736863363 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.0988958 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.182486364 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.095353649 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.159332828 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.225351946 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.075642812 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.105512353 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.726039757 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.187092993 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.109501386 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.092849362 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.722400351 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.077897149 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.195891748 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105043839 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.107979873 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.188380281 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.114706794 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.075091789 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.097678875 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085279873 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.175446839 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.484080385 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104969642 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.141360341 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.107044866 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.741006894 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.093891738 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.156246225 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.121506704 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.109098491 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.095684299 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.113851683 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.158077081 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.120511104 seconds)
  done (took 19.895105423 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.115029837 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.136775687 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.091458246 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135939659 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137249535 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.094550167 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.081750375 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.092542043 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.10745468 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179446517 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.134791591 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.141656943 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.088917791 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.077653723 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116958468 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24817196 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.103202076 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.117223619 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.079200462 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.104181322 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136916662 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.093497891 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107049739 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091167292 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166464055 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.217357307 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.105921097 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121440575 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09093446 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096890137 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140490575 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.157657745 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.072896094 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091344749 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.177818877 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.118340941 seconds)
  done (took 5.081628235 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.194777402 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.117782972 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.189092745 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.173698639 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146073855 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.162288596 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115676393 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.260118439 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.16847674 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.161380545 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126009337 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113902022 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076096345 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.093922584 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077316977 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.77008902 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.184635663 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.145763754 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.121501134 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101161123 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.079482549 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.747943673 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097123324 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.078670162 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099433958 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.069261407 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.167270697 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100019925 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.230807109 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.09804786 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105639791 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128192081 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.190882145 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126693328 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.116133887 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099637 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077336494 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.213084843 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087408176 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.112179876 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.092585552 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.10146663 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.128166641 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13029842 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114769943 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097296624 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.105065452 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.225558128 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096457947 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112304039 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.052310174 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196871949 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091244459 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.094343665 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.335092864 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.113529968 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082285996 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.095573858 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.304333777 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129814231 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.077453263 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.074683712 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100425953 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.075994452 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.40279822 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084294982 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.369450793 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.091546345 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.15271822 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096282509 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084404634 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099307932 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097795615 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.079177019 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115728486 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.076873174 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076754101 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.094455466 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.075522984 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.098385089 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111266908 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081464275 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.093617005 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144253559 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.112243999 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113227049 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106127351 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.097104437 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.075684806 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126757929 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094679977 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080605415 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.138345446 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10012863 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.095922995 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097454602 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.13960194 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.094428702 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.191055689 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.090658757 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.121305972 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.078775119 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097084116 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124320389 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.098161564 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094599091 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080479922 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094724313 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.076561457 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158659189 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.076946555 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.076531582 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.097455197 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.107189637 seconds)
  done (took 24.070155223 seconds)
done (took 49.740886814 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.41735811 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106157989 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.107185283 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107514102 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.104918455 seconds)
  done (took 1.615280137 seconds)
done (took 2.361916168 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.318544828 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.193695554 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084105281 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.187587723 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083512643 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.192023184 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159413279 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.097529622 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.203347098 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.079568393 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.181259406 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080462968 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.100886436 seconds)
  done (took 2.734603703 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089238684 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113894206 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077791635 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.104503913 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072384194 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08860556 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104937827 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.124948674 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.087159812 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08107186 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088540887 seconds)
  done (took 1.775890401 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088656338 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11202505 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07741139 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086795937 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088202976 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086814472 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104337592 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09765248 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104642589 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081696572 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089247583 seconds)
  done (took 1.763568494 seconds)
done (took 7.01081922 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.120562541 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.802631437 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.099475693 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.191407406 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.330503287 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.216231245 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.646939822 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.112345695 seconds)
  done (took 16.443392065 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.106935015 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.108539697 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.078237234 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.093880957 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.077137447 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.091852071 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.076796419 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.090986661 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.079896041 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091010548 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.078770413 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.092050802 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.076125576 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.092905205 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.077841796 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.093154675 seconds)
  done (took 2.216111134 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.112376044 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.110383642 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098052945 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.084959116 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.09695725 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.095629379 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.082520646 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.096630624 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.078989655 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095472777 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.085137444 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.100001361 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.082837675 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.093778325 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.096746447 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.086282647 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.094040869 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.082364555 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.099085217 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.082678414 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.100170874 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09484464 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.083545619 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.099329773 seconds)
  done (took 3.082637671 seconds)
done (took 22.488874691 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.162273761 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080504381 seconds)
  done (took 0.992786765 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.098201924 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113650427 seconds)
  done (took 0.970164095 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.103851871 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092723079 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.130980041 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109599962 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.077506311 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.076403073 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.124702666 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.094496761 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.07693621 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.09364093 seconds)
  done (took 1.739660983 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.08179942 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096088129 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.085848153 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.1136925 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104291824 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.080073777 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.097720824 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.080593628 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.097536424 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.07616485 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.100029079 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.09843345 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.099478063 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.113850929 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.081872438 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.098236947 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.10334217 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.081696184 seconds)
  done (took 2.449444188 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.076469902 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.077890817 seconds)
  done (took 0.914975018 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079751845 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091407935 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080281845 seconds)
    (4/7) benchmarking "year"...
    done (took 0.094510182 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076174757 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.090783988 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.075721283 seconds)
  done (took 1.349615938 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.46520816 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.176492285 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.316399675 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.110123473 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.12773282 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.351554184 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.129131607 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.089955202 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.108133714 seconds)
  done (took 2.674486597 seconds)
done (took 11.846194219 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.087238197 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.127520659 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.589567969 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.111895741 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.073954655 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.153462035 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.253487865 seconds)
done (took 2.158945515 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.332921453 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.117704749 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084028795 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.075140535 seconds)
  done (took 1.368329221 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075566577 seconds)
    (2/2) benchmarking "read"...
    done (took 0.080688414 seconds)
  done (took 0.920908346 seconds)
done (took 3.055551116 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.104886746 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092213722 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.074470572 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.088377185 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.074206131 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.071304682 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.08894502 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.074292016 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.089301893 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.074043418 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.089617292 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07407702 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072041761 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087282887 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073903025 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.087383504 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072108661 seconds)
    (18/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086646445 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.071857284 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.07326408 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089612805 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.071232565 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.087034682 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.074538642 seconds)
  done (took 2.739739805 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099515706 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092761901 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.080500409 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.097300288 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.078052649 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.096980951 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.096799129 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.075473958 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.09658341 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.077007618 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094357356 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.078491515 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.093235433 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.078531084 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094153909 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.078101968 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.097699687 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07489466 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093653141 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.079245161 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.097026992 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075573951 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.095465477 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096458631 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.079074357 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094579683 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.077234786 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.0917073 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079988284 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095074968 seconds)
  done (took 3.402447425 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08134206 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071988593 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088830682 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.083658701 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088756396 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.077916294 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.08861741 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.077228871 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.093248549 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.072404028 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.094603161 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.072505399 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.075305219 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.093659109 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077051991 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.096937173 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.089830086 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.091743567 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.07514121 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.093924375 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.078502159 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.091370693 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.076187756 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.071539334 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.088390417 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.073164129 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090096834 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.072322139 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.08968805 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.072955994 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.077167539 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.096833709 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.071979279 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.101753008 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.078359084 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.088122916 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.080234429 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.089347463 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.077279002 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.089169648 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.072693754 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.088614962 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076130554 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.083295675 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.092621161 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.074162911 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.09177613 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.076899163 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.092284729 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.079681736 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.088460822 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.075496479 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.077913561 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.094167449 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.07720689 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.088467853 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.073126384 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.088680651 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.076658885 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.087833549 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.071608681 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.070838493 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096260911 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.072920218 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112140511 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.099313814 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.076052661 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.077744099 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.093843254 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.07972001 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.094488199 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.090095859 seconds)
  done (took 6.803648994 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.076649547 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10018036 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.075149825 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09063595 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070706813 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07243808 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096397427 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07286476 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091969986 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090325733 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090906613 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073752463 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092376362 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076190511 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090392048 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.073808688 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.099764881 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070639996 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.089909176 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076162431 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090837557 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079067296 seconds)
  done (took 2.617181075 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.216636758 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100456997 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.135169958 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108586687 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092729879 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108338274 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.078755118 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099043692 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09611194 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082333999 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099864627 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080396277 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109923522 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10040672 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082243162 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101644992 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078969926 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101532054 seconds)
  done (took 2.650460027 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.088711386 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09330959 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.099343593 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093655491 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.075406708 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.095322026 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081507458 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108699535 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.077989507 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093357457 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.104005998 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078491544 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094767779 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075959157 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095285518 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.075933863 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094353504 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075582559 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103823753 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081909006 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099410545 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08588559 seconds)
  done (took 2.750453037 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092015315 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094763415 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.096603496 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096991895 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.074693254 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.094631421 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.083734981 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093296713 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.085337933 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.094504294 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076112621 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.094024944 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.083953946 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093829427 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.100576495 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076545142 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094519174 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.076377565 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07742967 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092186875 seconds)
  done (took 2.553836555 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115694574 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108473976 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090254504 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118066591 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107893734 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092598534 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118531956 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.089925636 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107950901 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120643805 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090262908 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.1073312 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101588154 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114408627 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108239544 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10155952 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119489098 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118784636 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.089972551 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106454604 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120406647 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090394136 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119203654 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090750111 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107523848 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090305524 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108236012 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114861578 seconds)
  done (took 3.753895315 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076339104 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074637381 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090497756 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.07293335 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.089892285 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.072445951 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.07313434 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.091337651 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07547686 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090633651 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.076216684 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.091791213 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07606594 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.074652414 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.092866225 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.074173725 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09296981 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.073324711 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090103458 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073056577 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.074377461 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092598439 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.075119219 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090772288 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072664865 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.092367934 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073475908 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072346942 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092145565 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073237016 seconds)
  done (took 3.215415454 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.083852429 seconds)
    (2/2) benchmarking "in"...
    done (took 0.103669051 seconds)
  done (took 0.973849965 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.07364976 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109791945 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.073044145 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.09671558 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.082376701 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094246046 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.084985695 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098832685 seconds)
  done (took 1.497959507 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.100144273 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.113136866 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082769592 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.106138852 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094477701 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.112432117 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.156610997 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.081438807 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.10235969 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.076853281 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112677882 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.075425284 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.10203325 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081114418 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.102659509 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091174167 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.094803104 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.085621882 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102336793 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.078437351 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099831498 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110100224 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08645691 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.102736808 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.079046715 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.106308016 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.090039271 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.105877716 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081119865 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106203721 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.083449334 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.087964067 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080457665 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099698938 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.077137268 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.112065302 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111225791 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082027906 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.103344583 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083282529 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103531681 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.07553834 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.105782081 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.08322089 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10675565 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.081585442 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100257481 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.074451111 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.095168809 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.080468837 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.092382651 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080712194 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.070827863 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103991398 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.102899839 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095521839 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.097148435 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.081041087 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.099628969 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.079943279 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.101953392 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.081423768 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105289293 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.07984274 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105377188 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085443913 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.102785379 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.074810081 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.088508144 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.077687988 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.104240694 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10127378 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.106330964 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.10075966 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08300575 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.09554124 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082393058 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101202702 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085235309 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.106263397 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082256481 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102698841 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087916147 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099095448 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.080337035 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.102044483 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.079159542 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.098073859 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.077773919 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115515353 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.079525461 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096513254 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.078158326 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.105695538 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.081508739 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098650987 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078425686 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10482515 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.071045299 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101120233 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083167964 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101925041 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.088396838 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101314132 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.082972832 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.104676857 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.087894387 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100986948 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.080498314 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.091543078 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083497247 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.0977322 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.086130182 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.089632743 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082365767 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.099246937 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.082159507 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.106578173 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.079055645 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.100385587 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087666804 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106801358 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.078861051 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.091725526 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.081638583 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100258695 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086748527 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106680172 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.079468293 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.093305492 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.075180177 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103686695 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.081032069 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.102281158 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.081657827 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100654754 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.07076531 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.096161572 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.082218081 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.106774801 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.080034726 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.102107749 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104773678 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.08449241 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098278246 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.086768916 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.098076131 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.077685878 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.104353919 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.080628872 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.093795953 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087548603 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.098978924 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.079111708 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.100431477 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086420411 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.099879318 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082039885 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097256816 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.081950892 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101821572 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.077446368 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100251643 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.079689023 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.107612427 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.081024275 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.093644712 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.0739373 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.101190725 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.078224315 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.08040625 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.095065311 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.082021185 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101955842 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.078294956 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099240063 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.080587518 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.110501453 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09093194 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101730858 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.102925271 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.089912665 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100032749 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.084381278 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099718989 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083968899 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102205592 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.086685711 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.102444844 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082500996 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.099457318 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.073954666 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101852151 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087021666 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.095737508 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.078281133 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.077252632 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.099111521 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106394088 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.081890758 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101062086 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079004914 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083517903 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105216959 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.099761178 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.081581097 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.07743657 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.100293869 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.086031078 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.101879471 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084037805 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.106528804 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.100918547 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.075686326 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105336906 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079441323 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.103199656 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.076199676 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.077911154 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.096697181 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083290975 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099229855 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.080902721 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.089435544 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086362107 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106744692 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.082295489 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.096139696 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.082873873 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109657283 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.080646557 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106237626 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.08220345 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.104056013 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114104484 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.077507378 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.099732146 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.089778612 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.109960431 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.071475638 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.103803557 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.079316085 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.094217217 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.079600608 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.07901908 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.101234052 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102475967 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.083703347 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.070711887 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.100455179 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.079659006 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.09649321 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.075692562 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.105941689 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.082099739 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.100339657 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108909197 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084195216 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101545944 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.083869415 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100711665 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.083898278 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.1008542 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082723543 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101277777 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.08018992 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.096287735 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.082980318 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.07747056 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.096645049 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.080575488 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100619792 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083619207 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10284227 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08083478 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105432873 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.101395869 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.083980845 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.118775944 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.078672603 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.096547436 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08306975 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103254478 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.080911049 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.100311738 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.075907401 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.1063327 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.081796494 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106931323 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.081075236 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.092801281 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.0824402 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.10058332 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.083526933 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.10246624 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.082926855 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.100116342 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.080887772 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.101038869 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090954867 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.09802866 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.088242354 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102601051 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08336295 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.100287667 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083138467 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.099531109 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.077937484 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.10019062 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.082975214 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.101109934 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.081382131 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.10266813 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.08282173 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.100183454 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080858211 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102204005 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082787248 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102586134 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.071363523 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.096174052 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.078174385 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101546065 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08595472 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102853441 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.080279231 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099007971 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083581804 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099553329 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.07455487 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.104064091 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084479202 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101705836 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091421147 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.096705893 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.082165788 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111427496 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.071753032 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.098609262 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.078474771 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.097600601 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087748852 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101790349 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.087919718 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.101809486 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.077996976 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.093860854 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083595134 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.098960823 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.071936353 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096853292 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085457976 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.099090455 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080333391 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.082624403 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.102661086 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103282011 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08587123 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099959817 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.081620911 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101728722 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.074928283 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.078223305 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.096170998 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.082162638 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102482892 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.078526921 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.09353869 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.082159273 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.100612532 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.082300403 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100851099 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.081267164 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106862839 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081668696 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.10129353 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087804492 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.091451642 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.082701783 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100435009 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082022838 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.096778997 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.083780179 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10357155 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084750585 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.106588265 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082823907 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103808895 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082073847 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.098268157 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.08215562 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101188947 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.082728627 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.098207948 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.08483778 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107259716 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.079716499 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.10155456 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083074916 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.099116776 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.083552902 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103061362 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.083000133 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104930089 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.083081467 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.101675557 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.08554487 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101237961 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083589527 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103667664 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.081359844 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106263973 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.077575229 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.10841595 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083356357 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103321086 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.081393908 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.098163766 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082082725 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100773627 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08084965 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.108011375 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.083386321 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.0973447 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.077919909 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.098085612 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.08258541 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106580078 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088783346 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.102089044 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083247812 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.095588251 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.074728302 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102773883 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.078548794 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.100178627 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.085781739 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10604712 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.082626168 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.099446635 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.080504795 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.106542067 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086707808 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.103825914 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.07904809 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.104303807 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084246729 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.102118004 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.080019927 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.101855483 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083724146 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.104062665 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.082278901 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.097706484 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091102796 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106694373 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084409347 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.100245615 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.103690733 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.082325211 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.076793057 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103662165 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.081946674 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104796271 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.100768218 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08244578 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111185302 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.078220864 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.100895407 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087507691 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101681114 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.087705339 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.095722838 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.082684535 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103333163 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084281449 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.095471691 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.078643557 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.097409406 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.082965325 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.078247582 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.095770459 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11207199 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.088004065 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.102402865 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08015984 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100183462 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.076429705 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.075870745 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.098196739 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084882299 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.100184566 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.109818203 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.078649325 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.078530305 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.09604071 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082270432 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103201354 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.08469394 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.094602829 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.077064859 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.099392565 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.08346669 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109794015 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081920099 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.103216116 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.083888903 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.101881919 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080216999 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10832845 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.075581224 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.103216177 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093773655 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102896551 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085203837 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.105655139 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107716527 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.083791551 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.095858572 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.084211985 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.102861095 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084483283 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103749061 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084402697 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117686333 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0836233 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.098320331 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081710787 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.102394657 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.078698709 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.110382231 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084531873 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103710955 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.085406946 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.100787168 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085149345 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108825569 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085095403 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105297162 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.084191584 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100771392 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08211936 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100723257 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081435037 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104474488 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.084411465 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101429665 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.085303182 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.098567983 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092794917 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.108668378 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.084403052 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.093761384 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.079384372 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.098322396 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.077400545 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.10440801 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.076452177 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.099657043 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.080390377 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.10033689 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.085469807 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.103860211 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.083316833 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.104202817 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.081592608 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.071977564 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.106110734 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.102475561 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085479249 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.07457657 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102563116 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.084136631 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.106554782 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107707914 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.081680194 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.102309774 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.081878267 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104516224 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.07728152 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.104963631 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081814042 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.081209743 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.097863923 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082444594 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103994087 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.083727718 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103573162 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084351109 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.102290043 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.086844897 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106376369 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.075666141 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.096284018 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.085986406 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098640974 seconds)
  done (took 55.679640045 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.142450659 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082956064 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074162368 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094731908 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119887387 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078386991 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094176088 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.078675404 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.09814713 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087649028 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.093001365 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073944693 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116860918 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.121194305 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119160592 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.089401065 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093295704 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.078436722 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093998376 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078361629 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113797943 seconds)
  done (took 2.857555782 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.100048607 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.112335765 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11072478 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095964115 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10501829 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.112913703 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.09064179 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112163154 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.1162291 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086413652 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115939507 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112116783 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.086468278 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.105577538 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105822474 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089767648 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.116547024 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105277081 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.093315329 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109927863 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109051649 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.089759045 seconds)
  done (took 3.115016817 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086725707 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.082172575 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.106522845 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.075974193 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101335336 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.076294438 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.107306157 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.078311249 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106916057 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.082827373 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.099547886 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.082147583 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.107149539 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.076313637 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.100888362 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.078065924 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107443741 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.081954424 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103249744 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.075393599 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.122002461 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.076223245 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.097122282 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.079800841 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.11091637 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.083701651 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.101924437 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.08219554 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.099271046 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.082074119 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.098063421 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.084676223 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.104740105 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.079898954 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.099664905 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.082515671 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.082155674 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.096066198 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.078192094 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.105633987 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.076674172 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103211591 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089753403 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.098534464 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.079548521 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.104156901 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.082338276 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.09552941 seconds)
  done (took 5.231240684 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.114028087 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.150561063 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.081066756 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.14135634 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.118244907 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.092458983 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.1032363 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.140431322 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.076271999 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.101645302 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.120131441 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.096271068 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103142503 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107548838 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.081826089 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101462348 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083817331 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.098280729 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.087367172 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.100981656 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.087644764 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.105114251 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.115702607 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.113339064 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.087462191 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100832817 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.078280719 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108829682 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.113714829 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.088938546 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107511486 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089911007 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.117536257 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.099811744 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.080830849 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104956996 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.118821831 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.083869888 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104676785 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.076943284 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.1045197 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088300027 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.105278816 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.120123784 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084213892 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.102918652 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.082490424 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.096426586 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.094811345 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.106283957 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112210407 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.095784964 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107673621 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102555876 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088181103 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.117782708 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.101973216 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.081532221 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106644003 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.093701389 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.09719403 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087101914 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.115904193 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105445567 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.092236892 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.11642941 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.103600158 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088495994 seconds)
  done (took 7.862417012 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110453122 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.109094785 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119715526 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100071923 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108390634 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.087155616 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109101862 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.108121447 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.088168445 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115215422 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087343725 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.155791595 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.105114526 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115124751 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.088579034 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108012876 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.088666961 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107707417 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.087993711 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109557588 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.10777147 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.099260416 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108561861 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120456651 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.121612704 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085115704 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108278941 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.088818332 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120427658 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107685424 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101002818 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.108176223 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.108279405 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100628789 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.121328318 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107081494 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082836644 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109903361 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.08903899 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.108729263 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084349112 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120209482 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107773111 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.08521176 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108678462 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.088298946 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120038877 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.121424039 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115074647 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095422704 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.108872999 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119655605 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08775668 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108443236 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120426493 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.12934659 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100341807 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119843817 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107478093 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.120307948 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100078656 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129744788 seconds)
  done (took 7.460383853 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079672004 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07873809 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098171059 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.07696971 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099811363 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077172963 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079047919 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.099582091 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079588579 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100298524 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079353193 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096405523 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077215866 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07819741 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096337297 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077438011 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096705851 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076946829 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099250826 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07762097 seconds)
  done (took 2.572438319 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.086866703 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.119606562 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.080405758 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107484736 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.082610714 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.108158781 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.082011324 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102459422 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082217565 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103368717 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112696739 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.093171896 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100733459 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08711101 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.113855876 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106882863 seconds)
  done (took 2.422522308 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.101096325 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.121080486 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.125292051 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084900227 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.09787153 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.088298965 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.103310794 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.075491019 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.075657491 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.10909663 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.106081515 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.086032222 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102728658 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.077844381 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.080095634 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.107181639 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.075241048 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.104329269 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.082398901 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.125868095 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105866197 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.083505842 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.103785599 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.082102881 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103386594 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.085486577 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107775273 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.077480525 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.098890674 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.082802839 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103180215 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.087064188 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.097369399 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084623791 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.09925927 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.076770595 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103481531 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.083105215 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.106766587 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.082514666 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.098507287 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.082744194 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.10314071 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.085113317 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.096522058 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.083739813 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.095906634 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.086111104 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102498502 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.082935612 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.103170427 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.088917187 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107505435 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.091573206 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.111426345 seconds)
  done (took 6.056614314 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095313188 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104508964 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085193388 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.098030543 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.0835878 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109250919 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.085005942 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103535484 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082650679 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097007619 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082919123 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10480068 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083234869 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104709069 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082926168 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104325588 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075242578 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.102772705 seconds)
  done (took 2.541529656 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085837564 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079019341 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.108461292 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079740906 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.100820044 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.08190623 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097427355 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.078569531 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098757327 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.080358895 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099939641 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.082403814 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099366276 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.08201724 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100722916 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080151082 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.101783213 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078406946 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.0792394 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096591067 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082333195 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099137581 seconds)
  done (took 2.828481448 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.098112371 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.132597556 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.094382558 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.142158103 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.105039071 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.084108565 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.114786114 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.085428438 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.123530349 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.083824559 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.10441048 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.083197716 seconds)
  done (took 2.108296501 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105065122 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137721629 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080750352 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104029978 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114852276 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086053226 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105220886 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085509947 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119151941 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119369749 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085427921 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120000516 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118470412 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118097992 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094905634 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11396569 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105953662 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085258566 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10162083 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107810645 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106249932 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118534643 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084819226 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106520707 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106134303 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097499963 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119504291 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119702027 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084851404 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119722261 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113961079 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085107348 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119638794 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118696272 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082548177 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12044792 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105959005 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129024448 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093775768 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117355801 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103368519 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094033656 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119475616 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114110743 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098842933 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10599654 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113683936 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085183905 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106399317 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13577567 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115697199 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097271231 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114880653 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120161811 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099329975 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134861377 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119642724 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117451795 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114910522 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119673564 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097094633 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114933584 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118311712 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118630988 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094893732 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117106276 seconds)
  done (took 8.015143427 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119137538 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103074019 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085343353 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120692861 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117600611 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106286324 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086200944 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106529873 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085647278 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103289323 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153232736 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086145875 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118526781 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118320443 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085413473 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10641628 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10636454 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096934899 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102559931 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135304535 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086005676 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118909942 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118111185 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118275037 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120019458 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094435205 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106699274 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085092961 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1068266 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106187918 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093690914 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106949739 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117511075 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082273585 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11848611 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085778511 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106332125 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115154995 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086319819 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114434786 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118747422 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128732139 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086143183 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107089725 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.336475866 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106725613 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107213736 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083172628 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106951436 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082482794 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119944142 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119262049 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120661245 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097444895 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106016194 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10679222 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086299039 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107044433 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086389971 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115030926 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117772703 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086202542 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136274027 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10630717 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086137473 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118411346 seconds)
  done (took 8.075733183 seconds)
done (took 150.551223407 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098579799 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137886471 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094833043 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.164606593 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.080677802 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.136162392 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.114564014 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.116970042 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.080503893 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.101620192 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.080716444 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.105204799 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.146516986 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.102091304 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.081017457 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.104767962 seconds)
  done (took 2.610450623 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.176583269 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.282474321 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099841972 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107269182 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.086692848 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.104870998 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085326967 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.108384595 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.081341109 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.112950564 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.103616125 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.083543222 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.112811084 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.082231319 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.102609427 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.082659155 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.11308667 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.082099306 seconds)
  done (took 2.875423995 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111912113 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145644171 seconds)
  done (took 1.130225986 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.116851581 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180659727 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.290923206 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.15433871 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.108879006 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.123304725 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.1569207 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.120182535 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.198639111 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.124815804 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.103645171 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.108697238 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.132801107 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.092076156 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.111173036 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.086422251 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.135595977 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.109633082 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.08841914 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.109512872 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.11227606 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.111838414 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.091304254 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.109914667 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18269903 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.12513739 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.087381508 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.108486852 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.109878919 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.088408844 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113442882 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.10038215 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.122941643 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.186943889 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.092465038 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.182044632 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.094953555 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.10717494 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.08885022 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.107225555 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.091511061 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.112287511 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.122391461 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.086750196 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.108837745 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.094666122 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.109665396 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.087669428 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115595514 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.117575233 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.095881037 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.11454945 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.161244987 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.117147179 seconds)
  done (took 7.381380132 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.792153865 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.149826272 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086933006 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.897809006 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.140947642 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10131661 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.801784606 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.132173142 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.233754669 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.814699157 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101057639 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123471845 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228462643 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.250451246 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.143302673 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.312593517 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.696554802 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.100000839 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.136601554 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.14823271 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.093203851 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136740213 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.128145466 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.428252861 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.109337562 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086458003 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.114322363 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100252129 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178301037 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.08705317 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.111583776 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179605978 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.263309224 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203723741 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.087391474 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.106569428 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.086083059 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.166273983 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268031735 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216013095 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.173753674 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.083264997 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.106970808 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.099200937 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129873742 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.08221638 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.184703776 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172442438 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.172114708 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.111722839 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122111678 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.096755859 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119664045 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.16116269 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.082936056 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.336517106 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.340246629 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107938185 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09585054 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127060362 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265426434 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086706467 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225929602 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134790123 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.190229202 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.107263275 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.761771157 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.186139169 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.085820071 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117477047 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.092841988 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113969243 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120323598 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.164396834 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.38909075 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101730656 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.112410363 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085496247 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226178816 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086164173 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107013204 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162464749 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.087401616 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117362567 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125021741 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100048416 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.192696134 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.244528368 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122685434 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094700122 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.112842028 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.098794465 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.108717239 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.208298077 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219784267 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.156097744 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.212155936 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121498589 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162572345 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.185265864 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.0988518 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.16975425 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.115545563 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126111926 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120454124 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.192121455 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.140437732 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.108061269 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092781191 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.115124795 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.14365039 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08932502 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.115659541 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.168020795 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.458649089 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.183532752 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.082847853 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111755737 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096140944 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159689747 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115668327 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259554279 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095702112 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.165262054 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116244109 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.082018702 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.116371562 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.162766488 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123275714 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116943786 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099307592 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11639805 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.247472355 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.220819454 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124783962 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.217579284 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.176469327 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11906022 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173240761 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117000715 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167088273 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096212754 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12011804 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109470207 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.761753697 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121169581 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.116115951 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092051174 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.18536906 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.107794337 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087105027 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.107726689 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.083431026 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.789611368 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.088895824 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.082713398 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.109377247 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117864324 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.094309642 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115413386 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09155466 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.182236264 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.210885006 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12193492 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115574027 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.085917552 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158936827 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.109468926 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.086763523 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.109123929 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.086559671 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.117765973 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.090345832 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110306493 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170322427 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.157960712 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.221301684 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.576099811 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.086528836 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.108164293 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.207609163 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108177187 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.304732904 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093983111 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.224539457 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166337427 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.106148353 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.337113202 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.168932986 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.185348508 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.089714186 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.191608331 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.083617923 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.114733611 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.160358666 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.085937 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115759222 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.156690234 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126067793 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.100052942 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.142834328 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108622306 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.226129111 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.083446764 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.188944513 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.088662598 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122054707 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.307034064 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085714258 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129323378 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.161030584 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112830258 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.087046401 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.696260928 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.108764021 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11846705 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098375574 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222853515 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164120681 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115935198 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.116243588 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100735329 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.160941692 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.231457044 seconds)
  done (took 43.438045819 seconds)
done (took 58.302906329 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.306563085 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.261526798 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.291479109 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.191887078 seconds)
  done (took 2.01989263 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.176170066 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.14908754 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120920389 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.105516179 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151053806 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.083067071 seconds)
  done (took 1.684958684 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.464606387 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.368355762 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.340482623 seconds)
  done (took 2.07558467 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.249460815 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.275839351 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.319004249 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.4249587 seconds)
  done (took 2.273792242 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.201554709 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.123320352 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.094511429 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.137280439 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.168426655 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.17225345 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.139251628 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.149657391 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.12638363 seconds)
  done (took 2.258079961 seconds)
done (took 11.21374945 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.161589492 seconds)
    (2/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.247729373 seconds)
    (3/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.133729522 seconds)
    (4/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.307460441 seconds)
    (5/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.265024051 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.199556581 seconds)
    (7/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.246256674 seconds)
    (8/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.122852065 seconds)
    (9/286) benchmarking ("sort", BigInt, false)...
    done (took 0.229146732 seconds)
    (10/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.123857601 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.089554225 seconds)
    (12/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.122181956 seconds)
    (13/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.217963282 seconds)
    (14/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.100315081 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.122217402 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.091259969 seconds)
    (17/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.22529158 seconds)
    (18/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.259556471 seconds)
    (19/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.205274679 seconds)
    (20/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.255692443 seconds)
    (21/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.088578296 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.139707565 seconds)
    (23/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.094522744 seconds)
    (24/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.111779633 seconds)
    (25/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.202892552 seconds)
    (26/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.073998846 seconds)
    (27/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.24617042 seconds)
    (28/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.116715897 seconds)
    (29/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.089119061 seconds)
    (30/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.233079362 seconds)
    (31/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.220137945 seconds)
    (32/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.190320801 seconds)
    (33/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.12116865 seconds)
    (34/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.094876022 seconds)
    (35/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.162113286 seconds)
    (36/286) benchmarking ("sort", Int64, true)...
    done (took 0.219420691 seconds)
    (37/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.201083627 seconds)
    (38/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.08913985 seconds)
    (39/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.118290476 seconds)
    (40/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.091179558 seconds)
    (41/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.120388147 seconds)
    (42/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.177044216 seconds)
    (43/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.199388764 seconds)
    (44/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.165213523 seconds)
    (45/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.097449677 seconds)
    (46/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.207374051 seconds)
    (47/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.115886427 seconds)
    (48/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.091287933 seconds)
    (49/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.135330542 seconds)
    (50/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.115649131 seconds)
    (51/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.116165709 seconds)
    (52/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.114032432 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.135652277 seconds)
    (54/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.097444368 seconds)
    (55/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.133174633 seconds)
    (56/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.087680655 seconds)
    (57/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.121899373 seconds)
    (58/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.089130588 seconds)
    (59/286) benchmarking ("sort", Float32, true)...
    done (took 0.224218693 seconds)
    (60/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.10947776 seconds)
    (61/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.179839881 seconds)
    (62/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.07526426 seconds)
    (63/286) benchmarking ("sort", Int8, true)...
    done (took 0.214628616 seconds)
    (64/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.118316157 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.141800953 seconds)
    (66/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.131825586 seconds)
    (67/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.09807513 seconds)
    (68/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.131634184 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.112816288 seconds)
    (70/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.172799526 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.098850305 seconds)
    (72/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.191327203 seconds)
    (73/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.129099283 seconds)
    (74/286) benchmarking ("sort", Float64, false)...
    done (took 0.169226075 seconds)
    (75/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.098997473 seconds)
    (76/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.118736872 seconds)
    (77/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.072274254 seconds)
    (78/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.144642648 seconds)
    (79/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.204906139 seconds)
    (80/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.091982187 seconds)
    (81/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.162832812 seconds)
    (82/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.086245945 seconds)
    (83/286) benchmarking ("sort", Int64, false)...
    done (took 0.106593566 seconds)
    (84/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.088381541 seconds)
    (85/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.181864557 seconds)
    (86/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.185874747 seconds)
    (87/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.084316974 seconds)
    (88/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.121766508 seconds)
    (89/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.145460351 seconds)
    (90/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.201165613 seconds)
    (91/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.088248415 seconds)
    (92/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.11457841 seconds)
    (93/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.07500227 seconds)
    (94/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.173702733 seconds)
    (95/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.131053798 seconds)
    (96/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.084389666 seconds)
    (97/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.11999154 seconds)
    (98/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.161627766 seconds)
    (99/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.098119929 seconds)
    (100/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.17704438 seconds)
    (101/286) benchmarking ("sort", BigInt, true)...
    done (took 0.243496563 seconds)
    (102/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.134187426 seconds)
    (103/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.180114471 seconds)
    (104/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.186976394 seconds)
    (105/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112446146 seconds)
    (106/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.175610003 seconds)
    (107/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.11123411 seconds)
    (108/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.0899095 seconds)
    (109/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.121277655 seconds)
    (110/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.091326615 seconds)
    (111/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.119498067 seconds)
    (112/286) benchmarking ("sort", Float64, true)...
    done (took 0.224758459 seconds)
    (113/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.154660193 seconds)
    (114/286) benchmarking ("sort", Int8, false)...
    done (took 0.189514386 seconds)
    (115/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.190173032 seconds)
    (116/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.073228526 seconds)
    (117/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.098195111 seconds)
    (118/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.129901448 seconds)
    (119/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.099580575 seconds)
    (120/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.111470217 seconds)
    (121/286) benchmarking ("sort", Bool, false)...
    done (took 0.18035823 seconds)
    (122/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.119640764 seconds)
    (123/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.083980469 seconds)
    (124/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.109571696 seconds)
    (125/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.095733752 seconds)
    (126/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.11349018 seconds)
    (127/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.087856743 seconds)
    (128/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.118511957 seconds)
    (129/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.113099919 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.116074745 seconds)
    (131/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.117458984 seconds)
    (132/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.091061575 seconds)
    (133/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.182278773 seconds)
    (134/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.177466042 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.090503454 seconds)
    (136/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.170768198 seconds)
    (137/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.099471174 seconds)
    (138/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.198331612 seconds)
    (139/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.095673387 seconds)
    (140/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.113755233 seconds)
    (141/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.123665723 seconds)
    (142/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.102762846 seconds)
    (143/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.108605526 seconds)
    (144/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.095914822 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.083950822 seconds)
    (146/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.115177186 seconds)
    (147/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.08871952 seconds)
    (148/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.09642772 seconds)
    (149/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.123100833 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.113916651 seconds)
    (151/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.073312657 seconds)
    (152/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.11927571 seconds)
    (153/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.0788086 seconds)
    (154/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.095462927 seconds)
    (155/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.075410321 seconds)
    (156/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.098145665 seconds)
    (157/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.103276436 seconds)
    (158/286) benchmarking ("sort", Float32, false)...
    done (took 0.171756255 seconds)
    (159/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.072130364 seconds)
    (160/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.123323718 seconds)
    (161/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.091843796 seconds)
    (162/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.098855535 seconds)
    (163/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.122660607 seconds)
    (164/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.097154839 seconds)
    (165/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.073174642 seconds)
    (166/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.116134584 seconds)
    (167/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.100003985 seconds)
    (168/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.096898501 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.090385468 seconds)
    (170/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.13228547 seconds)
    (171/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.155624796 seconds)
    (172/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.092817113 seconds)
    (173/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.097445945 seconds)
    (174/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.19193319 seconds)
    (175/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.089608362 seconds)
    (176/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.112952343 seconds)
    (177/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.07859948 seconds)
    (178/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.114689845 seconds)
    (179/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.159507255 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.114809973 seconds)
    (181/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.122546071 seconds)
    (182/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.078401557 seconds)
    (183/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.121318274 seconds)
    (184/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.095264401 seconds)
    (185/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.10985004 seconds)
    (186/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.075444968 seconds)
    (187/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.12269558 seconds)
    (188/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.088545074 seconds)
    (189/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.115567573 seconds)
    (190/286) benchmarking ("sort", Bool, true)...
    done (took 0.216314853 seconds)
    (191/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.087988861 seconds)
    (192/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.116605943 seconds)
    (193/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.079473159 seconds)
    (194/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.107028736 seconds)
    (195/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.111761063 seconds)
    (196/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.125109143 seconds)
    (197/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.096699933 seconds)
    (198/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.09930759 seconds)
    (199/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.189588533 seconds)
    (200/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.086733636 seconds)
    (201/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.094549246 seconds)
    (202/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.086260071 seconds)
    (203/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.111275634 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.090366178 seconds)
    (205/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109245815 seconds)
    (206/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.107648264 seconds)
    (207/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.122749493 seconds)
    (208/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.072987166 seconds)
    (209/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.112894664 seconds)
    (210/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.100318132 seconds)
    (211/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135922863 seconds)
    (212/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.113162611 seconds)
    (213/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.087668175 seconds)
    (214/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.157648027 seconds)
    (215/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.091938336 seconds)
    (216/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.243232943 seconds)
    (217/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.181597868 seconds)
    (218/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.097258356 seconds)
    (219/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.087751533 seconds)
    (220/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.147544166 seconds)
    (221/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.15487107 seconds)
    (222/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.114666898 seconds)
    (223/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.091256114 seconds)
    (224/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.108197829 seconds)
    (225/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.178832101 seconds)
    (226/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.071453311 seconds)
    (227/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.113397757 seconds)
    (228/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.097105578 seconds)
    (229/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.104097659 seconds)
    (230/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.073509625 seconds)
    (231/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.075960743 seconds)
    (232/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.123271878 seconds)
    (233/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.090370013 seconds)
    (234/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.100610209 seconds)
    (235/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.121268084 seconds)
    (236/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.088945607 seconds)
    (237/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.073682959 seconds)
    (238/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.096670734 seconds)
    (239/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.088130745 seconds)
    (240/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.110834548 seconds)
    (241/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.086498325 seconds)
    (242/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.096965031 seconds)
    (243/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.088688144 seconds)
    (244/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.132546482 seconds)
    (245/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.106977338 seconds)
    (246/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.108967014 seconds)
    (247/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.091433097 seconds)
    (248/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.114340823 seconds)
    (249/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.123997871 seconds)
    (250/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.084477643 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.113868784 seconds)
    (252/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.097354328 seconds)
    (253/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.080024301 seconds)
    (254/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.108040435 seconds)
    (255/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.072881397 seconds)
    (256/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.170293234 seconds)
    (257/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.116810279 seconds)
    (258/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.089962647 seconds)
    (259/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.122292253 seconds)
    (260/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.136856792 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.109335454 seconds)
    (262/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.072999484 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109660277 seconds)
    (264/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.075695877 seconds)
    (265/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.097147661 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.097939897 seconds)
    (267/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.110490777 seconds)
    (268/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.071738758 seconds)
    (269/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.096951975 seconds)
    (270/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.108344116 seconds)
    (271/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.11531165 seconds)
    (272/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.107411324 seconds)
    (273/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.097167097 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.087305327 seconds)
    (275/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.095118057 seconds)
    (276/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.084466961 seconds)
    (277/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.098026273 seconds)
    (278/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.088205331 seconds)
    (279/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.096283264 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.085673664 seconds)
    (281/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.113874391 seconds)
    (282/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.089774566 seconds)
    (283/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.09913996 seconds)
    (284/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.072785804 seconds)
    (285/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.08028206 seconds)
    (286/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.096118514 seconds)
  done (took 36.721306726 seconds)
done (took 37.628081852 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.098497406 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148510466 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095086415 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.138133334 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.121691594 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.101108275 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118176901 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.096420581 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122855533 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.099606169 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.121513264 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.078707322 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.119415042 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.094452705 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.118841876 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.1377649 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.097780628 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.115263978 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.086931257 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.111193651 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.086983878 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111742738 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.088216941 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.102610433 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.094278991 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.117257174 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.089964571 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.11919446 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087844003 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111472849 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.085858091 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.115419599 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085466716 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.12214208 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.088808539 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.112250305 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.095970917 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.11770431 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.089076732 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111783311 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.091921534 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.111828874 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.091105825 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.116141705 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.088626709 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.110553129 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.086704273 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.122767081 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114163402 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112406472 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.092403689 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.118327886 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.09487008 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.115381314 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.085823233 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.110483688 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.08755707 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.138715096 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.111083029 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088468436 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.115256769 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.091485291 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.109914532 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.087694394 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.111539355 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.094561134 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.118357257 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.08611841 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.118216733 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.089864158 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.107420193 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.087895615 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.109639815 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.085706519 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.093048047 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.117946033 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.082181639 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.112021645 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.091003988 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.113677027 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.088007883 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.109754316 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.088856421 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112340688 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.085827118 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.102687299 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.085677715 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.113936808 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.086463001 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.111152565 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.09023397 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.114248541 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.089831842 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.119314452 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.086968048 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.112864923 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.088055885 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.111996625 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.089077962 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110222688 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.083248913 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110509373 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.091347703 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.108599105 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.088378983 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.121861359 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.085932782 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.114833401 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086193754 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111201001 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101900964 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.118233081 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.088887289 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11324758 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.084362938 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.11376838 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085958954 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.109933048 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085301149 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.129781009 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.088628115 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.112806142 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08669984 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.114928433 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.097922357 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.107845577 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.085845068 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.109798676 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.087854599 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.114459845 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.087907657 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.10968973 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.087119558 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.10635996 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.08621175 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.109270583 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.091147746 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110012453 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.086691934 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.111386103 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.0871615 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.112631227 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.088994176 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.112583339 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.084806146 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.104199626 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089034321 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086141196 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113380446 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087996874 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112296362 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.082836603 seconds)
done (took 16.514946432 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.094692293 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186210406 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.144715449 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.148497112 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.144912451 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.105164837 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123580983 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.143985973 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.096040981 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141826343 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.143653671 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.108862078 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148323496 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.120308421 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.129706668 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.09405116 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.11839547 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.104447064 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.152704675 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.138470645 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.144171608 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.094611166 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.141182304 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.139396697 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.09390826 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.148307101 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.122128164 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.0935083 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.122056373 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103697566 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.135028305 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.12221107 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.096641485 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.131958634 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.100763275 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.117550449 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.12981414 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.090277727 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.119983758 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.095754431 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.132113113 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.131480591 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.091169939 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.127997573 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.119585399 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.098187378 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.118332431 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.093109907 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.119309172 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.088843921 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.124907013 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.139824994 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091778748 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121725896 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.094669385 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.118636802 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121055018 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.098273848 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.121762483 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.097521862 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.119919583 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.123405051 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.100377649 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.135873476 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.118372547 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.096130875 seconds)
  done (took 8.830542982 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.108946379 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.146226894 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.125470747 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.101651732 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.122349243 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.083136516 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.108628404 seconds)
  done (took 1.768227693 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.085443932 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.139090534 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.117581384 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.142594936 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.134265324 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.12114503 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126332251 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.084681077 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.134249335 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.12007613 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.112054429 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163960086 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.113455808 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.096360016 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.145735836 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.084490011 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.14692094 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.111246722 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093229699 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.141661029 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.090007203 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.132101887 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.123160942 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.086276484 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.131516303 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.086979829 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.175361152 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.12134382 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.084674004 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.08984731 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115593901 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.180078328 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.132716567 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.095258567 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108344175 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.112791358 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.131538238 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114246184 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.10967365 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.115722038 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.106020969 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.117362202 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.092529947 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.116137576 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.092471411 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.125300185 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120978352 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.093797606 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.115912994 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.113721248 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.121361654 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.107704979 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.11231059 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.089717939 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.120734622 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091318898 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124256145 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114564412 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.11361816 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117941418 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.110888043 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.136648324 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.132098797 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.11185359 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128678939 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.107362131 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.132102183 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115685812 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092954228 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118541994 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.111795988 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.114663771 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.094825525 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.126397003 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118876847 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112777872 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138415287 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089069096 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124322873 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.089369689 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.113882563 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.085546634 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.127403192 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.089379183 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113385502 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103133569 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.123229663 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.090992806 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.114871588 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.132645389 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.0907063 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.122777539 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.096726895 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114687549 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125322752 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.113084318 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.121897925 seconds)
  done (took 12.116967259 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.087988904 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.087355216 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.117475219 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.088987606 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.112933068 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.087209114 seconds)
  done (took 1.562657747 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.11700888 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115553646 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102257784 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118905277 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.154749768 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.11048706 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.138535475 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095955625 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.131102549 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127352544 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.111178941 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.138232717 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.142732444 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.093798781 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.135880426 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.093407648 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.13719556 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.090825872 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.125868611 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089730705 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.128626979 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119908753 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.090496503 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133996646 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.093650951 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.120559468 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.093635591 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.128049111 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.100846466 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122027336 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.11862643 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.094302205 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.120466387 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.096806626 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.136327036 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.119250023 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089684453 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121539004 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.09617892 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120320084 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.111451395 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116628838 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.099146647 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122116968 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.096456433 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119012419 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.122149136 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.093542627 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.135259184 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095673784 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122389669 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.093652364 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120794938 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095546411 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.120598163 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122599014 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.096293349 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.136925032 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.093137965 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.120450891 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.090287118 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120575157 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096903431 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.12034717 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.120515125 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096495017 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120445213 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.091328519 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115652583 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.093086364 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.122338898 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.090382549 seconds)
  done (took 9.114354574 seconds)
done (took 34.356826346 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.670644134 seconds)
  done (took 1.649368381 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.822533813 seconds)
  done (took 1.802676066 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.586094364 seconds)
  done (took 18.59232 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.488840475 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.581238144 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.980043476 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.161190232 seconds)
  done (took 3.191107014 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.962976108 seconds)
  done (took 1.96066202 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.299941729 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.263055571 seconds)
  done (took 1.547831297 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.812179771 seconds)
  done (took 1.804028588 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.503130674 seconds)
  done (took 2.493579851 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.346960859 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.197727407 seconds)
  done (took 1.547149948 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.568062167 seconds)
  done (took 1.564564908 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.722423661 seconds)
  done (took 15.724210467 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.23919787 seconds)
  done (took 1.247113659 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.291857452 seconds)
  done (took 1.289805204 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.62948896 seconds)
  done (took 4.62879615 seconds)
done (took 60.034756528 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.097909704 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126335827 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.100684869 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.122742802 seconds)
  done (took 1.44057524 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100891925 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.1212034 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.0977948 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.11950151 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.101104218 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.121322857 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.093724732 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.164899931 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119561782 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095670851 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121176381 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.093494973 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.121912264 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.093631265 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.11919238 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.09477023 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.12350824 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.093719042 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.121456487 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.121143444 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.091055499 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.119997949 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.096495118 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.117763664 seconds)
  done (took 3.665337614 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.097031131 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.091273009 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.118160507 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.089720866 seconds)
  done (took 1.399541524 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099973178 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132304679 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105490212 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125997488 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.106774623 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.132267485 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115921907 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.088887753 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.117616339 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.099926023 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116542394 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.110744683 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.133094648 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.085120903 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.128337912 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087046487 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.113329686 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.10641646 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125489455 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126561356 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.08956927 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124264237 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.097770897 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.13067305 seconds)
  done (took 3.708565007 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.17175291 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127693381 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139564497 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.09535773 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.164997729 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141600753 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087861323 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141706108 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088632098 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.126414395 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.092370825 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.167440278 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.125196073 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.092372151 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116769743 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.121719683 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.098993942 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.124305514 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091704477 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128888111 seconds)
  done (took 3.451612327 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.096722139 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.115689886 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.08698238 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.088370328 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122996463 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.09205001 seconds)
  done (took 1.611459852 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.086589811 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.085323168 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.112641398 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.084458365 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.115728189 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.08485574 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.109533284 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.086520747 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.085906267 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11089574 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.085232615 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.109778949 seconds)
  done (took 2.170009998 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.377262766 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.114786511 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.114183768 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090041352 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122389547 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.088376231 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.128538496 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.08838787 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.145633075 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088690308 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115329605 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091664483 seconds)
  done (took 2.574585626 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206939058 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093755653 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263213429 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.376665259 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13021954 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162289513 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.277619801 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159829031 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.208821118 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109617259 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219732911 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129523631 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153635994 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177132271 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137838794 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.176284502 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175175884 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199277873 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147576915 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204299269 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163096971 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167336241 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178071019 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150428828 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133747734 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129213747 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.11737072 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125018836 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17139265 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16919307 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173192571 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146962851 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109613893 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228211878 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212064412 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203635039 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.304118998 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105132717 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.211319332 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.180674185 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227682413 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138872208 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194111264 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154195862 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127560608 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180084074 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15778844 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.18071525 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.102526565 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139064802 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183023907 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175107264 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.203987611 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108431855 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.327972947 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120516434 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145738181 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180988986 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184634817 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215582989 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16611134 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.091843982 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183490885 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179135452 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178155194 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.143053601 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.165712555 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123410933 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174645425 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193534139 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177395606 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164641613 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.212208091 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105764875 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16383985 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166452453 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153671387 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176356271 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160696965 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119212588 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121823551 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135388668 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126418198 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.157288729 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120825228 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201605378 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133061892 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.187655919 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201901035 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157875298 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160756954 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16483689 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165070518 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146181765 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.090172945 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145761853 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.159982873 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158157759 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102608253 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155830361 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143067743 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.126395345 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152800015 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.09407353 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158885356 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.132799736 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167471877 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164015003 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.099832565 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163725567 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147906326 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.157379154 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171556217 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185770339 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131332385 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10331516 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192998084 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158247407 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.135303473 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174047881 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18417963 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.164741307 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136597661 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168660908 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192011429 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140283 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18739546 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111847744 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132229848 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.149665045 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158989491 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155849524 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.156377709 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100322969 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.153967029 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191830834 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125757003 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106900909 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173642407 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124656259 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127014515 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113649474 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135815407 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.141242544 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.145932924 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.109650431 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155638167 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15946391 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152258006 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159746631 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140325051 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191488705 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131276512 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.131793108 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146622487 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.117728612 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.177508141 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183026401 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098946224 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226115498 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.168009693 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197244165 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162729419 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130326972 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177144465 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098246255 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.118402966 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166084724 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16049425 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161456023 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.181501622 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193048205 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.165354059 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.150999064 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149968621 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167836936 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.17273214 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155129941 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.143526921 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160750411 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169028794 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.092182053 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123056319 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.096352761 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142220581 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129550883 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101711016 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181568856 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192342022 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185696457 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158921424 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112620819 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178735621 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.124756183 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165467227 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.170289161 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13849171 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.18361944 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181682413 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167364773 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141331304 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175326494 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.089919941 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122242166 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.103788978 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163755646 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131491156 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132415346 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112806912 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17974048 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201609064 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119769794 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228284763 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167594796 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190696334 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120860865 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.135078431 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169270577 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157955583 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.183191491 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106609762 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.154933779 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175719876 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141132724 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188276661 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162447378 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167389445 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226382419 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.156692427 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100840716 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148132222 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166569269 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139017816 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136196725 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144980577 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135369981 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153271603 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.104121177 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124386023 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18113101 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143547705 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178503166 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.155843956 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171436921 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124596483 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14083734 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130604765 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145083254 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.115257244 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170435575 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185345481 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142880473 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15916719 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174929324 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099208027 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.305877346 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214271476 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184279989 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134761102 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112112286 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160373804 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158431511 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164112577 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17726992 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142202576 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178469027 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158818007 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.111773148 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135384209 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146064144 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148956706 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.122321483 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.130984676 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.152316999 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.143891089 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185678881 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142993109 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157167761 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163755943 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.117989055 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146612056 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142478286 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200054966 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157985663 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17738453 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.152771436 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.136333565 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227923893 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093801868 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128577145 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.096258206 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176599734 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132252428 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15869518 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.183284886 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220336573 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130519575 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165985771 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137189625 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.11857269 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129600514 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148707622 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223281947 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111454975 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.13452163 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189669108 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.151579644 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128653428 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132301541 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311343233 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11588691 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170727371 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.115430683 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.277343195 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094999479 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127467743 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158442067 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170293279 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137089053 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.15510457 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161420469 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143162455 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158434003 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136309895 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186939893 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202339077 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170483921 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175598874 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.142190155 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156560641 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162674148 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176775677 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143084832 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.143967758 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132739387 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182135016 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.213281395 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.103608422 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163436488 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163851654 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158423893 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171326399 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132244335 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199603733 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130437101 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167021567 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110223257 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122881676 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158769176 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.183883211 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129875714 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175831661 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15757332 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102465242 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126069506 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150058407 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158368095 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112714306 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127418884 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179187867 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.124083836 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132956018 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179135622 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12995622 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154533457 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143436872 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107727844 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143001571 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14377822 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105279741 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.168951097 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181266371 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.128990074 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177541331 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176981388 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166429943 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160413912 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142171666 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636013187 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.126580938 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182542085 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146911694 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183661127 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147572859 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165323687 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130854698 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149964865 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167475224 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150194061 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.219445348 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16627198 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.158157271 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099657059 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143895301 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142891287 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.129765679 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120759353 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161193359 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140301683 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.135016833 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.128339517 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143206424 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.144439885 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137812976 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181515002 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116913318 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21104749 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178010674 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107326912 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166353883 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172429125 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128937665 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.159872879 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171080619 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139199602 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14878844 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.101047069 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.132961612 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179583054 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.093468959 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161412007 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160423291 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16362083 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164010212 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.132402119 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129128052 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141405466 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160849519 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128666897 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.152228815 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127837524 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129571363 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.125471441 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124737072 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158165961 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.158088341 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125043131 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.141118887 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178612962 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123436793 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102337037 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310245685 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130252106 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219168998 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.121934521 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133096756 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1423585 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15431317 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.12278207 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158928732 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.127200423 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13133807 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.101268832 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.180942951 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.15189156 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154347943 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183123516 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159975466 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199858473 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.133323244 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.231983715 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138246891 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152843852 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.099615977 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.127538792 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141637588 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103772201 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143071844 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188646092 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17716738 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149941033 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.141798235 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095506129 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125658172 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130979029 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131003633 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153290494 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1587542 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142308812 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.087082137 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143214558 seconds)
  done (took 75.917784419 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.144388139 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.130679938 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146902801 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.192500514 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163591992 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.239451345 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.203619997 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.223401337 seconds)
  done (took 2.540807951 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.098605138 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.155226235 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.136281112 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.121759906 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.088302571 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.329311121 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.13610001 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.120633178 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.145985637 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.131731809 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.090007056 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.559511428 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.091937729 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.12252077 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.111453882 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.087301472 seconds)
  done (took 3.615385031 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.283617455 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.535190899 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.124856025 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.227840283 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.221543796 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.169496615 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.750405643 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.160367498 seconds)
  done (took 12.571675702 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.119355049 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.13740227 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.131241913 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.160468227 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.116083529 seconds)
  done (took 1.771623714 seconds)
done (took 117.432174122 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.092550625 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123904693 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.094344336 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.124752527 seconds)
  done (took 1.524903418 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.105374698 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.077712126 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.108889374 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.077257397 seconds)
  done (took 1.464517539 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.420350374 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.107200445 seconds)
  done (took 1.659678248 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113355781 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131289391 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104174965 seconds)
  done (took 1.454027471 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.100715323 seconds)
  done (took 1.207543449 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.094538227 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.096418305 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.138041608 seconds)
  done (took 1.437156506 seconds)
done (took 9.851715027 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.109522024 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.435825507 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.38306073 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13519688 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.719422321 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.376613855 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.055276143 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.154931595 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.135304415 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.116627263 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.104582247 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.696333139 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.043080709 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.340746637 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.02669172 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.343458355 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.669604407 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11889977 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094632732 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.117749005 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.033634835 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087868571 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089789641 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.118896119 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.667325727 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.421348996 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.087876288 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.385025392 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.114934333 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.093848429 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.406273425 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.087654244 seconds)
  done (took 16.866747106 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.09353468 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177363089 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.096336024 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119461787 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.092194286 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.119215922 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.097840998 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.130764837 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179729534 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.088085831 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135916236 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.087202249 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.123098024 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.08890419 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138596441 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.08790609 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.119799252 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09071712 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123721305 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090031522 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136770855 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087775714 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.119186531 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.090150486 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.117129943 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.100707673 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117481386 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.101110523 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117754167 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.093406759 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.122767202 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.088804512 seconds)
  done (took 4.685387486 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139393756 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185390863 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.126207867 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12309894 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167304376 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.118523 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.172942755 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.156055865 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181242888 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117459495 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.106094353 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.117904047 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.12320411 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.11900522 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.109670587 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.116809609 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.091317786 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120126732 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095194852 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119229787 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.108104851 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116925503 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.090874894 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119360559 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.088946709 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132191439 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088970493 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.130491737 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116584329 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.093457973 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.122541793 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.089660778 seconds)
  done (took 5.018712324 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096534581 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126293122 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.104955588 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.134212569 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.090313671 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124848885 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096805232 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.120372655 seconds)
  done (took 2.009930771 seconds)
done (took 29.68799804 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.106106092 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.094114059 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130865666 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.100498313 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.126888653 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.101261392 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.115714107 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.099479095 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.130820149 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.096164967 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.133540296 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.087213223 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.118515824 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.08711701 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.12969177 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.093165459 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.13313243 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.097886281 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.137711317 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.104395265 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.118518626 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.100812924 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.098208462 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.138564062 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.13816136 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.109126426 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.134917934 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.09440925 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.118845815 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.090487033 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.131822222 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.111004194 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.12041914 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104878884 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.122379439 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.092304756 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.119154627 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.090169767 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132758734 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.099770251 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.123616515 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.100386082 seconds)
  done (took 5.819112114 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.116055873 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.162215248 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.08926881 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.119594791 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.089972293 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.158264221 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.154786595 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.089340241 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.119015196 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.113465887 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.145313199 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.089469072 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.119071108 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.089191713 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.118110285 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.089971253 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.141645385 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.11346142 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.148745271 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.119579132 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.162698108 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.149567186 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.124518807 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.14235084 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.161349074 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.1537443 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.110428825 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.155203349 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.115790881 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.118014111 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.14870941 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.120682927 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.118637472 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.089257657 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.158861831 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.125285894 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.146953681 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.160170891 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.148857934 seconds)
  done (took 6.123123295 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.097301741 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132506435 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11005035 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.18384393 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.12551844 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.132232288 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.099594406 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136137711 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.105460801 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118488142 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.090850665 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148680457 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.138441922 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.097115093 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.089689257 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.132903186 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138828528 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.091231091 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.122636962 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.108357645 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.136629935 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101557018 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.132142913 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.099187019 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.118581094 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098021976 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.121391992 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.10408686 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123592299 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.096936942 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.122866502 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.093698278 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.121571271 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.09998388 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.122807627 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.096081675 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140756565 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.098019376 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131214207 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.120714537 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.131063035 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.093338569 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.140107694 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.158129647 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.089539464 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.126151556 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095829829 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.09815842 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.117352384 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.106461732 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128326664 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.089282027 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.133885715 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.118261656 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.088729025 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.103551734 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.120401836 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.092604393 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127021123 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.096010541 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.13923943 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.093755574 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134652957 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.09071123 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.12486097 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.088645314 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.118896753 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.094273889 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.140656027 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.092947062 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.158678567 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.089708404 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124832947 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.096650659 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.124703533 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.099234416 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.119489274 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10331686 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129224662 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.094007378 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.130509049 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.092823825 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.123666896 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.107289446 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.136054928 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.096684406 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124316742 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.096079303 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.122656792 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.098101371 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133356693 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092399286 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124018206 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.107295964 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.119253468 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.092460526 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125669199 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.093828505 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.118060351 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102087454 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.123795459 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.089288796 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.12921646 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.089865085 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122984323 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.097820369 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.122795239 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.089038789 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.123395055 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.095609187 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.118646233 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.092574728 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.123415058 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.091710812 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132729105 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.09678797 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.121554182 seconds)
  done (took 14.419644799 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.235670668 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215792206 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.191825884 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.301177303 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.141674294 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.116718187 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213434476 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.165278286 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.090116811 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160378347 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.176672959 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.186913815 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.175355655 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.186815291 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.172685749 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.121169992 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.107373392 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.172221976 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.216349331 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.299429014 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.108641213 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.134877957 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.160844021 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160685298 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.108319793 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.135193662 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.142813751 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.110761056 seconds)
  done (took 5.838259585 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.105771795 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156360353 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.096158743 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.14565426 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.146401292 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.090984189 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.124482069 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.089989089 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.133139653 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.104211435 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.122448401 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.096638256 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.125977753 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.099911594 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.120360009 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.098838789 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.130823322 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.098334492 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.123094267 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.093601626 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134432236 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.107855097 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.125936663 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.091840597 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.13721788 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.12258608 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.091396695 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140967901 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.126873197 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115255507 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.117155074 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.098299865 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.135402879 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.089701948 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.09128324 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.122474591 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.091179519 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.121854392 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.091099244 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.117166861 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.088416635 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.110888775 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.09238938 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.13520907 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.096282287 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.117543251 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.094146708 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.124446842 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.09667313 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.116684715 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.091728699 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.091649772 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.123846883 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.100676386 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.123530038 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.096123343 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.123955888 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.091075096 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.129132418 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.092198809 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.117850376 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.091201178 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.126565889 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.093394148 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.128776091 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.095603959 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.12129664 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.091774161 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.125064191 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.096211778 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.123111887 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.097839589 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.117403546 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.090658826 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.130081388 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.098141847 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.093754991 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.121741015 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.093101394 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.120337521 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.078482001 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.119786982 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.077110393 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.124806078 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.089054031 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.091365976 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.123323746 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.095189524 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137261791 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.129486166 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.096969682 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.119185928 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.092777768 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.124271895 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.087722401 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.093858349 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.137381391 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140532343 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.089235101 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.118124529 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.105227556 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.12207404 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.088089965 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.081942797 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.130126857 seconds)
  done (took 12.72289915 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130382707 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.17132156 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.121546169 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.109803328 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155467775 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.163009751 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.098480131 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.128613399 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.584730374 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.10839633 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.123955445 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.098855171 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.123605117 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.104406688 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.161043437 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.130574301 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.090398635 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.13477186 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.094950355 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.175331631 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.139746362 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.128829225 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.161002365 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124196414 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.095796445 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.15758307 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.164548634 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.103125694 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.132998353 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.130887096 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.134423162 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.164378979 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.132096291 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.126766684 seconds)
  done (took 6.059997132 seconds)
done (took 52.092596917 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.219310856 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.425588277 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.202834773 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.202790495 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.269721269 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.248973608 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.203512283 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.398019118 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.976252287 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.194162165 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.202139217 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.203882712 seconds)
done (took 27.885197518 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.291866269 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.366945419 seconds)
    (2/2) benchmarking "String"...
    done (took 1.497697345 seconds)
  done (took 4.001375559 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.205241564 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.203720007 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.449279602 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.212828419 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.205340541 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.221773074 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.207819633 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.216744906 seconds)
  done (took 15.85348328 seconds)
done (took 25.489473372 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.28020481 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.389643801 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.456068861 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.232741689 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.204547982 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.215273031 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.207410963 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.246131061 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.217787319 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.208059108 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.205102097 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.460357002 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.237909893 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.57580134 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.208314364 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.217950638 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.221841309 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.433048699 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.214052333 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.257095552 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.192318523 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.21579696 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.213298532 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.228093866 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.213995557 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.220111437 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.241711239 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.205858913 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.402237003 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.227049754 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.252119817 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.206423008 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.245366729 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.217495922 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.3198396 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.233976787 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.395583278 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.215319882 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.202878837 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.212504195 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.40051196 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.615358012 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.207088447 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.214257074 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.211505015 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.288404938 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.195518413 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.93529988 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.207591251 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.214509712 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.211433202 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.589577339 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.210743097 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.217494802 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.22002283 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.447445725 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.207669073 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.254853864 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.23902012 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.208307513 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.208850404 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.221027016 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.22539514 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.213699363 seconds)
  done (took 143.855471897 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.20851379 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.208414324 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.20812921 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.228792374 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.208277201 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.208955831 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.209828999 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.209002598 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.208157325 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.230608114 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.210157938 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.20974802 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.212708834 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.169524909 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.212404921 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.231469146 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.21223975 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.228292131 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.212464847 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.210946175 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.23415423 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.208907518 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.226306223 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.209025033 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.210198216 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.289489713 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.229608489 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.214388215 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.21295563 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.21100516 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.25692042 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.277014392 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.845898934 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.064375604 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.220409858 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.238297003 seconds)
  done (took 80.529047488 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.209703699 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.211340793 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.209690401 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.243126314 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.21035529 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.803082344 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.80756943 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.937982017 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.543991769 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.631757875 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.531975265 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.213847521 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.305657735 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.225434433 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.211983098 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.227654829 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.238340087 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.211196362 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.212525865 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.789059676 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.225478486 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.43446497 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.408130887 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.227035401 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.244592358 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.611832185 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.211404765 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.245898865 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.548217248 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.261740893 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.21157418 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.624018986 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.826277328 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.328593598 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.21411367 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.245994863 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.212001128 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.496689432 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.212742892 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.212244252 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.212446529 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.216040759 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.212833957 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.922110092 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.216356875 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.804044497 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.216289733 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.199727203 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.216639976 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.213580086 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.218315468 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.969578749 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.232745371 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.213092967 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.217171877 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.213133269 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.213225377 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.247066689 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.247045063 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.327036498 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.213568128 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.217003498 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.246774135 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.213670567 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.267515365 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.230089294 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.025180436 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.296642544 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.321400865 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.793695855 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.214640603 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.313110811 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.336014935 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.214376517 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.214673873 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.214143338 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.214365605 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.214951824 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.32501599 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.21417166 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.642260354 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.39389353 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.232137011 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.6447387 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.316939207 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.215649675 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.637199925 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.218028493 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.215517188 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.968664203 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.312578501 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.215348284 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.215168311 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.214736253 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.643409124 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.813883465 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.484271999 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.217930166 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.489245017 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.219319759 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.651479201 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.215224527 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.79071182 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.943345224 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.219934541 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.331669983 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.393948593 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.232147128 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.2157376 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.644825069 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.217537972 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.277526702 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.215793773 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.617364469 seconds)
  done (took 368.234275577 seconds)
done (took 593.756323096 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.936062349 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.883159769 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.017605391 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.912079659 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.880441512 seconds)
  done (took 10.777611938 seconds)
done (took 11.924775215 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.409129866 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.410452919 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.279544653 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.412572552 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.251089031 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.431436762 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.39568746 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.240470833 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.323597681 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.300940143 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.322146491 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.273352065 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.252417439 seconds)
  done (took 18.451482437 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.572484946 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.220565132 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.300167064 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.550688997 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.258657371 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.561933147 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.425855903 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.237219959 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.44579988 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.234856521 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.232166857 seconds)
  done (took 18.189360316 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.585128656 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.220042904 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.303922523 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.573608933 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.260425556 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.569783926 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.43530841 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.239031154 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.45335844 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.235961778 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.233672429 seconds)
  done (took 18.259574752 seconds)
done (took 56.049570234 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.261317425 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.389132991 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.245524372 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.234543591 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.229645859 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.230885372 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.235557498 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.230750263 seconds)
  done (took 11.209537234 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.225912646 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.228935389 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.228993883 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.227678536 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.229176397 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.226358971 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.2273002 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.228212365 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.230242502 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.226591815 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.22952635 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.226636023 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.228024747 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.229570603 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.229470487 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.230503373 seconds)
  done (took 20.805562976 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.22954207 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.227075969 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.227675635 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.228798195 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.228255237 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.228465361 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.228837176 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.229249086 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.228841885 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.227842201 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.229086945 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.227945809 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.227487412 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.22786122 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.228293718 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.228919976 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.229334354 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.227874205 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.232071217 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.228825776 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.228289234 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.229570835 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.227933709 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.228179264 seconds)
  done (took 30.641347197 seconds)
done (took 63.807165147 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.224909177 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.229405274 seconds)
  done (took 5.605775964 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.288829317 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.292578769 seconds)
  done (took 3.735681583 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.231511551 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.231644822 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.232321352 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.232811437 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.232337712 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.231534058 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.234251722 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.231563273 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.231752798 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.232086989 seconds)
  done (took 13.474545361 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.232070529 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.231404942 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.229757655 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.231130508 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.232969103 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.230084071 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.233551465 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.232284814 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.232727061 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.22977646 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.233735623 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.230808285 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.233385186 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.230544246 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.232145176 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.229437745 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.229340043 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.231005558 seconds)
  done (took 23.319895285 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.245638093 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.254524286 seconds)
  done (took 3.654335721 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.360498589 seconds)
    (2/7) benchmarking "second"...
    done (took 1.272231005 seconds)
    (3/7) benchmarking "month"...
    done (took 1.340485614 seconds)
    (4/7) benchmarking "year"...
    done (took 1.329303898 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.272786347 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.25178541 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.273151679 seconds)
  done (took 10.253996995 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.235648493 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.424303654 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.536331729 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.809723236 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.236659629 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.237845828 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.099748317 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.238201671 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.240201601 seconds)
  done (took 14.214141638 seconds)
done (took 75.409996453 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.226592781 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.245785343 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.247376674 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.243253964 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.575698689 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.256146377 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.229192824 seconds)
done (took 16.179705936 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.219477745 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.216569924 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.247632827 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.226428923 seconds)
  done (took 10.066402076 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.240729453 seconds)
    (2/2) benchmarking "read"...
    done (took 1.546399342 seconds)
  done (took 4.943123512 seconds)
done (took 16.165495741 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.232593338 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.23512808 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.235228185 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.23299965 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.235301305 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.232751255 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.233064546 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.236257727 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.235788615 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.236617802 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.235112 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235088425 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.23369965 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233931734 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235129587 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.234324641 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23330306 seconds)
    (18/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232459227 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.233251001 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.235916741 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.236547444 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.234316802 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.234064436 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.235405946 seconds)
  done (took 30.785794993 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.235401597 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.233932321 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.235837754 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.236290804 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.234816941 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.235275626 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.23915045 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.234151105 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.236108727 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.236184379 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235105346 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.233654783 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.236867135 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.234201655 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23714039 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.233561554 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.23821796 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234837518 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238032179 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.236278284 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.237698931 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235177431 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.235648082 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237451254 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.235238419 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.234829742 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.238614708 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.235211958 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.23714299 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.235679544 seconds)
  done (took 38.236318183 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.242461489 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.243837898 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.23764193 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.23690221 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.2383923 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.237625003 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.237761159 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.23801868 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.23875426 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.237224684 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.239027312 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.238488806 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.239240714 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.23833388 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.240346262 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.237827471 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.238671692 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.237981351 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.239911343 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.239237572 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.239789665 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.238674875 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.239801325 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.23838831 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.238936562 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.238399937 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.23834673 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.238931354 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.239141932 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.239512929 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.239752638 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.241085991 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.239650799 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.240952506 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.240173209 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.239191079 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.245034157 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.246915131 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.241159909 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.240621386 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.241072744 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.239695079 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.241235935 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.241164613 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.238737421 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.24043029 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.241596785 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.240231294 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.240565172 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.240782334 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.240451982 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.24245967 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.240142947 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.24026316 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.241217766 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.241087562 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.240443189 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.241517575 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.241166222 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.241108064 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.241876654 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.242374037 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.24209078 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.242425474 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.241765997 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.24165584 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.243164767 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.2422447 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.24145247 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.24214256 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.241928274 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.241679381 seconds)
  done (took 90.464417668 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.242727911 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.239484101 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.239789475 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.237751352 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.240375796 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.243426098 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.240069778 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241366512 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239242459 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.243238176 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.243535345 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.239662832 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241615241 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.243416094 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242321931 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.240417923 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.243293806 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.241229503 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.242912495 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.243142152 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.243692724 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.242200266 seconds)
  done (took 28.479348617 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.244560379 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.246929005 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.242175744 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.245337952 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.240680966 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.244247931 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.243895341 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.244477823 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244072401 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.241504976 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240720749 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.243461565 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.242831302 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24155375 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.240306963 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.244208269 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.244874039 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.244064888 seconds)
  done (took 23.544210975 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.24064274 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.242782666 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.245473738 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.242504047 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.242637595 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.24487455 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.242564831 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.245269415 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.245680075 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.242767248 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.244882905 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244600842 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.246161266 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24276775 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244557714 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.242656375 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.246565059 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.242891044 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.24536456 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.243990853 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.243467273 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.246226956 seconds)
  done (took 28.535634573 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.246041745 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.245817339 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.243880374 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.243436578 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.243313977 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.246079317 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.24682676 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.244165971 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.246882827 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.246176935 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.243444733 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.24674051 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.247758856 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.244133012 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.244717914 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.243201403 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.246974885 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.244865547 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.246756864 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.244191679 seconds)
  done (took 26.073954152 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.248091923 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247589086 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.248582391 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.248418675 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.24797879 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.248034761 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.248200506 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.247893353 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.247348379 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.249123328 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.248001673 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.24867807 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.249648534 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.248839171 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.247957459 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.249458307 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.248654132 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.248426385 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.248543876 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.250161543 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.248795672 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.249485987 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.249006881 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.248519997 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.249278604 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.249341585 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.248651833 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.249131311 seconds)
  done (took 36.13058208 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.250548722 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.249198691 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.247241748 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.247022849 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.247492275 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.247143848 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.247973572 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.247799146 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.248237816 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.247351053 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.24988251 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.24995034 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.250336208 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.24952843 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.249757172 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.250451262 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250346963 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.247365037 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.247914783 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248822686 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.250064217 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250854041 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.250884484 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.247593637 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.247328733 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.251323981 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.248950247 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.247905676 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.251878157 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.248868055 seconds)
  done (took 38.640634627 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.295132706 seconds)
    (2/2) benchmarking "in"...
    done (took 1.295206745 seconds)
  done (took 3.76301317 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.24848001 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.251950401 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.251373616 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.249623531 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.250573963 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.252069296 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.253379598 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.249650488 seconds)
  done (took 11.17994077 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.250768051 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.252975547 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.252967036 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.25356426 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.25275081 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.251781396 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.257983789 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.273041804 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.251939657 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.252566267 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.258747454 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.2584685 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.253521303 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252446408 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.252230764 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.253971866 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.252770736 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.251208067 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.252581848 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.25434063 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.252822096 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253543709 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.254842162 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.251974443 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.256242491 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.263908312 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.256470965 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.255380017 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.252932335 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.256423941 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.252408964 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.251971067 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.253902416 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.253556617 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.255337386 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.253964392 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.260874942 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.275228489 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.260330896 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.253909895 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25418211 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.251635355 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.254358012 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.25478182 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.256192053 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.253839139 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.254048379 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.251860297 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.253403969 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.258341322 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.260193224 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.254782094 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.254850923 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.25842681 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.255283183 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.261297251 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.276354144 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.25703327 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.264531602 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.265233507 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.266587833 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.281017949 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.257673284 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.256334306 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.265283863 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.27960942 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.262266293 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.27570002 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.255080458 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.256697424 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.261646074 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.268426924 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.282697974 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.256660148 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.257375585 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.257444286 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256148035 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.256998512 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.263263294 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.279047745 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.258321278 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.256168969 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.266896145 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.280942612 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.255603149 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.257046521 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.258146455 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.256568087 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.258347852 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.266756178 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.276822133 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.258610204 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.256807841 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.257582133 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.258217565 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.258786023 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.255008571 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.257970997 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.256263115 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.25855101 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.258621342 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.261843152 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.266932496 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259091475 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.258089814 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.263708669 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.258808247 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258808419 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.263625268 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.258385769 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.259423521 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.259528195 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.263516361 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.257652057 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.262815076 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.26802712 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.259503201 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.260544278 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.258679349 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.260470791 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.270023903 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.285613892 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.260631459 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.260369666 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.265407789 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.271872236 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.261082326 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.261627479 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.26129046 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.258828328 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.258864064 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.260905455 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.261662972 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.260628268 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.262047797 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.260588326 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.258813705 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.261492661 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.261889204 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.260450459 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.260981004 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.25925692 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.26095021 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.263080712 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.261132367 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.261983778 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.264776532 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.259382596 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.261708084 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.260352132 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.260326382 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.26286196 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.260828924 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.262696102 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.262073746 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.261871286 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.262303436 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.261376986 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.262889631 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.261649176 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.263506604 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.262205747 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.266199989 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.26327607 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.264689957 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.261774564 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.260986211 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.262059635 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.263904862 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.261628366 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.264535471 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.262015442 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.265391311 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.270378938 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.2631615 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.262333519 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.264623641 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.263938546 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.264625843 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.264398151 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.266309337 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.271065605 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.262077283 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.269377005 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.263364994 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.26334094 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.266381854 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.262851753 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.262177245 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.26411506 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.26692181 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.272643944 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.276039271 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.289143473 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.265393816 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.26843675 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.263552846 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.267943903 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.265846579 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.265702517 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.265521281 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.263895181 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.263306417 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.263867889 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.265291007 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.264635985 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.262376207 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.266891628 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.267513571 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.265605199 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.266135653 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.265690187 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265077761 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.262820238 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266886734 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.265889625 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.263377833 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.262323293 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.263645421 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.264334114 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.265962848 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.266117596 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.270439989 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.26323004 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.266010616 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.266269743 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.264085427 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.26518769 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.266794069 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.267591597 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.264498539 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.272788225 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.285833013 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.266972521 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.272055952 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.285419612 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.264815763 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.268951467 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.267953154 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.265099954 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.270042772 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.275915023 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.268080075 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.267798841 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.267858542 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267238249 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.268699885 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.272937487 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.265775824 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.267661556 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.269681667 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.267622759 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.266326002 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.268010437 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.267779088 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.267434446 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.269031482 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.268968237 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.269447952 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.266960889 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.269371206 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.268579781 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.268942021 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.26964953 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.276830127 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.272320734 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.266706056 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.270117733 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.268772111 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.272157162 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.269825736 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.269392283 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.267124375 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.279779218 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.296379799 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.274992158 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.289554238 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.270688204 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.27337586 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.289055047 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.270953052 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.268835002 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.268402621 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.268181928 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.268900578 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.267566069 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.270458573 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.269579755 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.27083959 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.270885783 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.276133514 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.271133428 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.270605626 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.270187169 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.269658794 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.270528994 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.268134901 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.271532552 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.271386167 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.271396246 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.268463201 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.272729719 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.277571516 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.291043531 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.271448681 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.270717743 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.270842606 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.270171478 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.271082935 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.272173843 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.273935975 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.279088973 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.273973539 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.278167236 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.27308703 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.279148405 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.270617546 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.274236211 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.279547391 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.269243203 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.271104863 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.270944131 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.271735472 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.278397377 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.291800213 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.273185566 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.275678469 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.272258647 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.272387809 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.272791833 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.272338397 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.274500977 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.27263792 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.28003281 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.29625259 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.276596545 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.274021904 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.27011309 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.274276103 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.272961422 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.272305171 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.276056298 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.273181023 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.274579582 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.272380954 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.272621739 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.273589735 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.273805745 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.275302017 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.271260298 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.274961312 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.280026078 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.295061071 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.277995425 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.275490737 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.278595785 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.274816604 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.280158228 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.294968857 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.27458954 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.274526272 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.275547794 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.274949166 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.273611159 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.274665349 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.274636369 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.276004062 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.279304182 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.275012948 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.275898653 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.275862609 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.274665048 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.274277076 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.28419287 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.299767319 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.275402155 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.281583645 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.273840705 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.276280222 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.280019986 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.275140384 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.274382722 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.279181281 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.285422822 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.284038424 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.275102858 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.276207823 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.27560537 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.276768425 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.277017625 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.278832893 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.276182676 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.278143045 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.27676943 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.276985047 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.279858242 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.276638967 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.275605082 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.277018446 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.279035883 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.285641387 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.277068658 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.277178015 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.27773292 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.279312847 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.278161857 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.277590973 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.277863008 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.27640316 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.278040729 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.278668442 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.283752236 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.283023667 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.279305474 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.277428826 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.278336641 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.276797397 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.277682986 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.279361359 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.278456142 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.279203961 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.277720743 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.279812097 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.278712596 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.27817553 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.279863449 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.279776244 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.280024299 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.282997803 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.286690434 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.279649764 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.276539647 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.280489759 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27968418 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.278641742 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.279785387 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.286820424 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.282590269 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.290854957 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.288819012 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.284138134 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.281211951 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.283416589 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.288042964 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.278863825 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.281255822 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.281343058 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.281979862 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.283149736 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.283616079 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.28118338 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.287205755 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.281135407 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.28018786 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.287897147 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.303072172 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.280053882 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.281614728 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.284694249 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.28173146 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.27951037 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.281648011 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.282257288 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.287637351 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.302625716 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.28257009 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.283126093 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.282900607 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.282340886 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.286082011 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.282978016 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.283549202 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.280198709 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.282681879 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.281413417 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.2838349 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.280275581 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.281262948 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.280935326 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.286530204 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.28871285 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.282099686 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284592858 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.281210137 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.284204433 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.28282568 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.284904752 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.282849567 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.280910314 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.281854786 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.282564266 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.283249272 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.285404328 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.28114405 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.283323013 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.285915932 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.28498801 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.287168565 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.29259802 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.292630084 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.282113556 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.284174354 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.284251123 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.2852302 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.285855535 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.284495448 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.285323231 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.284905578 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.285944208 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.286056652 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.286987959 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.287602241 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.300019439 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.308615801 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.28537998 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.284510911 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.286716044 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.285575331 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.283725412 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.285194862 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.285960125 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.288601493 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.293436539 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.285536132 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.291158665 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.305535009 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.286350556 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.291542341 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.288307173 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.292861286 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.287155675 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.285687634 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.284926927 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.28930545 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.301340755 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.286321064 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.296355317 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.316455235 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.307361427 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.285622599 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.287329798 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.285219972 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.28752421 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.288441577 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.286527538 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.288069247 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.287857745 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.287851399 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.288933368 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.292623506 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.287247438 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.28915899 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.289889828 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.286425934 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.287035367 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.284944458 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.286982748 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.288708279 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.287647481 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.288661414 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.28856333 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.287884569 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.299377893 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.316025414 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.288922434 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.289067247 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.285531236 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.29028229 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.289742531 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.300127252 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.297046371 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.289295024 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.288786704 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.289663341 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.288863 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.288193906 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.289089214 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.288553641 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.287009299 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.287067131 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.299531663 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.316002371 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.292669932 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.288620958 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.289508159 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.29024977 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.289878166 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.291517893 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.290440807 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.290530487 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.293308717 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.29359963 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.291339379 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.290988992 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.292517223 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.297970772 seconds)
  done (took 760.116294851 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.288655518 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288856196 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.288186484 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.288830695 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287190461 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288447225 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288250206 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.288574572 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.288905721 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.289044577 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.289056937 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288642564 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.28824359 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.288111352 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288797226 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.288473902 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.28775932 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.286739464 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.289842758 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288574638 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.289142711 seconds)
  done (took 28.26677489 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.29203276 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.289855695 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.289916002 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.292104808 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.290008652 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.291357801 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.290064897 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292386895 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.292399122 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290628537 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.293249609 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292772069 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.290807121 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.289946054 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.291252201 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.292542582 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.29387899 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.291055642 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.294294755 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.29148293 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.293335243 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.292007598 seconds)
  done (took 29.627190569 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.292783151 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.294961303 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.293372799 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.291009639 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.294582266 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.2909067 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.29326482 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.294857895 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.294282649 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.293380594 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.292186337 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.295727164 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.29947901 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.299313551 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.29524069 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.295277687 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.293212299 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.295487638 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.294162645 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.292718643 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.298576106 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.312819264 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.291069909 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.293531945 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.294134879 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.295883988 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.295913304 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.293488779 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.295749812 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.298957263 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.29447377 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.294602358 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.296897519 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.293779893 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.295419345 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.299346962 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.29547583 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.293230752 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.294450226 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.305254466 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.315752308 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.29516625 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.299728833 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.317576075 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.296794909 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.299767498 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.303628158 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.294032304 seconds)
  done (took 63.45437716 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.296620488 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.295904689 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.29381208 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.296519661 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.298981005 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.297073932 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.296946753 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.298485414 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.294862882 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.294799952 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.298481051 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.295202321 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.295764112 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.298974797 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.29714069 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.295772196 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.296194149 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.295606046 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.294747824 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.295717095 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.294744055 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.298050994 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.29926097 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.29679325 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.29795204 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.295386601 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.295741048 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.29966059 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.295240264 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.296687448 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.300421649 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.298005274 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.299260816 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.296901773 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.295740063 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.298177295 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.299402251 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.297088614 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.299268037 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.296774777 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.298614611 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.30043138 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.299289835 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.299589499 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.296445161 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.296842117 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.297199409 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.296556133 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.296847131 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.300088489 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.300399287 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.298076179 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.299784382 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.297583214 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.29963506 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.301072838 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.297290147 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.297073199 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.300951484 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.297556614 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.297554909 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.300583307 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.29776656 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.300595363 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.300074732 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.299052253 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.298841108 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.301846506 seconds)
  done (took 89.461675059 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.299989686 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.299961693 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.300991855 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.300043263 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.300315618 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.300669532 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.301441216 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.3008281 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.301009804 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.3008485 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.301627536 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.300607752 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.301200882 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.301210877 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.30147035 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.30139016 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.302209529 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.301431886 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.30182253 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.30159909 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.301174415 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.30176945 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.301513972 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.302735591 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.302708016 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.301794366 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.301191873 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.302256571 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.302667069 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.301804339 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.303072517 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.3013841 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.303774843 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.302960083 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.30390636 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.302509379 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.302282394 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.30261162 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.302455657 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.302310065 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.302910842 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.302507228 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.302406396 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.303057684 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.302759257 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.302888672 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.302481096 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.302883158 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.303519074 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.30246309 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.303514815 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.304176255 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.304122234 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.304123335 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.302974381 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.304660431 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.302767563 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.304958964 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.30391082 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.304615308 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.303607896 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.305430797 seconds)
  done (took 81.964460097 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.3048367 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.304911393 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.303037337 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.301949449 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.306709611 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.302436222 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.303863882 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.30423604 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.304592595 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.305492875 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306527609 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.303441319 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.30264596 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30616628 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.30319675 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303843948 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.303334405 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.302739392 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.305548113 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.303330136 seconds)
  done (took 27.303861255 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.30450341 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.307052045 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.30398594 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.304523053 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.305337731 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.304066205 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.305161368 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306840693 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.305306072 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.307346145 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.307144656 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.306946183 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304057332 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.303922408 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.307127246 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.304950201 seconds)
  done (took 22.110829858 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.304724364 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.308648875 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.307629106 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.306419003 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.304168316 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.305065425 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.30750353 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.305130501 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.305977984 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.309373229 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.306823011 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.308063281 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.309536969 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.30626662 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.305877716 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.308981611 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.304950574 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.305566401 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.308904077 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.308184914 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.305567032 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.305015475 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.308623119 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.309786118 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.305502423 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.305830735 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.306950219 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.304802659 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.305699753 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.308253513 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.306974402 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.30622886 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.307666979 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.306173702 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.308646516 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.306752852 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.309316042 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.310381033 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.310359942 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.309777896 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.309867153 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.307727514 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.310116033 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.309630648 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.307537941 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.310533898 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.306962864 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.308374253 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.307334255 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.30721554 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.310107156 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.310347135 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.310196586 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.310001252 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.310091875 seconds)
  done (took 73.146446779 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.309809812 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.309898827 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.30768326 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.310392802 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.310861838 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.308252002 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.310043711 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.309800256 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.308453396 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.310419702 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.308868646 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.313239549 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.308655345 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.311614752 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.309374687 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.310075162 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.309236584 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.310395256 seconds)
  done (took 24.804979712 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.309149925 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.309573588 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.311099808 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.310180555 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.310548282 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.312937074 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.309205139 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.312280772 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.309908859 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.308495359 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.309110316 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.311559328 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.31205856 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.312166494 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.310621219 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.309606267 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.312949115 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.312517764 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.310299834 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.30995986 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.313394879 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.312608149 seconds)
  done (took 30.068452859 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.311959839 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.310044191 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.30949154 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.327578951 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.329289688 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.3103898 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.310763492 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.309639649 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.335206445 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.364586503 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.359874319 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.330481307 seconds)
  done (took 17.135846688 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310883048 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315703019 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.310870891 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31414204 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312209505 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309523236 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309105069 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311425042 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314246579 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313074882 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310555474 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311066775 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311871978 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310811808 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312470875 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314065623 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311303677 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30997539 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308627585 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313053513 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30957497 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312518482 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307919051 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309828751 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311917229 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310090396 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312871232 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309189643 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30919467 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311496388 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312661314 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311016502 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314212298 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310763663 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312125728 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312483617 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311088846 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313292855 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311682145 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312200477 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.313193853 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312926573 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312850097 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310268574 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313111582 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309812348 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310869135 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311972321 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309613682 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313355707 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31329073 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311989556 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312878258 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313914651 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313488176 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313940197 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309733429 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310443297 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31327086 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310637423 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310734882 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312627465 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31041193 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311996127 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31244567 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309783607 seconds)
  done (took 87.800614217 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309768935 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.309168981 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310761233 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311108124 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310051052 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31016097 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310030662 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310435754 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310131484 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309655141 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312710732 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310663722 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310963272 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310968009 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310267159 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310689975 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311063182 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310857481 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311465282 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313081731 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309876031 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30999202 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31025397 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309958124 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309959499 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313063504 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311144634 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310166537 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309588064 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310207813 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310336283 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310923815 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310704101 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.310742062 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310840335 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311569244 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310146907 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311587675 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31172572 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314942784 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310158717 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313767162 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311554505 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311408349 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311602711 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311633021 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312266102 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312052042 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311049532 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311568451 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312239579 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310967835 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31131529 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312957688 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313041659 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312342439 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31369419 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31338798 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312693411 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315179846 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312913074 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31267926 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314885274 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31275369 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312731772 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312143072 seconds)
  done (took 87.785609956 seconds)
done (took 1780.038024886 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.478394857 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.428966978 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.313723511 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.318910635 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.315154376 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.335402536 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.32515254 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.313258689 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.313304562 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.313222935 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.313188989 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.500691935 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.309318215 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.314432712 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.314028229 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.410231782 seconds)
  done (took 26.851195801 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.343789037 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.320631026 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.443546167 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.338021101 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.343852355 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.517911586 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.376541755 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.320133024 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.506029558 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.365164967 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.32165189 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.343231592 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.320196815 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.318466251 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.339120217 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.515950249 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.587349021 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.32565945 seconds)
  done (took 29.178615635 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.808562142 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.340253671 seconds)
  done (took 5.37980609 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.34002847 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.319762932 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.321440277 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.318418291 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.32212329 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.312511126 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.318868232 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.312773641 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.31321686 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.454882287 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.323235285 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.330233008 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.341853045 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.321580784 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.317847557 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.359781461 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.468256958 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.319280605 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.317915263 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.328530995 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.320037107 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.419469701 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.364630818 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.320061049 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.455517155 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.319423012 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.325197511 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.326520494 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.477284705 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.320202405 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.319722547 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.320749954 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.322263748 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.263781303 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.803205261 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.321509073 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.347932723 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.330454925 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.321026567 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.46109094 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.323029618 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.328575669 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.314279314 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.797294258 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.46930305 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.446241642 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.334220297 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.325884156 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.322162935 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.387447188 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.322742331 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.323194655 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.368790769 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.150898711 seconds)
  done (took 84.673233703 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.358325141 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.314068113 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.495167346 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.335128108 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.313846024 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.316423547 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.336455119 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.632314048 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.37928746 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.314276231 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.654345534 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.894303046 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.332908043 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.351482592 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.183012295 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.362627845 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.32344828 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.314850994 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.332858168 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.32124346 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.881548981 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.317111957 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.316941547 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.474637118 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.352582564 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.830963751 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.314407989 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.326446779 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.312710723 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.313997813 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.853314445 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.33902032 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.363859177 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.312710316 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.591804415 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.728925961 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.674742319 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.316800764 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.347925458 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.314923338 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.331503991 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.832187649 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.688016361 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.313142089 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.331629694 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.84753584 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.315644604 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.315702046 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.319047385 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.563683689 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.31531467 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.327486715 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.326112224 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.314092119 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.314117902 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.380182596 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.38122156 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.827761718 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.315043982 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.31598232 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.344272295 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.316185532 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.31994486 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.32038151 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.314863202 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.702249125 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.471808094 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.318389136 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.687200923 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.839964132 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.337718155 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.923837408 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.33695939 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.346537543 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.324757596 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.313598598 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.315662291 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.832192088 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.317223577 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.314296262 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.676191156 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.319537324 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.649145629 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.335560522 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.315611781 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.886129148 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.324196737 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.403573155 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.313428882 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.331644326 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.332079742 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.320138243 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.610465626 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.365880325 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.314430061 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.314221917 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.364210587 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.314062632 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.314876113 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.318824803 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.901244796 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.340981496 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.315344717 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.31911654 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.313500145 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.317457974 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.316362181 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.318003526 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.576433773 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.313702478 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.319812604 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.313673389 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.314273951 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.339262844 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.465763064 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.318065056 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.646491063 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.320584023 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.314306383 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.317843106 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.313447534 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.354531141 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.31480283 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.314088069 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.239147175 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.619727644 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.333595081 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.313776991 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.313208967 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.313683096 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.337297421 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.31666286 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.338375231 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.319261871 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.077544393 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.352697435 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.338908086 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.313754185 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.318737986 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.323994918 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.320486833 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.316812931 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.610749073 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.59454567 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.464856164 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.314956388 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.314652343 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.051288138 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.338991113 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.495805068 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.337103486 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.315268794 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.562887596 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.524232731 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.317455681 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.316162466 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.317325312 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.57385263 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.316223533 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.64068666 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.858541219 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.33741614 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.316100333 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.08143434 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.054685842 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.322357933 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.316736496 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.642638302 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.337230436 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.314756463 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.315777206 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.316273954 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.332879652 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.332887275 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.317479213 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.31603097 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.314663789 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.44883439 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.504766121 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.33253401 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.321973027 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.815850365 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.402588675 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.314687165 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.329372584 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.314628692 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.316457619 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.36839317 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.317750747 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.350950881 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.318141725 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.315242894 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.882701305 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.314418592 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.316858755 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.504474232 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.989575039 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.334886497 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.315330811 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.332592025 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.190379264 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.835879242 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.327015882 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.624805453 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.318375981 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.35227887 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.31281327 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.331287796 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.829580251 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.318087112 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.312842925 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.951789783 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.331898823 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.840904421 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.313444951 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.323725911 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.890328539 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.336057427 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.312639828 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.313472276 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.314451905 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.603481646 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.316392356 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.334698206 seconds)
  done (took 494.935598301 seconds)
done (took 642.249048781 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.311882471 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.315427699 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.303731583 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.314719883 seconds)
  done (took 10.480070875 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.32492949 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.320344306 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.322479918 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.319212161 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.322350832 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.320033333 seconds)
  done (took 9.162992187 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.312287194 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.315477181 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.315929979 seconds)
  done (took 8.178399281 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.519109657 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.341521143 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.634905433 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.335411427 seconds)
  done (took 9.065754804 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.318258159 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.320375936 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.319936201 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.321901485 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.32628093 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.322647149 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.321894016 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.320851602 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.323761169 seconds)
  done (took 13.128044909 seconds)
done (took 51.248953032 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.316075264 seconds)
    (2/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.30099298 seconds)
    (3/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.374966582 seconds)
    (4/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.827922271 seconds)
    (5/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.312298733 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.189929856 seconds)
    (7/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.332336744 seconds)
    (8/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.402415278 seconds)
    (9/286) benchmarking ("sort", BigInt, false)...
    done (took 2.314540952 seconds)
    (10/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.400031845 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.569907841 seconds)
    (12/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.340266184 seconds)
    (13/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.300458936 seconds)
    (14/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.323749732 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.354717923 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.341979812 seconds)
    (17/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.301491091 seconds)
    (18/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.300855121 seconds)
    (19/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.057450878 seconds)
    (20/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.30307799 seconds)
    (21/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.080733229 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.698151225 seconds)
    (23/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.333593267 seconds)
    (24/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.319697209 seconds)
    (25/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.327361023 seconds)
    (26/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.335405741 seconds)
    (27/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.557514354 seconds)
    (28/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.400114359 seconds)
    (29/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.441689948 seconds)
    (30/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.301218307 seconds)
    (31/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.3180807 seconds)
    (32/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.302531285 seconds)
    (33/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.357961907 seconds)
    (34/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.307925473 seconds)
    (35/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.355235779 seconds)
    (36/286) benchmarking ("sort", Int64, true)...
    done (took 2.332518073 seconds)
    (37/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.882897033 seconds)
    (38/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.456491698 seconds)
    (39/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.42362867 seconds)
    (40/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.342879632 seconds)
    (41/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.576495625 seconds)
    (42/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.054905864 seconds)
    (43/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.649780741 seconds)
    (44/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.323512782 seconds)
    (45/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.445115433 seconds)
    (46/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.302348471 seconds)
    (47/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.343482444 seconds)
    (48/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.192739835 seconds)
    (49/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.318827068 seconds)
    (50/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.399367023 seconds)
    (51/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.857236251 seconds)
    (52/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.424332319 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.586489899 seconds)
    (54/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.301798439 seconds)
    (55/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.346910048 seconds)
    (56/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.316957767 seconds)
    (57/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.344817236 seconds)
    (58/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.139390563 seconds)
    (59/286) benchmarking ("sort", Float32, true)...
    done (took 2.319484207 seconds)
    (60/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.376071999 seconds)
    (61/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.423547543 seconds)
    (62/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.30289378 seconds)
    (63/286) benchmarking ("sort", Int8, true)...
    done (took 2.316384987 seconds)
    (64/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.402937161 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.320383392 seconds)
    (66/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.302620617 seconds)
    (67/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.310722359 seconds)
    (68/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.307744034 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.184042726 seconds)
    (70/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.345687251 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.709828041 seconds)
    (72/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.269046462 seconds)
    (73/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.315085384 seconds)
    (74/286) benchmarking ("sort", Float64, false)...
    done (took 2.322387685 seconds)
    (75/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.330241015 seconds)
    (76/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.314151844 seconds)
    (77/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.302991595 seconds)
    (78/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.320167669 seconds)
    (79/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.323968566 seconds)
    (80/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.124452394 seconds)
    (81/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.320386184 seconds)
    (82/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.306510908 seconds)
    (83/286) benchmarking ("sort", Int64, false)...
    done (took 2.315793077 seconds)
    (84/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.329234297 seconds)
    (85/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.30451546 seconds)
    (86/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.303444343 seconds)
    (87/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.098090252 seconds)
    (88/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.429915975 seconds)
    (89/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.321689557 seconds)
    (90/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.319338099 seconds)
    (91/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.343196386 seconds)
    (92/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.316028336 seconds)
    (93/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.31863067 seconds)
    (94/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.161059348 seconds)
    (95/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.321344384 seconds)
    (96/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.832743015 seconds)
    (97/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.371084467 seconds)
    (98/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.303847799 seconds)
    (99/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.304767962 seconds)
    (100/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.307232739 seconds)
    (101/286) benchmarking ("sort", BigInt, true)...
    done (took 2.320621993 seconds)
    (102/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.429090958 seconds)
    (103/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.350445637 seconds)
    (104/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.465106618 seconds)
    (105/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.382520965 seconds)
    (106/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.303646872 seconds)
    (107/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.385485402 seconds)
    (108/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.317321288 seconds)
    (109/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.327695116 seconds)
    (110/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.316007155 seconds)
    (111/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.51947474 seconds)
    (112/286) benchmarking ("sort", Float64, true)...
    done (took 2.316271418 seconds)
    (113/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.023295505 seconds)
    (114/286) benchmarking ("sort", Int8, false)...
    done (took 2.316842426 seconds)
    (115/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.305791808 seconds)
    (116/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.3059554 seconds)
    (117/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.309752741 seconds)
    (118/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.319958663 seconds)
    (119/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.305529034 seconds)
    (120/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.339610298 seconds)
    (121/286) benchmarking ("sort", Bool, false)...
    done (took 1.832334479 seconds)
    (122/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.343344363 seconds)
    (123/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.043747465 seconds)
    (124/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.307315948 seconds)
    (125/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.596282931 seconds)
    (126/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.04356535 seconds)
    (127/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.382831531 seconds)
    (128/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.580280401 seconds)
    (129/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.644567652 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.21048251 seconds)
    (131/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.449832513 seconds)
    (132/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.346060346 seconds)
    (133/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.306172388 seconds)
    (134/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.330796235 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.329458131 seconds)
    (136/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.324416642 seconds)
    (137/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.321999243 seconds)
    (138/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.307938799 seconds)
    (139/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.451088405 seconds)
    (140/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.405480127 seconds)
    (141/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.462509362 seconds)
    (142/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.651661337 seconds)
    (143/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.339939465 seconds)
    (144/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.307044492 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.047550613 seconds)
    (146/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.34801548 seconds)
    (147/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.753016663 seconds)
    (148/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.832245697 seconds)
    (149/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.905530803 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.644341817 seconds)
    (151/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.334569576 seconds)
    (152/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.342563692 seconds)
    (153/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.316765548 seconds)
    (154/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.315189205 seconds)
    (155/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.309820284 seconds)
    (156/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.309895371 seconds)
    (157/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.329155394 seconds)
    (158/286) benchmarking ("sort", Float32, false)...
    done (took 2.319977044 seconds)
    (159/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.16796913 seconds)
    (160/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.312412982 seconds)
    (161/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.366425505 seconds)
    (162/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.308739761 seconds)
    (163/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.464960878 seconds)
    (164/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.308112289 seconds)
    (165/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.3274907 seconds)
    (166/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.370485455 seconds)
    (167/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.322233172 seconds)
    (168/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.322615565 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.922338922 seconds)
    (170/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.334985318 seconds)
    (171/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.659924829 seconds)
    (172/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.324736007 seconds)
    (173/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.315845005 seconds)
    (174/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.313300279 seconds)
    (175/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.525539527 seconds)
    (176/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.340882091 seconds)
    (177/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.646455267 seconds)
    (178/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.353193087 seconds)
    (179/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.30798495 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.726656049 seconds)
    (181/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.077770207 seconds)
    (182/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.363274577 seconds)
    (183/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.367569276 seconds)
    (184/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.438725574 seconds)
    (185/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.404848282 seconds)
    (186/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.353809065 seconds)
    (187/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.341997075 seconds)
    (188/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.353264185 seconds)
    (189/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.349270852 seconds)
    (190/286) benchmarking ("sort", Bool, true)...
    done (took 2.321659242 seconds)
    (191/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.381591519 seconds)
    (192/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.322228637 seconds)
    (193/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.054518513 seconds)
    (194/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.315304926 seconds)
    (195/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.3248331 seconds)
    (196/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.321161801 seconds)
    (197/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.534529014 seconds)
    (198/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.334794646 seconds)
    (199/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.316340114 seconds)
    (200/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.347202942 seconds)
    (201/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.467891672 seconds)
    (202/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.408444772 seconds)
    (203/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.422448512 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.70693109 seconds)
    (205/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.385402649 seconds)
    (206/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.140015315 seconds)
    (207/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.379740224 seconds)
    (208/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.316576123 seconds)
    (209/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.445956665 seconds)
    (210/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.322819778 seconds)
    (211/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.384610755 seconds)
    (212/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.325496882 seconds)
    (213/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.34443321 seconds)
    (214/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.311630627 seconds)
    (215/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.325906434 seconds)
    (216/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.326609047 seconds)
    (217/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.320445845 seconds)
    (218/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.312133875 seconds)
    (219/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.343351768 seconds)
    (220/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.50028044 seconds)
    (221/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.311460576 seconds)
    (222/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.412281661 seconds)
    (223/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.351176019 seconds)
    (224/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.529314801 seconds)
    (225/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.44535092 seconds)
    (226/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.897665968 seconds)
    (227/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.363682738 seconds)
    (228/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.452721586 seconds)
    (229/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.679673182 seconds)
    (230/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.315335512 seconds)
    (231/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.330844778 seconds)
    (232/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.323861499 seconds)
    (233/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.353072165 seconds)
    (234/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.313077988 seconds)
    (235/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.71292202 seconds)
    (236/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.390136045 seconds)
    (237/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.314149642 seconds)
    (238/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.228482439 seconds)
    (239/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.537557844 seconds)
    (240/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.364178305 seconds)
    (241/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.431077392 seconds)
    (242/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.839032374 seconds)
    (243/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.346624211 seconds)
    (244/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.145926839 seconds)
    (245/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.360748368 seconds)
    (246/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.151736043 seconds)
    (247/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.354091033 seconds)
    (248/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.351595634 seconds)
    (249/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.356881782 seconds)
    (250/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.329551937 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.933275041 seconds)
    (252/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.065341945 seconds)
    (253/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.335078029 seconds)
    (254/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.807075629 seconds)
    (255/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.315628243 seconds)
    (256/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.368089231 seconds)
    (257/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.410581621 seconds)
    (258/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.438256594 seconds)
    (259/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.337770334 seconds)
    (260/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.31856468 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.411062439 seconds)
    (262/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.315843593 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.43858458 seconds)
    (264/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.32209315 seconds)
    (265/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.19087515 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.326903222 seconds)
    (267/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.354416371 seconds)
    (268/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.906593116 seconds)
    (269/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.313786797 seconds)
    (270/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.336588128 seconds)
    (271/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.200854616 seconds)
    (272/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.331482544 seconds)
    (273/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.23163443 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.389677042 seconds)
    (275/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.272727736 seconds)
    (276/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.573919074 seconds)
    (277/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.334266383 seconds)
    (278/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.454913976 seconds)
    (279/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.651789708 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.351981931 seconds)
    (281/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.137616293 seconds)
    (282/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.327334205 seconds)
    (283/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.382365166 seconds)
    (284/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.252086316 seconds)
    (285/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.328735642 seconds)
    (286/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.816424007 seconds)
  done (took 561.727557686 seconds)
done (took 562.961161571 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.363065692 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.371835085 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.343144492 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.363408147 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.452941488 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.518296325 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.351542251 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.344059258 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.390925424 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.391489839 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.340262085 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.516054254 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.342433177 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.341602547 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.342040754 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.369555974 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.33460968 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.343769369 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.357581735 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.35175335 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.356199254 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.340453027 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.392717789 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.51763777 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.347777116 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.346551761 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.345188625 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.361116289 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.453846571 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.345025639 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.34555408 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.354759503 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.336547259 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.344896737 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.338976982 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.360857117 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.353121874 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.353715739 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.346966555 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.374821606 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.340444712 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.341676853 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.343441399 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.345710283 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.344467866 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.348042221 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.344187934 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.35105576 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.372544909 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.372584313 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.332651594 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.358087259 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.347226489 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.346079756 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.355742546 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.343786338 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.349101464 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.376585051 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.363528153 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.378203453 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.347088948 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.350311301 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.348044658 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.359667941 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.351379926 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.336607715 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.339987078 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.349798161 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.343960302 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.350829239 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.338175919 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.351821397 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.347250748 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.358758662 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.376389364 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.348564938 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.3416845 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.346349123 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.353318504 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.344017177 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.355247994 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.376094612 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.35340852 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.347519 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.373798467 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.523683661 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.357356179 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.346223895 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.356727369 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.365324648 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.353939476 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.356641433 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.350918766 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.344214686 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.357373723 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.350920801 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.349391672 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.349379463 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.352709047 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.358866248 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.345450057 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380224044 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.345086723 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.345647077 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.347565374 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.360614481 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.344650426 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.347874141 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.370798948 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.395304462 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.350296155 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.341800243 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.349869679 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.381941507 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.358312282 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.352983485 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.34430894 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.339561459 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.337575481 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.362684368 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.350998685 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.347466511 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380832419 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.352193622 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.347278359 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.336896611 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.351183813 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377800199 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.468549963 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.360898198 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.37938664 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.347526799 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.353986017 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.380513197 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381709234 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.381584061 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.35427262 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.38284937 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.365006256 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.348302175 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.361022595 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.362527406 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.351918299 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.354820968 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.347138729 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.384821648 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377955519 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.379314032 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.3717721 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.471158404 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.348934357 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.344433104 seconds)
done (took 224.329561225 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.408728695 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.345654307 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.438322663 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.346954521 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.444835829 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.445616863 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.345171885 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.345124961 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.34428938 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.723847489 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.345974564 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.345414533 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.344673292 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.344145771 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.430215657 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.34881765 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.345872059 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.685528276 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.348268408 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.418082098 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.346086213 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.3467344 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.348221697 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.756799812 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.346710363 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.341713544 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.418510056 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.348723935 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.692100138 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.342998212 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.344847509 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.696800421 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.437243835 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.366513087 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.357659116 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.355273323 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.447282936 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.368216133 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.430020332 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.429558691 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.44022158 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.386571588 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.343003935 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.345970458 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.350376857 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.349637519 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.346441196 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.376279213 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.346311705 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.348084623 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.686369399 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.360554047 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.358152424 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.348194023 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.347260904 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.370656051 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.348202944 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.349379901 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.440249185 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.349527274 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.413218056 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.757971821 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.728352884 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.352197113 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.346139105 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.349113086 seconds)
  done (took 105.466247856 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.417794559 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.424603116 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.461176592 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.367303304 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.400948435 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.466168176 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.367913983 seconds)
  done (took 11.168393542 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.355884468 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.35391917 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.401527802 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.400084628 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.351873244 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.563806755 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.352362358 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.361712907 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.349018592 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.427193894 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.353955662 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.353235437 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.360159713 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.347431995 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.400460396 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.361981198 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.465268637 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.352395112 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.352512407 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.503279636 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.351082015 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.359713268 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.424437491 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.363995919 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.353413496 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.358623668 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.270538772 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.353553454 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.350863544 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.354162697 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.352359835 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.453024519 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.355413625 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.350556715 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.350522561 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.511797855 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.353715755 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.352067059 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.354491734 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.353659005 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.354840889 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.353900018 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.354566295 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.352166717 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.35416096 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.377525796 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.354867797 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.354591451 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.354304723 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.355202356 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.428666877 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.35514235 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.352513012 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.352480284 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.431660112 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.362624289 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.356872635 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.354164904 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.356751983 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.353419452 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.505561297 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.402563108 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.354023567 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.405089352 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.356873799 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.357011505 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.355225549 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.356375311 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.445679634 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.357154643 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.405123142 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.355308819 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.575413724 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.378573385 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.35821609 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.359581942 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.357970316 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.356879057 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.351769319 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.36254929 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.354438183 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.356990609 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.36068323 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.354665423 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.356182367 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.540128067 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.510918238 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.355695561 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.370444613 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.362830825 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.35500661 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.431803477 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.357849798 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.354665586 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.40936094 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.470250481 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.433088862 seconds)
  done (took 140.124502875 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.361619496 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.364603251 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.360062026 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.378399652 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.357788143 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.357052092 seconds)
  done (took 9.448016749 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.359802876 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.360183659 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.358674619 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.358086158 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.35871851 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.359886921 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.359828894 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.359069053 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.363271238 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.360155517 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.359668393 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.362373812 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.361052901 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.361154663 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.358760104 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.35971787 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.359440721 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.357831554 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.35957109 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.359546762 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.356247333 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.359309152 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.360315358 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.361030322 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.364509361 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.360638886 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.36572851 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.36087108 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.360032693 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.367043297 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.378456923 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.362041582 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.362127526 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.367435756 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.363953263 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.363038847 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.364764542 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.362152024 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.360601077 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.361943178 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.36446566 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.361555192 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.362195509 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.364527957 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.363902842 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.365158894 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.368585143 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.369251449 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.362022988 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.363177502 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.363698075 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.361549589 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.362584362 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.365135745 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.363849081 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.38270389 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.3677444 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.362414172 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.36352351 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.363291033 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.364204464 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.363264174 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.363087167 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.367925638 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.362032386 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.364589264 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.363983727 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.365027535 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.362634327 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.363556446 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.365713147 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.36175858 seconds)
  done (took 100.399665752 seconds)
done (took 367.86375286 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.784142597 seconds)
  done (took 4.056988715 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.433951395 seconds)
  done (took 3.709128317 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.117393291 seconds)
  done (took 22.399505323 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.412783747 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.378337679 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.376452109 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.361869216 seconds)
  done (took 10.803133134 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.597896369 seconds)
  done (took 3.872597371 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.356255378 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.371636086 seconds)
  done (took 6.004409104 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.662772763 seconds)
  done (took 3.937795256 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.767071199 seconds)
  done (took 4.048907585 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.362288771 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.374522761 seconds)
  done (took 6.02073759 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.350205438 seconds)
  done (took 3.624740742 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.310543945 seconds)
  done (took 16.587482271 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.365596662 seconds)
  done (took 3.642982437 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.379777469 seconds)
  done (took 3.654520959 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.870530154 seconds)
  done (took 6.145595459 seconds)
done (took 99.781810419 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.35740087 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.358467874 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.358797994 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.356023951 seconds)
  done (took 10.704794786 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.397892419 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.398389592 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.399831543 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.41114033 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.402311045 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.40004061 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.390371795 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.389906007 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.409663931 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.402365657 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.401110431 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.401610953 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.399528633 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.412319349 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.40322875 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.401041811 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.410251965 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.401507795 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.392090599 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.403625877 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.368221797 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.410711409 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.402507286 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.367840841 seconds)
  done (took 34.853078374 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.862590495 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.43640799 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.519540815 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.418899148 seconds)
  done (took 7.513413704 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.418680891 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.41944442 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.43309255 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.470425263 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.497317853 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.431474083 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.394329468 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.388397278 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.37490809 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.421702442 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.498995499 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.436923367 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.513297238 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.36755395 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.54818693 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.368904951 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.368300442 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.422562852 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.470685576 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.484855895 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.367481441 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.41942407 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.422951785 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.436603687 seconds)
  done (took 35.654292572 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.367693758 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.386348512 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.36834494 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.366715834 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.376989756 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.367815334 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.368679226 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.369157615 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.368154669 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.374384769 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.366800357 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.379468724 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.367470282 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.368590371 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.375128538 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.36950412 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.374656533 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.368254743 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.368575531 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.375285268 seconds)
  done (took 28.706511138 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.362319479 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.361221218 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.713109577 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.618003273 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.361407462 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.360477611 seconds)
  done (took 14.056548985 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.437287569 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.590386805 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.367813628 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.717769768 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.795757587 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.370840702 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.369997893 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.613396329 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.927315478 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.906835328 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.426831837 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.437590046 seconds)
  done (took 20.242182127 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.370756129 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.367424747 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.369582791 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.382493193 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.423577483 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.390445686 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.376626304 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.363522982 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.427632916 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.443656223 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.39022912 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.424941844 seconds)
  done (took 22.014150618 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452336207 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.364276337 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.381933064 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391725787 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364433447 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.578316559 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.406029162 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.074839814 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.387973135 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64041042 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376963462 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45522151 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.622129701 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379795941 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.370216821 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.362732542 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.59329407 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860991891 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367775917 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36510899 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408435891 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.367084435 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38542195 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.582574348 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.368869302 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366362482 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.629579737 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.367132515 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.650746953 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.382874595 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378570205 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368428866 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64248166 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027548396 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483732638 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.58156831 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380122793 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.369993944 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.354845706 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.368324963 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392027813 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.369806346 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380809186 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368542079 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.368529725 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367956478 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088911405 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.394381112 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.36596993 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.368053846 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.625770359 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469305122 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.373410175 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.368632419 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431072254 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369156297 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.373503484 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46675358 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938986356 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367850939 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371640312 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.374166391 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.382594615 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372664302 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987473797 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.376980224 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.373688392 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.374381836 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369292388 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.369990514 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386053141 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370013544 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.395384985 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370048404 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070205247 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.372596509 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390360275 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933266687 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385904388 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.375231725 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.599849411 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371587132 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370562686 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.36993515 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.371501834 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089386954 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379568773 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.357469019 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392455963 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.105419996 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.607447002 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391643992 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395118365 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.594586218 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.357647754 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373589335 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.377609261 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374260164 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396429678 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.086946474 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392024673 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.376943152 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629319559 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.584749572 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373850732 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.362118803 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.856323719 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391709472 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.390919392 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.37052192 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.59223915 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.957658018 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.388459449 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373240202 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392355601 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.373660499 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132071147 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37479666 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.47787937 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.373436711 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663356216 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.177756146 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375437129 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441713595 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377970583 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.373784745 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376009642 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376660634 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.375659129 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.579936579 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399141252 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.388005855 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.373530574 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37548584 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.372421689 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374769444 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.374912903 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.599685774 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379205821 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655718405 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375963228 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375190702 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375357041 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.598166546 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.378509722 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.713924393 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.636414811 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380075992 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.384372311 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.392033422 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394771103 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475508752 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398012581 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.376239813 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.63615404 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.381811307 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.381136086 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375527944 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.378997755 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383457515 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.382663641 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380583729 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.960903508 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355903153 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.379175694 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.265508199 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.391120497 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446550805 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.384076338 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.594006722 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.375509662 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37881318 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.383613618 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.375075405 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.602167731 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.387154233 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.377267148 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.457716351 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.857358175 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.981641879 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391412241 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.378910756 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.3745417 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.375819905 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379461261 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378399039 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.379511144 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.593254354 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.393969218 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393883324 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.966988021 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381429836 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.378347486 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.384409682 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.391216768 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.386370393 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380005469 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.381244604 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38077254 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383558378 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.394540422 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524465651 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.394337398 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.377702922 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.896893206 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.385518417 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.379383867 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379140147 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413500355 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.380699468 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.191636299 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.640409566 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390135197 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639155752 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381378241 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.396297376 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.380175562 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392042221 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387883004 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.402939744 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40788739 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.392174181 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.379992712 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383158293 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946332119 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112495921 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917650555 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384863739 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.39135099 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.384016218 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.100362133 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400605067 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38063637 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617293635 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.114355712 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399549094 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865081084 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.410043658 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.142030443 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.642204177 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.612411858 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38256072 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.397253269 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.644646834 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.595892705 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418199948 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388608522 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384764729 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.36700229 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942979495 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400549696 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.462113806 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.106222517 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414853437 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.384711448 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.45475848 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.385310569 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795564883 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.403596241 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382799785 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393876978 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.385970717 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.197179101 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.384701645 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383555879 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012374288 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385725874 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.868253805 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402298781 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.602795009 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.396966637 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.38892245 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.396102637 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.382312561 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.659265108 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.642952435 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386327352 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.38897453 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92661046 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.243853479 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.391771635 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385020636 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.143541078 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387923084 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.672306835 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.388712394 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.396314428 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386716115 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.38487261 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384718257 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.382865987 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.38833425 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362726979 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883612385 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.389872583 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40953347 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387391957 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.234288902 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.641788334 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.399810947 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.972110994 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.612484158 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399846951 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40987372 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.389400079 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388324577 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.373882595 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.385818654 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.621903975 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421524037 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.610486118 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.38727002 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.371660883 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.386393119 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.600289911 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.386937177 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386858209 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632105668 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.385175107 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.392953353 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112243092 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414516876 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.387079982 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390189889 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.389560003 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409714739 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458497507 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607106732 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.399312852 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.398253234 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801126169 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408468041 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391894636 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.403767804 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4836599 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391797433 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.40010571 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.162566168 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.980357872 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138305146 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.987266627 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.652618805 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.392787654 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391476242 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389793904 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539125738 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389307788 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663079019 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390275201 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.406949479 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413167083 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391323985 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395714349 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604727313 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665046293 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389735803 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392748568 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393992225 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.388667861 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.400724518 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.602775016 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894836775 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953565184 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392707186 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.401988243 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.114750786 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6841481 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389606485 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391552037 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389591581 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.398084671 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.417848504 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.39761058 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401962221 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537499761 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.64993692 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063584168 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.419913442 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.418384845 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.165191486 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392817474 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.6482495 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39007752 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.615543774 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.986612106 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.099541554 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.658054768 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463319517 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611236255 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.39168032 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540662687 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.401778219 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.393235051 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394621801 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.238335551 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.389137168 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.403540818 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990758718 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.656148024 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.396582717 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.402190289 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417570031 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.402635278 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.615802786 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.131144031 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.617985858 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.403413637 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.401383168 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39426931 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.990693157 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656230273 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396167585 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.399746195 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.638804385 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.39460265 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419355237 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.846445671 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.389942878 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956374486 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.367552526 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416315196 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392805602 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.12591612 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993459202 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.395160102 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916216758 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397450771 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406167926 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672948457 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.400498015 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.405804881 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675837267 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.399785256 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.397959934 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620207486 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.986960552 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165328564 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.402306313 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427025817 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.397520202 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396501625 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456147996 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397820691 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404290931 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.826565309 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.415628597 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397485841 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.409451608 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.395044031 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406618861 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.397569813 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396102781 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.401952064 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.397847821 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.387620844 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.410791527 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497412889 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964306967 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417060287 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.073185461 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.727157916 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.6534976 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399682703 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.386688604 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.402695602 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396093791 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398790259 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397360915 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396894233 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964084232 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.401351234 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.411446057 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.402194235 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.614340015 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609427248 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.404479529 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.621554198 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404047043 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41729667 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.385324235 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39878266 seconds)
  done (took 978.279517336 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.41582766 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.415243392 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.414245171 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.406765699 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.429609889 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.440545381 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.459790595 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.417720318 seconds)
  done (took 20.712237563 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.40454279 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.410518913 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.399413136 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.408709628 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.398866246 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.876862158 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.427890456 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.40760656 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.409102742 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.413879176 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.413611122 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.092467395 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.425165897 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.399479534 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.396159055 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.408907245 seconds)
  done (took 33.013466804 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.341688307 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.538322137 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.294066502 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.441463849 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.450024589 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.408753262 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.630129605 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.421854055 seconds)
  done (took 26.842326294 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.409727605 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.411162035 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.411563024 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.410906538 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.413751393 seconds)
  done (took 8.371954745 seconds)
done (took 1242.239095062 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.405419883 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.407778272 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.404672579 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.406293752 seconds)
  done (took 6.938548965 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.388108308 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.389162408 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.390860317 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.405722273 seconds)
  done (took 9.888383789 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.119748848 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.053567625 seconds)
  done (took 5.489036937 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.405256052 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.165678048 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.139834817 seconds)
  done (took 8.027772688 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.704883015 seconds)
  done (took 3.020146142 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.808677689 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.76803442 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.597567678 seconds)
  done (took 6.491170145 seconds)
done (took 41.170321851 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.412713322 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.650026554 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.558539806 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.404761112 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.564513063 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.558472775 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.142405095 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.400300075 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.42516431 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.405670698 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.406788841 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.565534909 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.125444164 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.649637993 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.126711552 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.649964947 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.565899465 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.405318108 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.407801395 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.401787817 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.14396452 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.409041922 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.403954296 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.415130601 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.567299715 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.547250084 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.403361723 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.6522174 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.402247456 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.403511555 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.549733595 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.409288499 seconds)
  done (took 83.451706312 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.401328403 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.420294821 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.415117103 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.402180845 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.402906263 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.412660996 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.406103229 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.402572537 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.402908481 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.401942489 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.403393711 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.405786653 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.403822583 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.418037377 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.405630126 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.416264422 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.404867121 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.420879862 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.421438085 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.420099165 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.405409348 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.405204736 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.420469687 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.403811956 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.411799433 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.414040514 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.404711016 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.432303891 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.403732318 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.419132298 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.414351337 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.404898679 seconds)
  done (took 78.449142973 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.416935292 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.404206174 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.406317023 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.404017249 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.422513614 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.404891534 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.408522313 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.418097986 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.408550717 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.407787912 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.405478072 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.406430932 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.406491222 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.40699939 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.407259001 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.405679243 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.421096408 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.405766886 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.423432871 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.419036327 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.407202295 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.412068455 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.411611393 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.413833032 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.417790641 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.406921579 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.410139723 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.407139825 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.406065122 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.429995489 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.409129604 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.407302647 seconds)
  done (took 78.468160139 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.610853638 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.414464673 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.414670148 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.351856202 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.41560045 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.414274077 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.40985927 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.605584405 seconds)
  done (took 14.958542295 seconds)
done (took 256.643713608 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.408198022 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.409106195 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.617302333 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.437539662 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.414288413 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.437073803 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.437237667 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.631885537 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.406300498 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.652355823 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.429491973 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.432843427 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.421543875 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.434201347 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.686869714 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.561745474 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.336235432 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.409526485 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.751203784 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.427007222 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.70147006 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.409985744 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.70214927 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.374389518 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.439040036 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.410673744 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.425443418 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.32648335 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.453578629 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.754895058 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.427238193 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.395994542 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.499522591 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.514333592 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.628125539 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.570912228 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.410489724 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.515304508 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.634567688 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.411423988 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.424561162 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.200694825 seconds)
  done (took 84.696145027 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.416534236 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.536471748 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.418174295 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.419297962 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.419301073 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.53862021 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.516482902 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.419812208 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.418548463 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.417226384 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.41869696 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.419971719 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.418828923 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.419247861 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.41877297 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.419662717 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.417622073 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.421497093 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.422120439 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.465235881 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.543640443 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.444330591 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.413845136 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.418849159 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.526170789 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.557049543 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.419334905 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.415089125 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.464897364 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.421445318 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.422778883 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.467057262 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.420705537 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.422428381 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.535480307 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.521288618 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.442134709 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.418320908 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.538297951 seconds)
  done (took 57.902058637 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.421278714 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.669456624 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.981734954 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.427702167 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.420921201 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.425591796 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.500078333 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.42272094 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.425351262 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.425456859 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.574062064 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.424608809 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.455669175 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.012261007 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.425903313 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.423910182 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.423157256 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.422225395 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.676964842 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.430913018 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.520961768 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.424367715 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.501500027 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.431842637 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.44657022 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.423079403 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.427534411 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.007318716 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.426509293 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.576832054 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.217097166 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.500459944 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.9450412 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.005172517 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.221821936 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.429827877 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.425637955 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.582454933 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.426277024 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.424178176 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.500921861 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.425134519 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.993716934 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.106801352 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.444655594 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.424480039 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.030456812 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.584218384 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.667327705 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.43258226 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.018294329 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.431553071 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.427783063 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.426341247 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.669110643 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.431481257 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.425722833 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.038499704 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.452348857 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.502727894 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.427191746 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.427734564 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.686695325 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.424980006 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.673383277 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.428406231 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.433903228 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.447698419 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.994926094 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.429390503 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.129450832 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.44598957 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.426958471 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.578294546 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.674111418 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.063388256 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.433603061 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.691160925 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.962329395 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.502749397 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.436226324 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.99938201 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.507125923 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.433818944 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.43152166 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.429186962 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.427642179 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.478302052 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.502217974 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.06779208 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.123188824 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.069493699 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.524590822 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.4447947 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.427266773 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.043246991 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.449417603 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.428011197 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.992951036 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.135285262 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.447546595 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.434985762 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.135738659 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.451071242 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.506257847 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.438564938 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.005395836 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.432538659 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.478173643 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.429259374 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.434098972 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.452736799 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.506728546 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.437264903 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.431166334 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.099073129 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.60602642 seconds)
  done (took 188.881072846 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.423846016 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.442293716 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.422807807 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.44251181 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.420960345 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.430439072 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.42285121 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.422280957 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.427623749 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.421602259 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.424168336 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.42385309 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.420927424 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.425567529 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.43344449 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.430242664 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.422332135 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.424542514 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.421313168 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.424233046 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.421329325 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.438802935 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.423305758 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.423322698 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.422502919 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.425973758 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.430849192 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.425250616 seconds)
  done (took 65.276042635 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.431922843 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.986234807 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.433454882 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.559564416 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.457116176 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.428687852 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.560797222 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.488642568 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.436120007 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.429488796 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.429988324 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.730109252 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.434560942 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.941168263 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.626475108 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.564810489 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.942072261 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.453799745 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.433878784 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.430744345 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.564628521 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.445921032 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.734697135 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.99946345 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.438604085 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.989388711 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.423720814 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.434561519 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.431142529 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.992855741 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.432341452 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.73418177 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.509446358 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.495197176 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.000581608 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.945202684 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.957877732 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.582214202 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.433196812 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.43184679 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.43255753 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.423768705 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.992022902 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.43648541 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.433001007 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.989631708 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.453349575 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.436045362 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.440235952 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.432391426 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.492209102 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.494391587 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.738126226 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.999602521 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.510629505 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.449730569 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.565274957 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.836660483 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.437104248 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.942993582 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.441188737 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.998431828 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.454976035 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.425537572 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.435104081 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.442297424 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.584651975 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.566948246 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.945138881 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.451268732 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.944608212 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.603029762 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.434291837 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.434865812 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.438098422 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.99937122 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.946686226 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.602768693 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.570806853 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.631445455 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.43170886 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.433859192 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.426278214 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.512208426 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.43554603 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.001345444 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.963726692 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.456535495 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.438549468 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.439718363 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.437849364 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.610802832 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.022064868 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.513547094 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.942446304 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.757364054 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.740755231 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.439555908 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.495597914 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.458644647 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.741827637 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.440636053 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.494073522 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.924484433 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.742978523 seconds)
  done (took 170.105690677 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.676071148 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.463898032 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.529962965 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.602403315 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.034302781 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.018153198 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.43162663 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.557994809 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.549872059 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.696352274 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.445448525 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.526853728 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.651024472 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.512244849 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.180858132 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.50745614 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.534771746 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.585448763 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.578911949 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.43523167 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.093884205 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.729653913 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.626474837 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.455106097 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.540863857 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.252455652 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.02616822 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.014312778 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.61028829 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.45119961 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.98029571 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.434823145 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.373269381 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.099834541 seconds)
  done (took 66.55200183 seconds)
done (took 634.734158788 seconds)
SAVING RESULT...
DONE!
