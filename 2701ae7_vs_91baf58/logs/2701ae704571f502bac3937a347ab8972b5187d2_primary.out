cset: moving following pidspec: 28752
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.638693521 seconds)
loading group "string"... done (took 0.538293284 seconds)
loading group "linalg"... done (took 9.683481687 seconds)
loading group "parallel"... done (took 0.175844559 seconds)
loading group "find"... done (took 4.439757706 seconds)
loading group "tuple"... done (took 2.171908965 seconds)
loading group "dates"... done (took 1.442544349 seconds)
loading group "micro"... done (took 0.206115529 seconds)
loading group "io"... done (took 0.529009646 seconds)
loading group "scalar"... done (took 60.115554513 seconds)
loading group "sparse"... done (took 14.037266703 seconds)
loading group "broadcast"... done (took 1.765702272 seconds)
loading group "union"... done (took 10.722356498 seconds)
loading group "simd"... done (took 3.605379918 seconds)
loading group "random"... done (took 13.513063056 seconds)
loading group "problem"... done (took 2.256699883 seconds)
loading group "array"... done (took 24.682004194 seconds)
loading group "misc"... done (took 1.198582986 seconds)
loading group "sort"... done (took 3.744711399 seconds)
loading group "collection"... done (took 21.968855901 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.693737364 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.146376768 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.257102341 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.209675371 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.281242276 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.16045188 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158921794 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.17375066 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.685579894 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.214068042 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.13769978 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.421471517 seconds)
done (took 6.309506267 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.265527877 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.244490594 seconds)
    (2/2) benchmarking "String"...
    done (took 0.195124337 seconds)
  done (took 1.151269041 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077457295 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.158628337 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.109482638 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.095181419 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095329793 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.11114036 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095011123 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110486236 seconds)
  done (took 1.493636581 seconds)
done (took 3.700562555 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.523668019 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.888051161 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.514122949 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.183920486 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.311553617 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.298925324 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.269182434 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.221691488 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.092923769 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.088109481 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.177208944 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.434234254 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.40421079 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.951708738 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.072844583 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.096640516 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.155275467 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.781830194 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080838219 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.125630538 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.530250881 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.221525271 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116044377 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.108750204 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.187472837 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135923315 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.144638686 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102645222 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.671190466 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.133638479 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.221008687 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.08522281 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.14174387 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.163771367 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.213721999 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.111754065 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.667513105 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.201354172 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097748742 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101645697 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.674123573 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.119743585 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.206464672 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106788755 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.071764888 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.165274849 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.118900082 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.080491953 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09561327 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.104129313 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.167496968 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.43980805 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107585776 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.193591654 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.094357034 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.683995075 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098166644 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.277746048 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.128003437 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.097372183 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.092840802 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089010431 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.162607533 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.09588727 seconds)
  done (took 20.254689377 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.169296352 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.187667165 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.079183278 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.159581257 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.12186662 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100506315 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.087154233 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.08035676 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.128934377 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177402771 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.143761223 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.193277122 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.077516394 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091869151 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.171090866 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.230575845 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.126066827 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105134346 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.091108657 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.11064126 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123383821 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113684401 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.09309195 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092593465 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.172156536 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203663994 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109499084 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123753093 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091235396 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096471276 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144026899 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145188568 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.0938432 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.090117947 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.193024042 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.110639226 seconds)
  done (took 5.364250832 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.245825046 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.107678345 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.249668657 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.196106862 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.151389989 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.179517129 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.176424112 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.301670085 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.238182062 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.191897524 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.181848341 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132663607 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.096569817 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079970681 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081016566 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096678903 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.375890826 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.138765019 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.192212428 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.187561998 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097569968 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.100516718 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.368039902 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102334453 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.087288233 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.111993911 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067697101 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.227705793 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09566201 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.043388953 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084628033 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.12435988 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116259414 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.220254983 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.115524905 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121359267 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.113921603 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.087286059 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.216221319 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.120077496 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080267228 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.108407862 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.101086241 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119985456 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.130149056 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.093393645 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.126801747 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.220276559 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.088245271 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130818758 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 3.586227026 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199725958 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.166272946 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.087451997 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.287943535 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.12571026 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102673873 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.112116708 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.367443573 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133484571 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085768207 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081243011 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.115453605 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079666573 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.459447793 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.129192593 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.659575919 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.086121119 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.161378661 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098464316 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.120365962 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087418457 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.106010949 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.107878235 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084993967 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.100600275 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.087717113 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079403761 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.105075776 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081499496 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.089694376 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.125923711 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086270126 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.09730467 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.14741911 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.098392396 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.125506833 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110937251 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.107179112 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.087335469 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128907826 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08382654 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.090377479 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.18783244 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098103419 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.127307354 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114863688 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129636132 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.105638543 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.090757305 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.086408882 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122146002 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101910713 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128423435 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.101651018 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081376498 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101748104 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.081257233 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082886571 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160993229 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.088539176 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081466434 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.105537598 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.094468773 seconds)
  done (took 27.023521005 seconds)
done (took 53.358430246 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.429923232 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.084341273 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083152909 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104577822 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084926041 seconds)
  done (took 1.580461551 seconds)
done (took 2.352084757 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.319751821 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.207733283 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088243328 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.196246905 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088114159 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.203566139 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.189949156 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.101295399 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.21616914 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.08559972 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.198679479 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088008965 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.105798253 seconds)
  done (took 2.884467768 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103761672 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10566697 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.10497993 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120611361 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084678003 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100983144 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118888853 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108560988 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102921759 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.116037821 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086066677 seconds)
  done (took 1.92452179 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099514688 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103042928 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093020155 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11995737 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085168685 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097652185 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116025626 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106304787 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099656108 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.115007164 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084707236 seconds)
  done (took 1.894991021 seconds)
done (took 7.47255936 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.224213398 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.942863198 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.192146496 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.242879823 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.357078136 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.298825901 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.602499108 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.202217991 seconds)
  done (took 15.967911423 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.125125539 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.091682531 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.188676361 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.09793279 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.119034738 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097484418 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.098535986 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.110661853 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.092869911 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.09363895 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.116810431 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.09710169 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.094172512 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.092001396 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.115439777 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.09590605 seconds)
  done (took 2.562914644 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.142933398 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.144220795 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.097376477 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.100721215 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.115034144 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.100088909 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.101222968 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.117051002 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.094787405 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095811772 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.120535263 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.098672935 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.099380881 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.111028019 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.099506344 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.114837411 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.111520984 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.09812428 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.112910863 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.116825609 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.101182109 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095711277 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.114528135 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.100599777 seconds)
  done (took 3.46522905 seconds)
done (took 22.772656426 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.151349657 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.103797895 seconds)
  done (took 1.035345018 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.164892551 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.182959784 seconds)
  done (took 1.131963959 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.11273842 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092386552 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.139066103 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.104544169 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091516568 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.10931606 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116776699 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.109204489 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.091905945 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091803843 seconds)
  done (took 1.849008008 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.096351965 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095863215 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.125919477 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.169483761 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.119052259 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094856606 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.096122152 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.114306024 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.099074253 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091943955 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.114272938 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11074618 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.096204399 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.129996309 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.097141585 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.113317289 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101749814 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095574321 seconds)
  done (took 2.751440479 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.091428322 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.092997901 seconds)
  done (took 0.975017723 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.094218227 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091454727 seconds)
    (3/7) benchmarking "month"...
    done (took 0.093042812 seconds)
    (4/7) benchmarking "year"...
    done (took 0.111389793 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.091505568 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.091775916 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.109219781 seconds)
  done (took 1.472433135 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.534619094 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.24016545 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.381882224 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.075159123 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.126792556 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.452512198 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.109244766 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07427145 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.094672656 seconds)
  done (took 2.913221829 seconds)
done (took 12.916834394 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093259716 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.239148806 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.619457049 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.112540337 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.091379259 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.162570545 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.322122003 seconds)
done (took 2.436253125 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.356980576 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.170580564 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.08775886 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.091748186 seconds)
  done (took 1.498632115 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082906136 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100828733 seconds)
  done (took 0.983455376 seconds)
done (took 3.284248184 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089984852 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.090997348 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.08891009 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.142870875 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.089603504 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.088753116 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.109843813 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.089890339 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.090461979 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.109973135 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.09036029 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.089931618 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090162112 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109078203 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090079629 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.089334449 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107341975 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.090290608 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088725961 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.088366957 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105857946 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089772499 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.088346343 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.105622604 seconds)
  done (took 3.146582525 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.113939171 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091264403 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.112144931 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094705069 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.094142611 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.113218213 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.094864282 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091847524 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.11458026 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.091101288 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094936306 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.112317382 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.091524519 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.09602741 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107950576 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.095573497 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093576065 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090829369 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110378305 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.094462267 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.093423211 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110234299 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.095838078 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093529136 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.111627682 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095017498 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.091012094 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.109599451 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094659288 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.094615477 seconds)
  done (took 3.784546472 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097140272 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.086609044 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090752223 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.116723032 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088504602 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091514434 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.104474855 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091315154 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.092530354 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089384918 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.111007311 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.089367171 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.090145403 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.109069927 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091708506 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.093915132 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.117144994 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.090851628 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.089810042 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089838455 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.11101141 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.090757925 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.090024465 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.109032593 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090649896 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087183523 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.108552821 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.091494415 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090769414 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089342038 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.110992296 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.094158389 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.091199797 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.117620932 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.094840392 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090381197 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.115343444 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.0876143 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.092814034 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086864837 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.106134238 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.09118148 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.090967823 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.116132205 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.091443109 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.092137709 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.091002426 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.110502748 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.091968038 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.094011384 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.105967608 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.090824316 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.092359021 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.109906763 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.094622131 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.087638036 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090008322 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.104900494 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.092756778 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.091334741 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.105255075 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.087272792 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.094968427 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089763525 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.12564343 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.097424462 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.091387362 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.111582544 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.092080139 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.096252841 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.11118758 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.102121811 seconds)
  done (took 7.807644348 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.114764389 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099474094 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.109978994 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092934354 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091256084 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090947855 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115389731 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091560028 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091897683 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115818785 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092495527 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090941579 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109293317 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091927957 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090267681 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.110037184 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.098755878 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090957192 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.089641949 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.092685544 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091244871 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096063358 seconds)
  done (took 2.987298746 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.237299355 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096703112 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142700797 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.123690889 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109991062 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.122765366 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095176086 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096583399 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113107072 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102317576 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100204127 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113264038 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109274411 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117920923 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10212565 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101282679 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114587267 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101866818 seconds)
  done (took 2.912067206 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.103811844 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093230474 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.15732555 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094775187 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.092171316 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.112795546 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099368389 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114872114 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.112861675 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093339364 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.099807125 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11103846 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094060002 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093266534 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112476354 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.096809733 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.093780888 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110166868 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101108594 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099005169 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.116331406 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100475488 seconds)
  done (took 3.116202547 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110630258 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09284301 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.130035727 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097602362 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09090044 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.109845264 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.098949156 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093443961 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.118687128 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.0935184 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093247217 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.092815852 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.126630506 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093734238 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.097474131 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113340117 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09334629 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092398234 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111637079 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092797342 seconds)
  done (took 2.859366339 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.195906666 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128534333 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108931772 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116946764 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128338689 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109121136 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.136467004 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.1089975 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108660691 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138369393 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11151529 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108775732 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136458523 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114027171 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126432588 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117990086 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.135730479 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118443754 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109042028 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127276539 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12256595 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108767288 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134942523 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109632768 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.127052105 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110643742 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109354034 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133735184 seconds)
  done (took 4.260035203 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091789386 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092111155 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091672685 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.109688455 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091814641 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.09187086 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.090076004 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.110033178 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092668015 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091221831 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.110219596 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.091624178 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091629856 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090941273 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112484812 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091589994 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092260387 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.109170041 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091666354 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092294094 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.091278697 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109719444 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091511847 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091152882 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108483247 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.093086744 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091375738 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091609476 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109173752 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092007181 seconds)
  done (took 3.7129372 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.10292115 seconds)
    (2/2) benchmarking "in"...
    done (took 0.102129345 seconds)
  done (took 1.026304551 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099159438 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10574631 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091395449 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110099115 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099337515 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091208032 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119812861 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098898297 seconds)
  done (took 1.637875114 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.166830728 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.191228116 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.097718997 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.124589145 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.169871659 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.182369016 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13348814 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.11918127 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.093434708 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085462816 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.186502632 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083577346 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.11326593 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090153496 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091910032 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120571294 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.093320291 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103073339 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.119940975 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096359389 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096607188 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117089526 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095673566 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.102749081 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.106866617 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095484213 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097000187 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.123954353 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090405868 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.095410786 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.110995062 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093871164 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.09644184 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.116320945 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.094875618 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.190839339 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10169562 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089855439 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.113636516 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098311696 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126200098 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.112995728 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.09538176 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.093688491 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115755359 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.098457317 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.098347522 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.112049712 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.086304188 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.089787017 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.111908406 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089445808 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092662509 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093918844 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.113012263 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100438652 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.095174962 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.109603015 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089641872 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087279636 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.111082508 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.08972487 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094249123 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.11554996 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096220971 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093523218 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112695618 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094318825 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094509328 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.112210817 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094096028 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107948811 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.11359429 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.09939927 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.097720693 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.11396029 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091580421 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098997585 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.11115337 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.095624238 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.096974261 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.139766561 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096927613 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089405488 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.108268607 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.099526407 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.094581264 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.115088441 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.087011412 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102628793 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.114356081 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095417418 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.086663072 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.090577922 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.108574047 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.097179846 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.085530299 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112769493 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092275013 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.098207471 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11824794 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092046012 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094064442 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.116340428 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099644277 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092794517 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.177855023 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090230489 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.108614618 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096502167 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099925262 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087219491 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.115260054 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.092730955 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091572157 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.108446637 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.099312495 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093288277 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.114264456 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099511827 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096758428 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.114704776 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.097832477 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.09232855 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.108516269 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099534661 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101669616 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.114517941 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098042984 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.09458639 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.092471963 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.112882742 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.0983036 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.0912534 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.117764173 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090802273 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.092097241 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.11342371 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.099743244 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094281643 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.107338803 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.092757741 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.095489198 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.112190446 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098505071 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.094283608 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.108818472 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.086938172 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.094448461 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.10867499 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.095739825 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102019484 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.108617695 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097887952 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090455456 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.120887834 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.092747363 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.098853337 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096447407 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.1186164 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10025516 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.0857484 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.111017682 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.096892619 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.096367632 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.110014486 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095113887 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.092823599 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.120727638 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.088329374 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.096967991 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.105640143 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.09160046 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.099932208 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.09470462 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.116853886 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.090801006 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.132023769 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.126777033 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100135176 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092610541 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.114292625 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.099422572 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.092719694 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.117387927 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100536049 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.098117865 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.112709262 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.093944654 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100315224 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.109616489 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097503503 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093475341 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114197418 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.088204415 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.097087245 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085763733 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.118429805 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.096575202 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.097859576 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.119729977 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096619151 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093192232 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.12327601 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.091988741 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.098049439 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.107176498 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.100394107 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103419871 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.118902752 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102007438 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09572379 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110742294 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.094600848 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102603267 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.11650386 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.095460531 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094925346 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.086531625 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.107553493 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100646593 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097071338 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.10994609 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094591329 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.099271582 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115828631 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.093040116 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086138111 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.118157376 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100334358 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.08976988 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113861915 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.092326524 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092058333 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120831311 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.088011564 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090753748 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.11579551 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100246987 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.093384518 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.113446607 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.097769556 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099375046 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.095356224 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.11649113 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093081666 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102700688 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.112024721 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094512688 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.100301252 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.116960171 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.088176028 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096616313 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.113540695 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.092256552 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.090723931 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118246883 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110523542 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100304004 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091777792 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.11917911 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.10132342 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.099921978 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113082021 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.100066554 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088854422 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.107213454 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.092004276 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087716894 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.115431625 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.091853859 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.099063659 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.111236029 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093940196 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099697054 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115691008 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.093384619 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.099492996 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.124665624 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08894537 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.087768815 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111608339 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094101474 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.090915945 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.110196599 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096509413 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096348666 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.097564164 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.118027701 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.091504797 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.09260143 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.120881699 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.092391771 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.100701122 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.120014951 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102481796 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.08988803 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.119009738 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.092135457 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099572721 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.107160432 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094864714 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093294846 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112199262 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.093015632 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.092376312 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.108623306 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.088842745 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.090870113 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.098779911 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.113947189 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.099029316 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.093673853 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.113981555 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.090868261 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088803349 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.121021938 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.093010592 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.100609018 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.114299971 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.089714579 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08872721 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.119296939 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095248814 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.100066937 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.108636186 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.098049332 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101644837 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098131394 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.114857896 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.104654714 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102642946 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.120825224 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101052924 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087231296 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.111625142 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100517817 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094408299 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.117629218 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.09625882 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.087622803 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115985095 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101483985 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096932966 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.11138706 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088543526 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095831085 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.100363106 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.11833348 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098919396 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.095068507 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11540474 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090810965 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098452775 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.119280753 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.097092303 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100844314 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11332018 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099686709 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090655808 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.11940963 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.095427725 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.088738088 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.086831696 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.111985227 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101406989 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087794094 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.118123544 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.099543909 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091304819 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.112477839 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.099627191 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090965708 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118019435 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100195913 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093309394 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.124697606 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.09576329 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.092735709 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.098964061 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.120688588 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.08939582 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093192997 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.114992593 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103037271 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092528025 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.118905711 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095204831 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099486511 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.117163697 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100050736 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100411477 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.119030224 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.089303646 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.101140178 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097867997 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.117344687 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.092000092 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092633986 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.111298182 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.09443703 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.100641026 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.111746876 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104106997 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.100109761 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.112329198 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093101447 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.099776289 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113301815 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103013315 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091489915 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115788453 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.090713715 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.098839434 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.113033964 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103140318 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092307455 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.088437985 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.120476704 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.099149228 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09928148 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.117567132 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102230925 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087981797 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.108722367 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.097684477 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.091813772 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.124471539 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099561759 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093994767 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11373503 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099023121 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.096416824 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10072181 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.110043506 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.092130582 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.095293864 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117863084 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.092988593 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.089527053 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.120135373 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094097596 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097230254 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.114794231 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.090487713 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093696873 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.122231527 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.094979379 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091402126 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.111257801 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104077229 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.093959807 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.110985308 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.09014113 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100531642 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.116344743 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102396103 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.091290208 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.114776199 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.093712056 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.096834265 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102517167 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.114614957 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095121043 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.093534775 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.120559333 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101435166 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.088553248 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.112740277 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105694558 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100722864 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.117809052 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097930941 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.093663673 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.122101073 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103204976 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097904251 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.108779857 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.090482702 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.093808787 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088290224 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.118122507 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101970815 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094149211 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.113634485 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099896792 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099362872 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.118020648 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097880676 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089938734 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.122322787 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.093459886 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099389903 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.108548832 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.090820107 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097998487 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099879252 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11644841 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.096854613 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.096602175 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.119239885 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.09203271 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092921392 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.120792678 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10004274 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.100942544 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115021745 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.094993955 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.101198961 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.125989263 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.097544383 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.094879117 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122987971 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103849485 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095642545 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.115306913 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101545751 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103642068 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.09843184 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.123119394 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.093551925 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094601269 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.12461116 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.102834619 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105614151 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.117034216 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.090102397 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.100884075 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.114593897 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091715426 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.099739513 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.123714289 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103671186 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.096230704 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.112038501 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107027153 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100937125 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.117112724 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.094067533 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.093905942 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.119824224 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094738721 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099624963 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.091468212 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.124889559 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103072653 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101510968 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.126396289 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090473404 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102331114 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.120359349 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.105090129 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096633268 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.111240055 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.092459591 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098139831 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.123792854 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.102846894 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100888612 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.098773611 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.121751612 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097380534 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096905034 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.115468647 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.105393723 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102502247 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.117902621 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.099378926 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.094329277 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117264284 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099202299 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102263557 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.124234452 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.098953858 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107007788 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.122468141 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.095833115 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.094197651 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096668463 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.119876564 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.098471984 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100549417 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.11462486 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.091428381 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102105943 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.124620459 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097414152 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103914328 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.125088721 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.096134305 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098674771 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.12398437 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101731373 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098208696 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.09688091 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.120985968 seconds)
  done (took 62.434693671 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149016392 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10424286 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.118637013 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099222738 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116418742 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12234807 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098642278 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099082552 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.120382048 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108348441 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.098442668 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118898901 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113566141 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139599619 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116613185 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107196024 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118757505 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100865602 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097656736 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119241143 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114016911 seconds)
  done (took 3.24967287 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.11779394 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.112809519 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129510154 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112738994 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104351827 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.13061069 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109078566 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.129276565 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112727608 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.1059397 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.133116728 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10977077 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.127685369 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108350946 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107040199 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.128614869 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112691448 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104331754 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.132038236 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109735975 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.12809823 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.110310378 seconds)
  done (took 3.446015276 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.13069979 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103349078 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096708521 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.119264945 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.103457725 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.09862354 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.123251495 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.09973754 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107921003 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.115281873 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.091497411 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.095193052 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.096719354 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.119820515 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.094055756 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098542691 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.128213275 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102804596 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104451692 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.118922383 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091460311 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.100635822 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.09896529 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.111290778 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.105764647 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103513633 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.120272442 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104328222 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.090192421 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.122692083 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.100399416 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092318998 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089987573 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.11166317 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.09004076 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.104010562 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.122313142 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.099690328 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099832257 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089502372 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.121575554 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.104091934 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090651607 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.120290191 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.099994289 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092951029 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.122811765 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.100738681 seconds)
  done (took 5.921890822 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.130011242 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.167624094 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.341671972 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.138868745 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.136685799 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.109584514 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.124200384 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.139822237 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101533804 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.124407581 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.115628941 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.111703481 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.126038342 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107578435 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.126388747 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10461542 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105328359 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100555967 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.128775898 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101972251 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.126410963 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.105744849 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.112008963 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.132744957 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105493759 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103106402 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12228681 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10668358 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.111157993 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.128049976 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.106622155 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.127352951 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.114767065 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.102199733 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.121804288 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104620359 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.114332719 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.12446691 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.106283108 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101274549 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.125281192 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107371113 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103648439 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.135620774 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104743092 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.103364298 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.124070601 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101217775 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.111859311 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.125974925 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.1102344 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.133531245 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.105327682 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103940783 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.12773236 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.114372347 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104512673 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.122487736 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.105511473 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.112299774 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.122476402 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106391069 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.111591782 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.124954346 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.109673342 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.133486208 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.105156474 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104107205 seconds)
  done (took 9.111132557 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.13515031 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106979957 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135425427 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115973555 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106171414 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.128180036 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107906521 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.105874518 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.128736604 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113664049 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127204417 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.228544745 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.127705034 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112740008 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.128384291 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108738665 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106743517 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128303241 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108056689 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107399306 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.127742942 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116605842 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106493661 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.137424273 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119713627 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.124287538 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107902951 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107036816 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136842434 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108306249 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.118011142 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.129050992 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107268976 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.136095542 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.12258475 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.10788535 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.123656563 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109359386 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.10567549 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.128698072 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104348092 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113942997 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.1286421 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104241807 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107118763 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.129148767 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115735625 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.139141263 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113685398 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111691902 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.130250386 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115315061 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127666601 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107670336 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11613179 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146127101 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115629576 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.13651776 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108355879 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114896237 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.137380555 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.123308022 seconds)
  done (took 8.379236891 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101818893 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101322764 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099360586 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.121159271 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101949128 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.101032693 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.121174141 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101952274 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100252062 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099813662 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121829102 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102803857 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100600155 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120036375 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.101752728 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100870764 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099696629 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.120689028 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100241894 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099919219 seconds)
  done (took 3.003932255 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.111853536 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.118437418 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.123639414 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109477715 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101355797 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.127762909 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103918651 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102623239 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102193866 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.126563636 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111543841 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.130286173 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103197131 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109025751 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.131287754 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108805356 seconds)
  done (took 2.709020413 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.120785745 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118618047 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.210834448 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.105304243 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.125841542 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.110468465 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10171756 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.12916615 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.104036337 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.109096324 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.128482607 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.105723035 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103802615 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.124136987 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.104481489 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105726048 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100861515 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.129201036 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104005465 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.217194155 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.108055078 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103466196 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.127918674 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.107233558 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103695567 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.131133564 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109722936 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102350655 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.128184839 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103536157 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104815053 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.133149039 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103170456 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106597005 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.127032623 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.105853573 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103734866 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.125096807 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.106501794 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102431062 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.127109111 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106478404 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104241195 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.126375063 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.103539644 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103925872 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101116915 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.132444934 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.106594871 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104501523 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.125481392 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109763743 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107926003 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.134973698 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.111188074 seconds)
  done (took 7.298166753 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.116473227 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105354722 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.1368191 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103441257 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104540331 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.105298871 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.126735523 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105518388 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103709244 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.123845232 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10574295 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104190254 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.126432891 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106574726 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105213293 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.123979539 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.102076608 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10452073 seconds)
  done (took 2.904272603 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.110274886 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104335059 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106879591 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.124608587 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103680283 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102915836 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.124772779 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103899384 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101551225 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.123913411 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103850644 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103859249 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10228251 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.125807567 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102697048 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102436665 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.124939901 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103812513 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103313783 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.122094469 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104050411 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102795703 seconds)
  done (took 3.302681905 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.115273228 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.213766494 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.109842195 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.22422561 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.100899294 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.121916146 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.111397787 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099962107 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.140422439 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.100268338 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.099565868 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.121187279 seconds)
  done (took 2.453895235 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133791606 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141936889 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125929022 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105794123 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112446187 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130899675 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109309838 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108935189 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14006714 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118879432 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128371278 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116470817 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116197687 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138417634 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112729698 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134509425 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109600951 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108676432 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127566878 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123587203 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107262968 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138303302 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108447859 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128797054 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109562526 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11570428 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138558821 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120970618 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129343426 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11758198 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11317117 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129189093 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117990928 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119691004 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126455597 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115583097 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127989976 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124477502 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112408735 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138372627 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105364867 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133287813 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11813597 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113523057 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138480821 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109324222 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112392651 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130579491 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108698692 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151929857 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114792714 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115377173 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134686288 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116270296 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137719366 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13001818 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14125818 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116917425 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112805833 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141938115 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116367767 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135261883 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118757337 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14044414 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115231763 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116449959 seconds)
  done (took 9.006296487 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146415709 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104049221 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131450811 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120574113 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137723473 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10981241 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109822317 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130148146 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110393548 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105929702 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.174234551 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109246789 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138075258 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11932037 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108939678 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129480998 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109815496 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115849372 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128311212 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130601884 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129083333 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118639862 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116817038 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138364248 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120722126 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134680163 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109613825 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109228858 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130438816 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109648309 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1130218 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131748999 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116923378 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.127280697 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117910307 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109058455 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130429044 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11452227 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10989321 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136445483 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117566548 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144335428 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110540694 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108887503 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141825152 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10922954 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108581327 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129871481 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109603258 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105089704 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142662559 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119813247 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143384222 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117363592 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130425258 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110858192 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109682127 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131273474 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10923391 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114090514 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140290493 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108356547 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151817349 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111307911 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109040331 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139949657 seconds)
  done (took 8.972651639 seconds)
done (took 170.244583193 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.175115617 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.21657609 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.196693343 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.158442877 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.095300776 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.153160101 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.128867259 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.198947135 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.09604911 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.095007627 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094860346 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.121631303 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.165907115 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.095053477 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.119447848 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.098625591 seconds)
  done (took 3.105558747 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.18138643 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.334328876 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109222729 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.122244967 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102402727 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.100482391 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.122229205 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102715361 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099929898 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.130419702 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10194042 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09627415 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.13015227 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096543823 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.101111603 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.12321103 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109013281 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100493786 seconds)
  done (took 3.172140485 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120846849 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144192836 seconds)
  done (took 1.17329857 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.135195546 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.21836916 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.273640413 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.174077934 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121398107 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.142073825 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.153798938 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.134575605 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.181827639 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.136466475 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.11351613 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098359205 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.149175854 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.106296834 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.138430417 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.10105878 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.129231325 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.137519206 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114263878 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101897385 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.145546553 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.1048153 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.1058866 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.138382909 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.171171916 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.135269462 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104790997 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102589768 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.12569202 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115204489 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.107441145 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.141692837 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.112821218 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.181826922 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102722576 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177414024 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.129247025 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.100946092 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114834871 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.121486525 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.105176769 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.104072369 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.136315878 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.099873598 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103604051 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.129839901 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104053622 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.104048547 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.132772311 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.108906124 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.131071814 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.108661463 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.174014688 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.108668248 seconds)
  done (took 7.957394397 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.857884467 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141079697 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101005099 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.012592907 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146750399 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114745218 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.861262887 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.146946684 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253342215 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.873600888 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115874492 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.130675585 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.239424949 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.238187832 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.04394447 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.330032403 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.712051174 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114272619 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128077789 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.165152416 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109503053 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147251228 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121951904 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.442124408 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101420383 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099115341 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130349247 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108835189 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178411457 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100227419 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127061248 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170091206 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.263946123 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209492239 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122471707 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.101199673 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100338064 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.181623149 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270267498 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219258766 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180671057 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098382848 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099951538 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12991527 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120933875 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09688478 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.17766476 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.18892551 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.186873796 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106157877 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.107480747 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.133507738 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.107852441 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.177235174 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.09786424 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.326580897 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.346232097 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100418197 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107751856 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.135726778 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268102842 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100853548 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.233071745 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.148643947 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218278322 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.100579269 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81329312 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.182285444 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100644218 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.104759804 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.133659442 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10670536 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129298382 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.15937003 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.402929022 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110545063 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126438965 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101512818 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.243602538 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.100805106 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099685494 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180546858 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102035497 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131684861 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111993877 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132048434 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.163767149 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.244103143 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.13103357 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110907496 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105392628 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.135449169 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.101795496 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.232766902 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22907131 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.17461455 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.210151494 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130866278 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.177943728 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.160762466 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127084974 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.161723627 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.130356202 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111606824 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128242463 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226911102 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.134044551 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.121749623 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107385747 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.110110331 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.158779055 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104086885 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131217231 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.161738498 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.465622195 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.18191566 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.098864495 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125521394 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111484207 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180068282 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108783724 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264988608 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109857086 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.18316103 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128528832 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.099626278 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109409067 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.178958974 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10803932 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132553975 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107690093 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130193924 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.231898361 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219929457 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132783595 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243825978 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.167098461 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.128857965 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.164937692 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132363976 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.185551996 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112169862 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107228258 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124415106 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.801279581 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114907011 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108534446 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127872383 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182589284 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123493106 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102563661 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100658537 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.120381117 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.812596026 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107726284 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098026155 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.123133891 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.108314462 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.108439214 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132372345 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.106574471 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177329061 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240519834 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109140873 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.13127788 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100873275 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181244322 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.102271056 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100977035 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124699096 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102642134 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110267164 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.129405446 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102610274 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189488244 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.174242155 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.231223628 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.529750637 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.10166147 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100932727 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.257979911 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102416854 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.301235978 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110125532 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.254267331 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162406994 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120701346 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.326840392 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.183490867 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.184796537 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.102769762 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.187143812 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098486101 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.134270428 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.178540556 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102078979 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107382614 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.175736139 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.112152961 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.135350991 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.095700411 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101410282 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248875039 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098493724 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.186511927 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101917948 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129569418 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.300910304 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100762402 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138570292 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.155540935 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.129237082 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102753576 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.702177207 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.101142109 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136632956 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108763766 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.232534883 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.183462655 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109707139 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.13468587 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110276133 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.178573265 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.232350988 seconds)
  done (took 45.505172477 seconds)
done (took 61.817230141 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.27117239 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.181063263 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.276733377 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.179070415 seconds)
  done (took 1.911837293 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.277190922 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.160789507 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.255813457 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.098804951 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.263213313 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.098523331 seconds)
  done (took 2.089377121 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.176662917 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.169910261 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.148099911 seconds)
  done (took 1.433222201 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.201922168 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.221475593 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.348188016 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.240287364 seconds)
  done (took 2.036571394 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.296020888 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.119923452 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.128297116 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.237825406 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.252887541 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.211675442 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.126827349 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.178897582 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.13302432 seconds)
  done (took 2.665973213 seconds)
done (took 11.071276403 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.428411289 seconds)
    (2/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.327760114 seconds)
    (3/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.261713791 seconds)
    (4/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.182282827 seconds)
    (5/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.337075568 seconds)
    (6/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.105846133 seconds)
    (7/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.259743545 seconds)
    (8/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.134021978 seconds)
    (9/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.423237256 seconds)
    (10/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.353559998 seconds)
    (11/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.409867213 seconds)
    (12/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.220793366 seconds)
    (13/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.107780611 seconds)
    (14/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.209611567 seconds)
    (15/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.303706534 seconds)
    (16/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.135525249 seconds)
    (17/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.101514506 seconds)
    (18/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.139132145 seconds)
    (19/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.135260045 seconds)
    (20/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.223009866 seconds)
    (21/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.159306453 seconds)
    (22/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.21653696 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.139884927 seconds)
    (24/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.27317966 seconds)
    (25/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.111407584 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.120559133 seconds)
    (27/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.337714131 seconds)
    (28/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.146693392 seconds)
    (29/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.131500515 seconds)
    (30/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.28983282 seconds)
    (31/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.083999481 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.103844467 seconds)
    (33/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.106733169 seconds)
    (34/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.128322989 seconds)
    (35/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.153261168 seconds)
    (36/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.10815451 seconds)
    (37/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.213644418 seconds)
    (38/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.150459717 seconds)
    (39/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.226037978 seconds)
    (40/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.088151117 seconds)
    (41/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.134465486 seconds)
    (42/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.2241012 seconds)
    (43/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.155636207 seconds)
    (44/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.106285734 seconds)
    (45/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.10151232 seconds)
    (46/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.23859234 seconds)
    (47/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.190267009 seconds)
    (48/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.137636718 seconds)
    (49/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.191132151 seconds)
    (50/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.103914575 seconds)
    (51/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.118248604 seconds)
    (52/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.203036341 seconds)
    (53/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.234344549 seconds)
    (54/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.082444284 seconds)
    (55/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.276757236 seconds)
    (56/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.086862093 seconds)
    (57/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.117775102 seconds)
    (58/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.112265696 seconds)
    (59/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.143072724 seconds)
    (60/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.11104379 seconds)
    (61/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.214310254 seconds)
    (62/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.145916289 seconds)
    (63/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.299124573 seconds)
    (64/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.080966647 seconds)
    (65/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.187824283 seconds)
    (66/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.087498116 seconds)
    (67/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.1079859 seconds)
    (68/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.114398387 seconds)
    (69/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.139685929 seconds)
    (70/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.208840833 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.119857358 seconds)
    (72/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.111032059 seconds)
    (73/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.251908168 seconds)
    (74/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.080993811 seconds)
    (75/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.149286654 seconds)
    (76/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.232992616 seconds)
    (77/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.112849793 seconds)
    (78/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.208246581 seconds)
    (79/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.101238759 seconds)
    (80/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.15533731 seconds)
    (81/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.08267126 seconds)
    (82/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.081468938 seconds)
    (83/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.088753787 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.103810579 seconds)
    (85/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.139278042 seconds)
    (86/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.11201374 seconds)
    (87/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.121039452 seconds)
    (88/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.135387061 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.118346773 seconds)
    (90/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.084726428 seconds)
    (91/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.154082873 seconds)
    (92/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.14535676 seconds)
    (93/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.149343097 seconds)
    (94/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.163238279 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.108812105 seconds)
    (96/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.124692972 seconds)
    (97/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.080572468 seconds)
    (98/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.105325846 seconds)
    (99/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.088845169 seconds)
    (100/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.107806559 seconds)
    (101/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.141848159 seconds)
    (102/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.16897647 seconds)
    (103/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.101949941 seconds)
    (104/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.083798938 seconds)
    (105/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.127300117 seconds)
    (106/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.08455946 seconds)
    (107/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.242057785 seconds)
    (108/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.126695703 seconds)
    (109/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.112728215 seconds)
    (110/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.149344309 seconds)
    (111/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.165525592 seconds)
    (112/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.102916884 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.103153095 seconds)
    (114/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.115986328 seconds)
    (115/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.129801917 seconds)
    (116/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.096918852 seconds)
    (117/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.08160221 seconds)
    (118/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.125888738 seconds)
    (119/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.088578326 seconds)
    (120/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.084772209 seconds)
    (121/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.182685969 seconds)
    (122/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.112717376 seconds)
    (123/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.138764342 seconds)
    (124/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.081010143 seconds)
    (125/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.080776525 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.135582088 seconds)
    (127/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.105468241 seconds)
    (128/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.089162943 seconds)
    (129/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.083108257 seconds)
    (130/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.135321965 seconds)
    (131/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.111305811 seconds)
    (132/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.107676355 seconds)
    (133/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.128147151 seconds)
    (134/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.085120786 seconds)
    (135/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.196406985 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.129048657 seconds)
    (137/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.149327227 seconds)
    (138/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.151836592 seconds)
    (139/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.150025952 seconds)
    (140/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.127577979 seconds)
    (141/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.104423335 seconds)
    (142/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.154699011 seconds)
    (143/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.105107937 seconds)
    (144/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.081362865 seconds)
    (145/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.084428388 seconds)
    (146/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.112578958 seconds)
    (147/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.113783528 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.104296094 seconds)
    (149/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.088649727 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.12907092 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.104538216 seconds)
    (152/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.08302823 seconds)
    (153/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.087363461 seconds)
    (154/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.108393784 seconds)
    (155/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.085458491 seconds)
    (156/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.088317501 seconds)
    (157/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.111727613 seconds)
    (158/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.105641029 seconds)
    (159/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.089167881 seconds)
    (160/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.083362712 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.104865441 seconds)
    (162/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.089198109 seconds)
    (163/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.105591843 seconds)
    (164/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.105937167 seconds)
    (165/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.101841892 seconds)
    (166/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.107627346 seconds)
    (167/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.089165934 seconds)
    (168/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.084898047 seconds)
    (169/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.111622122 seconds)
    (170/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.080893716 seconds)
    (171/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.13521479 seconds)
    (172/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.129195088 seconds)
    (173/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.082019543 seconds)
    (174/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.082030368 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.128270946 seconds)
    (176/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.113578358 seconds)
    (177/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.102651194 seconds)
    (178/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.087601939 seconds)
    (179/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.10744814 seconds)
    (180/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.084573841 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.124688226 seconds)
    (182/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.111877875 seconds)
    (183/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.135238796 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.106357572 seconds)
    (185/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.085926514 seconds)
    (186/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.135689892 seconds)
    (187/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.089320956 seconds)
    (188/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.083111226 seconds)
    (189/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.089406249 seconds)
    (190/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.128268196 seconds)
    (191/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.116024237 seconds)
    (192/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.085972658 seconds)
  done (took 28.000431506 seconds)
done (took 28.94522698 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.22525471 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.130416188 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.112901004 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.11084364 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.23170808 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.118743043 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.150924201 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.11367515 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119960651 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.138171638 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.103992794 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121594438 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.136522469 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.201120037 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.139200623 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.106020513 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.103447434 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.145381931 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.125604221 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.124966698 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.231991727 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105075677 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.145841978 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.105105379 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.233156331 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105842731 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.110056566 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.136621316 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.123919681 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.1130787 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.136883721 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.10432805 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.124618588 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.149066994 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103881879 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.11312718 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127369278 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.090653171 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.113756628 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114080316 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.145889049 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.114535336 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112509172 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.129144218 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115320478 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.112030432 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.127907112 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.115475889 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101579072 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.13589457 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107061409 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.124349433 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.136635714 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.103557329 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.101678301 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.127633079 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.121839655 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103306184 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.146398926 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10388107 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.105568012 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.125630605 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.115867301 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104412108 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.11234339 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.128337902 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.113863887 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.114624747 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.135545461 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107250954 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103264781 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.135927666 seconds)
done (took 10.114505731 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.109002936 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.150301577 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.233427038 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.236209751 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.13257137 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.145762157 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.118277222 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.128502353 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.143822159 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125253851 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.142362426 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.163002692 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.23998783 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.121233923 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.119139583 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.141930138 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.116601141 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.112534964 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.237177885 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.153750401 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.132494076 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.119450952 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.156496705 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.123077328 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107682934 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.165594581 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113054879 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.116825669 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.131640301 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.116787898 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.151859721 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.108282794 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.111290926 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.149965697 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.126879488 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118596878 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.143350363 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.116078893 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.108221988 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.13288104 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.117389419 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.124749672 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.132079549 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.121597853 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.116554517 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.146261749 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.116087149 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.12132797 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.133246405 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116578015 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109667083 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.159223721 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.121012231 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.125049363 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.14477361 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122953543 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121590945 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.144786521 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111553405 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.119706596 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.132859033 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.108668033 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.109422823 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.154609261 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.111902347 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.144968129 seconds)
  done (took 9.879562441 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.128351031 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139751656 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.141334739 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.119689506 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113195102 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125652756 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.102609612 seconds)
  done (took 1.852516043 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104040988 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.244216884 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.217198231 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.241434881 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.240560224 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.255109125 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128381061 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102846109 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.167164921 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.114494266 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.244947308 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.271500331 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.114674334 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.144524509 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.22058262 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.12904476 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.221572629 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.130779043 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118700219 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.24661848 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121652387 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.161717432 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.117479246 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.105548972 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.240405687 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.104569934 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.291367606 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.148241962 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114494932 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.119079397 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.14472433 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.182948108 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.240008202 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.143038814 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113212926 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.242216498 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.241994822 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.119526448 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.256906149 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.109110496 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.241312235 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.117758712 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.119856496 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.145956119 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118723892 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.232359257 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.123208473 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.145442163 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.118276489 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.250153569 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.11586938 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.243936142 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.116837123 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118979044 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.141353016 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120610001 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.126083792 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.146394188 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.250089263 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121986634 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.245256903 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.246338082 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.218840291 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.245696881 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128439919 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.245146892 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.231314948 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117282847 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.1395767 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.120755309 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.246046344 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.118006551 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116026304 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.237344956 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.146935137 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.223099012 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.249373818 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116650868 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.144114622 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.108794329 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.11688766 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.131780445 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.210780169 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.146071543 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117469845 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123036351 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.144341948 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.119068801 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.135539547 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.127623 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.119217585 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.141048458 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.124578989 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.118741649 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.146469524 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.249891704 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115648676 seconds)
  done (took 17.11901578 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.108714644 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105817163 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.110209871 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130693983 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.106601548 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.106341024 seconds)
  done (took 1.682445033 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.145593549 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.121964047 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.155280454 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120157033 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.197454549 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.226504599 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.259117604 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113478624 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.167893879 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.132322357 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.254232346 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.256340389 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.253066379 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123727321 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.256788031 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122156557 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.26193593 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.117829483 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.156116682 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117383299 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.14590384 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.123711224 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117369904 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.243716838 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119899446 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.149189454 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.114603724 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.129674459 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.154726451 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.113906219 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.148714722 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.12079087 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.112236884 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.137450312 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.231269841 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.138526271 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116841488 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.122473082 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.149657397 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.121235114 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.25775944 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11740401 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.152913669 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.123512704 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.114343712 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.138123551 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.123699443 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.113354254 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.258951958 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.147388608 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.12367183 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.121615235 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.16582573 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.123229183 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.11217817 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.140383192 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.124077742 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.260631285 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.124742879 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.138498421 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.121078234 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.119969265 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.140814 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.124304792 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.121254104 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.146593501 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.114173978 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12130321 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.142353058 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.122670717 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.123004065 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.146561522 seconds)
  done (took 11.913483076 seconds)
done (took 43.424652779 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.711514796 seconds)
  done (took 2.724612191 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.951035175 seconds)
  done (took 1.966777779 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.818736017 seconds)
  done (took 18.864164983 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.432547269 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.469100163 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.104745261 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.14901809 seconds)
  done (took 3.170107636 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.753321653 seconds)
  done (took 1.789320821 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.323834479 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.235772403 seconds)
  done (took 1.577421055 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.709606406 seconds)
  done (took 1.739817542 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.551608667 seconds)
  done (took 2.569992651 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.287832728 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.241432163 seconds)
  done (took 1.560832868 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.653002472 seconds)
  done (took 1.684847083 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.162167354 seconds)
  done (took 20.199151732 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.246887299 seconds)
  done (took 1.28639402 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.282484897 seconds)
  done (took 1.325737499 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.505254919 seconds)
  done (took 4.54751361 seconds)
done (took 66.028198984 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.116795095 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.121461712 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.118930178 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.142932902 seconds)
  done (took 1.529589496 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.125222206 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120143105 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.148829264 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120834228 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125491606 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.144159897 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.11935284 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.12221887 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.118699662 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.147155677 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120190203 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119413856 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.14914524 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.119619298 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.118251759 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.148197349 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124440148 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.119792071 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.145939014 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.121723869 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119719645 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.14834185 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124054808 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.12188275 seconds)
  done (took 4.134992376 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.115558115 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.109756107 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110430946 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.133212254 seconds)
  done (took 1.51297249 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.128440865 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133116672 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.154093516 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.128756986 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132517975 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.15580081 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118638344 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115786084 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.14386868 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.129910897 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.135847335 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.158462194 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132834017 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.14679625 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.131753389 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11284553 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.121066158 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.15716113 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.12780856 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.15399308 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.120435917 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127835579 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.149633996 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.128919814 seconds)
  done (took 4.286192905 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.194518257 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.130102497 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.16986215 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.16409452 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.172566892 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.117380814 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.140258679 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.150051871 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.126132596 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.146740936 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.123814105 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.164041676 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.1507472 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.121335907 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.119100309 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.150948057 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.131145623 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.14931845 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.161111969 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.124303793 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.152325301 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.130921031 seconds)
  done (took 4.237217439 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.122840587 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.1106757 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.131755847 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.110101898 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122832019 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.137929 seconds)
  done (took 1.787323454 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.110148036 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.104327509 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.104247015 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.130937647 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.110045222 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.104647938 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.129174291 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.105448423 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.104762498 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.1044517 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.129694737 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.104105417 seconds)
  done (took 2.385755674 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.330744955 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.110966686 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.136051613 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112340158 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.114489509 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.108034499 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.148372208 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.109035823 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.265308223 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.104627633 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.133113866 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.193657573 seconds)
  done (took 2.917799633 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212921178 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147167843 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262418444 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.676302696 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167892271 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188795734 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.28741634 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190599503 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.212117324 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136717071 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217973104 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157953962 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183644442 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184240808 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165481077 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.158399948 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195266934 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234445243 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14504773 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235355555 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156721442 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199806866 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.21168878 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150830333 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136176886 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191116101 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119049341 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155501946 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170413147 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194518776 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205469879 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148701411 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167661739 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195739484 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269602688 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208953874 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269816822 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134223633 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.196792109 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.213646047 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236878931 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168905249 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223024807 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153939025 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157794979 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184964094 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183230963 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.185569586 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.15832767 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144118088 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214957787 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203758959 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.17644421 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164787136 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301770125 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161199828 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.14434372 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254799636 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214070214 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226484254 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177183974 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.148352131 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178627688 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213955336 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23865402 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.14047172 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.196808889 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126341715 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19078267 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.228090625 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187204091 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185600423 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.243298102 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132785576 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194881591 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170317987 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18474376 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226464904 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169242397 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120397509 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181306951 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135465681 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153375482 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.201111728 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121734619 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240756549 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158884914 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.34347323 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182422711 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187418954 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164047495 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187914461 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158824733 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176155714 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.105684996 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171768091 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.162633461 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185919933 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128942347 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182809692 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139835193 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.126182667 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180647439 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.122814895 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194764506 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.133924969 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192559785 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169739077 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.159886243 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176651487 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177847545 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.159472787 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199551081 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214295133 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132775369 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134160053 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242673007 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193302689 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.134042177 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201893083 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196001131 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.17849557 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136076903 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197588826 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217305446 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143564266 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222957492 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141767257 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162192249 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.145423799 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195926414 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162505565 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.188008106 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128650353 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.191613575 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194144221 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.155198789 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139305441 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207266518 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134471882 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150467876 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136546734 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137587012 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.168894227 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.146007144 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.161836312 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154796046 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190212899 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164173772 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1866999 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13563311 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203733024 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131577035 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.193055551 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148788559 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.144868217 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.179266497 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221467075 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130488981 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205006314 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.163457706 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213168518 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196379323 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131051205 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.207379241 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128084049 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119858904 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193565298 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196684956 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165229996 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.217740879 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208300661 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.168970099 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.192588927 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14807179 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198865897 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.209341556 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157775 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.170760473 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168624132 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197727819 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.121395297 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.12372439 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.156514275 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136121503 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157721008 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137426445 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211902854 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166456947 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206475394 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188825965 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13734415 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214933922 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.12630558 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18948193 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.175942792 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165912921 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.190803999 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214108486 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199981497 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143057727 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191247702 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121979077 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127388371 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.162423451 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163773948 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162583046 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139588329 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14303232 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.215894353 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202520885 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149862186 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221513946 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194189454 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195726065 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.149443126 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.166096664 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198336916 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165672743 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.208211884 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133806879 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.190900573 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188429072 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17071669 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189450788 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192587043 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202810836 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198123576 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.189066158 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131817722 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176559798 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15946029 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166339734 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164273516 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173210407 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132701072 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154426665 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.163623441 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140218936 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216324568 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17054963 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181446658 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.18458681 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174154442 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15398996 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143211819 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198381716 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144700791 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.108496837 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200317728 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224225549 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149846899 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1879214 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173193371 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158935951 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.311785696 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217284046 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209575005 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137379009 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138778398 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196230747 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188355027 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166267821 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209888624 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142311348 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232506164 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167473917 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.171161826 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131600004 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17577504 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151077833 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.172168755 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.152602976 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.190885707 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.141964854 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219030518 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136608938 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195948835 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19902757 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.147824374 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145671009 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166785645 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249157794 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166310825 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20417161 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.160644703 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.19352364 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178885872 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151541681 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127078401 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132398979 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209189261 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128189819 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201347755 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.193305018 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209324731 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171095682 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18930132 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139479837 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.125980445 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19155039 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146644959 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213131475 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162704702 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.137017082 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219817081 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.131367186 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160621672 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15903044 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317893902 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146755033 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201749301 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.109643215 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.311405616 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129688867 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160482001 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16222154 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201136094 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.134080169 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.208476533 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17268416 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166776906 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164532825 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135143653 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207734982 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212082904 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171225409 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205533751 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.174509831 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163733288 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190616907 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174917366 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174223355 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.148329107 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19119802 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191597629 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.207184367 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.133817637 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195001047 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164900045 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195848614 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205752511 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139043308 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206826424 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128644557 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194457938 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140403779 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125062826 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189160436 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.194291929 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131230291 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204826122 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167624032 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1578388 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128858093 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147837246 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192175875 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142335721 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.159774382 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188197075 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.158232851 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177346678 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235174911 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128800346 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191751341 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146837549 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160151281 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139086703 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17123557 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131073562 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.170579323 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209618769 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.131182726 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207226166 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196093647 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167012279 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186987845 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144302574 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.305414494 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.129365984 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214902334 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150515918 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222635445 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149205881 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200510024 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165024711 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178416884 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167613978 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176038572 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.238816837 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193866088 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.193673622 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133615135 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142143649 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165933953 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.134398679 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181781362 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164859279 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17073469 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.135452587 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.193073358 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143449267 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.148084038 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169926207 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195844709 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17825419 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22015544 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182740925 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168134862 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172048662 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206868834 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127522756 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.1969164 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201688178 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142872011 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15247673 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.16350914 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.138105421 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235384134 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.12296336 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188873107 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173314361 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194802902 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168785681 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.164773414 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174717481 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171353384 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170065362 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157511966 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.154218868 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195236713 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13536424 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.156280905 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169526974 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191698226 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.16064057 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171913176 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.172203573 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216084649 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123909396 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133703231 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.318673843 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188627984 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191533296 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.168562725 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13670321 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146286412 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188435087 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.163652564 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197215343 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.130535255 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158004647 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.146338723 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.183436171 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.145580308 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193492744 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185023566 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191295376 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180971319 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.164242299 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.28966227 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169611338 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167893964 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.149491679 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.627421791 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138857949 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162873749 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143495857 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208777478 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235152028 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.160675161 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.175391866 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137537894 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.12642712 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158379977 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164208547 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180152196 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16522691 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176297312 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.107079125 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140929853 seconds)
  done (took 86.453676252 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162333191 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.152252639 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.168642402 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.225444441 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198223744 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.29900864 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.234793166 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.264331156 seconds)
  done (took 2.837367107 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.119919209 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.159126979 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.142652234 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.143211329 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.110823427 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.46787226 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.160804335 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121314002 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.162813397 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.152065434 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.135695992 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.570943303 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.116906976 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.146276866 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.121759873 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.134652528 seconds)
  done (took 4.087831524 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.009421403 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.573728908 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.251313258 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.282698522 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.267584828 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.204841777 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.79844515 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.203661543 seconds)
  done (took 12.722455172 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.169632456 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.160428366 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.451924902 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.309104602 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.187329499 seconds)
  done (took 2.418081575 seconds)
done (took 132.344591537 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.125191798 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125464165 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.124568255 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.154732628 seconds)
  done (took 1.656326328 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.199747921 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.094324242 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.096301295 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.121491461 seconds)
  done (took 1.649858258 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.470744112 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.094524221 seconds)
  done (took 1.731779498 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.159458525 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.138560763 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.166857706 seconds)
  done (took 1.618287693 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.136577861 seconds)
  done (took 1.277455309 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.130959331 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126568639 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.271039866 seconds)
  done (took 1.67399757 seconds)
done (took 10.754332496 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122024107 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.411852702 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.433009593 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135622839 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.711607041 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.426449704 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.029472017 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.176789784 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.175356281 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.1399095 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132461091 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.688992548 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.046169985 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.361703743 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.001187836 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.38598857 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.694205389 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112054233 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.14626242 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112467484 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.007503525 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.137853267 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113561162 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112746597 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.719386829 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.422835508 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110654556 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.398537335 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110904211 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115106383 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.429844973 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111908751 seconds)
  done (took 17.366319144 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113932897 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171473299 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146021479 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113659255 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114431252 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.139719286 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123316821 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.125034584 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205875769 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111595358 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.160887508 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111090435 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.116497992 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.138834718 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.136640684 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110685245 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.142303906 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114658791 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119271549 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.140751236 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.132946115 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110113649 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.141043309 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11425086 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111935643 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.161490422 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111661956 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123783348 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.13877423 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116844732 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116813692 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.139960725 seconds)
  done (took 5.331130579 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.160813394 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176612411 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148403746 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.148827396 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.187571832 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.113537291 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.224102346 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.150948552 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20512069 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112662404 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132520673 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.137850189 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.153320436 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.112197421 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.163580988 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111610248 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115224919 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.142410052 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120225951 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113146591 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.161483818 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110945643 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11335031 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.141909473 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112468006 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.162025966 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113653036 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124735153 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.139237933 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11849728 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.119072424 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.13968798 seconds)
  done (took 5.637508104 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.126982866 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.129105889 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.136927242 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.164642895 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.122171989 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125736231 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.155829577 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.122199829 seconds)
  done (took 2.232589961 seconds)
done (took 31.714792825 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.138858738 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.131636035 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132584993 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.15513655 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.25523581 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.119364971 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.129928757 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.117777042 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.156558618 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.133493167 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.112391192 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.148754942 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.132808246 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.12234315 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.255743487 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.127790618 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.261096773 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.257380133 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.118717047 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.126523135 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.150946786 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.232252286 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.15541854 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.119622968 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.253875789 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.115623575 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.251356262 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.123396212 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.122702849 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.143999516 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.229984233 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.155681099 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.119400511 seconds)
  done (took 6.451013038 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.240298038 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.1525195 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.123841935 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.122146467 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.122617141 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.14996723 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.245901709 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.152170348 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.120803048 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.120400382 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.150334213 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.22690408 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.158661762 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.11723491 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.124393782 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.11517683 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.279325891 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.153051332 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.114083536 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.097378873 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116405541 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.150467623 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.259582174 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.147615727 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.122919091 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.119909612 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.153777771 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.127162863 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.12316851 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.121875917 seconds)
  done (took 5.696766514 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.128460714 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135375033 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.166974162 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.190038032 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.148815468 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.164436536 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.141997643 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136434961 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.172968609 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.116248756 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.130862547 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.182970213 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132087437 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.124407514 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.14345479 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136543352 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.139228022 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.144639649 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123886661 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133592088 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.167821709 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.133971168 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.140223419 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.152861287 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.113836559 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122007084 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.155129626 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.126126247 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123554353 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.158642941 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.11816133 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.118587508 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.145664616 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.151265894 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115653393 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.158621054 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142826341 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126961433 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.159964329 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.146941845 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.118325813 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.146597963 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.141684697 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.17148566 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.145745488 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129439518 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.126290496 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.158667474 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.113885576 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134334744 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.188170764 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.114649912 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.164375599 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.116544764 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.113166901 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122617179 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.145500928 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.119025155 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129776783 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.147549873 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.14205813 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.122761645 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.155144976 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.118693807 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.125245109 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.142158096 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.11544628 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.119044174 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.169567867 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123558961 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.152100092 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.114432301 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.157960874 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.128073933 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.126327203 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.1555638 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.114858483 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.125876215 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.154981395 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.121615222 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.127676631 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.146338183 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.119590233 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.132895953 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.165715928 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.131509223 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.127322442 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.157197694 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.120342645 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.116354502 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.160375547 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.117061646 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.120295271 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.157456252 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.116407249 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.118883744 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128242062 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.156383101 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.113404888 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140195275 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.149205108 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.115791642 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.141194217 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.147915116 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122435008 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.124589007 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.186307916 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.115170351 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.12695796 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.15783848 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.116215671 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.123120987 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.148411936 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.115626361 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133570207 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.159306599 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.124166134 seconds)
  done (took 17.258939028 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.359878219 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.347995998 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.189306268 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.431382916 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.129541505 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.274229756 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.346728683 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.347335707 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.115334572 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.181074434 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.17789626 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.311246931 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.147194218 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.144930186 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.347821658 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.405771594 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.177602387 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.152218791 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.18098408 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.131016327 seconds)
  done (took 6.079091867 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.136503052 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.151200817 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.16871679 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.146426121 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.124946317 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.159704566 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.115726788 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136752342 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.155640565 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.127397138 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.118356719 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.161832233 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127422887 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.131485652 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.161322164 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.154345282 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.122963811 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.149427545 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.139879297 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120210076 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.13578478 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142001285 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124168514 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.168624848 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.135352556 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.12697447 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.143885658 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121765965 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.122514282 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.154915634 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120179823 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134164964 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.152290652 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.110092133 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127661875 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.160220996 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.123061769 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.117372407 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.120923457 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.150131428 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.13152738 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.12929159 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.154248966 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.105414688 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.135531463 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.115590038 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.158585713 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.129671348 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.110229862 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.163830149 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129743773 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.128918266 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.151337952 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.138352387 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.121911153 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.161053716 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128174667 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.129357555 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.14868709 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.116180812 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.114816349 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.119893017 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.153204838 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.129922301 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128136001 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.165218916 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.13301159 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.11547209 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.149538875 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.12062965 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.122373137 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.160046148 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.138185293 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.122942915 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.152183202 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.13086431 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122953391 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.127393815 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.128312854 seconds)
  done (took 11.918815703 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.143108774 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125988554 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.161842599 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.154400455 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.128618677 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.149501297 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.12595005 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.1374958 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.130031409 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.161968303 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.129795694 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.12939202 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.167841699 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125670535 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124585736 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.161777032 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129789708 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.182769116 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.135615385 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143602252 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.159287835 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.122405322 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.129456146 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.15698852 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.146013274 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.127078446 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.172693505 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.12976017 seconds)
  done (took 5.188790594 seconds)
done (took 53.750788069 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.325752141 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.503684269 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.282534479 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.280011196 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.305634944 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.310920609 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.278201447 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.278720349 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.721415988 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.255418191 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.278828375 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.280076861 seconds)
done (took 29.288196358 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.369762056 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.768980438 seconds)
    (2/2) benchmarking "String"...
    done (took 1.571518066 seconds)
  done (took 4.513227516 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.269900977 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.271531677 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.492535846 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.270712021 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.283391202 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.270118439 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.270876815 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.291542458 seconds)
  done (took 16.323341795 seconds)
done (took 26.651988341 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.306682773 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.450200405 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.505634766 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.254380437 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.273862925 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.27034961 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.285461623 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.295425442 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.281764041 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.252611862 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.663357925 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.527150258 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.274638236 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.642017226 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.255624763 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.29783289 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.273760454 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.520096813 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.277830777 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.305712483 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.253336906 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.276688637 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.276833011 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.276663011 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.275505903 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.280074013 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.279465674 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.271975262 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.453726857 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.276631532 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.306876156 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.270407499 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.281012332 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.274070903 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.27898666 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.274723219 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.456668238 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.280250183 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.260535934 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.28048586 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.459494202 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.277855133 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.273441909 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.27460974 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.259427134 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.298649885 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.262031186 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.384008195 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.296981498 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.292911366 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.324095192 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.634942704 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.287820841 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.300415507 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.280904808 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.492479459 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.283815524 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.313512312 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.298182571 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.272900032 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.273360453 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.27347501 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.28309484 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.274295956 seconds)
  done (took 147.946784339 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.274067179 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.278895535 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.279652992 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.342188223 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.281038366 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.279856141 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.272695043 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.274221126 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.27976432 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.307624053 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.279618989 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.275119555 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.29302433 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.230231661 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.282350996 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.28746339 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.278525502 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.286629556 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.283192785 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.274489068 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.302081338 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.280741356 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.291095365 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.27638423 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.314596209 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.345887589 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.289100518 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.291797514 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.286444825 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.275452205 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.311602691 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.28002786 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.864217098 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.126754363 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.278491902 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.281377058 seconds)
  done (took 82.913899762 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.274278501 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.274846815 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.276019289 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.30437507 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.273170874 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.810608172 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.815489832 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.808876681 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.743013188 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.278732545 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.482737967 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.485246729 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.274553053 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.363367286 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.286169348 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.272675445 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.28987923 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.298871917 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.278190766 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.273710734 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.800532531 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.290962656 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.328355153 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.446342187 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.286031321 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.302045254 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.665211156 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.272929005 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.302609899 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.594631541 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.318054149 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.27484538 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.581590641 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.767167 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.386608865 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.276473089 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.302044088 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.272925511 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.546682509 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.274223678 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.274613995 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.274839276 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.275574399 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.887982644 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.276590052 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.790513107 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.276891348 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.144538038 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.271729927 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.273047905 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 23.044842626 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.800211881 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.276057057 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.272917807 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.274762876 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.271259835 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.271205656 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.30252535 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 23.058704176 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.367109956 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.272325918 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.275020736 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.301341614 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.272707387 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.522115893 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.275580032 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.689118983 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.3275138 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.397576924 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.77876251 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.274792405 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.366444397 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.390457335 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.271705448 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.272210392 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.271845433 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.272136368 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.271795764 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.271928879 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.380829601 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.270724268 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.237192114 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.435959363 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.285527883 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.404451905 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.368455461 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.27162614 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.575660433 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.275433352 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.271403997 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.951146476 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.36523465 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.271716545 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.271843946 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.270313463 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.236842118 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.776255224 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.440840991 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.276924392 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.045402622 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.277642503 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 4.827464082 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.766691185 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.87851291 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.276861337 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.382158813 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.436757518 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.286766723 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.27282755 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.406448625 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.277857634 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.332621656 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.273752715 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.671008517 seconds)
  done (took 380.147701595 seconds)
done (took 612.184163146 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.092099532 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.048201317 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.187407488 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.056267819 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.038357283 seconds)
  done (took 11.596682193 seconds)
done (took 12.772922536 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.450985681 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.451403451 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.329184618 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.452855646 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.304749857 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.466580048 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.435939661 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.295357477 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.381712104 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.349597849 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.37971615 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.324794823 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.305921315 seconds)
  done (took 19.104463752 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.552773589 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.284568834 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.342868729 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.542976005 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.321904201 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.554121796 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.579087786 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.282988011 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.442002347 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.294802203 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.2948965 seconds)
  done (took 18.671128065 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.547893986 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.284695427 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.339308997 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.539901345 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.318131472 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.573548302 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.90345017 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.285536998 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.46352627 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.296575886 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.293629779 seconds)
  done (took 19.022332055 seconds)
done (took 57.974663473 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.31143081 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.373075445 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.306469568 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.2946492 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.290723749 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.292345751 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.298046297 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.292925925 seconds)
  done (took 11.636555952 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.29153984 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.28935922 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.292230254 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.290614676 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.290850172 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.290111183 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.290998323 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.290687566 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.290298335 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.291283783 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.291051066 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.292450437 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.291721508 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.292198334 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.291234219 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.292094657 seconds)
  done (took 21.836868263 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.294322163 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.292019825 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.290018398 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.291151754 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.29207541 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.292741138 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.292161177 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.291367298 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.291967917 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.292463051 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.293570189 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.29260004 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.293121717 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.293415425 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.293378172 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.293066004 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.293682295 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.292924018 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.298543512 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.291692931 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.293296825 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.292364278 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.29474009 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.29405326 seconds)
  done (took 32.20910941 seconds)
done (took 66.861387009 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.284967974 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.281231399 seconds)
  done (took 5.745746867 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.356520782 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.352256714 seconds)
  done (took 3.889916319 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.293017273 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.291344424 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.294279369 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.294299664 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.293667769 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.291855397 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.293184514 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.29396056 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.292184039 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.295879059 seconds)
  done (took 14.112862355 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.293994977 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.29592205 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.296167978 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.293167746 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.293510862 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.293807203 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.294159392 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.294074503 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.295894325 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.295207596 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.294687276 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.294321154 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.293626544 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.295029062 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.294636418 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.294453295 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.295192521 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.294683531 seconds)
  done (took 24.4832178 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.307706445 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.315548715 seconds)
  done (took 3.803520234 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.435089234 seconds)
    (2/7) benchmarking "second"...
    done (took 1.336449061 seconds)
    (3/7) benchmarking "month"...
    done (took 1.412737125 seconds)
    (4/7) benchmarking "year"...
    done (took 1.40149323 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.337098821 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.31584303 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.338263151 seconds)
  done (took 10.758294224 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.286992133 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.574629734 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.752123282 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.436058075 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.277152396 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.297801309 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.263759829 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.299098688 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.301738306 seconds)
  done (took 14.669943097 seconds)
done (took 78.643721662 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.282449415 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.316123664 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.297269872 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.307176941 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.591008587 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.317797265 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.287698098 seconds)
done (took 16.583545352 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.263951407 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.27803942 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.277017092 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.28756938 seconds)
  done (took 10.288891733 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.282163791 seconds)
    (2/2) benchmarking "read"...
    done (took 1.576929862 seconds)
  done (took 5.041652129 seconds)
done (took 16.514755085 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.297378499 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.298262009 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.2968633 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.298325449 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.298216732 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.29747874 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.298708911 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.296927944 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.29998248 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.297774044 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.298275466 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.297871703 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298000605 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.297065744 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296434161 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.298874026 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297921374 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.298302512 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.298865355 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.297928972 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.298346919 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.298069384 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.299190513 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.298262417 seconds)
  done (took 32.337818564 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.298110423 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.298422017 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.298785406 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.300363566 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.29885815 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.299143879 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.298441771 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.29804092 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.299595125 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.299152332 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.298104901 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.300022635 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.300086904 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.296994036 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299035709 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.298914223 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.298666213 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29851804 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.301208175 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.30007911 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.298222559 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.3001011 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.300263013 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.299274282 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.300194974 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.30030031 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.299820906 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.299243079 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.300387295 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.301673633 seconds)
  done (took 40.164984248 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.303992925 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.305225976 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.301529773 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.303102755 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.300920801 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.300748067 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.301681746 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.300785461 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.301664585 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.301270439 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.301044594 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.301599672 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.299560929 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.301443222 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.302536665 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.302189497 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.301789803 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.300790007 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.301896053 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.301455112 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.301953751 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.303423182 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.301778652 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.303051991 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.302532045 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.300979206 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.303100413 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.301782441 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.302147011 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.302123725 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.302950714 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.30324067 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.30197389 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.303609676 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.302404913 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.301501553 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.306701689 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.308666435 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.302861007 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.302828895 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.30345185 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.302109982 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.301146473 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.303481518 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.303976957 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.30128976 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.301463384 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.305134949 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.303708773 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.304434219 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.306307313 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.30462327 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.302745398 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.304087882 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.29409208 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.294922115 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.295205914 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.296300191 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.294662625 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.294799985 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.294170012 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.293846188 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.287937854 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.288278109 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.287774936 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.289250804 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.287607649 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.288947907 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.28787129 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.288065063 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.284958149 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.284408272 seconds)
  done (took 94.76398444 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.285129918 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.284862113 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.285205396 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.28550308 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.285137023 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.28353937 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.284657341 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286310293 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284825785 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.284488089 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284739869 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.285497105 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286274154 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.285455904 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.286138095 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.285514187 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.285128275 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.286136784 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.285610317 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.286572441 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.286550373 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.285210673 seconds)
  done (took 29.450400271 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.285463965 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.288061085 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.285868511 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.288350963 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.288273331 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.288275808 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.285681386 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.288605911 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286249001 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.285960225 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286710296 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286453685 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.287603941 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285564963 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.2852769 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.287573965 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.286149105 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.287904821 seconds)
  done (took 24.337128925 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.287665536 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.285539317 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.286327498 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.287246311 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.287206334 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.288417992 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.287942644 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.287375274 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.285575001 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.287450848 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.287819254 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28695986 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.287853665 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.285379925 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287916627 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.286835382 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.286717911 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287122536 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.287752182 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.286841274 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.286839356 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.28876084 seconds)
  done (took 29.491638811 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.287290992 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.286907148 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.287227472 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.288556803 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.28736851 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.287871459 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.288948674 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.287300908 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.289827721 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.288649733 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.288996331 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.287877103 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.290221853 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.288631763 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.288859065 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.288456127 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.288784795 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.288943868 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.287908713 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.291115163 seconds)
  done (took 26.945458059 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.289420015 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288527686 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.28963062 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288917538 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.290188883 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.289877203 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.2901699 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.289464975 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.288409385 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.289833662 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.290918343 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.291124522 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290947718 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.289462402 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.290749977 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.289654492 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.289794004 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.290133561 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.292189817 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.2916375 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.292774123 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.294101699 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.290720401 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.291656139 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.292540148 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.295284658 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291761872 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.29387254 seconds)
  done (took 37.32060005 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.291823142 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.291650988 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.289125849 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.291682927 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.290338173 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.290589108 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.292182342 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.292910626 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.29136436 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.292386324 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.29183598 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.292615772 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.292434276 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.293008673 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.292712745 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.291514288 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291922013 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.294242544 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.292938588 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29223091 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.293065107 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291478713 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.292742353 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.291527581 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292438081 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.292099279 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293275128 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.292520766 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.291979224 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.292871639 seconds)
  done (took 39.942420532 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.313862316 seconds)
    (2/2) benchmarking "in"...
    done (took 1.312792068 seconds)
  done (took 3.804952931 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.293856485 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.292685393 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.293706711 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.292983676 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.292688279 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.294230228 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.29176806 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.29269114 seconds)
  done (took 11.523208341 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.286871588 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.294153091 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.293961151 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.294532198 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.2937442 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.287545724 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.296273944 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.297339923 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.289775881 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.288794105 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.291796225 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.290886407 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.290967502 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.289950402 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.287712871 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.29166024 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.298036428 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.295825139 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.295219515 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.295522975 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.293543542 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.28998754 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.29156267 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.297763335 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.287903109 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.293930645 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.29245661 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.295260516 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.28418099 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.290017011 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.287550257 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.293043405 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.293738213 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.287256286 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.287643624 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.288289415 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.288442322 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.286142487 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.28720715 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.292129363 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.287061811 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.283935793 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.276148641 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.277775719 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.279910843 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.285346296 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.285930292 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.283627318 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.274717511 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.275665448 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.285621691 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.271932786 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.280874499 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.277030706 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.276820785 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.283453698 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.290181099 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.271989236 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.275329754 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.277308652 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.284801711 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.281121715 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.275530421 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.280437946 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.272034682 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.279753625 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.272698731 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.276676089 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.274359281 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.272441424 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.272309278 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.282052102 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.271774815 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.268190478 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.26849095 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.267217048 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.261355899 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.268071138 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.268362477 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.269007101 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.266620249 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.26559428 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.265332401 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.270483466 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.257327818 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.264607589 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.266613675 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.268820065 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.255379823 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261859189 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.265817258 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.262488258 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.254154991 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.254719822 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.255790708 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.262031803 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.253107132 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.257170907 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.262730234 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.262692944 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.261282954 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.256939522 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.25943186 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.264305277 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.261724496 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.261788557 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.264542654 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.256591528 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.261914214 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.265305299 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.26334411 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.256319825 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.258655657 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.263289008 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256096371 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.260169895 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.264223711 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.256476731 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.263058795 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.265360225 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.259814543 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.268761892 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.261575285 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.260782051 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.255496647 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.266433527 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.258991399 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.254797775 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.25933651 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.257812166 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.257949501 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.251627406 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.259829216 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.251716157 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.258424651 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.251805434 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.254329853 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.25506717 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.255159199 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.25024911 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.250522295 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.249001138 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.250048468 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.251907515 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.25672743 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.249909688 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.254938184 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.250060986 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.250106498 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.249709105 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.25529844 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253741875 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.248415456 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.256187709 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.248062013 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.254977538 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.247764589 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.25631044 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.254752429 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.255449765 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.254580214 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.247831451 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249677064 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.256886753 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.250475786 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.249848136 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.256647331 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.254854886 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.256267437 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.248173029 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.255047194 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.247427738 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.251085557 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.260962356 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.255808652 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.255647771 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.251065084 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.257625177 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.257339907 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255308197 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.250985114 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.253279916 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.25698898 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.254701691 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.260507497 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.257243961 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.256429511 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.247897608 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.247841448 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.258630992 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.251120609 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.261827267 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.258468474 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.259718152 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.249447706 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.259956221 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.24924457 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.258970158 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.253146688 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.260542221 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.256793055 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256615474 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.249063015 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.257936479 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.251846123 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.258042184 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.248712751 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.257277173 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.256513154 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.256833019 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.255982 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.250484327 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253209251 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.25841745 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.258643809 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.257827588 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.250445005 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.257231569 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.250364464 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.250754372 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.258499012 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.258172078 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.25682481 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.260217152 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.251720969 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.2557257 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.253774112 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.253130087 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.259137777 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254024194 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.25281499 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.259433391 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.255127552 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.253401643 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260105597 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.256191132 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.252104759 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.256141575 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.263875053 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.25817002 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.253694977 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.263714582 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.259857818 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.26006376 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.260189556 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25224224 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.261255163 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.257459656 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.263359154 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.252221366 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.260897879 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.254857698 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.259675181 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.253439844 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.255337868 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.255266913 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.256253899 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.263060458 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.261162308 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.25450248 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.262498878 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.260485667 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.261232944 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255271398 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.264565838 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.25806697 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.25688757 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.255103737 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.255130791 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.264055727 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.254599531 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.263172402 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.253262242 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.264390912 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.27009222 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.259654426 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.258607194 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.263337284 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.261774144 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.258289024 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.255892778 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.25417518 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.25615717 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.256838914 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.256881242 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.263511043 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.255792157 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.264011322 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.258212581 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.258834675 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.265134845 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.264130083 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.254997104 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.263654789 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.264845419 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.259902876 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.255260783 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.26232801 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.255157987 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.256764017 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.256673204 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.253920133 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.264137085 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.256452625 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.253398053 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.251394857 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.251697985 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.251992752 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.254537593 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.261053581 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.254275343 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.261224178 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.251600845 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.254485897 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.252036947 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257704058 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.259975515 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.252145142 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.262053118 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.257303174 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.248473855 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.25116732 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.256150251 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.256419426 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.260464356 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.25019754 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.258813268 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.2580667 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.25846824 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.257406193 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.25676544 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.256907082 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.258049962 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.258051777 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.256712114 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.251341574 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.253469492 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.260201597 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.258990884 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.257412013 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.250054049 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.254776683 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.260183893 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.252599281 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.25344949 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.250834456 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.259332255 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.259563164 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.258977426 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.260068056 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.258667748 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.25824895 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.256913208 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.261464199 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.258615339 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.258675542 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.261237862 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.258682881 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.263718401 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.252173851 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.259856174 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.259264159 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.254166843 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.250863948 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.253294698 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.262632377 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.252489764 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.264061768 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.260230323 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.25438912 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.253888728 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.261315824 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.252599513 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.261103454 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.272811301 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.253260953 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.262213013 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.260658245 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.253404252 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.261601076 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.259630159 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.252546607 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.255616935 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.257901611 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.263970831 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.252566935 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.261836972 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.253848685 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.261143912 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.261273371 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.262204761 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.261145071 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.261080472 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.254517187 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.262079754 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.258076365 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.263361783 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.255263028 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.257481296 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.254921669 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.261975927 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.264675409 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.255753784 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262267161 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.262658593 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.255256107 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.256567123 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.263688434 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.256236417 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.263118739 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.256744828 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259485898 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.259626989 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.259302038 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.258611411 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.263436807 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.255686217 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.25699131 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.264349467 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.263055942 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.263615067 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.257484606 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.265654971 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.256779362 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.256027598 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.26396238 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.256687589 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.26458364 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.25862928 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.260537287 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.258092634 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.263983477 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.265496318 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.264238851 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.254793578 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.257341853 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.26506103 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.260950698 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.262980112 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.261566557 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.266024521 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.256500116 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.258557022 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.261923986 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.256552083 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.258953111 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.266403714 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.259520081 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.259115028 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.258653481 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265246551 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.265508966 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.260915396 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.259466546 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.268294521 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.264356266 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.267565935 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.259383568 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.262009724 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.260481119 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.267311164 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.267909639 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.258939281 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.266857789 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.26549237 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.268673523 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.261602837 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.261934919 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.2613128 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.269483889 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.267468955 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.261978637 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.269379011 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.260887648 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.26952245 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266494689 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.266724991 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.258470681 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.257868992 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.261816019 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.263315391 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.268067747 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.260905285 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.262818893 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.261297996 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.267544986 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.267740071 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.266965013 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.267477381 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.259654207 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.268975954 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.260956055 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.262968907 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.261667371 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.261199646 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.270114743 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.267412776 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.262181728 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.264931981 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.272530311 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.26840996 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.261948153 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.261385315 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.263926966 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.270302665 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.269766231 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.262287118 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.263475695 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.269951415 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.267859388 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.268248781 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.262628052 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272499482 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.272763756 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261615529 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.262776118 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.266142552 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.270441313 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.267194128 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.268646472 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.263141891 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.262697924 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.273369249 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.269449487 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.268572754 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.265590497 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.262801182 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.272097288 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.263821233 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.264785508 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.264843137 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.271649153 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.267801507 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.264850578 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.27272007 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.273973246 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.270781348 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.283171921 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.266993056 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.26462742 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.272019133 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.264678768 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.271535388 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.265643027 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.272306196 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.270657484 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271662639 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.270489881 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.264332896 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.267748236 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.266965937 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.273900525 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.271499614 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.264180023 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.265468203 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.272205389 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.272491693 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.273333668 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.272152326 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.272417134 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.272805035 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.264387167 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.276276055 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.276068498 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.274535679 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.273768276 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.272084871 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.268179004 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.270675262 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.271009994 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.277907238 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.271643885 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.272174961 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.268012613 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274194362 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.273960475 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.265200058 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.26648767 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.26514427 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.275137411 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.276156538 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.282158825 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.272252418 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.269111644 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.274192068 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.273794726 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.266813588 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.273274053 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.273526171 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.267671606 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.268276434 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.274915443 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.274548046 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.273909877 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.268471148 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.277455715 seconds)
  done (took 754.376920557 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.274457192 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274082491 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.273221155 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.273666175 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273158115 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274489931 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273418085 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.273377174 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.273150444 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.275010502 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.27337727 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.274646986 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.272801066 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.273373834 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274025688 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.274148007 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275759337 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.273154161 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.274822162 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273875588 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.276072326 seconds)
  done (took 27.918292336 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.274647849 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.275571101 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.275156538 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.276134917 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.274117362 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.27437071 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.275649568 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276191466 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.275672156 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275676463 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.27574632 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275726849 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.27520697 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.274695322 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275580483 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.276620478 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.276177566 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.274489294 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.27629262 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.276066908 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.275409268 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.275181921 seconds)
  done (took 29.226816868 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.275632617 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.278658053 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.26932876 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.277454804 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.277792669 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.277192814 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.27584281 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.278521159 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.27813402 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.270785564 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.268764742 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.273030585 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.274471644 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.281675142 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.272212133 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.279571773 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.278712624 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.277824148 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.279080026 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.277908989 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.277697118 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.283021316 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.280944147 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.27096465 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.277368567 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.279088122 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.27705178 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.278022011 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.271582913 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.279680862 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.277447766 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.270905253 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.273961628 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.272812291 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.271377976 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.282149974 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.279491013 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.278777023 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.277647945 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.279648087 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.29261768 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.280821389 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.279119494 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.283055357 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.278712572 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.274048739 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.284307519 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.278313016 seconds)
  done (took 62.4802622 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.279767895 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.280205126 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.279415403 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.279520174 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.281507378 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.281093624 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.280502107 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.280122018 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.279941528 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.28151135 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.281200346 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.281107005 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.280694175 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.280469215 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.280574944 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.280398174 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.280801412 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.280747284 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.279561682 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.281684088 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.279801648 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.281232059 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.281729458 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.281737323 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.281224133 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.281152781 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.280044468 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.28172532 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.281646291 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.282241562 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.281186646 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.282576384 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.28324697 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.281605459 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.281195727 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.282057222 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.282074701 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.28194566 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.283118102 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.282199778 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.282254977 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.281821132 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.282483992 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.282582722 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.283559427 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.284018098 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.282315219 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.283698819 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.282349036 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.282767904 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.282940002 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.282898596 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.283468152 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.282821817 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.282951251 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.284848923 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.282478557 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.284141356 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.283606139 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.284008107 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.283174961 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.283848011 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.28318991 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.28425858 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.283037594 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.284805061 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.284299012 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.283348978 seconds)
  done (took 88.347484867 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284182785 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.284945483 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284151703 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.284472723 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.283830813 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.285606038 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.284343483 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.285091908 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.284422052 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.284678133 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.284684892 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.285371416 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.284859484 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.285252289 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.284884524 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.285810642 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.285436678 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.286571917 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.286052976 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.285506733 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.284669166 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.284648928 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.284807815 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.286004211 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.28586735 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.287195137 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.28630807 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.284624477 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.286744895 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.287916667 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.28522095 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.286957678 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.286062157 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.286949338 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.285852634 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.286723411 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.286273518 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.285366077 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.286762737 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.288687206 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.286988003 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.286510628 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.28580425 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.285822376 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.287288671 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.287452478 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.287047757 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.289233874 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.287448849 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.287609746 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.28818702 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.287318133 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286043043 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.288119378 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.287484389 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.288194197 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288142852 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.287929662 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288227543 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.288296309 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.288313068 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.288648529 seconds)
  done (took 80.925410343 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.288109152 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.288160888 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.288361605 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.287510756 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.288421695 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.289276549 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.288557138 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.28898252 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.288508192 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.289093655 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290069297 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.290009636 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290239893 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290156056 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.288272467 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29028885 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.289482622 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.289221119 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288548227 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.290120543 seconds)
  done (took 26.95763975 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.289977906 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.287893191 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.288735798 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.289733317 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.290102467 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.288955093 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.291889792 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289609119 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289108429 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289221734 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.290219394 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.290505052 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290023092 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.290900988 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.290496176 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.290160512 seconds)
  done (took 21.815116907 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.290170107 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.291115791 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.291223796 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.290425424 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.291529944 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.291215588 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.292131526 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.290296663 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.291124667 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.292079491 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.291493677 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.291381306 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.290644734 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.291589361 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.289758566 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.291902697 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.292523185 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.290981217 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.291142776 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.290600377 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.29222393 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.29222728 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.293097771 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.291418195 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.292451818 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.292357303 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.291424296 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.292397087 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.291138921 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.292166695 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.292703955 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.292825794 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.29306986 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.293421285 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.291621713 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.292583163 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.294178911 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.294112891 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.293513027 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.293545875 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.294072185 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.293162179 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.293615669 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.293948454 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.293249051 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.293687184 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.293057777 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.292708451 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.293863934 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.294174415 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.293514488 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.29349071 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.29378733 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.293542892 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.293802061 seconds)
  done (took 72.258361066 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.293834184 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.292384782 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.293823307 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.293613156 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.295229218 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.294680649 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.294117094 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.295486993 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.293354087 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.294308942 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.293891478 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.296256454 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.294210338 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.295376846 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.294548642 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.295199316 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.295236501 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.294629219 seconds)
  done (took 24.480911496 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.296194492 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.29510781 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.295425895 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.294181216 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.295648738 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.295194283 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.295269693 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.295612123 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295906657 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.29655687 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294689275 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.295541986 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295402789 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.295596989 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.295757485 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294995522 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.295412339 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.296555662 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.295860034 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.296296559 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.297682435 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.296592427 seconds)
  done (took 29.688585394 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.288483208 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.28814187 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.287317398 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.30314282 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.299729591 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.287339596 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.288932283 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.288180277 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.308997228 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.325187938 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.321902289 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.30011047 seconds)
  done (took 16.771562053 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299220516 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300701091 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.298805944 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297939201 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296946096 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299715397 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297865863 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299931177 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298632873 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298479311 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297536066 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297797128 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298324683 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29860101 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298665554 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299436694 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300449398 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299078218 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297834382 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298080361 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299489537 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300569613 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299078531 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300709752 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298738587 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298181791 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298631489 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298040008 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29969471 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298849185 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298725447 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299161102 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299412139 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299765656 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301273767 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299719693 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29994656 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300439193 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299044484 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298914503 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.300485344 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301282194 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299347312 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300654123 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300182202 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300770081 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298645863 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299228918 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299974729 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30105434 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300682912 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300483355 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300102344 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300970028 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301155852 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302391815 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302120883 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301141598 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301222524 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300428914 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301028306 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302074593 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301654555 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302025469 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303026796 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301611868 seconds)
  done (took 86.972195465 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301155448 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.301249947 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302177408 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303318732 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301478314 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301541995 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302900363 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301538808 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302163738 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301477879 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302374362 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303500534 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302940989 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301930054 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301496916 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302810536 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302756052 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304449977 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301077062 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302816553 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301805406 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303098591 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303699644 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302597678 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30404318 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303973593 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302976228 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303094282 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303813072 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303196877 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303485921 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303304973 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30289922 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.30255066 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305431911 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302496663 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303898346 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311819534 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304762782 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304476933 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304883311 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30315706 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30455235 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303628072 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304872945 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303750677 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305481834 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304301515 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304683151 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304342215 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305582537 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305972202 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305931597 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304242881 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304353908 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303062837 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304972433 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304637307 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30398481 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303938359 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305565511 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304609855 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305461134 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305534139 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30513588 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305814718 seconds)
  done (took 87.234238212 seconds)
done (took 1780.721522839 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.463738563 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.418916916 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.296476143 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.305819859 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.296503323 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.296780432 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.308960385 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.296521878 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.296212621 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.298628632 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.297157038 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.489254394 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.331840784 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.296287256 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.296679045 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.394235457 seconds)
  done (took 26.575764128 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.319996051 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.30934521 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.41197793 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.312749895 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.331021968 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.486089438 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.366250707 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.31049747 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.466862972 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.331916184 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.310293361 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.328359141 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.308722037 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.312270309 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.32747533 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.483873633 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.544283988 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.317935856 seconds)
  done (took 28.772157518 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.727849287 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.325730732 seconds)
  done (took 5.252515359 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.326947914 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.308991972 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.310562889 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.307949538 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.29944838 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.300401189 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.307800245 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.304490187 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.303649587 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.429367708 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.315173078 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.321373165 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.308608982 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.310756563 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.316507562 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.351641449 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.453066217 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.316455089 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.315905344 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.315015247 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.308415308 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.396695505 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.349130905 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.31779318 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.425763311 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.310799656 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.317987101 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.316700208 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.44958054 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.318463849 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.309904728 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.310408122 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.312728235 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.302984265 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.775053204 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.309590633 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.334948413 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.317111704 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.318917285 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.459270029 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.312347574 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.317210645 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.303191634 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.782617195 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.433861568 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.424097622 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.310554141 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.317548446 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.313421392 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.37628856 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.312128438 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.31403238 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.370091359 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.141818155 seconds)
  done (took 84.018344498 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.311175494 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.30497188 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.474942477 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.325713277 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.310887231 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.308493315 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.310169013 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.574205731 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.368834681 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.315675013 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.591840088 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.807841523 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.320257491 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.359942167 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.90862048 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.404045181 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.307276442 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.304752029 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.311930046 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.309784985 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.812963973 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.320388061 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.310520624 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.443469456 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.346453857 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.774421775 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.310575227 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.310416263 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.312787266 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.306606777 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.774698373 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.320688548 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.381153525 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.306303378 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.574505568 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.669747887 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.638135806 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.315488178 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.314730279 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.308066183 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.321125157 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.767797994 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.655675478 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.312643282 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.30883389 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.767779526 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.311637428 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.310305522 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.315343924 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.529020107 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.308731236 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.307821831 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.307462466 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.313804536 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.308241771 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.361692612 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.317162327 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.804638828 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.311083286 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.308086455 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.354261693 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.308911576 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.31541837 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.310467115 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.309530278 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.657094765 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.515448631 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.315533688 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.654560693 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.76987358 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.314530044 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.837665841 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.314182276 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.320314695 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.309255133 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.308349855 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.322411868 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.798910094 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.318150533 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.309538906 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.635480685 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.310255354 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.601085636 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.327222926 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.321839155 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.815806187 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.323559806 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.314978487 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.310012682 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.314240412 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.310424946 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.312401661 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.581561756 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.346237769 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.309900288 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.309003574 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.347343289 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.310697216 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.328393883 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.311958516 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.838759278 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.321970741 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.309910934 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.310436831 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.31753472 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.314784383 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.31470645 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.310779993 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.546593895 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.310520898 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.317433575 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.310563799 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.310471199 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.32328618 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.39568571 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.311639282 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.602072576 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.311909508 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.324769802 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.314821211 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.311688999 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.364397133 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.312298963 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.319056364 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.186902482 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.54864072 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.328472798 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.313698914 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.313681494 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.325701857 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.313097874 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.313081858 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.347052565 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.313782107 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.987866814 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.320452725 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.31284358 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.311637463 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.319677813 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.312639756 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.322960223 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.312647396 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.6067311 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.58460079 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.499011845 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.314428273 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.314014418 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.016072678 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.336040737 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.456111372 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.331474502 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.314443548 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.534854986 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.535491619 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.314008255 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.314085634 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.314715481 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.543581886 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.317348048 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.633000516 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.805071651 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.314467614 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.315265816 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.99216468 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.016487058 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.319971391 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.316209661 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.599035854 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.329899345 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.31518317 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.313900681 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.316181182 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.314778735 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.317282828 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.319231459 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.316027931 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.316348823 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.604224947 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.490319443 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.331512755 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.315839683 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.778628002 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.390628274 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.315060339 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.347038997 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.318016366 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.314988645 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.369988125 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.320815876 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.338794743 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.317415161 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.316892955 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.801105999 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.324164325 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.320446913 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.471251134 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.936497624 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.315583556 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.316877128 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.316463581 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.909871127 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.840283489 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.328235262 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.606919102 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.316599927 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.354661142 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.315650614 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.368634808 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.848898205 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.318038064 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.316891775 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.933876444 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.316512712 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.825555043 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.318077306 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.317920888 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.857552755 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.317640752 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.319442454 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.318427909 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.318616402 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.597166232 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.319888906 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.33191093 seconds)
  done (took 491.287783156 seconds)
done (took 637.097273169 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.318867841 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.323374208 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.324201581 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.324347586 seconds)
  done (took 10.506181661 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.343786042 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.325706706 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.33477764 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.324976268 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.335625009 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.325875823 seconds)
  done (took 9.205185704 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.318204425 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.32445575 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.323791298 seconds)
  done (took 8.181796409 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.525324116 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.34434123 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.673049438 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.324572038 seconds)
  done (took 9.082897224 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.336492151 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.335420553 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.334990758 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.336318834 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.342832353 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.34113414 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.337014774 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.337522707 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.341349718 seconds)
  done (took 13.258113972 seconds)
done (took 51.450466349 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.302857861 seconds)
    (2/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.446261812 seconds)
    (3/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.327952692 seconds)
    (4/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.30846886 seconds)
    (5/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.309810299 seconds)
    (6/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.304780367 seconds)
    (7/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.509085747 seconds)
    (8/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.395506893 seconds)
    (9/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.304968706 seconds)
    (10/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.307625401 seconds)
    (11/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.667234831 seconds)
    (12/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.435475772 seconds)
    (13/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.390929552 seconds)
    (14/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.305290565 seconds)
    (15/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.432675024 seconds)
    (16/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.355923065 seconds)
    (17/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.440445138 seconds)
    (18/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.5111414 seconds)
    (19/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.35215488 seconds)
    (20/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.304566723 seconds)
    (21/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.563775339 seconds)
    (22/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.582234078 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.547710051 seconds)
    (24/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.480736696 seconds)
    (25/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.367880855 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.432453191 seconds)
    (27/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.440728406 seconds)
    (28/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.322407948 seconds)
    (29/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.403212715 seconds)
    (30/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.421715512 seconds)
    (31/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.537024873 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.552708956 seconds)
    (33/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.406146794 seconds)
    (34/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.326851369 seconds)
    (35/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.402753384 seconds)
    (36/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.537680826 seconds)
    (37/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.308026248 seconds)
    (38/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.407414057 seconds)
    (39/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.536411469 seconds)
    (40/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.67577565 seconds)
    (41/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.418039064 seconds)
    (42/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.483613251 seconds)
    (43/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.308966764 seconds)
    (44/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.433334637 seconds)
    (45/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.319349115 seconds)
    (46/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.678288231 seconds)
    (47/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.359773252 seconds)
    (48/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.391546674 seconds)
    (49/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.467828211 seconds)
    (50/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.311749076 seconds)
    (51/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.344233231 seconds)
    (52/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.504410053 seconds)
    (53/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.316141818 seconds)
    (54/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.307729443 seconds)
    (55/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.363089889 seconds)
    (56/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.500548674 seconds)
    (57/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.336842994 seconds)
    (58/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.339268941 seconds)
    (59/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.490922121 seconds)
    (60/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.368645053 seconds)
    (61/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.305836547 seconds)
    (62/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.356708509 seconds)
    (63/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.582332878 seconds)
    (64/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.30690332 seconds)
    (65/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.500244902 seconds)
    (66/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.312092625 seconds)
    (67/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.328814927 seconds)
    (68/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.455988579 seconds)
    (69/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.437960146 seconds)
    (70/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.309439138 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.483989981 seconds)
    (72/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.359033568 seconds)
    (73/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.538584341 seconds)
    (74/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.312303045 seconds)
    (75/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.404622727 seconds)
    (76/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.402887601 seconds)
    (77/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.391428345 seconds)
    (78/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.430954951 seconds)
    (79/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.418207741 seconds)
    (80/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.41826151 seconds)
    (81/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.334395379 seconds)
    (82/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.465567029 seconds)
    (83/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.583622698 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.434047685 seconds)
    (85/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.500091719 seconds)
    (86/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.358645088 seconds)
    (87/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.34722993 seconds)
    (88/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.362207303 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.459722742 seconds)
    (90/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.618172665 seconds)
    (91/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.419461097 seconds)
    (92/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.326145807 seconds)
    (93/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.546941092 seconds)
    (94/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.427612629 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.43774257 seconds)
    (96/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.414998191 seconds)
    (97/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.307970732 seconds)
    (98/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.41052969 seconds)
    (99/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.309220563 seconds)
    (100/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.392914918 seconds)
    (101/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.426711051 seconds)
    (102/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.624268556 seconds)
    (103/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.504316842 seconds)
    (104/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.607485969 seconds)
    (105/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.340925988 seconds)
    (106/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.34975141 seconds)
    (107/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.763228713 seconds)
    (108/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.450073302 seconds)
    (109/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.360849731 seconds)
    (110/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.496857982 seconds)
    (111/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.720757168 seconds)
    (112/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.445603445 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.452817679 seconds)
    (114/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.309584668 seconds)
    (115/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.40067783 seconds)
    (116/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.654390985 seconds)
    (117/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.398506524 seconds)
    (118/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.396769269 seconds)
    (119/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.490636664 seconds)
    (120/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.525941844 seconds)
    (121/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.482470588 seconds)
    (122/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.481228977 seconds)
    (123/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.476888481 seconds)
    (124/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.309699457 seconds)
    (125/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.314062117 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.47963627 seconds)
    (127/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.331441107 seconds)
    (128/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.310814081 seconds)
    (129/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.607925375 seconds)
    (130/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.366350873 seconds)
    (131/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.365774117 seconds)
    (132/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.441399647 seconds)
    (133/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.337154527 seconds)
    (134/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.604943954 seconds)
    (135/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.483848729 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.481860985 seconds)
    (137/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.534943529 seconds)
    (138/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.575823119 seconds)
    (139/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.462033517 seconds)
    (140/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.426218605 seconds)
    (141/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.328970499 seconds)
    (142/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.416503723 seconds)
    (143/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.473824081 seconds)
    (144/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.312037648 seconds)
    (145/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.60961261 seconds)
    (146/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.616926872 seconds)
    (147/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.394809464 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.458738792 seconds)
    (149/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.684209663 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.430735302 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.42923106 seconds)
    (152/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.363074661 seconds)
    (153/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.537881661 seconds)
    (154/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.509748061 seconds)
    (155/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.414978306 seconds)
    (156/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.667738198 seconds)
    (157/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.378945334 seconds)
    (158/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.434221794 seconds)
    (159/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.452414242 seconds)
    (160/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.430272687 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.551069202 seconds)
    (162/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.808927042 seconds)
    (163/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.317420143 seconds)
    (164/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.49289598 seconds)
    (165/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.397865426 seconds)
    (166/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.5173696 seconds)
    (167/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.547226504 seconds)
    (168/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.418681073 seconds)
    (169/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.367370089 seconds)
    (170/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.313255682 seconds)
    (171/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.360286485 seconds)
    (172/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.44954155 seconds)
    (173/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.313600076 seconds)
    (174/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.332697937 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.438759862 seconds)
    (176/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.366350193 seconds)
    (177/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.436933619 seconds)
    (178/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.451906074 seconds)
    (179/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.315301166 seconds)
    (180/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.315591609 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.546178139 seconds)
    (182/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.36927171 seconds)
    (183/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.369716745 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.482041327 seconds)
    (185/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.55011872 seconds)
    (186/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.425903222 seconds)
    (187/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.612965404 seconds)
    (188/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.42149646 seconds)
    (189/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.813016678 seconds)
    (190/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.359808541 seconds)
    (191/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.428842728 seconds)
    (192/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.518195035 seconds)
  done (took 325.103984108 seconds)
done (took 326.320913766 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.356733248 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.431220343 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.339940128 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.3405467 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.340138535 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.344016546 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.363283697 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.341897697 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.352792353 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.353585554 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.332309879 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.352186235 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.354142503 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.351526296 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.37528967 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.341861163 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.341581635 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.350154188 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.355477989 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.356748557 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.343725467 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.342421864 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.363726506 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.34155936 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.349594582 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.34904354 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.347681027 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.333513279 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.348108215 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.356510393 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.341704902 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.353115509 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.35834805 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.35296843 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.344356784 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.353940018 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.343534078 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.432629404 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.361377363 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.351782249 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.350442677 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.357305303 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.347791665 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.347898722 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.352679629 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.366479699 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.35151938 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.358237827 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.347908452 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.345765804 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.36337259 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.356560077 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.351228242 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.345080838 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.340559008 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.359837472 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.354203997 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.36055342 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.349945036 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.346444024 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.37840902 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.359413332 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.356399719 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.351232039 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.350672878 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.357296152 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.353196446 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.359902925 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.351553956 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.347420542 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.346855476 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.353179589 seconds)
done (took 106.694914544 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.474412819 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.342351379 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.485974354 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.351212177 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.509466716 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.480270597 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.350869444 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.351652647 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.351474659 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.172604083 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.351434931 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.351995782 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.343340212 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.350363219 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.475994703 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.348970926 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.349681417 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.058821623 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.349014761 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.485822284 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.336533548 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.346386795 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.346882217 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.170006126 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.336956453 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.334432026 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.485382502 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.347683587 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.059553688 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.332939348 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.336489328 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.060410869 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.486592334 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.366969703 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.357903763 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.354551356 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.506192246 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.349958103 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.472421543 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.469932485 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.483815282 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.386707504 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.335669966 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.338034764 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.350609536 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.350836454 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.348635824 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.378053205 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.33923948 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.35161509 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.058716913 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.358956889 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.350062563 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.349644124 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.348939643 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.379551779 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.351502729 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.351956517 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.490000991 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.351345266 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.473008499 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.170028204 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.169238846 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.350428317 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.336972692 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.350158859 seconds)
  done (took 109.33049372 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.410159876 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.418694676 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.449429779 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.34516699 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.393279018 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.450634577 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.343809047 seconds)
  done (took 11.04018755 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.349923749 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.350757662 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.39266204 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.39379919 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.35251573 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.500260311 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.350106605 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.353766723 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.349729288 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.395407964 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.351033261 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.351000123 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.360869422 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.342284314 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.392725518 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.355254843 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.458343627 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.345190485 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.3532967 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.496108562 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.354018364 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.360583094 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.395795881 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.356958998 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.353436574 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.351233437 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.113283595 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.353163104 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.352507832 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.352273945 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.351815798 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.398126486 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.352960272 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.343177274 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.353689301 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.461844761 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.353675027 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.351054513 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.351021432 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.346107704 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.35314372 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.354070964 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.353747892 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.352950886 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.354274498 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.370067888 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.351483839 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.353273764 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.355328698 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.354354904 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.397757751 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.354074034 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.353084014 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.353672531 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.401418524 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.362702202 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.353770171 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.353116688 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.353892475 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.354147451 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.497002121 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.393831156 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.355093448 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.393573168 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.357114238 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.353903745 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.354718257 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.354202539 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.404550192 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.355146869 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.395047662 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.356108953 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.529604157 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.371008196 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.356401012 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.350919525 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.34996359 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.354837887 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.343536967 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.353528915 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.354773449 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.349577806 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.354549769 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.35558903 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.35452112 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.507340792 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.456684607 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.35442877 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.364125896 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.355917716 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.355890707 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.400849137 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.357140324 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.353744499 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.400568349 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.463159194 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.401519628 seconds)
  done (took 139.147838736 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.360625606 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.359731669 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.351882025 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.374284638 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.348138642 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.347214371 seconds)
  done (took 9.377358918 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.351488076 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.354685248 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.353678308 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.353610169 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.354464807 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.353579346 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.354272827 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.346085198 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.356330815 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.35316321 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.355401564 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.355433774 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.354722122 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.354027638 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.35362837 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.354862226 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.354251392 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.354954048 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.355685947 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.35485262 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.343839916 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.354891829 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.355119212 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.34844561 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.358339349 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.353593652 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.371384113 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.355074401 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.354813249 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.35444581 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.357670281 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.355714049 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.347857887 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.349998769 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.35829626 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.348307031 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.356426249 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.357749061 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.353883046 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.355224177 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.35577433 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.356244259 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.355979991 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.357051346 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.349624537 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.350268571 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.361001793 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.372746133 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.356248761 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.355154425 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.357071047 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.35501097 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.357881345 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.35795699 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.350726356 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.351122966 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.358059635 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.355858028 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.357726424 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.349840673 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.358147674 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.358345427 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.351061899 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.359958203 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.357155923 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.35686213 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.350881665 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.360035822 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.358201098 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.356929843 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.358502435 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.356724224 seconds)
  done (took 99.810917181 seconds)
done (took 369.938486707 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.773284874 seconds)
  done (took 4.008669495 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.352148818 seconds)
  done (took 3.593908534 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.163475595 seconds)
  done (took 22.405222679 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.381336401 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.450838537 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.355046477 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.360486785 seconds)
  done (took 10.785329746 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.41521637 seconds)
  done (took 3.654652069 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.359198901 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.368183596 seconds)
  done (took 5.9710747 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.542649161 seconds)
  done (took 3.783487905 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.569682394 seconds)
  done (took 3.811384249 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.370086697 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.363667572 seconds)
  done (took 5.981389342 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.331197861 seconds)
  done (took 3.571921173 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.483308744 seconds)
  done (took 20.72726183 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.36649112 seconds)
  done (took 3.611459995 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.349504797 seconds)
  done (took 3.592461336 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.827071606 seconds)
  done (took 6.069703605 seconds)
done (took 102.804993396 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.349263008 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.357854721 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.349920739 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.350489715 seconds)
  done (took 10.650901865 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.418847377 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.417132932 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.423563126 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.417755242 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.416816144 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.417825702 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.391061554 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.391539458 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.417876665 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.416980178 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.424295422 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.416901266 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.419087108 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.393558165 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.41818717 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.424806272 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.419159094 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.424902944 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.392898953 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.418869815 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.367387129 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.41980688 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.420203075 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.369122253 seconds)
  done (took 35.101894789 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.927238851 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.431519731 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.513736996 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.409862145 seconds)
  done (took 7.525800078 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.44627541 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.448880344 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.467025544 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.504215631 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.533047422 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.463048178 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.392746541 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.39036132 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.376814454 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.450294549 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.501178881 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.438068965 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.547642685 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.368267511 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.585130435 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.368284453 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.370464303 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.449176369 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.500411532 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.518319115 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.368366713 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.448071522 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.452712943 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.433413404 seconds)
  done (took 36.067895758 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.377809005 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.388525725 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.368901929 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.38466639 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.370633031 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.370766387 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.370405813 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.376632888 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.367854055 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.369768303 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.369731252 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.384940926 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.369827349 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.369587692 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.377235773 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.370402255 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.370733826 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.377456982 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.379259896 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.370856524 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.370029592 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.377164882 seconds)
  done (took 31.479541995 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.354647497 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.355383695 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.707920907 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.61009016 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.354565782 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.360823296 seconds)
  done (took 13.991063695 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.429696617 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.56539607 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.363358344 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.703876796 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.792927238 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.368167686 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.363446582 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.600453181 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.894576382 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.890563152 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.423649046 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.434944539 seconds)
  done (took 20.079351599 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.360852553 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.362409932 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.364105645 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.377410526 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.416714654 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.370293097 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.36891374 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.356141276 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.421436987 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.420902771 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.370363731 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.417871496 seconds)
  done (took 21.856599856 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455069483 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.365664741 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.377326201 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437278518 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367662932 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.212283307 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.438846182 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.05064322 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.372645922 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64197788 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367426137 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455479281 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.621956056 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366734934 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.371956244 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.341325125 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.598418227 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839310769 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369900733 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368063605 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402256748 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.368128836 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.374320698 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.570191821 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.214443832 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367670536 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.630769064 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.367842117 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.647371996 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62353216 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.621556405 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372351556 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645322025 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007756084 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468550897 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.56946464 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363497741 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.369325744 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.361419357 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.386194067 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371176173 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.371246579 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.62008709 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372633256 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37013356 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368282199 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084513124 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.377987002 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.369751432 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.37064359 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.623907177 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472116326 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.375895426 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.369703553 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3828535 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369234444 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.376154327 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.49828648 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933380913 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369831563 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40114538 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.376185233 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.370790741 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398623767 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996981539 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.381327035 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.377580219 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.378160732 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3710591 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382229719 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.396897668 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372566888 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.394979055 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372049444 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.164053976 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.380813759 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375098573 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905345242 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374693601 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.378946275 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604197362 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372302161 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37217074 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.371787619 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.373908373 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.085603018 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381696543 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.347067694 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432282642 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.061442116 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.574069156 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396536035 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404939106 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.596240697 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.347260825 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375408678 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.373236322 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37534326 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394966996 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.066230233 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373104926 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.379182503 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.631797711 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.584250018 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383976854 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.365248723 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.831730998 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373905572 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.405185885 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.38396325 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.579639587 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.97962603 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.632712801 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375454252 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406942349 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.375687283 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1423707 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375629741 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.387103573 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.375199385 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648645824 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.185888125 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375063211 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443732971 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379883611 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.376166569 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385342352 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377160998 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.37514693 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.558463877 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392366627 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.633892825 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.377689358 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376256141 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.384911335 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382979993 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.378257028 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.598577954 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375760475 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659052664 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377229597 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375253506 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376015459 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.600078985 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.378372915 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.38326781 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.638025627 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386315775 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.393801756 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636437212 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412519718 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487170984 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408090584 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.387538534 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.636225397 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.383486029 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.384083839 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377604992 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.379595647 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385170776 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.386051869 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371234865 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000637861 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354992844 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.379857881 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.379220377 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.395415998 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448955191 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.387464898 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.580572541 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.392485854 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388880204 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.386149732 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.390399069 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603472112 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.631013243 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.380787711 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.457973245 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.838009166 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.982433334 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395666227 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.378958776 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.37982143 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.378605691 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380906624 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378656977 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.382148042 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.579571681 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644683286 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.37924615 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.98754125 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383942481 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.386312876 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.392118075 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.633790882 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.391519659 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381390191 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.386090733 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387948703 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383325152 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.639839369 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518942441 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.397696347 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381889421 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.943470026 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.389865549 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380675434 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381162794 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412967316 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.386882219 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.212033563 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.644532343 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37360596 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636210678 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.382743759 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.399461411 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.380150418 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396497089 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395303004 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.407363991 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407881731 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.583027626 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.388997338 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401394735 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93870894 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146714526 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933740485 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385638157 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.388887673 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.388226726 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.082712665 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383478326 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384663952 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612680412 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.083186604 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383289115 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.844247108 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.384612469 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.130110069 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638189597 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.617632113 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383063139 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.397906077 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.64175599 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.598320708 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416901311 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394684675 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389992159 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.358983846 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919890584 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397829564 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.464556233 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.081455912 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393529136 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386503843 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.452809547 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.393441481 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771408667 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.383445262 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384962003 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.384542058 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.39149509 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.219931104 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38618306 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384929177 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016268157 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387104434 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.870093533 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38622105 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.588872674 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.646585026 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.619670562 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.393497498 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.39060749 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.639751252 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.64156847 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390131305 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.386207549 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955319002 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.257112241 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.393598936 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386423602 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.153454907 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388617794 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.672326321 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.403684148 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.39282152 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394037485 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388378299 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387835996 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.387977866 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.392229577 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361997267 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86025493 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.384582228 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391803772 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399283839 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394231161 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.642872679 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.40453665 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.993895556 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.621272453 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380045559 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419763577 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.393102743 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401619711 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.370643984 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.388698439 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.389661596 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389751046 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.610463351 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.404232033 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.362930077 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381565082 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.599773447 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389368176 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387694737 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.607469847 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.393779235 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.390686262 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.171797794 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421266346 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389830372 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398000822 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.387684803 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430866683 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457134057 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592667778 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.651346455 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.648658212 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787185352 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394444963 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397617767 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.40552088 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486655479 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390933338 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.397830709 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.166118518 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.998071589 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149081192 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.004826233 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65107746 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396916174 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393819685 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39122885 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527408737 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390556491 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665371798 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389595473 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.383203067 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412083483 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403276384 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410589657 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603191073 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667073568 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391134087 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395523281 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391975425 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.392372533 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650137593 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.609766774 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868660984 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933462323 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393026702 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.405966746 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.090907876 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667172788 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392178276 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391941565 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392181668 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.396050932 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.422997173 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.400661914 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393074891 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532656249 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644206334 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044782688 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.64765456 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.416761335 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.911440174 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393652022 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.65440397 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.164079092 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.595404345 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.010933306 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.111285595 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.663761391 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465987647 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596035627 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.398369605 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531468422 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.404155531 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.394235876 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396406459 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394794288 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.392469126 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.64917778 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.010886681 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.666681487 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.401822774 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.405115114 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425357219 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.59989187 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.624371865 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116970797 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.619054856 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.653428052 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.407263429 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.395627617 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.008179815 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.659836016 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401836813 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.401164119 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.609083115 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.402638939 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424255735 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.915526773 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.396076441 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928615657 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.288347929 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419287317 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398218737 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.115063562 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013984144 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.404236822 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872180718 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400036165 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409493264 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681926925 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.406458346 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399324708 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684230332 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.405437583 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.39712743 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607238015 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.015383408 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.155299406 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.408009226 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429987815 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.401696414 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40029081 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453220404 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399800436 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408872926 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.795994826 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.404504043 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400516447 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413537287 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.399310948 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417700254 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.4045274 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400235449 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.408871896 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.374334141 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.374499484 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.427033884 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.531854189 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93836278 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408782972 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.110828869 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.75154404 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.6563441 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.405268214 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.38017762 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.406087767 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401460504 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400846323 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401837998 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.408269212 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934575003 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.405517364 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.662027081 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.41356576 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.611997778 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612828167 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40133907 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.612245565 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410685063 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.432980577 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.376125236 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400519137 seconds)
  done (took 984.372705444 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.414442591 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.40558801 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.407997987 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.416789404 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.428909767 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.456565566 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.459551114 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.486588038 seconds)
  done (took 20.755557059 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.394474116 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.402466844 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.394029827 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.403597941 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.407884105 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.881136244 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.409495749 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.402029268 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.416318603 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.407874844 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.41006742 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.021492798 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.404792496 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.40666805 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.412951634 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.40938842 seconds)
  done (took 32.865106108 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.454366088 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.553717859 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.290873018 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.426800961 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.418416676 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.409565107 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.628278929 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.395540751 seconds)
  done (took 26.858630872 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.410570355 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.409550535 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.41029153 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.410179046 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.411306738 seconds)
  done (took 8.333275807 seconds)
done (took 1251.182428123 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.409703953 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.410952571 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.410268873 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.411392158 seconds)
  done (took 6.924732293 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.380035947 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.378658554 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.381191198 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.395785031 seconds)
  done (took 9.816420226 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.072556059 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.926045154 seconds)
  done (took 5.280634473 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.872287369 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.874652235 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.873964805 seconds)
  done (took 6.903056918 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.678865597 seconds)
  done (took 2.959971123 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.300643761 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.394432645 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.401245404 seconds)
  done (took 8.379751801 seconds)
done (took 41.546662973 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.397163628 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.656977324 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.551222088 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.396526593 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.572831455 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.551432337 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.138051883 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.398425194 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.397829568 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.42593582 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.397079453 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.556482413 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.117019741 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.642348229 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.120313742 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.643986087 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.557440436 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.405422859 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.400592146 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.400381217 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.138752392 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.403688603 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.410406292 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.39816956 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.563730255 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.541566135 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.403922418 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.644039457 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.398960058 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.423134712 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.541411457 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.409975897 seconds)
  done (took 83.288789168 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.398238522 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.414643854 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.409918906 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.405380439 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.400453712 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.409036394 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.400670284 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.400191369 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.399459891 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.398910662 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.406303036 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.400840764 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.400907491 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.398503278 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.415731463 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.399343268 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.414296505 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.40032725 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.399929946 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.399059757 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.401194868 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.398859162 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.399332537 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.40102489 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.400609284 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.399075999 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.416719133 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.400080834 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.40129914 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.402849045 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.405043706 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.424347222 seconds)
  done (took 78.207640109 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.408809502 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.411122944 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.402755443 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.403610965 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.433091476 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.406935242 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.404368671 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.402038709 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.399644196 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.404013352 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.401364592 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.41029024 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.401677965 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.40128698 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.403085469 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.401719841 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.413507884 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.406595336 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.405520265 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.406247447 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.420578638 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.402235416 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.412404628 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.402472669 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.414485634 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.40172542 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.402094736 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.399758389 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.413560798 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.401353507 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.406148291 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.407431589 seconds)
  done (took 78.298159734 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.639956332 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.417166054 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.420019359 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.41240915 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.42096683 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.417674876 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.411379714 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.647734803 seconds)
  done (took 15.074603905 seconds)
done (took 256.152025049 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.410895698 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.900416674 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.443836256 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.410217474 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.430234276 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.437878299 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.610925194 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.441789322 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.600761471 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.424780019 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.427331397 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.414230516 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.195899827 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.548825005 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.225590397 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.35176345 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.278379566 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.40848442 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.964768508 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.634262485 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.439790131 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.406274691 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.238267438 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.28174765 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.39355053 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.47474864 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.475909748 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.561076655 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.527973021 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.477717317 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.898943587 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.419488075 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.414609333 seconds)
  done (took 64.860037923 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.410642107 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.420100936 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.420268499 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.41936127 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.419576571 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.420652896 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.412072305 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.42125374 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.421499302 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.42044386 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.421444124 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.421605536 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.421732264 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.423427334 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.421623485 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.40022781 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.412069508 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.421075846 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.412523039 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.399100029 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.420485383 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.422245365 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.421585569 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.42047013 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.422395335 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.422370302 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.42156722 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.421433527 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.423367116 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.42286777 seconds)
  done (took 43.850954165 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.422934746 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.991876828 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.135783616 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.427042479 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.414891789 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.418610053 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.696374707 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.429947957 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.419116953 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.417356758 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.891281756 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.42746379 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.44688121 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.139450018 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.423305484 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.42483428 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.42492674 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.415939918 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.000374796 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.430364138 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.696004368 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.424465025 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.697028672 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.428101269 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.418569409 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.417234945 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.420325874 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.232620194 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.436827349 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.890068426 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.17238403 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.697879056 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.156155786 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.184253439 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.183877838 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.430991772 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.423483302 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.898422517 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.417929124 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.415789267 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.694503059 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.422639245 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.142842334 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.094760724 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.434940371 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.426647267 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.27132295 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.903137358 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.655715676 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.430218179 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.179256869 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.427731846 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.428011211 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.420158068 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.654493088 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.42628026 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.419227557 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.294563228 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.428763785 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.697287663 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.433326577 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.419288869 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.998043391 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.424811312 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.9938983 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.420473033 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.428610292 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.42032741 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.147206375 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.426399754 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.103123567 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.437031799 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.428136079 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.895233492 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.994292332 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.297246216 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.421224518 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.003347083 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.185925451 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.71350598 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.427393601 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.214085301 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.718606553 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.423846877 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.431315949 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.43051379 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.428076447 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.50547827 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.696071831 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.042717674 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.104656115 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.305370985 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.706928647 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.429490123 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.421767307 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.295655965 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.434187924 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.429213951 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.143547883 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.11243018 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.437484599 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.429309692 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.096841142 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.439899721 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.703421217 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.42795897 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.185184913 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.42218793 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.505670261 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.431067731 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.428518447 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.425277567 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.701092937 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.426438782 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.431684963 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.089982469 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.926627436 seconds)
  done (took 197.791009927 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.417343316 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.415393869 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.417309616 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.431248776 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.417279106 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.425011836 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.416297139 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.417403292 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.422332551 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.417783978 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.417153711 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.426275518 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.423725639 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.416222548 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.417624335 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.418631064 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.417607212 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.434095346 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.417392552 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.418161754 seconds)
  done (took 45.704357078 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.432282316 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.971214713 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.93996088 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.437638888 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.431744375 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.42419984 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.478724857 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.433592025 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.432532414 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.714497352 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.592408003 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.438811499 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.432127949 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.43297522 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.937635744 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.416787297 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.719219337 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.978128498 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.439313147 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.973138902 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.416497577 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.433480838 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.422779405 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.974690488 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.733510015 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.706926719 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.487511968 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.975397816 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.44068849 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.433489701 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.975038883 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.440524526 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.426147322 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.964065613 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.439463996 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.447944064 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.434124223 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.482621453 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.483765355 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.722410326 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.984762994 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.715261498 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.450489043 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.61203266 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.436935774 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.411767467 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.985748711 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.44027844 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.41172254 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.436160092 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.439357177 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.948466604 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.43301268 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.951000043 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.441522715 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.436178915 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.977399368 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.956250075 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.94835876 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.599665286 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.430911191 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.701998051 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.44025564 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.987123086 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.441769356 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.436960224 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.434843318 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.596390262 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.984561491 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.710280722 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.727847175 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.728572684 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.440550743 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.492600979 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.440278826 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.724065216 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.496394819 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.868518177 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.72533249 seconds)
  done (took 129.026884259 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.691296928 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.547345044 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.794346195 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.023181067 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.93611535 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.566586027 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.539580868 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.669834872 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.445740144 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.522725775 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.066723823 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.535350841 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.191473832 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.494835481 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.541929107 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.560258744 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.822625832 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.427073451 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.066441773 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.025548487 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.43455227 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.53942427 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.941040144 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.617606643 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.433684858 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.992405865 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.359122178 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.946730876 seconds)
  done (took 54.038716416 seconds)
done (took 536.559948515 seconds)
SAVING RESULT...
DONE!
